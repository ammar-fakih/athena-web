{"version":3,"sources":["assets/logos/app-logo-transparent.png","assets/sponsorPage/coupon.png","assets/sponsorPage/become-sponsor.jpeg","assets/logos/owl-white-text.png","assets/logos/owl-black-text.png","node_modules/moment/locale sync /^/.*$","assets/logos/splash-logo.png","src/app/appDataSlice.ts","src/features/api/apiSlice.ts","src/features/api/usersApi.ts","src/features/api/classPagesApi.ts","src/features/classPages/classPagesSlice.ts","src/features/discover/discoverSlice.ts","src/features/calendar/calendarSlice.ts","src/app/SecureStorage.ts","src/app/storage.ts","src/app/store.ts","src/app/hooks.ts","src/features/authentication/ForgotPassword/EnterCodePage.tsx","src/features/authentication/ForgotPassword/EnterEmailPage.tsx","src/features/authentication/ForgotPassword/index.tsx","src/features/authentication/Login.tsx","src/components/BackButton.tsx","src/features/authentication/Signup/SignupForm.tsx","src/features/authentication/Signup/VerifyEmail.tsx","src/features/authentication/Signup/index.tsx","src/features/authentication/index.tsx","src/components/Header.tsx","src/constants/discover.ts","src/features/api/discoverApi.ts","src/features/discover/BottomBar.tsx","src/components/withPreventDoubleClick.tsx","src/features/discover/Cards/TextCard.tsx","src/components/DoubleTap.tsx","src/components/DoubleTapHeart.tsx","src/functions.ts","src/features/discover/ImageComponent.tsx","src/features/discover/Cards/ImageCard.tsx","src/features/discover/Cards/SponsorCard.tsx","src/features/discover/EventBody.tsx","src/features/discover/Cards/EventCard.tsx","src/features/discover/PostsList.tsx","src/components/DisabledOptionModal.tsx","src/features/discover/SinglePost/Comment.tsx","src/features/discover/SinglePost/SinglePostBody.tsx","src/components/FullPageSpinner.tsx","src/features/discover/SinglePost/SinglePostPage.tsx","src/features/discover/CreatePost/CreateImagePost.tsx","src/components/WrapItems.tsx","src/features/discover/CreatePost/CreateEventPost.tsx","src/features/discover/CreatePost/CreatePost.tsx","src/components/SearchBar.tsx","src/features/discover/SearchPage.tsx","src/components/Menu.tsx","src/features/api/sponsorsApi.ts","src/features/sponsors/SponsorsList.tsx","src/features/discover/index.tsx","src/features/calendar/CreateCustomEvent.tsx","src/features/calendar/CalendarFunctions.ts","src/features/calendar/customEvent.tsx","src/features/calendar/ScheduledItem.tsx","src/components/ModalContainer.tsx","src/features/notifications/constants.tsx","src/components/UserNameSelectionDropDown.tsx","src/features/classPages/SingleClassPage/exportModalClass.tsx","src/features/classPages/SingleClassPage/InfoPage.tsx","src/constants/classPages.ts","src/features/classPages/SingleClassPage/PostReview.tsx","src/features/classPages/SingleClassPage/index.tsx","src/components/Message.tsx","src/features/classPages/ClassListItemItem.tsx","src/features/classPages/ClassListItem.tsx","src/features/classPages/AddedClasses.tsx","src/features/classPages/FilterClasses.tsx","src/features/classPages/ClassesList.tsx","src/features/calendar/CalendarPage.tsx","src/features/calendar/exportModal.tsx","src/features/classPages/SelectTerm.tsx","src/features/calendar/index.tsx","src/features/settings/EditUser.tsx","src/features/settings/SettingsPage.tsx","src/features/settings/index.tsx","src/features/notifications/notificationSinglePage.tsx","src/features/notifications/Notifications.tsx","src/features/classPages/index.tsx","src/theme/custom-theme.ts","src/theme/font-awesome-icons.tsx","src/theme/feather-icons.tsx","src/constants/admin.ts","src/features/adminPanel/adminPanel.tsx","src/features/adminPanel/index.tsx","src/components/WebSplashScreen.tsx","src/features/chats/ChatRooms.tsx","App.tsx","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","initialState","userKey","isGuest","isMobile","darkMode","useDeviceColorScheme","appDataSlice","createSlice","name","reducers","reset","userKeyUpdated","state","action","payload","setIsGuest","deviceDarkModeSet","useDeviceColorSchemeSet","deleteAllAppData","mobileSiteSet","extraReducers","selectDarkMode","appData","secure","selectUserKey","selectIsGuest","actions","apiSlice","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getCurrentVersion","query","useLazyGetCurrentVersionQuery","usersApiSlice","injectEndpoints","overrideExisting","getUserInfo","providesTags","url","headers","transformErrorResponse","response","status","error","transformResponse","classes","rest","addedClasses","length","courseCode","courseTerm","school","split","masterCourseCode","slice","join","push","console","warn","login","mutation","userName","password","params","trackLogin","method","responseHandler","text","deleteAccount","editUser","invalidatesTags","body","fields","getCollegeList","signupUser","verifySignup","resetPassword","email","useTrackLoginMutation","useGetUserInfoQuery","useLazyGetUserInfoQuery","useLoginMutation","useDeleteAccountMutation","useEditUserMutation","useGetCollegeListQuery","useSignupUserMutation","useVerifySignupMutation","useResetPasswordMutation","classPagesApi","getAllClasses","pageNumber","collegeName","getRatingFromReviews","reviews","totalAverage","counter","review","rating","toFixed","getDifficultyFromReviews","difficulty","fromEntries","entries","key","value","sort","getCurrentSection","currentTerm","getAllSections","addClass","classesToAdd","onQueryStarted","dispatch","queryFulfilled","patchResult","util","updateQueryData","draft","undo","removeClass","classesToRemove","filter","classCode","isAllowedToReview","sendReview","useGetCurrentSectionQuery","useGetAllClassesQuery","useAddClassMutation","useRemoveClassMutation","useIsAllowedToReviewQuery","useSendReviewMutation","useLazyGetAllClassesQuery","useLazyGetAllSectionsQuery","filteredClasses","renderedClasses","currentSection","availableSections","selectedClass","searchTerm","page","isHMC","filters","colleges","HM","CM","PO","PZ","SC","classPagesSlice","currentSectionUpdated","availableSectionsListUpdated","endOfListReached","resetClasses","caseReducers","searchResultsFiltered","classSelected","selectedClassCleared","filtersSaved","isHMCUpdated","filtersReset","newResultsArray","collegeAbr","substring","college","isCollegeFiltered","searchTermUpdated","matchDepartmentName","searchCourseCode","findSearchTermShortcuts","searchTerms","courseName","times","filterBySearchTerm","newResultsObject","addMatcher","matchFulfilled","searchPhrase","replace","match","p1","p2","p3","p4","p5","padStart","coursePhrase","professorName","trim","includes","toUpperCase","selectClassesList","classPages","submittedSearchTerm","tag","recentSearches","discoverSlice","searchTermSubmitted","unshift","searchTermChanged","recentSearchTermSelected","tagSelected","recentSearchTermRemoved","term","selectSearchTerm","discover","selectSubmittedSearchTerm","selectTag","selectRecentSearches","isThreeDay","calendarSlice","isThreeDaySet","defaultReplacer","replaceCharacter","SecureStorage","options","replacer","getItem","SecureStore","setItem","removeItem","createSecureStorage","securePersistConfig","storage","Platform","OS","AsyncStorage","cpPersistConfig","ExpoFileSystemStorage","whitelist","discoverPersistConfig","rootReducer","combineReducers","persistReducer","classPagesReducer","appDataReducer","discoverReducer","calendar","calendarReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","immutableCheck","concat","useAppDispatch","useDispatch","useAppSelector","useSelector","EnterCodePage","navigation","style","flex","alignItems","justifyContent","margin","category","onPress","index","routes","EnterEmailPage","useState","setEmail","inputRef","useRef","isLoading","isError","netInfo","useNetInfo","useEffect","current","focus","onSubmit","isConnected","unwrap","navigate","alert","paddingTop","autoCapitalize","placeholder","ref","onChangeText","onSubmitEditing","Keyboard","dismiss","color","disabled","accessoryRight","Stack","createNativeStackNavigator","ForgotPassword","Navigator","screenOptions","headerShown","Screen","component","DarkModeLogo","require","LightModeLogo","Login","setUserName","setPassword","loginError","setLoginError","passwordRef","React","handleLogin","NetInfo","fetch","allSections","availableTerms","then","guestLogin","TouchableWithoutFeedback","KeyboardAvoidingView","styles","container","behavior","Image","source","logo","inputView","autoComplete","TextInput","placeholderTextColor","keyboardType","blurOnSubmit","secureTextEntry","TouchableOpacity","forgot_button","position","backgroundColor","loginBtn","width","borderRadius","height","marginTop","maxWidth","level","signupBtn","StyleSheet","create","title","fontSize","fontWeight","textAlign","image","marginBottom","flexDirection","marginLeft","marginRight","borderColor","borderWidth","guestButton","alignSelf","BackButton","props","HeaderBackButton","goBack","label","labelVisible","Signup","realFirstName","setRealFirstName","realLastName","setRealLastName","major","setMajor","IndexPath","selectedIndex","setSelectedIndex","simplifiedSignup","setSimplifiedSignUp","humanReadableCollegeName","userCollege","setUserCollege","collegeList","data","signupLoading","firstNameInputRef","lastNameInputRef","passwordInputRef","majorInputRef","handleSubmitButton","validateInput","SectionStyle","labelSection","inputStyle","underlineColorAndroid","defaultValue","returnKeyType","containerDrop","onFocus","onSelect","newObject","row","ScrollView","zIndex","top","left","paddingVertical","paddingHorizontal","checked","onChange","nextChecked","buttonStyle","buttonTextStyle","paddingLeft","paddingRight","errorTextStyle","successTextStyle","padding","input","button","buttonText","minHeight","minWidth","VerifyEmail","verificationCode","setVerificationCode","verifyCode","getUserInfoLoading","handleVerifyCodeButton","description","theme","useTheme","headerStyle","headerLeft","SignupForm","Auth","Header","accessoryLeft","center","Constants","statusBarHeight","tagIndices","adminTagIndices","postOptions","EMOJI_LIST","postsAdapter","createEntityAdapter","selectId","post","_id","tranformComments","comments","comment","numLikes","likes","hasLiked","discoverApiSlice","getDiscoverPosts","keepUnusedDataFor","sponsor","pageLength","_","addMany","getInitialState","hasMorePages","ids","postsSelectors","selectAll","createDiscoverPost","type","content","tags","emoji","postBody","pinned","newPost","addOne","deleteDiscoverPost","searchPatchResult","removeOne","getPostById","postId","updatedPost","updateFunction","updateOne","changes","likePost","postAuthor","selectById","addComment","initiate","likeComment","commentId","deleteComment","getSelectors","useLazyGetDiscoverPostsQuery","useCreateDiscoverPostMutation","useDeleteDiscoverPostMutation","useLikePostMutation","useAddCommentMutation","useLazyGetPostByIdQuery","useLikeCommentMutation","useDeleteCommentMutation","DebounceTouchable","WrappedComponent","time","PreventDoubleClick","debouncedOnPress","debounce","leading","trailing","this","PureComponent","displayName","withPreventDoubleClick","BottomBar","commentIconShown","undefined","searchedTag","userData","useQueryState","selectFromResult","result","onPressLike","log","flexWrap","FontAwesome","opacity","size","TextCard","pinnedIcon","isUrl","renderTextBody","indexOf","TouchableHighlight","paddingBottom","FontAwesome5","DoubleTap","lastTap","handleDoubleTap","now","Date","delay","onDoubleTap","children","Component","defaultProps","forwardRef","iconStyle","useImperativeHandle","animate","opacityAnim","Animated","Value","scaleAnim","heartRotation","setHeartRotation","Math","floor","random","pickRandomDegree","setValue","parallel","sequence","timing","toValue","duration","useNativeDriver","easing","Easing","bounce","start","View","transform","scale","rotate","getImageUrl","imageId","IMAGE_BUCKET_URL","stringToEmoji","str","dec","i","charCodeAt","showToast","message","Toast","show","durations","LONG","shadow","FormatTimeRange","end","startDate","endDate","getHours","getMinutes","weekDayNumberToName","0","1","2","3","4","5","6","FormatDate","date","newDate","weekDay","getDay","month","getMonth","day","getDate","windowWidth","Dimensions","get","ImageComponent","apiInfo","likeRef","handlePressLike","uri","maxHeight","resizeMode","DoubleTapHeart","right","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","ImageCard","activeOpacity","SponsorCard","imageLink","setImageLink","hasCoupon","coupons","onError","becomeSponsor","sponsorName","ImageBackground","marginHorizontal","couponDescription","EventBody","link","location","startTime","endTime","contentURL","contentText","contentImage","host","truncated","eventInfo","useMemo","info","EventCard","isAdded","setIsAdded","toggleAdditionOfEvent","isAdd","JSON","stringify","toTimeString","catch","customEvents","some","customEvent","useIsFocused","PostsList","handleRemoveRecentSearch","handleClickRecentSearch","route","fetchPosts","isFetching","posts","fetchFirstPage","fetchMorePosts","PinIcon","MaterialIcons","renderItem","item","commonProps","isSponsor","sponsorProps","parse","contentUrl","FooterSpinner","keyboardShouldPersistTaps","ListHeaderComponent","fontStyle","Array","from","marginVertical","appearance","pack","LinearGradient","colors","x","y","contentContainerStyle","onRefresh","refreshing","keyExtractor","onEndReachedThreshold","onEndReached","ListFooterComponent","showsVerticalScrollIndicator","ItemSeparatorComponent","Divider","DisabledFieldModal","setShowModal","visible","backdropStyle","myStyles","backdrop","onBackdropPress","Comment","isOwnComment","isExpanded","setIsExpanded","handleLikeComment","handleDeleteComment","onLongPress","Alert","SinglePostBody","handleLikePost","scrollEnabled","multiline","textStyle","RegExp","test","href","FullPageSpinner","SinglePost","showModal","setComment","inputFocused","setInputFocused","refreshPost","refreshPostLoading","addCommentLoading","deletePost","deletePostLoading","handleRefreshPost","handleDeletePost","handleSubmitComment","header","footer","bottom","borderTopWidth","onBlur","CreateImage","discoverPostInputs","setDiscoverPostInputs","TagInput","showTitle","ImagePicker","imagePickerStatus","requestImagePickerPermission","cameraStatus","requestCameraPermission","onPressCamera","granted","mediaTypes","Images","canceled","assets","pickImage","allowsEditing","Title","newText","imagePicker","Feather","WrapItems","childStyle","LayoutProps","Children","child","CreateEvent","setStartTime","setEndTime","setDate","showTimePickerAndroid","setShowTimePickerAndroid","formatDateService","NativeDateService","format","timePickerOptions","setTime","formatAMPM","hours","minutes","ampm","dateService","nextDate","placement","mode","change","AntDesign","OptionalText","CreatePost","permissionLevel","selectedTagIndex","setSelectedTagIndex","selectedPostTypeIndex","setSelectedPostTypeIndex","setError","isEmojiShown","setIsEmojiShown","tagArray","submitEvent","formdata","FormData","append","toISOString","forEach","submitImage","toast","setTimeout","hide","groupedData","multiSelect","SearchBar","inputProps","cancelButtonAction","cancelButtonStatus","alwaysShowCancelButton","selected","setSelected","LayoutAnimation","configureNext","autoCorrect","SearchPage","searchBarBackgroundColor","Menu","menuItems","setMenuItems","showsHorizontalScrollIndicator","horizontal","Text","sponsorsApiSlice","refreshSponsors","sponsors","a","b","textA","textB","find","postSponsorVisit","sponsorId","useLazyRefreshSponsorsQuery","usePostSponsorVisitMutation","SponsorPage","isDarkMode","sponsorPageStyles","address","video","display","subtitle","couponContainer","coupon","imageGallery","imageStyle","headerText","setImageIndex","setIsVisible","canOpenLink","setCanOpenLink","postSponsorVisitQuery","videoLinkArray","videoLink","Linking","canOpenURL","website","funct","phoneNumber","openURL","borderBottomColor","borderBottomWidth","images","img","dayOfTheWeek","buildTimeString","openTime","convertTo12HourTime","closeTime","Number","parseInt","SponsorsList","sponsorFilters","setSponsorFilters","gotSponsors","setGotSponsors","refreshSponsorsQuery","tabNames","temp","findIndex","splice","tempFilters","getFilters","shouldLimitPrint","filterName","sponsorsToSend","getTheSponsors","renderSponsorsBasedOnFilters","listingStyles","cardContainer","final","starredFinal","object","Discover","setSearchTerm","initialParams","onPressIn","headerTitle","animation","CreateCustomEvent","showDots","setShowDots","useNavigation","dateToUse","selectedDate","setSelectedDate","isOneDay","setIsOneDay","allValuesPopulated","setAllValuesPopulated","daysArray","setDaysArray","eventTitle","setEventTitle","skip","daysOfWeek","testID","event","finalArray","littleIndex","finalObject","at","calculateSelectedValues","newSelection","toggleValue","option","renderEachDropItem","CalendarFunctions","string","charIndex","toString","getColor","minuteHeight","allClassData","renderCustomEvent","universalHeight","calendarFun","startHour","startMinute","endHour","endMinute","stringToColour","days","SHORT","removeEvent","cancelable","getMinutesDiff","adjustsFontSizeToFit","numberOfLines","masterClassInfo","handleClassSelected","thisTime","course","classLocation","ModalContainer","backDropVisible","setBackDropVisible","backdropOpacity","isVisible","base_URL","UserNameSelectionDropDown","setHasChosen","setRecipient","names","setNames","users","setUsers","modal","ok","userList","json","user","realName","userNameContainsString","auser","toLowerCase","firstPar","secondPar","findUserNameFromName","ExportModalClass","classData","showGuestModal","setShowGuestModal","renderModal","recipient","exportClass","recipients","isCourseData","Button","returnValue","withStyles","eva","scrollViewRef","dark","light","isAllowedToReviewRes","scrollTo","animated","averageGradeMSGModal","creditWeightHM","creditWeight","timeSpentOutOfClass","lineHeight","averageGrade","courseDescription","summary","boxed","prerequisites","corequisites","permCount","disclaimer","subHeader","section","sectionText","seatsFilled","seatsAvailable","daysOfTheWeek","isAllowed","professor","courseOpen","courseClosed","details","BodyContainer","borderTopColor","documentStyle","imageLabel","schedule","graphImage","aspectRatio","grade","reviewText","reviewBox","indentedInput","letterSpacing","NEW_REVIEW_FIELDS","mandatory","NewReview","setBody","handleReviewSubmitted","changeValue","theValue","valueToChange","newBody","aspect","inputBig","clearButtonMode","field","hasChosen","renderDropDown","alignContent","renderFilterParameters","renderTheFieldsNecessary","SingleClassPage","bottomSheetRef","InfoPage","PostReview","Message","ClassListItemItem","handleAddClass","handleRemoveClass","added","selectedAnim","dropDownItem","isAvailable","notAvailable","spring","speed","list__container","addedClassesContainer","borderTopRightRadius","borderBottomRightRadius","borderRightWidth","buttonContainer","dropDown","loadingMessage","loadingMessageRefresh","Item","menuOpen","setIsMenuOpen","inItem","property","update","springDamping","UIManager","setLayoutAnimationEnabledExperimental","addClassButton","AddedClasses","FlatList","ListEmptyComponent","Entypo","FilterClasses","setFiltersMenuVisible","initialFilters","setColleges","onChangeIsHMC","onChangeFilterCollege","CurrentTermLabel","ClassesList","setMenuOpen","addedClassesVisible","setAddedClassesVisible","filtersMenuVisible","listRef","setListRef","fetchUserInfo","getClasses","classListLoading","userInfoSuccess","isSuccess","fetchClasses","snapToIndex","courseInfo","maxToRenderPerBatch","initialNumToRender","refreshControl","RefreshControl","tintColor","titleColor","onScroll","scrollEventThrottle","locations","scrollToOffset","offset","filteredColleges","c","renderFilteredCollegesList","CalendarPage","isWeb","threeDayWidth","fiveDayWidth","renderCustomEvents","elem","finalRender","eventIsThisDay","showThisWeek","dayString","dayOfWeek","adjustDays","getMs","seconds","dateOfEvent","currentDate","currentDayOfWeek","startOfWeek","valueOf","getSeconds","endOfWeek","renderDashes","renderClasses","getFullClassData","data2","topBar","startingOffset","snapToInterval","contentOffset","bounces","decelerationRate","nativeEvent","onMomentumScrollBegin","LogBox","ignoreAllLogs","exportSchedule","convert","isSchedule","SelectTerm","userDataCache","startIndexValue","selectedSectionIndex","setSelectedSectionIndex","Calendar","leftComponent","MaterialCommunityIcons","rightComponent","trackBar","activeBackgroundColor","inActiveBackgroundColor","thumbButton","activeColor","inActiveColor","bool","gestureDirection","EditProfileHeader","saveChanges","EditUser","inputs","profileDescription","propOptions","linkedin","setFields","changedFields","err","SettingsPage","colorScheme","useColorScheme","logOut","resetClassPages","resetDiscover","resetAppData","resetApiState","handleDeleteAccount","handleUseDeviceSettingToggled","handleDarkModeToggled","manifest2","extra","expoClient","version","Settings","Group","presentation","NotificationHomePage","NotificationsNavigation","notifications","setNotifications","isOpen","setIsOpen","refreshNotifications","res","bodyTosend","createNotificationButton","newUsers","getDateText","spaceIndex","first","initialRouteName","navigationHeader","setRefreshing","isMoving","setIsMoving","useCallback","newNotifications","not","redirect","notification","disableRightSwipe","onSwipeValueChange","handleOnLeftSwipe","creationDate","listToRemove","jsonSchedule","thereIsAtLeastOne","courseSimpleData","repliable","done","setDone","tempBody","SafeAreaView","renderInputFields","sendNotification","timeButton","timeText","actualTimeText","timeStyle","borderLeftColor","containerForNotifications","SearchClasses","numberOfNotifications","setNumberOfNotifications","setInterval","Ionicons","FontAwesomeIconsPack","icons","Proxy","target","IconProvider","toReactElement","flatten","FontAwesomeIcon","FeatherIconsPack","FeatherIcon","Manager","randomizationFactor","addTrailingSlash","autoConnect","AdminHomePage","AdminHomeNavigation","adminCommands","setAdminCommands","getAdminCommands","adminURL","commands","filterObject","currentAdminCommandsStatus","finalCommandList","command","AdminCommand","setInfo","isFileUpload","setIsFileUpload","fileUploads","setFileUploads","setSponsors","setStatus","allFieldsFilled","setAllFieldsFilled","buttonPushed","setButtonPushed","checkForFieldsFilled","imageName","sendApiData","additionToUrl","paramOverride","apiType","newUrl","text2","trueFalseTemplate","boolValues","displayValue","changeEverything","renderStringArray","valuesToSend","tempFinal","miniField","newFieldForBody","values","changeStringValue","stringArray","eachOne","renderMultiSelectDropDown","isArray","cancelled","fileUploadTemplate","graphData","timeFrame","informationToShow","isDateGraph","dataToShow","labels","getDates","datasets","getData","verticalLabelRotation","fromZero","xLabelsOffset","segments","chartConfig","decimalPlaces","labelColor","propsForDots","r","strokeWidth","stroke","oneElement","renderOneCard","flexShrink","moment","tz","subtract","usersToday","instance","weekStart","weekEnd","usersMonth","monthStart","monthEnd","add","cardInfo","finalText","renderedActions","renderButtonForCard","parameter","showResponseData","imagesContainer","imageContainer","AdminStack","AdminPanel","WebSplashScreen","ChatRooms","persistor","persistStore","Tab","createBottomTabNavigator","token","isDevice","existingStatus","Notifications","finalStatus","importance","MAX","vibrationPattern","lightColor","App","localCurrentSection","isReady","setIsReady","setExpoPushToken","setNotification","notificationListener","responseListener","prepare","fetchedCurrentSection","registerForPushNotificationsAsync","checkForUpdates","ExpoSplashScreen","currentVersion","currentFrontEndVersion","v1","v2","lexicographical","zeroExtend","v1parts","v2parts","isValidPart","every","NaN","versionCompare","NavigationContainer","documentTitle","formatter","DarkTheme","DefaultTheme","Theme","StatusBar","TabsPage","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","tabBarHideOnKeyboard","tabBarIcon","focused","iconName","tabBarStyle","tabBarItemStyle","ClassPages","unmountOnBlur","tabBarLabel","ChatsRoomNavigation","registerRootComponent"],"mappings":"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OA,EACPvF,MAAO,CACL0B,WAAY4J,WAAUC,gBAAkB,GACxCrG,MAAO,OACP/E,eAAgB,gBAChB8F,cAAe,MACf/F,WAAY,SACZoJ,kBAAmB,IACnB,UACF,gBAAC,UAAM,CAAC/D,MAAOA,EAAOvF,MAAO,CAAEiG,cAAe,OAAQ,UACnDmF,EACD,eAAC,QAAI,CAACpL,MAAO,CAAEkG,WAAY,GAAIN,SAAU,GAAIC,WAAY,OAAQ,SAC9DF,OAGJ0F,EAEAjJ,K,cCnCMoJ,GAAa,CACxB,QACA,SACA,eACA,UACA,MACA,SACA,MACA,SACA,WAGWC,GAAkB,CAC7B,iBACA,QACA,SACA,eACA,UACA,MACA,SACA,MACA,SACA,WAKWC,GAAc,CAAC,aAAc,YAAa,OAAQ,SAKlDC,GAAa,CACxB,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,SACA,qBACA,qBACA,qBACA,qBACA,qBACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,eACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,eACA,eACA,eACA,qEACA,qEACA,qEACA,eACA,mDACA,mDACA,mDACA,eACA,mDACA,mDACA,qEACA,qEACA,qEACA,mDACA,mDACA,qEACA,qEACA,qEACA,mDACA,mDACA,qEACA,qEACA,qEACA,eACA,eACA,eACA,eACA,eACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,SACA,qBACA,qBACA,qBACA,qBACA,qBACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,SACA,qBACA,qBACA,qBACA,qBACA,qBACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,SACA,qBACA,qBACA,qBACA,qBACA,qBACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,SACA,qBACA,qBACA,qBACA,qBACA,qBACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,SACA,qBACA,qBACA,qBACA,qBACA,qBACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,eACA,eACA,iCACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,SACA,eACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,eACA,eACA,eACA,SACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,SACA,SACA,SACA,SACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,SACA,eACA,eACA,SACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,SACA,SACA,eACA,SACA,eACA,eACA,eACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,eACA,eACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,eACA,eACA,eACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,eACA,SACA,eACA,SACA,SACA,SACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,SACA,eACA,eACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,OACA,OACA,SACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,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","file":"static/js/app.656c11d7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/app-logo-transparent.1ede614a.png\";","module.exports = __webpack_public_path__ + \"static/media/coupon.84c88381.png\";","module.exports = __webpack_public_path__ + \"static/media/become-sponsor.cc2edbc5.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/owl-white-text.9861cc3f.png\";","module.exports = __webpack_public_path__ + \"static/media/owl-black-text.6f7231df.png\";","var map = {\n\t\"./af\": 379,\n\t\"./af.js\": 379,\n\t\"./ar\": 380,\n\t\"./ar-dz\": 381,\n\t\"./ar-dz.js\": 381,\n\t\"./ar-kw\": 382,\n\t\"./ar-kw.js\": 382,\n\t\"./ar-ly\": 383,\n\t\"./ar-ly.js\": 383,\n\t\"./ar-ma\": 384,\n\t\"./ar-ma.js\": 384,\n\t\"./ar-sa\": 385,\n\t\"./ar-sa.js\": 385,\n\t\"./ar-tn\": 386,\n\t\"./ar-tn.js\": 386,\n\t\"./ar.js\": 380,\n\t\"./az\": 387,\n\t\"./az.js\": 387,\n\t\"./be\": 388,\n\t\"./be.js\": 388,\n\t\"./bg\": 389,\n\t\"./bg.js\": 389,\n\t\"./bm\": 390,\n\t\"./bm.js\": 390,\n\t\"./bn\": 391,\n\t\"./bn-bd\": 392,\n\t\"./bn-bd.js\": 392,\n\t\"./bn.js\": 391,\n\t\"./bo\": 393,\n\t\"./bo.js\": 393,\n\t\"./br\": 394,\n\t\"./br.js\": 394,\n\t\"./bs\": 395,\n\t\"./bs.js\": 395,\n\t\"./ca\": 396,\n\t\"./ca.js\": 396,\n\t\"./cs\": 397,\n\t\"./cs.js\": 397,\n\t\"./cv\": 398,\n\t\"./cv.js\": 398,\n\t\"./cy\": 399,\n\t\"./cy.js\": 399,\n\t\"./da\": 400,\n\t\"./da.js\": 400,\n\t\"./de\": 401,\n\t\"./de-at\": 402,\n\t\"./de-at.js\": 402,\n\t\"./de-ch\": 403,\n\t\"./de-ch.js\": 403,\n\t\"./de.js\": 401,\n\t\"./dv\": 404,\n\t\"./dv.js\": 404,\n\t\"./el\": 405,\n\t\"./el.js\": 405,\n\t\"./en-au\": 406,\n\t\"./en-au.js\": 406,\n\t\"./en-ca\": 407,\n\t\"./en-ca.js\": 407,\n\t\"./en-gb\": 408,\n\t\"./en-gb.js\": 408,\n\t\"./en-ie\": 409,\n\t\"./en-ie.js\": 409,\n\t\"./en-il\": 410,\n\t\"./en-il.js\": 410,\n\t\"./en-in\": 411,\n\t\"./en-in.js\": 411,\n\t\"./en-nz\": 412,\n\t\"./en-nz.js\": 412,\n\t\"./en-sg\": 413,\n\t\"./en-sg.js\": 413,\n\t\"./eo\": 414,\n\t\"./eo.js\": 414,\n\t\"./es\": 415,\n\t\"./es-do\": 416,\n\t\"./es-do.js\": 416,\n\t\"./es-mx\": 417,\n\t\"./es-mx.js\": 417,\n\t\"./es-us\": 418,\n\t\"./es-us.js\": 418,\n\t\"./es.js\": 415,\n\t\"./et\": 419,\n\t\"./et.js\": 419,\n\t\"./eu\": 420,\n\t\"./eu.js\": 420,\n\t\"./fa\": 421,\n\t\"./fa.js\": 421,\n\t\"./fi\": 422,\n\t\"./fi.js\": 422,\n\t\"./fil\": 423,\n\t\"./fil.js\": 423,\n\t\"./fo\": 424,\n\t\"./fo.js\": 424,\n\t\"./fr\": 425,\n\t\"./fr-ca\": 426,\n\t\"./fr-ca.js\": 426,\n\t\"./fr-ch\": 427,\n\t\"./fr-ch.js\": 427,\n\t\"./fr.js\": 425,\n\t\"./fy\": 428,\n\t\"./fy.js\": 428,\n\t\"./ga\": 429,\n\t\"./ga.js\": 429,\n\t\"./gd\": 430,\n\t\"./gd.js\": 430,\n\t\"./gl\": 431,\n\t\"./gl.js\": 431,\n\t\"./gom-deva\": 432,\n\t\"./gom-deva.js\": 432,\n\t\"./gom-latn\": 433,\n\t\"./gom-latn.js\": 433,\n\t\"./gu\": 434,\n\t\"./gu.js\": 434,\n\t\"./he\": 435,\n\t\"./he.js\": 435,\n\t\"./hi\": 436,\n\t\"./hi.js\": 436,\n\t\"./hr\": 437,\n\t\"./hr.js\": 437,\n\t\"./hu\": 438,\n\t\"./hu.js\": 438,\n\t\"./hy-am\": 439,\n\t\"./hy-am.js\": 439,\n\t\"./id\": 440,\n\t\"./id.js\": 440,\n\t\"./is\": 441,\n\t\"./is.js\": 441,\n\t\"./it\": 442,\n\t\"./it-ch\": 443,\n\t\"./it-ch.js\": 443,\n\t\"./it.js\": 442,\n\t\"./ja\": 444,\n\t\"./ja.js\": 444,\n\t\"./jv\": 445,\n\t\"./jv.js\": 445,\n\t\"./ka\": 446,\n\t\"./ka.js\": 446,\n\t\"./kk\": 447,\n\t\"./kk.js\": 447,\n\t\"./km\": 448,\n\t\"./km.js\": 448,\n\t\"./kn\": 449,\n\t\"./kn.js\": 449,\n\t\"./ko\": 450,\n\t\"./ko.js\": 450,\n\t\"./ku\": 451,\n\t\"./ku.js\": 451,\n\t\"./ky\": 452,\n\t\"./ky.js\": 452,\n\t\"./lb\": 453,\n\t\"./lb.js\": 453,\n\t\"./lo\": 454,\n\t\"./lo.js\": 454,\n\t\"./lt\": 455,\n\t\"./lt.js\": 455,\n\t\"./lv\": 456,\n\t\"./lv.js\": 456,\n\t\"./me\": 457,\n\t\"./me.js\": 457,\n\t\"./mi\": 458,\n\t\"./mi.js\": 458,\n\t\"./mk\": 459,\n\t\"./mk.js\": 459,\n\t\"./ml\": 460,\n\t\"./ml.js\": 460,\n\t\"./mn\": 461,\n\t\"./mn.js\": 461,\n\t\"./mr\": 462,\n\t\"./mr.js\": 462,\n\t\"./ms\": 463,\n\t\"./ms-my\": 464,\n\t\"./ms-my.js\": 464,\n\t\"./ms.js\": 463,\n\t\"./mt\": 465,\n\t\"./mt.js\": 465,\n\t\"./my\": 466,\n\t\"./my.js\": 466,\n\t\"./nb\": 467,\n\t\"./nb.js\": 467,\n\t\"./ne\": 468,\n\t\"./ne.js\": 468,\n\t\"./nl\": 469,\n\t\"./nl-be\": 470,\n\t\"./nl-be.js\": 470,\n\t\"./nl.js\": 469,\n\t\"./nn\": 471,\n\t\"./nn.js\": 471,\n\t\"./oc-lnc\": 472,\n\t\"./oc-lnc.js\": 472,\n\t\"./pa-in\": 473,\n\t\"./pa-in.js\": 473,\n\t\"./pl\": 474,\n\t\"./pl.js\": 474,\n\t\"./pt\": 475,\n\t\"./pt-br\": 476,\n\t\"./pt-br.js\": 476,\n\t\"./pt.js\": 475,\n\t\"./ro\": 477,\n\t\"./ro.js\": 477,\n\t\"./ru\": 478,\n\t\"./ru.js\": 478,\n\t\"./sd\": 479,\n\t\"./sd.js\": 479,\n\t\"./se\": 480,\n\t\"./se.js\": 480,\n\t\"./si\": 481,\n\t\"./si.js\": 481,\n\t\"./sk\": 482,\n\t\"./sk.js\": 482,\n\t\"./sl\": 483,\n\t\"./sl.js\": 483,\n\t\"./sq\": 484,\n\t\"./sq.js\": 484,\n\t\"./sr\": 485,\n\t\"./sr-cyrl\": 486,\n\t\"./sr-cyrl.js\": 486,\n\t\"./sr.js\": 485,\n\t\"./ss\": 487,\n\t\"./ss.js\": 487,\n\t\"./sv\": 488,\n\t\"./sv.js\": 488,\n\t\"./sw\": 489,\n\t\"./sw.js\": 489,\n\t\"./ta\": 490,\n\t\"./ta.js\": 490,\n\t\"./te\": 491,\n\t\"./te.js\": 491,\n\t\"./tet\": 492,\n\t\"./tet.js\": 492,\n\t\"./tg\": 493,\n\t\"./tg.js\": 493,\n\t\"./th\": 494,\n\t\"./th.js\": 494,\n\t\"./tk\": 495,\n\t\"./tk.js\": 495,\n\t\"./tl-ph\": 496,\n\t\"./tl-ph.js\": 496,\n\t\"./tlh\": 497,\n\t\"./tlh.js\": 497,\n\t\"./tr\": 498,\n\t\"./tr.js\": 498,\n\t\"./tzl\": 499,\n\t\"./tzl.js\": 499,\n\t\"./tzm\": 500,\n\t\"./tzm-latn\": 501,\n\t\"./tzm-latn.js\": 501,\n\t\"./tzm.js\": 500,\n\t\"./ug-cn\": 502,\n\t\"./ug-cn.js\": 502,\n\t\"./uk\": 503,\n\t\"./uk.js\": 503,\n\t\"./ur\": 504,\n\t\"./ur.js\": 504,\n\t\"./uz\": 505,\n\t\"./uz-latn\": 506,\n\t\"./uz-latn.js\": 506,\n\t\"./uz.js\": 505,\n\t\"./vi\": 507,\n\t\"./vi.js\": 507,\n\t\"./x-pseudo\": 508,\n\t\"./x-pseudo.js\": 508,\n\t\"./yo\": 509,\n\t\"./yo.js\": 509,\n\t\"./zh-cn\": 510,\n\t\"./zh-cn.js\": 510,\n\t\"./zh-hk\": 511,\n\t\"./zh-hk.js\": 511,\n\t\"./zh-mo\": 512,\n\t\"./zh-mo.js\": 512,\n\t\"./zh-tw\": 513,\n\t\"./zh-tw.js\": 513\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 829;","module.exports = __webpack_public_path__ + \"static/media/splash-logo.2b1029f0.png\";","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { Appearance } from 'react-native';\r\n\r\nimport type { RootState } from './store';\r\n\r\n// Define a type for the slice state\r\ninterface AppDataState {\r\n  userKey: string;\r\n  isGuest: boolean;\r\n  isMobile: boolean;\r\n  darkMode: boolean;\r\n  useDeviceColorScheme: boolean;\r\n}\r\n\r\n// Define the initial state using that type\r\nconst initialState: AppDataState = {\r\n  userKey: '',\r\n  isGuest: false,\r\n  isMobile: false,\r\n  darkMode: false,\r\n  useDeviceColorScheme: false,\r\n};\r\n\r\nexport const appDataSlice = createSlice({\r\n  name: 'appData',\r\n  initialState,\r\n  reducers: {\r\n    reset: () => initialState,\r\n    userKeyUpdated: (state, action: PayloadAction<string>) => {\r\n      state.userKey = action.payload;\r\n    },\r\n    setIsGuest: (state, action: PayloadAction<boolean>) => {\r\n      state.isGuest = action.payload;\r\n    },\r\n    deviceDarkModeSet: (state, action: PayloadAction<boolean>) => {\r\n      state.darkMode = action.payload;\r\n    },\r\n    useDeviceColorSchemeSet: (state, action: PayloadAction<boolean>) => {\r\n      state.useDeviceColorScheme = action.payload;\r\n    },\r\n    deleteAllAppData: (state) => {\r\n      state.userKey = '';\r\n      state.isGuest = false;\r\n      state.darkMode = true;\r\n    },\r\n    mobileSiteSet: (state, action: PayloadAction<boolean>) => {\r\n      state.isMobile = action.payload;\r\n    },\r\n  },\r\n  extraReducers: () => {},\r\n});\r\n\r\n// Selectors\r\nexport const selectDarkMode = (state: RootState) =>\r\n  state.appData.secure.darkMode;\r\n\r\nexport const selectUserKey = (state: RootState) => state.appData.secure.userKey;\r\n\r\nexport const selectIsGuest = (state: RootState) => state.appData.secure.isGuest;\r\n\r\nexport const selectMobile = (state: RootState) => state.appData.secure.isMobile;\r\n\r\n// Actions\r\nexport const {\r\n  userKeyUpdated,\r\n  setIsGuest,\r\n  deleteAllAppData,\r\n  reset,\r\n  deviceDarkModeSet,\r\n  useDeviceColorSchemeSet,\r\n  mobileSiteSet,\r\n} = appDataSlice.actions;\r\n\r\nexport default appDataSlice.reducer;\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nexport const apiSlice = createApi({\r\n  reducerPath: 'api',\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: 'https://api.athenaserver.com:5678/api',\r\n  }),\r\n  tagTypes: ['User', 'Posts'],\r\n  endpoints: (builder) => ({\r\n    getCurrentVersion: builder.query<any, void>({\r\n      query: () => '/randomShit/getCurrentVersion',\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useLazyGetCurrentVersionQuery } = apiSlice;\r\n","import { apiSlice } from './apiSlice';\r\nimport {\r\n  AddedClasses,\r\n  CourseTermAddedClasses,\r\n  UserData,\r\n} from '../../app/types';\r\n\r\nexport const usersApiSlice = apiSlice.injectEndpoints({\r\n  overrideExisting: true,\r\n  endpoints: (builder) => ({\r\n    getUserInfo: builder.query({\r\n      providesTags: ['User'],\r\n      query: (userKey: string) => ({\r\n        url: '/users/me',\r\n        headers: {\r\n          userKey,\r\n        },\r\n      }),\r\n      transformErrorResponse: (response) => {\r\n        if (response.status === 401) {\r\n          return { error: 'Unauthorized' };\r\n        }\r\n        return response;\r\n      },\r\n      transformResponse: ({ classes, ...rest }) => {\r\n        const addedClasses = {\r\n          length: 0,\r\n          classes: {} as { [courseTerm: string]: CourseTermAddedClasses },\r\n        } as AddedClasses;\r\n\r\n        try {\r\n          for (const { courseCode, courseTerm } of classes) {\r\n            let school = courseCode.split('-');\r\n            school = school[school.length - 2].split(' ');\r\n            school = school[school.length - 1];\r\n            const masterCourseCode =\r\n              courseCode.split(' ').slice(0, 2).join(' ') + ' ' + school;\r\n            if (courseTerm in addedClasses.classes) {\r\n              if (masterCourseCode in addedClasses.classes[courseTerm]) {\r\n                addedClasses.classes[courseTerm][masterCourseCode].push(\r\n                  courseCode\r\n                );\r\n              } else {\r\n                addedClasses.classes[courseTerm][masterCourseCode] = [\r\n                  courseCode,\r\n                ];\r\n              }\r\n            } else {\r\n              addedClasses.classes[courseTerm] = {\r\n                [masterCourseCode]: [courseCode],\r\n              };\r\n            }\r\n\r\n            addedClasses.length++;\r\n          }\r\n        } catch (e) {\r\n          console.warn('Error Adding Classes To State', e);\r\n        }\r\n\r\n        return { addedClasses: addedClasses, ...rest } as UserData;\r\n      },\r\n    }),\r\n    login: builder.mutation({\r\n      query: ({ userName, password, isGuest }) => ({\r\n        url: `/users/login`,\r\n        params: isGuest\r\n          ? {\r\n              userName,\r\n              password,\r\n              isGuest,\r\n            }\r\n          : {\r\n              userName,\r\n              password,\r\n            },\r\n      }),\r\n    }),\r\n    trackLogin: builder.mutation({\r\n      query: (userKey) => ({\r\n        url: `/analytics/login/openedApp`,\r\n        method: 'POST',\r\n        headers: {\r\n          userKey: userKey,\r\n        },\r\n        responseHandler: (response) => response.text(),\r\n      }),\r\n    }),\r\n    deleteAccount: builder.mutation({\r\n      query: ({ userKey, userName }) => ({\r\n        url: '/users',\r\n        method: 'DELETE',\r\n        headers: {\r\n          userKey,\r\n        },\r\n        params: {\r\n          userName,\r\n        },\r\n      }),\r\n    }),\r\n    editUser: builder.mutation({\r\n      invalidatesTags: ['User'],\r\n      query: ({ userKey, userName, fields }) => ({\r\n        url: '/users/' + userName,\r\n        method: 'PATCH',\r\n        headers: {\r\n          'content-type': 'application/json',\r\n          userKey,\r\n        },\r\n        body: fields,\r\n      }),\r\n    }),\r\n    getCollegeList: builder.query<any, void>({\r\n      query: () => '/randomShit/getCollegeList',\r\n    }),\r\n    signupUser: builder.mutation({\r\n      query: (body) => ({\r\n        url: '/users',\r\n        method: 'POST',\r\n        body,\r\n        responseHandler: (response) => response.text(),\r\n      }),\r\n    }),\r\n    verifySignup: builder.mutation({\r\n      query: (code) => ({\r\n        url: '/users/verification',\r\n        method: 'POST',\r\n        body: { code },\r\n      }),\r\n    }),\r\n    resetPassword: builder.mutation({\r\n      query: (email) => ({\r\n        url: '/users/forgotPassword',\r\n        params: {\r\n          email,\r\n        },\r\n        responseHandler: (response) => response.text(),\r\n      }),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useTrackLoginMutation,\r\n  useGetUserInfoQuery,\r\n  useLazyGetUserInfoQuery,\r\n  useLoginMutation,\r\n  useDeleteAccountMutation,\r\n  useEditUserMutation,\r\n  useGetCollegeListQuery,\r\n  useSignupUserMutation,\r\n  useVerifySignupMutation,\r\n  useResetPasswordMutation,\r\n} = usersApiSlice;\r\n","import { apiSlice } from './apiSlice';\r\n\r\nimport { AllSectionsResponse, Class } from '../../app/types';\r\nimport { usersApiSlice } from './usersApi';\r\n\r\nexport const classPagesApi = apiSlice.injectEndpoints({\r\n  overrideExisting: true,\r\n  endpoints: (builder) => ({\r\n    getAllClasses: builder.query({\r\n      query: ({ userKey, pageNumber, courseTerm, collegeName }) => ({\r\n        url: `/classes/masterClassList/` + collegeName,\r\n        headers: {\r\n          userKey,\r\n        },\r\n        params: {\r\n          pageNumber: pageNumber,\r\n          courseTerm: courseTerm,\r\n        },\r\n      }),\r\n      transformResponse: (response: { [masterCourseCode: string]: Class }) => {\r\n        const getRatingFromReviews = (reviews) => {\r\n          if (reviews.length === 0) {\r\n            return null;\r\n          } else {\r\n            let totalAverage = 0;\r\n            let counter = 0;\r\n            for (const review of reviews) {\r\n              if (review.rating) {\r\n                totalAverage += review.rating;\r\n                counter++;\r\n              }\r\n            }\r\n            if (counter > 0) {\r\n              return (totalAverage / counter).toFixed(2);\r\n            } else {\r\n              return null;\r\n            }\r\n          }\r\n        };\r\n\r\n        const getDifficultyFromReviews = (reviews) => {\r\n          if (reviews.length === 0) {\r\n            return null;\r\n          } else {\r\n            let totalAverage = 0;\r\n            let counter = 0;\r\n            for (const review of reviews) {\r\n              if (review.difficulty) {\r\n                totalAverage += review.difficulty;\r\n                counter++;\r\n              }\r\n            }\r\n            if (counter > 0) {\r\n              return (totalAverage / counter).toFixed(2);\r\n            } else {\r\n              return null;\r\n            }\r\n          }\r\n        };\r\n\r\n        return Object.fromEntries(\r\n          Object.entries(response).map(([key, value]) => {\r\n            return [\r\n              key,\r\n              {\r\n                ...value,\r\n                reviews: value.reviews.sort(),\r\n                rating: getRatingFromReviews(value.reviews),\r\n                difficulty: getDifficultyFromReviews(value.reviews),\r\n              },\r\n            ];\r\n          })\r\n        );\r\n      },\r\n    }),\r\n    getCurrentSection: builder.query<any, void>({\r\n      query: () => '/randomShit/currentTerm',\r\n      transformResponse: (response: { currentTerm: string }) =>\r\n        response.currentTerm,\r\n    }),\r\n    getAllSections: builder.query<AllSectionsResponse, void>({\r\n      query: () => '/randomShit/getAllTerms',\r\n    }),\r\n    addClass: builder.mutation({\r\n      query: ({ userKey, courseCode, courseTerm, userName }) => ({\r\n        url: `/users/` + userName,\r\n        method: 'PATCH',\r\n        headers: {\r\n          userKey,\r\n        },\r\n        body: {\r\n          classesToAdd: [{ courseCode, courseTerm }],\r\n        },\r\n      }),\r\n      async onQueryStarted(\r\n        { userKey, courseCode, masterCourseCode, courseTerm },\r\n        { dispatch, queryFulfilled }\r\n      ) {\r\n        const patchResult = dispatch(\r\n          usersApiSlice.util.updateQueryData(\r\n            'getUserInfo',\r\n            userKey,\r\n            (draft) => {\r\n              if (!(courseTerm in draft.addedClasses.classes)) {\r\n                draft.addedClasses.classes[courseTerm] = {\r\n                  [masterCourseCode]: [courseCode],\r\n                };\r\n              } else if (\r\n                !(masterCourseCode in draft.addedClasses.classes[courseTerm])\r\n              ) {\r\n                draft.addedClasses.classes[courseTerm][masterCourseCode] = [\r\n                  courseCode,\r\n                ];\r\n              } else {\r\n                draft.addedClasses.classes[courseTerm][masterCourseCode].push(\r\n                  courseCode\r\n                );\r\n              }\r\n              draft.addedClasses.length++;\r\n            }\r\n          )\r\n        );\r\n\r\n        try {\r\n          await queryFulfilled;\r\n        } catch {\r\n          patchResult.undo();\r\n        }\r\n      },\r\n    }),\r\n    removeClass: builder.mutation({\r\n      query: ({ userKey, courseCode, courseTerm, userName }) => ({\r\n        url: `/users/` + userName,\r\n        method: 'PATCH',\r\n        headers: {\r\n          userKey,\r\n        },\r\n        body: {\r\n          classesToRemove: [{ courseCode, courseTerm }],\r\n        },\r\n      }),\r\n      async onQueryStarted(\r\n        { userKey, courseCode, masterCourseCode, courseTerm },\r\n        { dispatch, queryFulfilled }\r\n      ) {\r\n        const patchResult = dispatch(\r\n          usersApiSlice.util.updateQueryData(\r\n            'getUserInfo',\r\n            userKey,\r\n            (draft) => {\r\n              draft.addedClasses.classes[courseTerm][masterCourseCode] =\r\n                draft.addedClasses.classes[courseTerm][masterCourseCode].filter(\r\n                  (classCode) => classCode !== courseCode\r\n                );\r\n              draft.addedClasses.length--;\r\n            }\r\n          )\r\n        );\r\n\r\n        try {\r\n          await queryFulfilled;\r\n        } catch {\r\n          patchResult.undo();\r\n        }\r\n      },\r\n    }),\r\n    isAllowedToReview: builder.query({\r\n      query: ({ masterCourseCode, userKey }) => ({\r\n        url: '/users/isAllowedToReview',\r\n        method: 'GET',\r\n        params: {\r\n          masterCourseCode,\r\n        },\r\n        headers: {\r\n          userKey,\r\n        },\r\n      }),\r\n    }),\r\n    sendReview: builder.mutation({\r\n      query: ({ userKey, body }) => ({\r\n        url: '/classes/userReview',\r\n        method: 'PATCH',\r\n        headers: {\r\n          userKey,\r\n        },\r\n        body,\r\n        responseHandler: (response) => response.text(),\r\n      }),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetAllClassesQuery,\r\n  useGetCurrentSectionQuery,\r\n  useAddClassMutation,\r\n  useRemoveClassMutation,\r\n  useIsAllowedToReviewQuery,\r\n  useSendReviewMutation,\r\n  useLazyGetAllClassesQuery,\r\n  useLazyGetAllSectionsQuery,\r\n} = classPagesApi;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nimport type { RootState } from '../../app/store';\r\nimport { Class, Filters } from '../../app/types';\r\nimport { classPagesApi } from '../api/classPagesApi';\r\n\r\n// Define a type for the slice state\r\ninterface ClassPagesState {\r\n  classes: { [masterCourseCode: string]: Class };\r\n  filteredClasses: { [masterCourseCode: string]: Class };\r\n  renderedClasses: { [masterCourseCode: string]: Class };\r\n  currentSection: string;\r\n  availableSections: string[];\r\n  searchTerm: string;\r\n  selectedClass: any;\r\n  page: number;\r\n  filters: Filters;\r\n  isHMC: boolean;\r\n}\r\n\r\n// Define the initial state using that type\r\nconst initialState: ClassPagesState = {\r\n  classes: {},\r\n  filteredClasses: {},\r\n  renderedClasses: {},\r\n  currentSection: '',\r\n  availableSections: [],\r\n  selectedClass: {},\r\n  searchTerm: '',\r\n  page: 1,\r\n  isHMC: false,\r\n  filters: {\r\n    colleges: { HM: true, CM: true, PO: true, PZ: true, SC: true },\r\n  },\r\n};\r\n\r\nexport const classPagesSlice = createSlice({\r\n  name: 'classPages',\r\n  initialState,\r\n  reducers: {\r\n    reset: () => initialState,\r\n    currentSectionUpdated: (state, action: PayloadAction<string>) => {\r\n      state.currentSection = action.payload;\r\n    },\r\n    availableSectionsListUpdated: (state, action: PayloadAction<string[]>) => {\r\n      state.availableSections = action.payload;\r\n    },\r\n    endOfListReached: (state) => {\r\n      state.page++;\r\n    },\r\n    resetClasses: (state) => {\r\n      state.page = 1;\r\n      state.searchTerm = '';\r\n\r\n      classPagesSlice.caseReducers.searchResultsFiltered(state);\r\n    },\r\n    classSelected: (state, action: PayloadAction<string>) => {\r\n      state.selectedClass = state.classes[action.payload];\r\n    },\r\n    selectedClassCleared: (state) => {\r\n      state.selectedClass = {};\r\n    },\r\n    filtersSaved: (state, action: PayloadAction<Filters>) => {\r\n      state.filters = action.payload;\r\n      classPagesSlice.caseReducers.searchResultsFiltered(state);\r\n    },\r\n    isHMCUpdated: (state, action: PayloadAction<boolean>) => {\r\n      state.isHMC = action.payload;\r\n    },\r\n    filtersReset: (state) => {\r\n      state.filters = initialState.filters;\r\n\r\n      classPagesSlice.caseReducers.searchResultsFiltered(state);\r\n    },\r\n    searchResultsFiltered: (state) => {\r\n      // Update the renderedClasses object with the new filters\r\n      let newResultsArray = Object.entries(state.classes);\r\n\r\n      newResultsArray = newResultsArray.filter(([masterCourseCode, _]) => {\r\n        const collegeAbr = masterCourseCode.substring(\r\n          masterCourseCode.length - 2,\r\n          masterCourseCode.length\r\n        );\r\n\r\n        for (const [college, isCollegeFiltered] of Object.entries(\r\n          state.filters.colleges\r\n        )) {\r\n          if (collegeAbr === college) {\r\n            return isCollegeFiltered;\r\n          }\r\n        }\r\n      });\r\n\r\n      state.filteredClasses = Object.fromEntries(newResultsArray);\r\n      state.renderedClasses = { ...state.filteredClasses };\r\n    },\r\n    searchTermUpdated: (state, action: PayloadAction<string>) => {\r\n      let newResultsArray = Object.entries(state.filteredClasses);\r\n      state.searchTerm = action.payload;\r\n      state.page = 1;\r\n\r\n      if (state.searchTerm === '') {\r\n        classPagesSlice.caseReducers.resetClasses(state);\r\n      } else {\r\n        const searchTerm = matchDepartmentName(state.searchTerm);\r\n\r\n        // Check for courseCode shortcuts\r\n        const searchCourseCode = findSearchTermShortcuts(searchTerm);\r\n\r\n        const searchTerms = searchTerm.split(' ');\r\n\r\n        newResultsArray = newResultsArray.filter(\r\n          ([_, { courseName, times, masterCourseCode }]) =>\r\n            filterBySearchTerm(\r\n              courseName,\r\n              times,\r\n              masterCourseCode,\r\n              searchCourseCode,\r\n              searchCourseCode === state.searchTerm ? searchTerms : []\r\n            )\r\n        );\r\n\r\n        let newResultsObject = Object.fromEntries(newResultsArray);\r\n\r\n        state.renderedClasses = { ...newResultsObject };\r\n      }\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addMatcher(\r\n      classPagesApi.endpoints.getAllClasses.matchFulfilled,\r\n      (state, { payload }) => {\r\n        state.classes = payload;\r\n        state.renderedClasses = payload;\r\n      }\r\n    );\r\n  },\r\n});\r\n\r\n// Helper functions\r\n\r\nconst findSearchTermShortcuts = (searchPhrase: string) => {\r\n  return searchPhrase\r\n    .replace(/(cs *)(\\d+)/i, (match, p1, p2) => 'csci ' + p2)\r\n    .replace(\r\n      /((e *)|(eng *)|(engr *))(\\d+)/i,\r\n      (match, p1, p2, p3, p4, p5) => 'engr ' + p5\r\n    )\r\n    .replace(/(bio *)(\\d+)/i, (match, p1, p2) => 'biol ' + p2)\r\n    .replace(\r\n      // pad 0s for courseCode search\r\n      /([a-z]+ *)(\\d+)/i,\r\n      (match, p1, p2) => p1 + p2.padStart(3, '0')\r\n    );\r\n};\r\n\r\n// convert full department name search phrase to the department code\r\nconst matchDepartmentName = (searchPhrase: string) => {\r\n  return searchPhrase\r\n    .replace(/(computer science)/i, 'csci')\r\n    .replace(/(engineering)/i, 'engr')\r\n    .replace(/(biology)/i, 'biol');\r\n};\r\n\r\nconst filterBySearchTerm = (\r\n  courseName: string,\r\n  times: any[],\r\n  masterCourseCode: string,\r\n  searchCourseCode?: string,\r\n  searchTerms?: string[]\r\n) => {\r\n  const coursePhrase = `${masterCourseCode} ${courseName} ${\r\n    times[0]?.professorName ? times[0].professorName : ''\r\n  }`;\r\n\r\n  // Return true if any of the searchCourseCodes are found in the masterCourseCode\r\n  if (\r\n    masterCourseCode\r\n      .trim()\r\n      .replace(/\\s+/g, ' ')\r\n      .includes(searchCourseCode.toUpperCase().trim().replace(/\\s+/g, ' '))\r\n  ) {\r\n    return true;\r\n  }\r\n\r\n  // Return true if all of the searchPhrases are found in the coursePhrase\r\n  for (const searchTerm of searchTerms) {\r\n    if (\r\n      !coursePhrase\r\n        .toUpperCase()\r\n        .trim()\r\n        .replace(/\\s+/g, ' ')\r\n        .includes(searchTerm.toUpperCase().trim().replace(/\\s+/g, ' '))\r\n    ) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return searchTerms.length > 0;\r\n};\r\n\r\nconst filterByCollege = (filters, [className, _]) => {\r\n  const college = className.split(' ').at(-1);\r\n  return filters.colleges.includes(college);\r\n};\r\n\r\n// Selectors\r\nexport const selectClassesList = (state: RootState) =>\r\n  state.appData.classPages.classes;\r\n\r\nexport const selectRenderedClassesList = (state: RootState) =>\r\n  state.appData.classPages.renderedClasses;\r\n\r\n// Actions\r\nexport const {\r\n  currentSectionUpdated,\r\n  endOfListReached,\r\n  searchTermUpdated,\r\n  resetClasses,\r\n  classSelected,\r\n  selectedClassCleared,\r\n  reset,\r\n  filtersSaved,\r\n  filtersReset,\r\n  isHMCUpdated,\r\n  availableSectionsListUpdated\r\n} = classPagesSlice.actions;\r\n\r\nexport default classPagesSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport type { PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../../app/store';\r\n\r\ninterface DiscoverState {\r\n  searchTerm: string;\r\n  submittedSearchTerm: string;\r\n  tag: string;\r\n  recentSearches: string[];\r\n}\r\nconst initialState: DiscoverState = {\r\n  searchTerm: '',\r\n  submittedSearchTerm: '',\r\n  tag: '',\r\n  recentSearches: [],\r\n};\r\n\r\nexport const discoverSlice = createSlice({\r\n  name: 'discover',\r\n  initialState,\r\n  reducers: {\r\n    reset: () => initialState,\r\n    searchTermSubmitted: (state, action: PayloadAction<string>) => {\r\n      state.submittedSearchTerm = action.payload;\r\n      if (action.payload && !state.recentSearches.includes(action.payload)) {\r\n        state.recentSearches.unshift(action.payload);\r\n      }\r\n    },\r\n    searchTermChanged: (state, action: PayloadAction<string>) => {\r\n      state.searchTerm = action.payload;\r\n      if (action.payload === '') {\r\n        state.submittedSearchTerm = '';\r\n      }\r\n    },\r\n    recentSearchTermSelected: (state, action: PayloadAction<string>) => {\r\n      state.searchTerm = action.payload;\r\n      state.submittedSearchTerm = action.payload;\r\n    },\r\n    tagSelected: (state, action: PayloadAction<string>) => {\r\n      state.tag = action.payload;\r\n    },\r\n    recentSearchTermRemoved: (state, action: PayloadAction<string>) => {\r\n      state.recentSearches = state.recentSearches.filter(\r\n        (term) => term !== action.payload\r\n      );\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  reset,\r\n  searchTermChanged,\r\n  searchTermSubmitted,\r\n  tagSelected,\r\n  recentSearchTermSelected,\r\n  recentSearchTermRemoved,\r\n} = discoverSlice.actions;\r\n\r\nexport const selectSearchTerm = (state: RootState) =>\r\n  state.appData.discover.searchTerm;\r\nexport const selectSubmittedSearchTerm = (state: RootState) =>\r\n  state.appData.discover.submittedSearchTerm;\r\nexport const selectTag = (state: RootState) => state.appData.discover.tag;\r\nexport const selectRecentSearches = (state: RootState) =>\r\n  state.appData.discover.recentSearches;\r\n\r\nexport default discoverSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport type { PayloadAction } from '@reduxjs/toolkit';\r\n\r\ninterface CalendarState {\r\n  isThreeDay: boolean;\r\n}\r\n\r\nconst initialState: CalendarState = {\r\n  isThreeDay: false,\r\n};\r\n\r\nexport const calendarSlice = createSlice({\r\n  name: 'discover',\r\n  initialState: initialState,\r\n  reducers: {\r\n    reset: (state) => (state = initialState),\r\n    isThreeDaySet: (state, action: PayloadAction<boolean>) => {\r\n      state.isThreeDay = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { reset, isThreeDaySet } = calendarSlice.actions;\r\n\r\nexport default calendarSlice.reducer;\r\n","import * as SecureStore from 'expo-secure-store';\r\n\r\nexport default function createSecureStorage(options: any = {}) {\r\n  const replaceCharacter = options.replaceCharacter || '_';\r\n  const replacer = options.replacer || defaultReplacer;\r\n\r\n  return {\r\n    getItem: (key: string) =>\r\n      SecureStore.getItemAsync(replacer(key, replaceCharacter), options),\r\n    setItem: (key: string, value: string) =>\r\n      SecureStore.setItemAsync(replacer(key, replaceCharacter), value, options),\r\n    removeItem: (key: string) =>\r\n      SecureStore.deleteItemAsync(replacer(key, replaceCharacter), options),\r\n  };\r\n}\r\n\r\nfunction defaultReplacer(key: string, replaceCharacter: string) {\r\n  return key.replace(/[^a-z0-9.\\-_]/gi, replaceCharacter);\r\n}\r\n","// import createSecureStore from \"redux-persist-expo-securestore\"\r\nimport * as ExpoSecureStorage from 'expo-secure-store';\r\nimport { Platform } from 'react-native';\r\nimport { combineReducers } from 'redux';\r\nimport { persistReducer } from 'redux-persist';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport ExpoFileSystemStorage from 'redux-persist-expo-filesystem';\r\n\r\nimport appDataReducer from '../app/appDataSlice';\r\nimport classPagesReducer from '../features/classPages/classPagesSlice';\r\nimport discoverReducer from '../features/discover/discoverSlice';\r\nimport calendarReducer from '../features/calendar/calendarSlice';\r\nimport createSecureStorage from './SecureStorage';\r\n\r\n// Secure storage\r\n\r\n// const SecureStorage = createSecureStore();\r\nconst SecureStorage = createSecureStorage();\r\n\r\n\r\nconst securePersistConfig = {\r\n  key: 'secure',\r\n  storage: Platform.OS === 'web' ? AsyncStorage : SecureStorage,\r\n};\r\n\r\n// Non-secure (AsyncStorage) storage\r\nconst cpPersistConfig = {\r\n  key: 'classPages',\r\n  storage: Platform.OS === 'android' ? ExpoFileSystemStorage : AsyncStorage,\r\n  whitelist:\r\n    Platform.OS === 'web'\r\n      ? ['currentSection', 'filters']\r\n      : ['classes', 'currentSection', 'isHMC'],\r\n};\r\n\r\nconst discoverPersistConfig = {\r\n  key: 'discover',\r\n  storage: Platform.OS === 'android' ? ExpoFileSystemStorage : AsyncStorage,\r\n  whitelist: ['recentSearches'],\r\n};\r\n\r\n// Combine them together\r\nexport const rootReducer = combineReducers({\r\n  classPages: persistReducer(cpPersistConfig, classPagesReducer),\r\n  secure: persistReducer(securePersistConfig, appDataReducer),\r\n  discover: persistReducer(discoverPersistConfig, discoverReducer),\r\n  calendar: calendarReducer,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nimport { rootReducer } from './storage';\r\nimport { apiSlice } from '../features/api/apiSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    appData: rootReducer,\r\n    [apiSlice.reducerPath]: apiSlice.reducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: false,\r\n      immutableCheck: false,\r\n    }).concat(apiSlice.middleware),\r\n});\r\n\r\n// serializableCheck: {\r\n//   ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n//   ignoredPaths: [\r\n//     'appData.classPages.classes',\r\n//     'addData.classPages.renderedClasses',\r\n//   ],\r\n// },\r\n// immutableCheck: {\r\n//   ignoredPaths: [\r\n//     'appData.classPages.classes',\r\n//     'addData.classPages.renderedClasses',\r\n//   ],\r\n// },\r\n\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\nimport type { RootState, AppDispatch } from './store'\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch: () => AppDispatch = useDispatch\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\r\n\r\n","import { Button, Layout, Text } from '@ui-kitten/components';\r\n\r\nexport default function EnterCodePage({ navigation }) {\r\n  return (\r\n    <Layout style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n      <Text\r\n        style={{\r\n          margin: 10,\r\n        }}\r\n        category=\"s1\">\r\n        An email has been sent to you with a temporary password. Login to set\r\n        your new password.\r\n      </Text>\r\n      <Button\r\n        style={{ margin: 10 }}\r\n        onPress={() => {\r\n          navigation.reset({ index: 0, routes: [{ name: 'Login' }] });\r\n        }}>\r\n        Back to Login\r\n      </Button>\r\n    </Layout>\r\n  );\r\n}\r\n","import { Button, Input, Layout, Spinner, Text } from '@ui-kitten/components';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { useNetInfo } from '@react-native-community/netinfo';\r\nimport { Keyboard } from 'react-native';\r\n\r\nimport { useResetPasswordMutation } from '../../api/usersApi';\r\n\r\nexport default function EnterEmailPage({ navigation }) {\r\n  const [email, setEmail] = useState('');\r\n  const inputRef = useRef<Input>(null);\r\n  const [resetPassword, { isLoading, isError }] = useResetPasswordMutation();\r\n  const netInfo = useNetInfo();\r\n\r\n  useEffect(() => {\r\n    if (inputRef.current) inputRef.current.focus();\r\n  }, [inputRef.current]);\r\n\r\n  const onSubmit = async () => {\r\n    if (!netInfo.isConnected) {\r\n      alert('Connect to the internet to reset your password');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await resetPassword(email).unwrap();\r\n      navigation.navigate('EnterCodePage');\r\n    } catch (e) {\r\n      console.warn('Error submitting forgot password email', e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout style={{ flex: 1, paddingTop: 30, alignItems: 'center' }}>\r\n      <Text style={{ margin: 10 }} category=\"s1\">\r\n        Enter your email to get started\r\n      </Text>\r\n\r\n      <Input\r\n        autoCapitalize=\"none\"\r\n        placeholder=\"Email\"\r\n        ref={inputRef}\r\n        style={{ margin: 10 }}\r\n        onChangeText={setEmail}\r\n        value={email}\r\n        onSubmitEditing={Keyboard.dismiss}\r\n      />\r\n      {isError && (\r\n        <Text style={{ color: 'red' }}>Email is invalid. Try again</Text>\r\n      )}\r\n      <Button\r\n        style={{ margin: 10 }}\r\n        onPress={onSubmit}\r\n        disabled={isLoading}\r\n        accessoryRight={() => (isLoading ? <Spinner status=\"basic\" /> : null)}>\r\n        Submit\r\n      </Button>\r\n    </Layout>\r\n  );\r\n}\r\n","import { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport EnterCodePage from './EnterCodePage';\r\nimport EnterEmailPage from './EnterEmailPage';\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nexport default function ForgotPassword() {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={{\r\n        headerShown: false,\r\n      }}>\r\n      <Stack.Screen name=\"EnterEmailPage\" component={EnterEmailPage} />\r\n      <Stack.Screen name=\"EnterCodePage\" component={EnterCodePage} />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Image,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  KeyboardAvoidingView,\r\n  Keyboard,\r\n  TouchableWithoutFeedback,\r\n  Platform,\r\n  TextInput,\r\n} from 'react-native';\r\nimport { Input, Layout, Spinner, Text } from '@ui-kitten/components';\r\nimport NetInfo from '@react-native-community/netinfo';\r\nimport {\r\n  useLazyGetUserInfoQuery,\r\n  useLoginMutation,\r\n  useTrackLoginMutation,\r\n} from '../api/usersApi';\r\n\r\nconst DarkModeLogo = require('../../../assets/logos/owl-white-text.png');\r\nconst LightModeLogo = require('../../../assets/logos/owl-black-text.png');\r\n\r\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\r\nimport {\r\n  selectDarkMode,\r\n  setIsGuest,\r\n  userKeyUpdated,\r\n} from '../../app/appDataSlice';\r\nimport { useLazyGetAllSectionsQuery } from '../api/classPagesApi';\r\nimport {\r\n  availableSectionsListUpdated,\r\n  currentSectionUpdated,\r\n} from '../classPages/classPagesSlice';\r\n\r\nexport default function Login({ navigation }) {\r\n  const [userName, setUserName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loginError, setLoginError] = useState('');\r\n\r\n  const [login, { isLoading }] = useLoginMutation();\r\n  const [getUserInfo] = useLazyGetUserInfoQuery();\r\n  const [trackLogin] = useTrackLoginMutation();\r\n  const [getAllSections] = useLazyGetAllSectionsQuery();\r\n  const darkMode = useAppSelector(selectDarkMode);\r\n  // const apiUserKey = useAppSelector((state) => state.appData.secure);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const passwordRef = React.useRef(null);\r\n\r\n  const handleLogin = async () => {\r\n    Keyboard.dismiss();\r\n\r\n    // Check for internet connection\r\n    const netInfo = await NetInfo.fetch();\r\n    if (!netInfo.isConnected) {\r\n      setLoginError('No internet connection');\r\n      return;\r\n    }\r\n\r\n    // Validate input\r\n    if (!userName) {\r\n      setLoginError(\"Username can't be empty\");\r\n    } else if (!password) {\r\n      setLoginError(\"Password can't be empty\");\r\n    } else {\r\n      try {\r\n        const { userKey } = await login({\r\n          userName,\r\n          password,\r\n        }).unwrap();\r\n        // Save user key and data to redux store\r\n        dispatch(userKeyUpdated(userKey));\r\n        dispatch(setIsGuest(false));\r\n\r\n        // Get current section\r\n        const allSections = await getAllSections().unwrap();\r\n\r\n        dispatch(currentSectionUpdated(allSections.currentTerm));\r\n        dispatch(availableSectionsListUpdated(allSections.availableTerms));\r\n\r\n        // Get user info\r\n        getUserInfo(userKey)\r\n          .unwrap()\r\n          .then(async () => {\r\n            await trackLogin(userKey);\r\n          });\r\n\r\n        // Reset login form\r\n        setUserName('');\r\n        setPassword('');\r\n        setLoginError('');\r\n      } catch (e) {\r\n        setLoginError('Invalid username or password');\r\n        console.error('Failed to Login: ', e);\r\n      }\r\n    }\r\n  };\r\n\r\n  const guestLogin = async () => {\r\n    Keyboard.dismiss();\r\n\r\n    // Check for internet connection\r\n    const netInfo = await NetInfo.fetch();\r\n    if (!netInfo.isConnected) {\r\n      setLoginError('No internet connection');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const { userKey } = await login({\r\n        userName: '',\r\n        password: '',\r\n        isGuest: true,\r\n      }).unwrap();\r\n      // Save user key and data to redux store\r\n      dispatch(userKeyUpdated(userKey));\r\n      dispatch(setIsGuest(true));\r\n\r\n      // Get user info\r\n      getUserInfo(userKey)\r\n        .unwrap()\r\n        .then(async () => {\r\n          await trackLogin(userKey);\r\n        });\r\n\r\n      // Reset login form\r\n      setUserName('');\r\n      setPassword('');\r\n      setLoginError('');\r\n    } catch (e) {\r\n      setLoginError('Invalid username or password');\r\n      console.error('Failed to Login: ', e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TouchableWithoutFeedback\r\n      style={{ flex: 1 }}\r\n      onPress={() => {\r\n        Keyboard.dismiss();\r\n      }}>\r\n      <KeyboardAvoidingView\r\n        style={styles.container}\r\n        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}>\r\n        <Layout\r\n          style={{\r\n            flex: 1,\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n          }}>\r\n          {darkMode ? (\r\n            <Image source={DarkModeLogo} style={styles.logo} />\r\n          ) : (\r\n            <Image source={LightModeLogo} style={styles.logo} />\r\n          )}\r\n\r\n          <Layout style={styles.inputView}>\r\n            <Input\r\n              autoCapitalize=\"none\"\r\n              status=\"control\"\r\n              autoComplete=\"username\"\r\n              style={styles.TextInput}\r\n              placeholder=\"username / email\"\r\n              placeholderTextColor=\"white\"\r\n              keyboardType=\"email-address\"\r\n              onChangeText={(userName) => setUserName(userName)}\r\n              value={userName}\r\n              onSubmitEditing={() => passwordRef.current.focus()}\r\n              blurOnSubmit={false}\r\n            />\r\n          </Layout>\r\n          <Layout style={styles.inputView}>\r\n            <Input\r\n              style={styles.TextInput}\r\n              autoComplete=\"password\"\r\n              placeholder=\"password\"\r\n              placeholderTextColor=\"white\"\r\n              secureTextEntry={true}\r\n              onChangeText={(password) => setPassword(password)}\r\n              value={password}\r\n              ref={passwordRef}\r\n            />\r\n          </Layout>\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              navigation.navigate('ForgotPassword');\r\n            }}>\r\n            <Text style={styles.forgot_button}>Forgot Password?</Text>\r\n          </TouchableOpacity>\r\n          {isLoading ? (\r\n            <Layout\r\n              style={{ position: 'absolute', backgroundColor: 'transparent' }}>\r\n              <Spinner />\r\n            </Layout>\r\n          ) : null}\r\n\r\n          <TouchableOpacity\r\n            style={styles.loginBtn}\r\n            onPress={() => {\r\n              handleLogin();\r\n            }}>\r\n            <Text style={{ color: '#fff' }}>LOGIN</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style={{\r\n              width: '50%',\r\n              borderRadius: 25,\r\n              height: 40,\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              marginTop: 20,\r\n              backgroundColor: darkMode ? '#8b31e3' : 'rgb(98,111,187)',\r\n              maxWidth: 300,\r\n            }}\r\n            onPress={() => {\r\n              guestLogin();\r\n            }}>\r\n            <Text style={{ color: '#fff' }}>Try As Guest</Text>\r\n          </TouchableOpacity>\r\n          <Text style={styles.error}>{loginError}</Text>\r\n          <TouchableOpacity\r\n            style={{ width: '100%' }}\r\n            onPress={() => {\r\n              navigation.navigate('Signup');\r\n            }}>\r\n            <Layout level={'2'} style={styles.signupBtn}>\r\n              <Text>SIGN UP</Text>\r\n            </Layout>\r\n          </TouchableOpacity>\r\n        </Layout>\r\n      </KeyboardAvoidingView>\r\n    </TouchableWithoutFeedback>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  title: {\r\n    fontSize: 30,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n  image: {\r\n    marginBottom: 40,\r\n  },\r\n\r\n  inputView: {\r\n    flexDirection: 'row',\r\n    height: 40,\r\n    marginTop: 20,\r\n    marginLeft: 50,\r\n    marginRight: 50,\r\n    margin: 10,\r\n  },\r\n\r\n  TextInput: {\r\n    backgroundColor: '#b42bba',\r\n    borderColor: '#b42bba',\r\n    color: '#fff',\r\n    borderWidth: 1,\r\n    borderRadius: 30,\r\n    width: '100%',\r\n    maxWidth: 300,\r\n  },\r\n\r\n  forgot_button: {\r\n    height: 30,\r\n    marginBottom: 30,\r\n  },\r\n\r\n  loginBtn: {\r\n    width: '80%',\r\n    borderRadius: 25,\r\n    height: 50,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: 10,\r\n    backgroundColor: '#ff3f5e',\r\n    maxWidth: 300,\r\n  },\r\n  guestButton: {\r\n    width: '60%',\r\n    borderRadius: 25,\r\n    height: 40,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: 20,\r\n  },\r\n  signupBtn: {\r\n    marginTop: 60,\r\n    width: '100%',\r\n    height: 50,\r\n    alignItems: 'center',\r\n    alignSelf: 'center',\r\n    justifyContent: 'center',\r\n    maxWidth: 800,\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    fontSize: 15,\r\n  },\r\n  logo: {\r\n    width: 178,\r\n    height: 197,\r\n    marginBottom: 20,\r\n  },\r\n});\r\n","import { HeaderBackButton } from '@react-navigation/elements';\r\nimport { Platform } from 'react-native';\r\n\r\nexport default function BackButton({ navigation, ...props }) {\r\n  return (\r\n    <HeaderBackButton\r\n      {...props}\r\n      onPress={navigation.goBack}\r\n      label=\"Back\"\r\n      labelVisible={Platform.OS === 'ios'}\r\n    />\r\n  );\r\n}\r\n","// Import React and Component\r\nimport React, { useState, useRef } from 'react';\r\nimport {\r\n  StyleSheet,\r\n  KeyboardAvoidingView,\r\n  Keyboard,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  Platform,\r\n} from 'react-native';\r\n\r\nimport {\r\n  CheckBox,\r\n  IndexPath,\r\n  Layout,\r\n  Select,\r\n  SelectItem,\r\n  Text,\r\n  Input,\r\n  Spinner,\r\n} from '@ui-kitten/components';\r\nimport {\r\n  useGetCollegeListQuery,\r\n  useSignupUserMutation,\r\n} from '../../api/usersApi';\r\n\r\nconst Signup = ({ navigation }) => {\r\n  const [realFirstName, setRealFirstName] = useState('');\r\n  const [realLastName, setRealLastName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [major, setMajor] = useState('');\r\n  const [selectedIndex, setSelectedIndex] = useState(new IndexPath(0));\r\n  const [simplifiedSignup, setSimplifiedSignUp] = useState(false);\r\n  const [userCollege, setUserCollege] = useState({\r\n    collegeName: '',\r\n    humanReadableCollegeName: null,\r\n  });\r\n\r\n  const { data: collegeList } = useGetCollegeListQuery();\r\n  const [signupUser, { isLoading: signupLoading }] = useSignupUserMutation();\r\n\r\n  const firstNameInputRef = useRef<Input>();\r\n  const lastNameInputRef = useRef<Input>();\r\n  const passwordInputRef = useRef<Input>();\r\n  const majorInputRef = useRef<Input>();\r\n\r\n  const validateInput = () => {\r\n    if (!simplifiedSignup) {\r\n      if (!realFirstName) {\r\n        alert('Please fill First Name');\r\n        return false;\r\n      }\r\n      if (!realLastName) {\r\n        alert('Please fill Last Name');\r\n        return false;\r\n      }\r\n\r\n      if (!userCollege.collegeName) {\r\n        alert('Please fill College Name');\r\n        return false;\r\n      }\r\n\r\n      if (!major) {\r\n        alert('Please fill Major');\r\n        return false;\r\n      }\r\n    }\r\n\r\n    if (!email) {\r\n      alert('Please fill Email');\r\n      return false;\r\n    }\r\n\r\n    if (!password) {\r\n      alert('Please fill Password');\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const handleSubmitButton = async () => {\r\n    if (validateInput()) {\r\n      try {\r\n        const body = {\r\n          email,\r\n          password,\r\n          realFirstName,\r\n          realLastName,\r\n          collegeName: userCollege.collegeName,\r\n          major,\r\n        };\r\n\r\n        await signupUser(body).unwrap();\r\n        navigation.navigate('VerifyEmail');\r\n      } catch (e) {\r\n        console.warn('Signup error: ', e);\r\n      }\r\n    }\r\n  };\r\n\r\n  const renderCollegeDropDown = () => {\r\n    function handleSelection(index) {\r\n      setSelectedIndex(index);\r\n      const newObject = {\r\n        collegeName: collegeList[index.row].id,\r\n        humanReadableCollegeName: collegeList[index.row].label,\r\n      };\r\n      setUserCollege(newObject);\r\n    }\r\n\r\n    return (\r\n      <Layout style={styles.containerDrop}>\r\n        <Select\r\n          placeholder={'Choose A College'}\r\n          value={\r\n            !userCollege.humanReadableCollegeName\r\n              ? 'Selection'\r\n              : userCollege.humanReadableCollegeName\r\n          }\r\n          onFocus={Keyboard.dismiss}\r\n          selectedIndex={selectedIndex}\r\n          onSelect={handleSelection}>\r\n          {collegeList &&\r\n            collegeList.map((college, index) => (\r\n              <SelectItem title={college.label} key={index} />\r\n            ))}\r\n        </Select>\r\n      </Layout>\r\n    );\r\n  };\r\n\r\n  let fields = [];\r\n  fields.push(\r\n    <Layout key={'1'}>\r\n      <Layout style={styles.SectionStyle}>\r\n        <Layout style={styles.labelSection}>\r\n          <Text style={styles.label}>Email</Text>\r\n        </Layout>\r\n        <Input\r\n          style={styles.inputStyle}\r\n          onChangeText={(email) => setEmail(email)}\r\n          underlineColorAndroid=\"#f000\"\r\n          placeholder=\"Enter Email\"\r\n          placeholderTextColor=\"#8b9cb5\"\r\n          defaultValue=\"\"\r\n          autoCapitalize=\"none\"\r\n          returnKeyType=\"next\"\r\n          onSubmitEditing={() =>\r\n            passwordInputRef.current ? passwordInputRef.current.focus() : null\r\n          }\r\n          blurOnSubmit={false}\r\n        />\r\n      </Layout>\r\n      <Layout style={styles.SectionStyle}>\r\n        <Layout style={styles.labelSection}>\r\n          <Text style={styles.label}>Password</Text>\r\n        </Layout>\r\n        <Input\r\n          style={styles.inputStyle}\r\n          onChangeText={(password) => setPassword(password)}\r\n          underlineColorAndroid=\"#f000\"\r\n          placeholder=\"Enter Password\"\r\n          placeholderTextColor=\"#8b9cb5\"\r\n          defaultValue=\"\"\r\n          ref={passwordInputRef}\r\n          returnKeyType=\"next\"\r\n          secureTextEntry={true}\r\n          onSubmitEditing={() =>\r\n            firstNameInputRef.current ? firstNameInputRef.current.focus() : null\r\n          }\r\n          blurOnSubmit={false}\r\n        />\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n\r\n  if (!simplifiedSignup) {\r\n    fields.push(\r\n      <Layout key={'2'}>\r\n        <Layout style={styles.SectionStyle}>\r\n          <Layout style={styles.labelSection}>\r\n            <Text style={styles.label}>First Name</Text>\r\n          </Layout>\r\n          <Input\r\n            style={styles.inputStyle}\r\n            onChangeText={setRealFirstName}\r\n            ref={firstNameInputRef}\r\n            underlineColorAndroid=\"#f000\"\r\n            placeholder=\"Enter First Name\"\r\n            placeholderTextColor=\"#8b9cb5\"\r\n            defaultValue=\"\"\r\n            autoCapitalize=\"sentences\"\r\n            returnKeyType=\"next\"\r\n            onSubmitEditing={() =>\r\n              lastNameInputRef?.current\r\n                ? lastNameInputRef.current.focus()\r\n                : null\r\n            }\r\n            blurOnSubmit={false}\r\n          />\r\n        </Layout>\r\n\r\n        <Layout style={styles.SectionStyle}>\r\n          <Layout style={styles.labelSection}>\r\n            <Text style={styles.label}>Last Name</Text>\r\n          </Layout>\r\n          <Input\r\n            style={styles.inputStyle}\r\n            onChangeText={setRealLastName}\r\n            underlineColorAndroid=\"#f000\"\r\n            placeholder=\"Enter Last Name\"\r\n            placeholderTextColor=\"#8b9cb5\"\r\n            defaultValue=\"\"\r\n            ref={lastNameInputRef}\r\n            autoCapitalize=\"sentences\"\r\n            returnKeyType=\"next\"\r\n            onSubmitEditing={() =>\r\n              majorInputRef.current ? majorInputRef.current.focus() : null\r\n            }\r\n            blurOnSubmit={false}\r\n          />\r\n        </Layout>\r\n\r\n        <Layout style={styles.SectionStyle}>\r\n          <Layout style={styles.labelSection}>\r\n            <Text style={styles.label}>Intended Major</Text>\r\n          </Layout>\r\n          <Input\r\n            style={styles.inputStyle}\r\n            onChangeText={setMajor}\r\n            underlineColorAndroid=\"#f000\"\r\n            placeholder=\"Enter Intended Major\"\r\n            placeholderTextColor=\"#8b9cb5\"\r\n            defaultValue=\"\"\r\n            ref={majorInputRef}\r\n            blurOnSubmit={true}\r\n          />\r\n        </Layout>\r\n\r\n        <Layout style={styles.SectionStyle}>\r\n          <Layout style={styles.labelSection}>\r\n            <Text style={styles.label}>College Name</Text>\r\n          </Layout>\r\n          {renderCollegeDropDown()}\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    // Registration Page\r\n    <Layout style={{ flex: 1 }}>\r\n      <ScrollView style={{ flex: 1 }}>\r\n        {/* Spinner */}\r\n        {signupLoading && (\r\n          <Layout\r\n            style={{\r\n              flex: 1,\r\n              position: 'absolute',\r\n              zIndex: 1,\r\n              top: '50%',\r\n              left: '50%',\r\n              backgroundColor: 'transparent',\r\n            }}>\r\n            <Spinner />\r\n          </Layout>\r\n        )}\r\n\r\n        <Layout style={{ paddingVertical: 30, paddingHorizontal: 40 }}>\r\n          <CheckBox\r\n            checked={simplifiedSignup}\r\n            onChange={(nextChecked) => setSimplifiedSignUp(nextChecked)}>\r\n            Simplified Signup\r\n          </CheckBox>\r\n        </Layout>\r\n\r\n        <KeyboardAvoidingView\r\n          style={{ flex: 1 }}\r\n          behavior={Platform.OS === 'ios' ? 'padding' : 'height'}>\r\n          {fields}\r\n\r\n          <TouchableOpacity\r\n            style={styles.buttonStyle}\r\n            onPress={handleSubmitButton}>\r\n            <Text style={styles.buttonTextStyle}>Register</Text>\r\n          </TouchableOpacity>\r\n        </KeyboardAvoidingView>\r\n      </ScrollView>\r\n    </Layout>\r\n  );\r\n};\r\nexport default Signup;\r\n\r\nconst styles = StyleSheet.create({\r\n  SectionStyle: {\r\n    flexDirection: 'row',\r\n    height: 40,\r\n    marginTop: 20,\r\n    marginLeft: 35,\r\n    marginRight: 35,\r\n    margin: 10,\r\n  },\r\n  buttonStyle: {\r\n    backgroundColor: '#b42bba',\r\n    borderWidth: 0,\r\n    color: '#FFFFFF',\r\n    borderColor: '#7DE24E',\r\n    height: 40,\r\n    alignItems: 'center',\r\n    borderRadius: 30,\r\n    marginLeft: 35,\r\n    marginRight: 35,\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n  },\r\n  buttonTextStyle: {\r\n    color: '#FFFFFF',\r\n    paddingVertical: 10,\r\n    fontSize: 16,\r\n  },\r\n  inputStyle: {\r\n    flex: 1,\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n    borderWidth: 1,\r\n    borderRadius: 30,\r\n    borderColor: '#dadae8',\r\n  },\r\n  errorTextStyle: {\r\n    color: 'red',\r\n    textAlign: 'center',\r\n    fontSize: 14,\r\n  },\r\n  successTextStyle: {\r\n    color: 'black',\r\n    textAlign: 'center',\r\n    fontSize: 18,\r\n    padding: 30,\r\n  },\r\n  label: {\r\n    textAlign: 'center',\r\n    fontSize: 15,\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n  },\r\n  labelSection: {\r\n    justifyContent: 'center',\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n  },\r\n\r\n  text: {\r\n    fontSize: 20,\r\n    margin: 20,\r\n  },\r\n  input: {\r\n    width: '80%',\r\n    margin: 20,\r\n    borderWidth: 1,\r\n    borderColor: 'black',\r\n    borderRadius: 20,\r\n    height: 40,\r\n    padding: 10,\r\n  },\r\n  button: {\r\n    width: '80%',\r\n    margin: 20,\r\n    alignItems: 'center',\r\n    backgroundColor: '#b42bba',\r\n    height: 40,\r\n    borderRadius: 20,\r\n    borderColor: '#b42bba',\r\n    justifyContent: 'center',\r\n  },\r\n  buttonText: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    color: 'white',\r\n  },\r\n  containerDrop: {\r\n    minHeight: 128,\r\n    minWidth: 200,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { Layout, Text, Input, Spinner } from '@ui-kitten/components';\r\nimport { StyleSheet, TouchableOpacity } from 'react-native';\r\nimport {\r\n  useVerifySignupMutation,\r\n  useLazyGetUserInfoQuery,\r\n} from '../../api/usersApi';\r\nimport { useAppDispatch } from '../../../app/hooks';\r\nimport { userKeyUpdated } from '../../../app/appDataSlice';\r\n\r\nexport default function VerifyEmail() {\r\n  const [verificationCode, setVerificationCode] = React.useState('');\r\n  const [verifyCode, { isError }] = useVerifySignupMutation();\r\n  const [getUserInfo, { isLoading: getUserInfoLoading }] =\r\n    useLazyGetUserInfoQuery();\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handleVerifyCodeButton = async () => {\r\n    try {\r\n      const { password } = await verifyCode(verificationCode).unwrap();\r\n      dispatch(userKeyUpdated(password));\r\n      await getUserInfo(password).unwrap();\r\n    } catch (error) {\r\n      console.warn(\"Couldn't verify code\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout style={styles.container}>\r\n      <Text style={styles.text}>\r\n        A verification code has been sent to your email. Please check your email\r\n        and enter the code below.\r\n      </Text>\r\n      {getUserInfoLoading && <Spinner />}\r\n      {isError && <Text>Error verifying code</Text>}\r\n      <Input\r\n        style={styles.input}\r\n        placeholder=\"Verification Code\"\r\n        keyboardType=\"numeric\"\r\n        onChangeText={(text) => setVerificationCode(text)}\r\n      />\r\n      <TouchableOpacity style={styles.button} onPress={handleVerifyCodeButton}>\r\n        <Text style={styles.buttonText}>Finish Signup</Text>\r\n      </TouchableOpacity>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  SectionStyle: {\r\n    flexDirection: 'row',\r\n    height: 40,\r\n    marginTop: 20,\r\n    marginLeft: 35,\r\n    marginRight: 35,\r\n    margin: 10,\r\n  },\r\n  buttonStyle: {\r\n    backgroundColor: '#b42bba',\r\n    borderWidth: 0,\r\n    color: '#FFFFFF',\r\n    borderColor: '#7DE24E',\r\n    height: 40,\r\n    alignItems: 'center',\r\n    borderRadius: 30,\r\n    marginLeft: 35,\r\n    marginRight: 35,\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n  },\r\n  buttonTextStyle: {\r\n    color: '#FFFFFF',\r\n    paddingVertical: 10,\r\n    fontSize: 16,\r\n  },\r\n  inputStyle: {\r\n    flex: 1,\r\n    color: 'black',\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n    borderWidth: 1,\r\n    borderRadius: 30,\r\n    borderColor: '#dadae8',\r\n  },\r\n  errorTextStyle: {\r\n    color: 'red',\r\n    textAlign: 'center',\r\n    fontSize: 14,\r\n  },\r\n  successTextStyle: {\r\n    color: 'black',\r\n    textAlign: 'center',\r\n    fontSize: 18,\r\n    padding: 30,\r\n  },\r\n  description: {\r\n    color: 'black',\r\n    textAlign: 'center',\r\n    fontSize: 18,\r\n    padding: 30,\r\n  },\r\n  label: {\r\n    color: 'black',\r\n    textAlign: 'center',\r\n    fontSize: 15,\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n  },\r\n  labelSection: {\r\n    justifyContent: 'center',\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n  },\r\n\r\n  text: {\r\n    fontSize: 20,\r\n    margin: 20,\r\n  },\r\n  input: {\r\n    width: '80%',\r\n    margin: 20,\r\n    borderWidth: 1,\r\n    borderColor: 'black',\r\n    borderRadius: 20,\r\n    height: 40,\r\n    padding: 10,\r\n  },\r\n  button: {\r\n    width: '80%',\r\n    margin: 20,\r\n    alignItems: 'center',\r\n    backgroundColor: '#b42bba',\r\n    height: 40,\r\n    borderRadius: 20,\r\n    borderColor: '#b42bba',\r\n    justifyContent: 'center',\r\n  },\r\n  buttonText: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    color: 'white',\r\n  },\r\n  containerDrop: {\r\n    minHeight: 128,\r\n    minWidth: 200,\r\n  },\r\n});\r\n","import { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { useTheme } from '@ui-kitten/components';\r\nimport { selectDarkMode } from '../../../app/appDataSlice';\r\nimport { useAppSelector } from '../../../app/hooks';\r\nimport BackButton from '../../../components/BackButton';\r\nimport SignupForm from './SignupForm';\r\nimport VerifyEmail from './VerifyEmail';\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nexport default function Signup() {\r\n  const theme = useTheme();\r\n  const darkMode = useAppSelector(selectDarkMode);\r\n\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={({ navigation }) => ({\r\n        headerStyle: {\r\n          backgroundColor: darkMode ? theme['color-basic-800'] : '#fff',\r\n        },\r\n        headerLeft: (props) => (\r\n          <BackButton {...props} navigation={navigation} />\r\n        ),\r\n      })}>\r\n      <Stack.Screen\r\n        name=\"SignupForm\"\r\n        component={SignupForm}\r\n        options={{ title: 'Signup' }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"VerifyEmail\"\r\n        component={VerifyEmail}\r\n        options={{ title: 'Verify Email' }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n","import { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { useTheme } from '@ui-kitten/components';\r\nimport { selectDarkMode } from '../../app/appDataSlice';\r\nimport { useAppSelector } from '../../app/hooks';\r\nimport BackButton from '../../components/BackButton';\r\nimport ForgotPassword from './ForgotPassword/index';\r\nimport Login from './Login';\r\nimport Signup from './Signup/index';\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nexport default function Auth() {\r\n  const theme = useTheme();\r\n  const darkMode = useAppSelector(selectDarkMode);\r\n\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={{\r\n        headerStyle: {\r\n          backgroundColor: darkMode ? theme['color-basic-800'] : '#fff',\r\n        },\r\n      }}>\r\n      <Stack.Screen\r\n        name=\"Login\"\r\n        component={Login}\r\n        options={{ headerShown: false }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"Signup\"\r\n        component={Signup}\r\n        options={{ headerShown: false }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"ForgotPassword\"\r\n        component={ForgotPassword}\r\n        options={{ title: 'Reset Password' }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n","import { Layout, Text } from '@ui-kitten/components';\r\nimport Constants from 'expo-constants';\r\n\r\ntype HeaderProps = {\r\n  accessoryLeft?: keyof JSX.IntrinsicElements | JSX.Element;\r\n  accessoryRight?: keyof JSX.IntrinsicElements | JSX.Element;\r\n  center?: keyof JSX.IntrinsicElements | JSX.Element;\r\n  title: string;\r\n  level?: '1' | '2' | '3' | '4';\r\n};\r\n\r\nexport default function Header({\r\n  accessoryLeft,\r\n  accessoryRight,\r\n  title,\r\n  center,\r\n  level = '1',\r\n}: HeaderProps) {\r\n  return (\r\n    <Layout\r\n      level={level}\r\n      style={{\r\n        paddingTop: Constants.statusBarHeight + 10,\r\n        width: '100%',\r\n        justifyContent: 'space-between',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        paddingHorizontal: 20,\r\n      }}>\r\n      <Layout level={level} style={{ flexDirection: 'row' }}>\r\n        {accessoryLeft}\r\n        <Text style={{ marginLeft: 10, fontSize: 20, fontWeight: '500' }}>\r\n          {title}\r\n        </Text>\r\n      </Layout>\r\n      {center}\r\n\r\n      {accessoryRight}\r\n    </Layout>\r\n  );\r\n}\r\n","export const DISCOVER_LIST_PAGE_SIZE = 5;\r\n\r\nexport const tagIndices = [\r\n  'Clubs',\r\n  'Events',\r\n  'College News',\r\n  'Courses',\r\n  'HMC',\r\n  'Pomona',\r\n  'CMC',\r\n  'Pitzer',\r\n  'Scripps',\r\n];\r\n\r\nexport const adminTagIndices = [\r\n  'Athena Network',\r\n  'Clubs',\r\n  'Events',\r\n  'College News',\r\n  'Courses',\r\n  'HMC',\r\n  'Pomona',\r\n  'CMC',\r\n  'Pitzer',\r\n  'Scripps',\r\n];\r\n\r\nexport const MAX_WIDTH_WEB = 700;\r\n\r\nexport const postOptions = ['Image Post', 'Text Post', 'Link', 'Event'];\r\n\r\nexport const IMAGE_BUCKET_URL =\r\n  'https://athena-image-storage.s3.us-west-2.amazonaws.com/imagePostImages';\r\n\r\nexport const EMOJI_LIST = [\r\n  '😀',\r\n  '😁',\r\n  '😂',\r\n  '🤣',\r\n  '😃',\r\n  '😄',\r\n  '😅',\r\n  '😆',\r\n  '😉',\r\n  '😊',\r\n  '😋',\r\n  '😎',\r\n  '😍',\r\n  '😘',\r\n  '😗',\r\n  '😙',\r\n  '😚',\r\n  '☺',\r\n  '🙂',\r\n  '🤗',\r\n  '🤔',\r\n  '😐',\r\n  '😑',\r\n  '😶',\r\n  '🙄',\r\n  '😏',\r\n  '😣',\r\n  '😥',\r\n  '😮',\r\n  '🤐',\r\n  '😯',\r\n  '😪',\r\n  '😫',\r\n  '😴',\r\n  '😌',\r\n  '🤓',\r\n  '😛',\r\n  '😜',\r\n  '😝',\r\n  '🤤',\r\n  '😒',\r\n  '😓',\r\n  '😔',\r\n  '😕',\r\n  '🙃',\r\n  '🤑',\r\n  '😲',\r\n  '☹',\r\n  '🙁',\r\n  '😖',\r\n  '😞',\r\n  '😟',\r\n  '😤',\r\n  '😢',\r\n  '😭',\r\n  '😦',\r\n  '😧',\r\n  '😨',\r\n  '😩',\r\n  '😬',\r\n  '😰',\r\n  '😱',\r\n  '😳',\r\n  '😵',\r\n  '😡',\r\n  '😠',\r\n  '😇',\r\n  '🤠',\r\n  '🤡',\r\n  '🤥',\r\n  '😷',\r\n  '🤒',\r\n  '🤕',\r\n  '🤢',\r\n  '🤧',\r\n  '😈',\r\n  '👿',\r\n  '👹',\r\n  '👺',\r\n  '💀',\r\n  '☠',\r\n  '👻',\r\n  '👽',\r\n  '👾',\r\n  '🤖',\r\n  '💩',\r\n  '😺',\r\n  '😸',\r\n  '😹',\r\n  '😻',\r\n  '😼',\r\n  '😽',\r\n  '🙀',\r\n  '😿',\r\n  '😾',\r\n  '🙈',\r\n  '🙉',\r\n  '🙊',\r\n  '👦',\r\n  '👦🏻',\r\n  '👦🏼',\r\n  '👦🏽',\r\n  '👦🏾',\r\n  '👦🏿',\r\n  '👧',\r\n  '👧🏻',\r\n  '👧🏼',\r\n  '👧🏽',\r\n  '👧🏾',\r\n  '👧🏿',\r\n  '👨',\r\n  '👨🏻',\r\n  '👨🏼',\r\n  '👨🏽',\r\n  '👨🏾',\r\n  '👨🏿',\r\n  '👩',\r\n  '👩🏻',\r\n  '👩🏼',\r\n  '👩🏽',\r\n  '👩🏾',\r\n  '👩🏿',\r\n  '👴',\r\n  '👴🏻',\r\n  '👴🏼',\r\n  '👴🏽',\r\n  '👴🏾',\r\n  '👴🏿',\r\n  '👵',\r\n  '👵🏻',\r\n  '👵🏼',\r\n  '👵🏽',\r\n  '👵🏾',\r\n  '👵🏿',\r\n  '👶',\r\n  '👶🏻',\r\n  '👶🏼',\r\n  '👶🏽',\r\n  '👶🏾',\r\n  '👶🏿',\r\n  '👼',\r\n  '👼🏻',\r\n  '👼🏼',\r\n  '👼🏽',\r\n  '👼🏾',\r\n  '👼🏿',\r\n  '👮',\r\n  '👮🏻',\r\n  '👮🏼',\r\n  '👮🏽',\r\n  '👮🏾',\r\n  '👮🏿',\r\n  '🕵',\r\n  '🕵🏻',\r\n  '🕵🏼',\r\n  '🕵🏽',\r\n  '🕵🏾',\r\n  '🕵🏿',\r\n  '💂',\r\n  '💂🏻',\r\n  '💂🏼',\r\n  '💂🏽',\r\n  '💂🏾',\r\n  '💂🏿',\r\n  '👷',\r\n  '👷🏻',\r\n  '👷🏼',\r\n  '👷🏽',\r\n  '👷🏾',\r\n  '👷🏿',\r\n  '👳',\r\n  '👳🏻',\r\n  '👳🏼',\r\n  '👳🏽',\r\n  '👳🏾',\r\n  '👳🏿',\r\n  '👱',\r\n  '👱🏻',\r\n  '👱🏼',\r\n  '👱🏽',\r\n  '👱🏾',\r\n  '👱🏿',\r\n  '🎅',\r\n  '🎅🏻',\r\n  '🎅🏼',\r\n  '🎅🏽',\r\n  '🎅🏾',\r\n  '🎅🏿',\r\n  '🤶',\r\n  '🤶🏻',\r\n  '🤶🏼',\r\n  '🤶🏽',\r\n  '🤶🏾',\r\n  '🤶🏿',\r\n  '👸',\r\n  '👸🏻',\r\n  '👸🏼',\r\n  '👸🏽',\r\n  '👸🏾',\r\n  '👸🏿',\r\n  '🤴',\r\n  '🤴🏻',\r\n  '🤴🏼',\r\n  '🤴🏽',\r\n  '🤴🏾',\r\n  '🤴🏿',\r\n  '👰',\r\n  '👰🏻',\r\n  '👰🏼',\r\n  '👰🏽',\r\n  '👰🏾',\r\n  '👰🏿',\r\n  '🤵',\r\n  '🤵🏻',\r\n  '🤵🏼',\r\n  '🤵🏽',\r\n  '🤵🏾',\r\n  '🤵🏿',\r\n  '🤰',\r\n  '🤰🏻',\r\n  '🤰🏼',\r\n  '🤰🏽',\r\n  '🤰🏾',\r\n  '🤰🏿',\r\n  '👲',\r\n  '👲🏻',\r\n  '👲🏼',\r\n  '👲🏽',\r\n  '👲🏾',\r\n  '👲🏿',\r\n  '🙍',\r\n  '🙍🏻',\r\n  '🙍🏼',\r\n  '🙍🏽',\r\n  '🙍🏾',\r\n  '🙍🏿',\r\n  '🙎',\r\n  '🙎🏻',\r\n  '🙎🏼',\r\n  '🙎🏽',\r\n  '🙎🏾',\r\n  '🙎🏿',\r\n  '🙅',\r\n  '🙅🏻',\r\n  '🙅🏼',\r\n  '🙅🏽',\r\n  '🙅🏾',\r\n  '🙅🏿',\r\n  '🙆',\r\n  '🙆🏻',\r\n  '🙆🏼',\r\n  '🙆🏽',\r\n  '🙆🏾',\r\n  '🙆🏿',\r\n  '💁',\r\n  '💁🏻',\r\n  '💁🏼',\r\n  '💁🏽',\r\n  '💁🏾',\r\n  '💁🏿',\r\n  '🙋',\r\n  '🙋🏻',\r\n  '🙋🏼',\r\n  '🙋🏽',\r\n  '🙋🏾',\r\n  '🙋🏿',\r\n  '🙇',\r\n  '🙇🏻',\r\n  '🙇🏼',\r\n  '🙇🏽',\r\n  '🙇🏾',\r\n  '🙇🏿',\r\n  '🤦',\r\n  '🤦🏻',\r\n  '🤦🏼',\r\n  '🤦🏽',\r\n  '🤦🏾',\r\n  '🤦🏿',\r\n  '🤷',\r\n  '🤷🏻',\r\n  '🤷🏼',\r\n  '🤷🏽',\r\n  '🤷🏾',\r\n  '🤷🏿',\r\n  '💆',\r\n  '💆🏻',\r\n  '💆🏼',\r\n  '💆🏽',\r\n  '💆🏾',\r\n  '💆🏿',\r\n  '💇',\r\n  '💇🏻',\r\n  '💇🏼',\r\n  '💇🏽',\r\n  '💇🏾',\r\n  '💇🏿',\r\n  '🚶',\r\n  '🚶🏻',\r\n  '🚶🏼',\r\n  '🚶🏽',\r\n  '🚶🏾',\r\n  '🚶🏿',\r\n  '🏃',\r\n  '🏃🏻',\r\n  '🏃🏼',\r\n  '🏃🏽',\r\n  '🏃🏾',\r\n  '🏃🏿',\r\n  '💃',\r\n  '💃🏻',\r\n  '💃🏼',\r\n  '💃🏽',\r\n  '💃🏾',\r\n  '💃🏿',\r\n  '🕺',\r\n  '🕺🏻',\r\n  '🕺🏼',\r\n  '🕺🏽',\r\n  '🕺🏾',\r\n  '🕺🏿',\r\n  '👯',\r\n  '🕴',\r\n  '🗣',\r\n  '👤',\r\n  '👥',\r\n  '🤺',\r\n  '🏇',\r\n  '⛷',\r\n  '🏂',\r\n  '🏌',\r\n  '🏄',\r\n  '🏄🏻',\r\n  '🏄🏼',\r\n  '🏄🏽',\r\n  '🏄🏾',\r\n  '🏄🏿',\r\n  '🚣',\r\n  '🚣🏻',\r\n  '🚣🏼',\r\n  '🚣🏽',\r\n  '🚣🏾',\r\n  '🚣🏿',\r\n  '🏊',\r\n  '🏊🏻',\r\n  '🏊🏼',\r\n  '🏊🏽',\r\n  '🏊🏾',\r\n  '🏊🏿',\r\n  '⛹',\r\n  '⛹🏻',\r\n  '⛹🏼',\r\n  '⛹🏽',\r\n  '⛹🏾',\r\n  '⛹🏿',\r\n  '🏋',\r\n  '🏋🏻',\r\n  '🏋🏼',\r\n  '🏋🏽',\r\n  '🏋🏾',\r\n  '🏋🏿',\r\n  '🚴',\r\n  '🚴🏻',\r\n  '🚴🏼',\r\n  '🚴🏽',\r\n  '🚴🏾',\r\n  '🚴🏿',\r\n  '🚵',\r\n  '🚵🏻',\r\n  '🚵🏼',\r\n  '🚵🏽',\r\n  '🚵🏾',\r\n  '🚵🏿',\r\n  '🏎',\r\n  '🏍',\r\n  '🤸',\r\n  '🤸🏻',\r\n  '🤸🏼',\r\n  '🤸🏽',\r\n  '🤸🏾',\r\n  '🤸🏿',\r\n  '🤼',\r\n  '🤼🏻',\r\n  '🤼🏼',\r\n  '🤼🏽',\r\n  '🤼🏾',\r\n  '🤼🏿',\r\n  '🤽',\r\n  '🤽🏻',\r\n  '🤽🏼',\r\n  '🤽🏽',\r\n  '🤽🏾',\r\n  '🤽🏿',\r\n  '🤾',\r\n  '🤾🏻',\r\n  '🤾🏼',\r\n  '🤾🏽',\r\n  '🤾🏾',\r\n  '🤾🏿',\r\n  '🤹',\r\n  '🤹🏻',\r\n  '🤹🏼',\r\n  '🤹🏽',\r\n  '🤹🏾',\r\n  '🤹🏿',\r\n  '👫',\r\n  '👬',\r\n  '👭',\r\n  '💏',\r\n  '👩‍❤️‍💋‍👨',\r\n  '👨‍❤️‍💋‍👨',\r\n  '👩‍❤️‍💋‍👩',\r\n  '💑',\r\n  '👩‍❤️‍👨',\r\n  '👨‍❤️‍👨',\r\n  '👩‍❤️‍👩',\r\n  '👪',\r\n  '👨‍👩‍👦',\r\n  '👨‍👩‍👧',\r\n  '👨‍👩‍👧‍👦',\r\n  '👨‍👩‍👦‍👦',\r\n  '👨‍👩‍👧‍👧',\r\n  '👨‍👨‍👦',\r\n  '👨‍👨‍👧',\r\n  '👨‍👨‍👧‍👦',\r\n  '👨‍👨‍👦‍👦',\r\n  '👨‍👨‍👧‍👧',\r\n  '👩‍👩‍👦',\r\n  '👩‍👩‍👧',\r\n  '👩‍👩‍👧‍👦',\r\n  '👩‍👩‍👦‍👦',\r\n  '👩‍👩‍👧‍👧',\r\n  '🏻',\r\n  '🏼',\r\n  '🏽',\r\n  '🏾',\r\n  '🏿',\r\n  '💪',\r\n  '💪🏻',\r\n  '💪🏼',\r\n  '💪🏽',\r\n  '💪🏾',\r\n  '💪🏿',\r\n  '🤳',\r\n  '🤳🏻',\r\n  '🤳🏼',\r\n  '🤳🏽',\r\n  '🤳🏾',\r\n  '🤳🏿',\r\n  '👈',\r\n  '👈🏻',\r\n  '👈🏼',\r\n  '👈🏽',\r\n  '👈🏾',\r\n  '👈🏿',\r\n  '👉',\r\n  '👉🏻',\r\n  '👉🏼',\r\n  '👉🏽',\r\n  '👉🏾',\r\n  '👉🏿',\r\n  '☝',\r\n  '☝🏻',\r\n  '☝🏼',\r\n  '☝🏽',\r\n  '☝🏾',\r\n  '☝🏿',\r\n  '👆',\r\n  '👆🏻',\r\n  '👆🏼',\r\n  '👆🏽',\r\n  '👆🏾',\r\n  '👆🏿',\r\n  '🖕',\r\n  '🖕🏻',\r\n  '🖕🏼',\r\n  '🖕🏽',\r\n  '🖕🏾',\r\n  '🖕🏿',\r\n  '👇',\r\n  '👇🏻',\r\n  '👇🏼',\r\n  '👇🏽',\r\n  '👇🏾',\r\n  '👇🏿',\r\n  '✌',\r\n  '✌🏻',\r\n  '✌🏼',\r\n  '✌🏽',\r\n  '✌🏾',\r\n  '✌🏿',\r\n  '🤞',\r\n  '🤞🏻',\r\n  '🤞🏼',\r\n  '🤞🏽',\r\n  '🤞🏾',\r\n  '🤞🏿',\r\n  '🖖',\r\n  '🖖🏻',\r\n  '🖖🏼',\r\n  '🖖🏽',\r\n  '🖖🏾',\r\n  '🖖🏿',\r\n  '🤘',\r\n  '🤘🏻',\r\n  '🤘🏼',\r\n  '🤘🏽',\r\n  '🤘🏾',\r\n  '🤘🏿',\r\n  '🤙',\r\n  '🤙🏻',\r\n  '🤙🏼',\r\n  '🤙🏽',\r\n  '🤙🏾',\r\n  '🤙🏿',\r\n  '🖐',\r\n  '🖐🏻',\r\n  '🖐🏼',\r\n  '🖐🏽',\r\n  '🖐🏾',\r\n  '🖐🏿',\r\n  '✋',\r\n  '✋🏻',\r\n  '✋🏼',\r\n  '✋🏽',\r\n  '✋🏾',\r\n  '✋🏿',\r\n  '👌',\r\n  '👌🏻',\r\n  '👌🏼',\r\n  '👌🏽',\r\n  '👌🏾',\r\n  '👌🏿',\r\n  '👍',\r\n  '👍🏻',\r\n  '👍🏼',\r\n  '👍🏽',\r\n  '👍🏾',\r\n  '👍🏿',\r\n  '👎',\r\n  '👎🏻',\r\n  '👎🏼',\r\n  '👎🏽',\r\n  '👎🏾',\r\n  '👎🏿',\r\n  '✊',\r\n  '✊🏻',\r\n  '✊🏼',\r\n  '✊🏽',\r\n  '✊🏾',\r\n  '✊🏿',\r\n  '👊',\r\n  '👊🏻',\r\n  '👊🏼',\r\n  '👊🏽',\r\n  '👊🏾',\r\n  '👊🏿',\r\n  '🤛',\r\n  '🤛🏻',\r\n  '🤛🏼',\r\n  '🤛🏽',\r\n  '🤛🏾',\r\n  '🤛🏿',\r\n  '🤜',\r\n  '🤜🏻',\r\n  '🤜🏼',\r\n  '🤜🏽',\r\n  '🤜🏾',\r\n  '🤜🏿',\r\n  '🤚',\r\n  '🤚🏻',\r\n  '🤚🏼',\r\n  '🤚🏽',\r\n  '🤚🏾',\r\n  '🤚🏿',\r\n  '👋',\r\n  '👋🏻',\r\n  '👋🏼',\r\n  '👋🏽',\r\n  '👋🏾',\r\n  '👋🏿',\r\n  '👏',\r\n  '👏🏻',\r\n  '👏🏼',\r\n  '👏🏽',\r\n  '👏🏾',\r\n  '👏🏿',\r\n  '✍',\r\n  '✍🏻',\r\n  '✍🏼',\r\n  '✍🏽',\r\n  '✍🏾',\r\n  '✍🏿',\r\n  '👐',\r\n  '👐🏻',\r\n  '👐🏼',\r\n  '👐🏽',\r\n  '👐🏾',\r\n  '👐🏿',\r\n  '🙌',\r\n  '🙌🏻',\r\n  '🙌🏼',\r\n  '🙌🏽',\r\n  '🙌🏾',\r\n  '🙌🏿',\r\n  '🙏',\r\n  '🙏🏻',\r\n  '🙏🏼',\r\n  '🙏🏽',\r\n  '🙏🏾',\r\n  '🙏🏿',\r\n  '🤝',\r\n  '🤝🏻',\r\n  '🤝🏼',\r\n  '🤝🏽',\r\n  '🤝🏾',\r\n  '🤝🏿',\r\n  '💅',\r\n  '💅🏻',\r\n  '💅🏼',\r\n  '💅🏽',\r\n  '💅🏾',\r\n  '💅🏿',\r\n  '👂',\r\n  '👂🏻',\r\n  '👂🏼',\r\n  '👂🏽',\r\n  '👂🏾',\r\n  '👂🏿',\r\n  '👃',\r\n  '👃🏻',\r\n  '👃🏼',\r\n  '👃🏽',\r\n  '👃🏾',\r\n  '👃🏿',\r\n  '👣',\r\n  '👀',\r\n  '👁',\r\n  '👁‍🗨',\r\n  '👅',\r\n  '👄',\r\n  '💋',\r\n  '💘',\r\n  '❤',\r\n  '💓',\r\n  '💔',\r\n  '💕',\r\n  '💖',\r\n  '💗',\r\n  '💙',\r\n  '💚',\r\n  '💛',\r\n  '💜',\r\n  '🖤',\r\n  '💝',\r\n  '💞',\r\n  '💟',\r\n  '❣',\r\n  '💌',\r\n  '💤',\r\n  '💢',\r\n  '💣',\r\n  '💥',\r\n  '💦',\r\n  '💨',\r\n  '💫',\r\n  '💬',\r\n  '🗨',\r\n  '🗯',\r\n  '💭',\r\n  '🕳',\r\n  '👓',\r\n  '🕶',\r\n  '👔',\r\n  '👕',\r\n  '👖',\r\n  '👗',\r\n  '👘',\r\n  '👙',\r\n  '👚',\r\n  '👛',\r\n  '👜',\r\n  '👝',\r\n  '🛍',\r\n  '🎒',\r\n  '👞',\r\n  '👟',\r\n  '👠',\r\n  '👡',\r\n  '👢',\r\n  '👑',\r\n  '👒',\r\n  '🎩',\r\n  '🎓',\r\n  '⛑',\r\n  '📿',\r\n  '💄',\r\n  '💍',\r\n  '💎',\r\n  '🐵',\r\n  '🐒',\r\n  '🦍',\r\n  '🐶',\r\n  '🐕',\r\n  '🐩',\r\n  '🐺',\r\n  '🦊',\r\n  '🐱',\r\n  '🐈',\r\n  '🦁',\r\n  '🐯',\r\n  '🐅',\r\n  '🐆',\r\n  '🐴',\r\n  '🐎',\r\n  '🦌',\r\n  '🦄',\r\n  '🐮',\r\n  '🐂',\r\n  '🐃',\r\n  '🐄',\r\n  '🐷',\r\n  '🐖',\r\n  '🐗',\r\n  '🐽',\r\n  '🐏',\r\n  '🐑',\r\n  '🐐',\r\n  '🐪',\r\n  '🐫',\r\n  '🐘',\r\n  '🦏',\r\n  '🐭',\r\n  '🐁',\r\n  '🐀',\r\n  '🐹',\r\n  '🐰',\r\n  '🐇',\r\n  '🐿',\r\n  '🦇',\r\n  '🐻',\r\n  '🐨',\r\n  '🐼',\r\n  '🐾',\r\n  '🦃',\r\n  '🐔',\r\n  '🐓',\r\n  '🐣',\r\n  '🐤',\r\n  '🐥',\r\n  '🐦',\r\n  '🐧',\r\n  '🕊',\r\n  '🦅',\r\n  '🦆',\r\n  '🦉',\r\n  '🐸',\r\n  '🐊',\r\n  '🐢',\r\n  '🦎',\r\n  '🐍',\r\n  '🐲',\r\n  '🐉',\r\n  '🐳',\r\n  '🐋',\r\n  '🐬',\r\n  '🐟',\r\n  '🐠',\r\n  '🐡',\r\n  '🦈',\r\n  '🐙',\r\n  '🐚',\r\n  '🦀',\r\n  '🦐',\r\n  '🦑',\r\n  '🦋',\r\n  '🐌',\r\n  '🐛',\r\n  '🐜',\r\n  '🐝',\r\n  '🐞',\r\n  '🕷',\r\n  '🕸',\r\n  '🦂',\r\n  '💐',\r\n  '🌸',\r\n  '💮',\r\n  '🏵',\r\n  '🌹',\r\n  '🥀',\r\n  '🌺',\r\n  '🌻',\r\n  '🌼',\r\n  '🌷',\r\n  '🌱',\r\n  '🌲',\r\n  '🌳',\r\n  '🌴',\r\n  '🌵',\r\n  '🌾',\r\n  '🌿',\r\n  '☘',\r\n  '🍀',\r\n  '🍁',\r\n  '🍂',\r\n  '🍃',\r\n  '🍇',\r\n  '🍈',\r\n  '🍉',\r\n  '🍊',\r\n  '🍋',\r\n  '🍌',\r\n  '🍍',\r\n  '🍎',\r\n  '🍏',\r\n  '🍐',\r\n  '🍑',\r\n  '🍒',\r\n  '🍓',\r\n  '🥝',\r\n  '🍅',\r\n  '🥑',\r\n  '🍆',\r\n  '🥔',\r\n  '🥕',\r\n  '🌽',\r\n  '🌶',\r\n  '🥒',\r\n  '🍄',\r\n  '🥜',\r\n  '🌰',\r\n  '🍞',\r\n  '🥐',\r\n  '🥖',\r\n  '🥞',\r\n  '🧀',\r\n  '🍖',\r\n  '🍗',\r\n  '🥓',\r\n  '🍔',\r\n  '🍟',\r\n  '🍕',\r\n  '🌭',\r\n  '🌮',\r\n  '🌯',\r\n  '🥙',\r\n  '🥚',\r\n  '🍳',\r\n  '🥘',\r\n  '🍲',\r\n  '🥗',\r\n  '🍿',\r\n  '🍱',\r\n  '🍘',\r\n  '🍙',\r\n  '🍚',\r\n  '🍛',\r\n  '🍜',\r\n  '🍝',\r\n  '🍠',\r\n  '🍢',\r\n  '🍣',\r\n  '🍤',\r\n  '🍥',\r\n  '🍡',\r\n  '🍦',\r\n  '🍧',\r\n  '🍨',\r\n  '🍩',\r\n  '🍪',\r\n  '🎂',\r\n  '🍰',\r\n  '🍫',\r\n  '🍬',\r\n  '🍭',\r\n  '🍮',\r\n  '🍯',\r\n  '🍼',\r\n  '🥛',\r\n  '☕',\r\n  '🍵',\r\n  '🍶',\r\n  '🍾',\r\n  '🍷',\r\n  '🍸',\r\n  '🍹',\r\n  '🍺',\r\n  '🍻',\r\n  '🥂',\r\n  '🥃',\r\n  '🍽',\r\n  '🍴',\r\n  '🥄',\r\n  '🔪',\r\n  '🏺',\r\n  '🌍',\r\n  '🌎',\r\n  '🌏',\r\n  '🌐',\r\n  '🗺',\r\n  '🗾',\r\n  '🏔',\r\n  '⛰',\r\n  '🌋',\r\n  '🗻',\r\n  '🏕',\r\n  '🏖',\r\n  '🏜',\r\n  '🏝',\r\n  '🏞',\r\n  '🏟',\r\n  '🏛',\r\n  '🏗',\r\n  '🏘',\r\n  '🏙',\r\n  '🏚',\r\n  '🏠',\r\n  '🏡',\r\n  '🏢',\r\n  '🏣',\r\n  '🏤',\r\n  '🏥',\r\n  '🏦',\r\n  '🏨',\r\n  '🏩',\r\n  '🏪',\r\n  '🏫',\r\n  '🏬',\r\n  '🏭',\r\n  '🏯',\r\n  '🏰',\r\n  '💒',\r\n  '🗼',\r\n  '🗽',\r\n  '⛪',\r\n  '🕌',\r\n  '🕍',\r\n  '⛩',\r\n  '🕋',\r\n  '⛲',\r\n  '⛺',\r\n  '🌁',\r\n  '🌃',\r\n  '🌄',\r\n  '🌅',\r\n  '🌆',\r\n  '🌇',\r\n  '🌉',\r\n  '♨',\r\n  '🌌',\r\n  '🎠',\r\n  '🎡',\r\n  '🎢',\r\n  '💈',\r\n  '🎪',\r\n  '🎭',\r\n  '🖼',\r\n  '🎨',\r\n  '🎰',\r\n  '🚂',\r\n  '🚃',\r\n  '🚄',\r\n  '🚅',\r\n  '🚆',\r\n  '🚇',\r\n  '🚈',\r\n  '🚉',\r\n  '🚊',\r\n  '🚝',\r\n  '🚞',\r\n  '🚋',\r\n  '🚌',\r\n  '🚍',\r\n  '🚎',\r\n  '🚐',\r\n  '🚑',\r\n  '🚒',\r\n  '🚓',\r\n  '🚔',\r\n  '🚕',\r\n  '🚖',\r\n  '🚗',\r\n  '🚘',\r\n  '🚙',\r\n  '🚚',\r\n  '🚛',\r\n  '🚜',\r\n  '🚲',\r\n  '🛴',\r\n  '🛵',\r\n  '🚏',\r\n  '🛣',\r\n  '🛤',\r\n  '⛽',\r\n  '🚨',\r\n  '🚥',\r\n  '🚦',\r\n  '🚧',\r\n  '🛑',\r\n  '⚓',\r\n  '⛵',\r\n  '🛶',\r\n  '🚤',\r\n  '🛳',\r\n  '⛴',\r\n  '🛥',\r\n  '🚢',\r\n  '✈',\r\n  '🛩',\r\n  '🛫',\r\n  '🛬',\r\n  '💺',\r\n  '🚁',\r\n  '🚟',\r\n  '🚠',\r\n  '🚡',\r\n  '🚀',\r\n  '🛰',\r\n  '🛎',\r\n  '🚪',\r\n  '🛌',\r\n  '🛏',\r\n  '🛋',\r\n  '🚽',\r\n  '🚿',\r\n  '🛀',\r\n  '🛀🏻',\r\n  '🛀🏼',\r\n  '🛀🏽',\r\n  '🛀🏾',\r\n  '🛀🏿',\r\n  '🛁',\r\n  '⌛',\r\n  '⏳',\r\n  '⌚',\r\n  '⏰',\r\n  '⏱',\r\n  '⏲',\r\n  '🕰',\r\n  '🕛',\r\n  '🕧',\r\n  '🕐',\r\n  '🕜',\r\n  '🕑',\r\n  '🕝',\r\n  '🕒',\r\n  '🕞',\r\n  '🕓',\r\n  '🕟',\r\n  '🕔',\r\n  '🕠',\r\n  '🕕',\r\n  '🕡',\r\n  '🕖',\r\n  '🕢',\r\n  '🕗',\r\n  '🕣',\r\n  '🕘',\r\n  '🕤',\r\n  '🕙',\r\n  '🕥',\r\n  '🕚',\r\n  '🕦',\r\n  '🌑',\r\n  '🌒',\r\n  '🌓',\r\n  '🌔',\r\n  '🌕',\r\n  '🌖',\r\n  '🌗',\r\n  '🌘',\r\n  '🌙',\r\n  '🌚',\r\n  '🌛',\r\n  '🌜',\r\n  '🌡',\r\n  '☀',\r\n  '🌝',\r\n  '🌞',\r\n  '⭐',\r\n  '🌟',\r\n  '🌠',\r\n  '☁',\r\n  '⛅',\r\n  '⛈',\r\n  '🌤',\r\n  '🌥',\r\n  '🌦',\r\n  '🌧',\r\n  '🌨',\r\n  '🌩',\r\n  '🌪',\r\n  '🌫',\r\n  '🌬',\r\n  '🌀',\r\n  '🌈',\r\n  '🌂',\r\n  '☂',\r\n  '☔',\r\n  '⛱',\r\n  '⚡',\r\n  '❄',\r\n  '☃',\r\n  '⛄',\r\n  '☄',\r\n  '🔥',\r\n  '💧',\r\n  '🌊',\r\n  '🎃',\r\n  '🎄',\r\n  '🎆',\r\n  '🎇',\r\n  '✨',\r\n  '🎈',\r\n  '🎉',\r\n  '🎊',\r\n  '🎋',\r\n  '🎍',\r\n  '🎎',\r\n  '🎏',\r\n  '🎐',\r\n  '🎑',\r\n  '🎀',\r\n  '🎁',\r\n  '🎗',\r\n  '🎟',\r\n  '🎫',\r\n  '🎖',\r\n  '🏆',\r\n  '🏅',\r\n  '🥇',\r\n  '🥈',\r\n  '🥉',\r\n  '⚽',\r\n  '⚾',\r\n  '🏀',\r\n  '🏐',\r\n  '🏈',\r\n  '🏉',\r\n  '🎾',\r\n  '🎱',\r\n  '🎳',\r\n  '🏏',\r\n  '🏑',\r\n  '🏒',\r\n  '🏓',\r\n  '🏸',\r\n  '🥊',\r\n  '🥋',\r\n  '🥅',\r\n  '🎯',\r\n  '⛳',\r\n  '⛸',\r\n  '🎣',\r\n  '🎽',\r\n  '🎿',\r\n  '🎮',\r\n  '🕹',\r\n  '🎲',\r\n  '♠',\r\n  '♥',\r\n  '♦',\r\n  '♣',\r\n  '🃏',\r\n  '🀄',\r\n  '🎴',\r\n  '🔇',\r\n  '🔈',\r\n  '🔉',\r\n  '🔊',\r\n  '📢',\r\n  '📣',\r\n  '📯',\r\n  '🔔',\r\n  '🔕',\r\n  '🎼',\r\n  '🎵',\r\n  '🎶',\r\n  '🎙',\r\n  '🎚',\r\n  '🎛',\r\n  '🎤',\r\n  '🎧',\r\n  '📻',\r\n  '🎷',\r\n  '🎸',\r\n  '🎹',\r\n  '🎺',\r\n  '🎻',\r\n  '🥁',\r\n  '📱',\r\n  '📲',\r\n  '☎',\r\n  '📞',\r\n  '📟',\r\n  '📠',\r\n  '🔋',\r\n  '🔌',\r\n  '💻',\r\n  '🖥',\r\n  '🖨',\r\n  '⌨',\r\n  '🖱',\r\n  '🖲',\r\n  '💽',\r\n  '💾',\r\n  '💿',\r\n  '📀',\r\n  '🎥',\r\n  '🎞',\r\n  '📽',\r\n  '🎬',\r\n  '📺',\r\n  '📷',\r\n  '📸',\r\n  '📹',\r\n  '📼',\r\n  '🔍',\r\n  '🔎',\r\n  '🔬',\r\n  '🔭',\r\n  '📡',\r\n  '🕯',\r\n  '💡',\r\n  '🔦',\r\n  '🏮',\r\n  '📔',\r\n  '📕',\r\n  '📖',\r\n  '📗',\r\n  '📘',\r\n  '📙',\r\n  '📚',\r\n  '📓',\r\n  '📒',\r\n  '📃',\r\n  '📜',\r\n  '📄',\r\n  '📰',\r\n  '🗞',\r\n  '📑',\r\n  '🔖',\r\n  '🏷',\r\n  '💰',\r\n  '💴',\r\n  '💵',\r\n  '💶',\r\n  '💷',\r\n  '💸',\r\n  '💳',\r\n  '💹',\r\n  '💱',\r\n  '💲',\r\n  '✉',\r\n  '📧',\r\n  '📨',\r\n  '📩',\r\n  '📤',\r\n  '📥',\r\n  '📦',\r\n  '📫',\r\n  '📪',\r\n  '📬',\r\n  '📭',\r\n  '📮',\r\n  '🗳',\r\n  '✏',\r\n  '✒',\r\n  '🖋',\r\n  '🖊',\r\n  '🖌',\r\n  '🖍',\r\n  '📝',\r\n  '💼',\r\n  '📁',\r\n  '📂',\r\n  '🗂',\r\n  '📅',\r\n  '📆',\r\n  '🗒',\r\n  '🗓',\r\n  '📇',\r\n  '📈',\r\n  '📉',\r\n  '📊',\r\n  '📋',\r\n  '📌',\r\n  '📍',\r\n  '📎',\r\n  '🖇',\r\n  '📏',\r\n  '📐',\r\n  '✂',\r\n  '🗃',\r\n  '🗄',\r\n  '🗑',\r\n  '🔒',\r\n  '🔓',\r\n  '🔏',\r\n  '🔐',\r\n  '🔑',\r\n  '🗝',\r\n  '🔨',\r\n  '⛏',\r\n  '⚒',\r\n  '🛠',\r\n  '🗡',\r\n  '⚔',\r\n  '🔫',\r\n  '🏹',\r\n  '🛡',\r\n  '🔧',\r\n  '🔩',\r\n  '⚙',\r\n  '🗜',\r\n  '⚗',\r\n  '⚖',\r\n  '🔗',\r\n  '⛓',\r\n  '💉',\r\n  '💊',\r\n  '🚬',\r\n  '⚰',\r\n  '⚱',\r\n  '🗿',\r\n  '🛢',\r\n  '🔮',\r\n  '🛒',\r\n  '🏧',\r\n  '🚮',\r\n  '🚰',\r\n  '♿',\r\n  '🚹',\r\n  '🚺',\r\n  '🚻',\r\n  '🚼',\r\n  '🚾',\r\n  '🛂',\r\n  '🛃',\r\n  '🛄',\r\n  '🛅',\r\n  '⚠',\r\n  '🚸',\r\n  '⛔',\r\n  '🚫',\r\n  '🚳',\r\n  '🚭',\r\n  '🚯',\r\n  '🚱',\r\n  '🚷',\r\n  '📵',\r\n  '🔞',\r\n  '☢',\r\n  '☣',\r\n  '⬆',\r\n  '↗',\r\n  '➡',\r\n  '↘',\r\n  '⬇',\r\n  '↙',\r\n  '⬅',\r\n  '↖',\r\n  '↕',\r\n  '↔',\r\n  '↩',\r\n  '↪',\r\n  '⤴',\r\n  '⤵',\r\n  '🔃',\r\n  '🔄',\r\n  '🔙',\r\n  '🔚',\r\n  '🔛',\r\n  '🔜',\r\n  '🔝',\r\n  '🛐',\r\n  '⚛',\r\n  '🕉',\r\n  '✡',\r\n  '☸',\r\n  '☯',\r\n  '✝',\r\n  '☦',\r\n  '☪',\r\n  '☮',\r\n  '🕎',\r\n  '🔯',\r\n  '♈',\r\n  '♉',\r\n  '♊',\r\n  '♋',\r\n  '♌',\r\n  '♍',\r\n  '♎',\r\n  '♏',\r\n  '♐',\r\n  '♑',\r\n  '♒',\r\n  '♓',\r\n  '⛎',\r\n  '🔀',\r\n  '🔁',\r\n  '🔂',\r\n  '▶',\r\n  '⏩',\r\n  '⏭',\r\n  '⏯',\r\n  '◀',\r\n  '⏪',\r\n  '⏮',\r\n  '🔼',\r\n  '⏫',\r\n  '🔽',\r\n  '⏬',\r\n  '⏸',\r\n  '⏹',\r\n  '⏺',\r\n  '⏏',\r\n  '🎦',\r\n  '🔅',\r\n  '🔆',\r\n  '📶',\r\n  '📳',\r\n  '📴',\r\n  '♻',\r\n  '📛',\r\n  '⚜',\r\n  '🔰',\r\n  '🔱',\r\n  '⭕',\r\n  '✅',\r\n  '☑',\r\n  '✔',\r\n  '✖',\r\n  '❌',\r\n  '❎',\r\n  '➕',\r\n  '➖',\r\n  '➗',\r\n  '➰',\r\n  '➿',\r\n  '〽',\r\n  '✳',\r\n  '✴',\r\n  '❇',\r\n  '‼',\r\n  '⁉',\r\n  '❓',\r\n  '❔',\r\n  '❕',\r\n  '❗',\r\n  '〰',\r\n  '©',\r\n  '®',\r\n  '™',\r\n  '#️⃣',\r\n  '*️⃣',\r\n  '0️⃣',\r\n  '1️⃣',\r\n  '2️⃣',\r\n  '3️⃣',\r\n  '4️⃣',\r\n  '5️⃣',\r\n  '6️⃣',\r\n  '7️⃣',\r\n  '8️⃣',\r\n  '9️⃣',\r\n  '🔟',\r\n  '💯',\r\n  '🔠',\r\n  '🔡',\r\n  '🔢',\r\n  '🔣',\r\n  '🔤',\r\n  '🅰',\r\n  '🆎',\r\n  '🅱',\r\n  '🆑',\r\n  '🆒',\r\n  '🆓',\r\n  'ℹ',\r\n  '🆔',\r\n  'Ⓜ',\r\n  '🆕',\r\n  '🆖',\r\n  '🅾',\r\n  '🆗',\r\n  '🅿',\r\n  '🆘',\r\n  '🆙',\r\n  '🆚',\r\n  '🈁',\r\n  '🈂',\r\n  '🈷',\r\n  '🈶',\r\n  '🈯',\r\n  '🉐',\r\n  '🈹',\r\n  '🈚',\r\n  '🈲',\r\n  '🉑',\r\n  '🈸',\r\n  '🈴',\r\n  '🈳',\r\n  '㊗',\r\n  '㊙',\r\n  '🈺',\r\n  '🈵',\r\n  '▪',\r\n  '▫',\r\n  '◻',\r\n  '◼',\r\n  '◽',\r\n  '◾',\r\n  '⬛',\r\n  '⬜',\r\n  '🔶',\r\n  '🔷',\r\n  '🔸',\r\n  '🔹',\r\n  '🔺',\r\n  '🔻',\r\n  '💠',\r\n  '🔘',\r\n  '🔲',\r\n  '🔳',\r\n  '⚪',\r\n  '⚫',\r\n  '🔴',\r\n  '🔵',\r\n  '🏁',\r\n  '🚩',\r\n  '🎌',\r\n  '🏴',\r\n  '🏳',\r\n  '🇦🇨',\r\n  '🇦🇩',\r\n  '🇦🇪',\r\n  '🇦🇫',\r\n  '🇦🇬',\r\n  '🇦🇮',\r\n  '🇦🇱',\r\n  '🇦🇲',\r\n  '🇦🇴',\r\n  '🇦🇶',\r\n  '🇦🇷',\r\n  '🇦🇸',\r\n  '🇦🇹',\r\n  '🇦🇺',\r\n  '🇦🇼',\r\n  '🇦🇽',\r\n  '🇦🇿',\r\n  '🇧🇦',\r\n  '🇧🇧',\r\n  '🇧🇩',\r\n  '🇧🇪',\r\n  '🇧🇫',\r\n  '🇧🇬',\r\n  '🇧🇭',\r\n  '🇧🇮',\r\n  '🇧🇯',\r\n  '🇧🇱',\r\n  '🇧🇲',\r\n  '🇧🇳',\r\n  '🇧🇴',\r\n  '🇧🇶',\r\n  '🇧🇷',\r\n  '🇧🇸',\r\n  '🇧🇹',\r\n  '🇧🇻',\r\n  '🇧🇼',\r\n  '🇧🇾',\r\n  '🇧🇿',\r\n  '🇨🇦',\r\n  '🇨🇨',\r\n  '🇨🇩',\r\n  '🇨🇫',\r\n  '🇨🇬',\r\n  '🇨🇭',\r\n  '🇨🇮',\r\n  '🇨🇰',\r\n  '🇨🇱',\r\n  '🇨🇲',\r\n  '🇨🇳',\r\n  '🇨🇴',\r\n  '🇨🇵',\r\n  '🇨🇷',\r\n  '🇨🇺',\r\n  '🇨🇻',\r\n  '🇨🇼',\r\n  '🇨🇽',\r\n  '🇨🇾',\r\n  '🇨🇿',\r\n  '🇩🇪',\r\n  '🇩🇬',\r\n  '🇩🇯',\r\n  '🇩🇰',\r\n  '🇩🇲',\r\n  '🇩🇴',\r\n  '🇩🇿',\r\n  '🇪🇦',\r\n  '🇪🇨',\r\n  '🇪🇪',\r\n  '🇪🇬',\r\n  '🇪🇭',\r\n  '🇪🇷',\r\n  '🇪🇸',\r\n  '🇪🇹',\r\n  '🇪🇺',\r\n  '🇫🇮',\r\n  '🇫🇯',\r\n  '🇫🇰',\r\n  '🇫🇲',\r\n  '🇫🇴',\r\n  '🇫🇷',\r\n  '🇬🇦',\r\n  '🇬🇧',\r\n  '🇬🇩',\r\n  '🇬🇪',\r\n  '🇬🇫',\r\n  '🇬🇬',\r\n  '🇬🇭',\r\n  '🇬🇮',\r\n  '🇬🇱',\r\n  '🇬🇲',\r\n  '🇬🇳',\r\n  '🇬🇵',\r\n  '🇬🇶',\r\n  '🇬🇷',\r\n  '🇬🇸',\r\n  '🇬🇹',\r\n  '🇬🇺',\r\n  '🇬🇼',\r\n  '🇬🇾',\r\n  '🇭🇰',\r\n  '🇭🇲',\r\n  '🇭🇳',\r\n  '🇭🇷',\r\n  '🇭🇹',\r\n  '🇭🇺',\r\n  '🇮🇨',\r\n  '🇮🇩',\r\n  '🇮🇪',\r\n  '🇮🇱',\r\n  '🇮🇲',\r\n  '🇮🇳',\r\n  '🇮🇴',\r\n  '🇮🇶',\r\n  '🇮🇷',\r\n  '🇮🇸',\r\n  '🇮🇹',\r\n  '🇯🇪',\r\n  '🇯🇲',\r\n  '🇯🇴',\r\n  '🇯🇵',\r\n  '🇰🇪',\r\n  '🇰🇬',\r\n  '🇰🇭',\r\n  '🇰🇮',\r\n  '🇰🇲',\r\n  '🇰🇳',\r\n  '🇰🇵',\r\n  '🇰🇷',\r\n  '🇰🇼',\r\n  '🇰🇾',\r\n  '🇰🇿',\r\n  '🇱🇦',\r\n  '🇱🇧',\r\n  '🇱🇨',\r\n  '🇱🇮',\r\n  '🇱🇰',\r\n  '🇱🇷',\r\n  '🇱🇸',\r\n  '🇱🇹',\r\n  '🇱🇺',\r\n  '🇱🇻',\r\n  '🇱🇾',\r\n  '🇲🇦',\r\n  '🇲🇨',\r\n  '🇲🇩',\r\n  '🇲🇪',\r\n  '🇲🇫',\r\n  '🇲🇬',\r\n  '🇲🇭',\r\n  '🇲🇰',\r\n  '🇲🇱',\r\n  '🇲🇲',\r\n  '🇲🇳',\r\n  '🇲🇴',\r\n  '🇲🇵',\r\n  '🇲🇶',\r\n  '🇲🇷',\r\n  '🇲🇸',\r\n  '🇲🇹',\r\n  '🇲🇺',\r\n  '🇲🇻',\r\n  '🇲🇼',\r\n  '🇲🇽',\r\n  '🇲🇾',\r\n  '🇲🇿',\r\n  '🇳🇦',\r\n  '🇳🇨',\r\n  '🇳🇪',\r\n  '🇳🇫',\r\n  '🇳🇬',\r\n  '🇳🇮',\r\n  '🇳🇱',\r\n  '🇳🇴',\r\n  '🇳🇵',\r\n  '🇳🇷',\r\n  '🇳🇺',\r\n  '🇳🇿',\r\n  '🇴🇲',\r\n  '🇵🇦',\r\n  '🇵🇪',\r\n  '🇵🇫',\r\n  '🇵🇬',\r\n  '🇵🇭',\r\n  '🇵🇰',\r\n  '🇵🇱',\r\n  '🇵🇲',\r\n  '🇵🇳',\r\n  '🇵🇷',\r\n  '🇵🇸',\r\n  '🇵🇹',\r\n  '🇵🇼',\r\n  '🇵🇾',\r\n  '🇶🇦',\r\n  '🇷🇪',\r\n  '🇷🇴',\r\n  '🇷🇸',\r\n  '🇷🇺',\r\n  '🇷🇼',\r\n  '🇸🇦',\r\n  '🇸🇧',\r\n  '🇸🇨',\r\n  '🇸🇩',\r\n  '🇸🇪',\r\n  '🇸🇬',\r\n  '🇸🇭',\r\n  '🇸🇮',\r\n  '🇸🇯',\r\n  '🇸🇰',\r\n  '🇸🇱',\r\n  '🇸🇲',\r\n  '🇸🇳',\r\n  '🇸🇴',\r\n  '🇸🇷',\r\n  '🇸🇸',\r\n  '🇸🇹',\r\n  '🇸🇻',\r\n  '🇸🇽',\r\n  '🇸🇾',\r\n  '🇸🇿',\r\n  '🇹🇦',\r\n  '🇹🇨',\r\n  '🇹🇩',\r\n  '🇹🇫',\r\n  '🇹🇬',\r\n  '🇹🇭',\r\n  '🇹🇯',\r\n  '🇹🇰',\r\n  '🇹🇱',\r\n  '🇹🇲',\r\n  '🇹🇳',\r\n  '🇹🇴',\r\n  '🇹🇷',\r\n  '🇹🇹',\r\n  '🇹🇻',\r\n  '🇹🇼',\r\n  '🇹🇿',\r\n  '🇺🇦',\r\n  '🇺🇬',\r\n  '🇺🇲',\r\n  '🇺🇸',\r\n  '🇺🇾',\r\n  '🇺🇿',\r\n  '🇻🇦',\r\n  '🇻🇨',\r\n  '🇻🇪',\r\n  '🇻🇬',\r\n  '🇻🇮',\r\n  '🇻🇳',\r\n  '🇻🇺',\r\n  '🇼🇫',\r\n  '🇼🇸',\r\n  '🇽🇰',\r\n  '🇾🇪',\r\n  '🇾🇹',\r\n  '🇿🇦',\r\n  '🇿🇲',\r\n  '🇿🇼',\r\n];\r\n","import { apiSlice } from './apiSlice';\r\nimport { DiscoverPost } from '../../app/types';\r\nimport { DISCOVER_LIST_PAGE_SIZE } from '../../constants/discover';\r\nimport { createEntityAdapter } from '@reduxjs/toolkit';\r\n\r\ntype getPostsArgs = {\r\n  userKey: string;\r\n  userName: string;\r\n  pageNumber?: number;\r\n  tag?: string;\r\n  searchTerm?: string;\r\n  sponsor?: boolean;\r\n};\r\n\r\nconst postsAdapter = createEntityAdapter<DiscoverPost>({\r\n  selectId: (post: DiscoverPost) => post._id,\r\n});\r\n\r\n// Helper Functions\r\n\r\nconst tranformComments = (comments, userName) =>\r\n  comments.map((comment) => ({\r\n    ...comment,\r\n    numLikes: comment.likes.length,\r\n    hasLiked: comment.likes.includes(userName),\r\n  }));\r\n\r\nexport const discoverApiSlice = apiSlice.injectEndpoints({\r\n  overrideExisting: true,\r\n  endpoints: (builder) => ({\r\n    getDiscoverPosts: builder.query<any, getPostsArgs>({\r\n      keepUnusedDataFor: 6000,\r\n      query: ({ userKey, pageNumber, tag, searchTerm, sponsor = true }) => ({\r\n        url: `/discover/getPosts`,\r\n        headers: {\r\n          userKey,\r\n        },\r\n        params: {\r\n          tag,\r\n          searchTerm,\r\n          pageNumber,\r\n          sponsor,\r\n          pageLength: DISCOVER_LIST_PAGE_SIZE,\r\n        },\r\n      }),\r\n      transformResponse: (response: DiscoverPost[], _, { userName }) => {\r\n        // Return Post To State Using Adapters\r\n        return postsAdapter.addMany(\r\n          postsAdapter.getInitialState({\r\n            hasMorePages: response.length > 0,\r\n          }),\r\n          // TODO: Refactoring likes and comments. Should maybe be done in backend\r\n          response.map((post) => ({\r\n            ...post,\r\n            numLikes: post.likes.length,\r\n            hasLiked: post.likes.includes(userName),\r\n            comments: tranformComments(post.comments, userName),\r\n          }))\r\n        );\r\n      },\r\n      async onQueryStarted(\r\n        { userKey, pageNumber, userName, searchTerm, tag, sponsor },\r\n        { queryFulfilled, dispatch }\r\n      ) {\r\n        if (!pageNumber) {\r\n          return;\r\n        }\r\n        const { data } = await queryFulfilled;\r\n\r\n        if (data?.ids?.length > 0) {\r\n          // Add Posts On Current Request To Page 1\r\n          dispatch(\r\n            discoverApiSlice.util.updateQueryData(\r\n              'getDiscoverPosts',\r\n              { userKey, pageNumber: 1, userName, searchTerm, tag, sponsor },\r\n              (draft) => {\r\n                postsAdapter.addMany(draft, postsSelectors.selectAll(data));\r\n              }\r\n            )\r\n          );\r\n\r\n          if (pageNumber > 1) {\r\n            // Remove Cached Data From State Since We Already Added It To Page 1\r\n            dispatch(\r\n              discoverApiSlice.util.updateQueryData(\r\n                'getDiscoverPosts',\r\n                { userKey, pageNumber, userName, searchTerm, tag, sponsor },\r\n                (draft) => {\r\n                  draft = postsAdapter.getInitialState();\r\n                }\r\n              )\r\n            );\r\n          }\r\n        } else {\r\n          // No More Pages To Load\r\n          dispatch(\r\n            discoverApiSlice.util.updateQueryData(\r\n              'getDiscoverPosts',\r\n              { userKey, pageNumber: 1, userName, searchTerm, tag, sponsor },\r\n              (draft) => {\r\n                draft.hasMorePages = false;\r\n              }\r\n            )\r\n          );\r\n        }\r\n      },\r\n    }),\r\n\r\n    createDiscoverPost: builder.mutation({\r\n      query: ({\r\n        userKey,\r\n        title,\r\n        type,\r\n        content,\r\n        tags,\r\n        status,\r\n        emoji,\r\n        postBody,\r\n        pinned,\r\n      }) => {\r\n        if (type === 'contentImage' || type === 'contentEvent') {\r\n          return {\r\n            url: '/discover/addPost',\r\n            method: 'POST',\r\n            headers: { userKey },\r\n            body: postBody,\r\n          };\r\n        }\r\n        return {\r\n          url: '/discover/addPost',\r\n          method: 'POST',\r\n          headers: { userKey },\r\n          body: {\r\n            title,\r\n            type,\r\n            [type]: content,\r\n            tags,\r\n            status,\r\n            emoji,\r\n            pinned,\r\n          },\r\n        };\r\n      },\r\n      async onQueryStarted(\r\n        { userKey, userName },\r\n        { dispatch, queryFulfilled }\r\n      ) {\r\n        try {\r\n          const { data: newPost } = await queryFulfilled;\r\n\r\n          // Add New Post To State\r\n          dispatch(\r\n            discoverApiSlice.util.updateQueryData(\r\n              'getDiscoverPosts',\r\n              { userKey, userName, pageNumber: 1 },\r\n              (draft) => {\r\n                postsAdapter.addOne(draft, {\r\n                  ...newPost,\r\n                  numLikes: 0,\r\n                  hasLiked: false,\r\n                });\r\n              }\r\n            )\r\n          );\r\n        } catch (e) {\r\n          console.warn('Error Adding Post To State', e);\r\n        }\r\n      },\r\n    }),\r\n    deleteDiscoverPost: builder.mutation({\r\n      query: ({ userKey, _id, userName, title }) => ({\r\n        url: '/discover/deletePost',\r\n        method: 'DELETE',\r\n        headers: { userKey },\r\n        body: {\r\n          _id,\r\n          userName,\r\n          title,\r\n        },\r\n        responseHandler: (response) => response.text(),\r\n      }),\r\n      async onQueryStarted(\r\n        { userKey, _id, userName, searchTerm, tag },\r\n        { dispatch, queryFulfilled }\r\n      ) {\r\n        if (searchTerm || tag) {\r\n          var searchPatchResult = dispatch(\r\n            discoverApiSlice.util.updateQueryData(\r\n              'getDiscoverPosts',\r\n              { userKey, userName, pageNumber: 1, searchTerm, tag },\r\n              (draft) => {\r\n                postsAdapter.removeOne(draft, _id);\r\n              }\r\n            )\r\n          );\r\n        }\r\n\r\n        var patchResult = dispatch(\r\n          discoverApiSlice.util.updateQueryData(\r\n            'getDiscoverPosts',\r\n            { userKey, userName, pageNumber: 1 },\r\n            (draft) => {\r\n              postsAdapter.removeOne(draft, _id);\r\n            }\r\n          )\r\n        );\r\n\r\n        try {\r\n          await queryFulfilled;\r\n        } catch {\r\n          patchResult.undo();\r\n          if (searchPatchResult) {\r\n            searchPatchResult.undo();\r\n          }\r\n        }\r\n      },\r\n    }),\r\n\r\n    getPostById: builder.query({\r\n      query: ({ userKey, postId }) => ({\r\n        url: `/discover/getPostById`,\r\n        headers: {\r\n          userKey,\r\n        },\r\n        params: {\r\n          id: postId,\r\n        },\r\n      }),\r\n      async onQueryStarted(\r\n        { userKey, postId, userName, searchTerm, tag },\r\n        { dispatch, queryFulfilled }\r\n      ) {\r\n        // Replace Post In State With Updated Post\r\n\r\n        try {\r\n          const { data: updatedPost } = await queryFulfilled;\r\n          const updateFunction = (draft) => {\r\n            postsAdapter.updateOne(draft, {\r\n              id: postId,\r\n              changes: {\r\n                ...updatedPost,\r\n                numLikes: updatedPost.likes.length,\r\n                hasLiked: updatedPost.likes.includes(userName),\r\n                comments: tranformComments(updatedPost.comments, userName),\r\n              },\r\n            });\r\n          };\r\n          dispatch(\r\n            discoverApiSlice.util.updateQueryData(\r\n              'getDiscoverPosts',\r\n              {\r\n                userKey,\r\n                userName,\r\n                pageNumber: 1,\r\n              },\r\n              updateFunction\r\n            )\r\n          );\r\n          if (searchTerm || tag) {\r\n            dispatch(\r\n              discoverApiSlice.util.updateQueryData(\r\n                'getDiscoverPosts',\r\n                {\r\n                  userKey,\r\n                  userName,\r\n                  pageNumber: 1,\r\n                  searchTerm,\r\n                  tag,\r\n                },\r\n                updateFunction\r\n              )\r\n            );\r\n          }\r\n        } catch (e) {\r\n          console.warn('Error Updating Post In State', e);\r\n        }\r\n      },\r\n    }),\r\n\r\n    likePost: builder.mutation({\r\n      query: ({ userKey, _id, title, postAuthor }) => ({\r\n        url: '/discover/like',\r\n        method: 'PATCH',\r\n        headers: { userKey },\r\n        body: {\r\n          _id,\r\n          title,\r\n          userName: postAuthor,\r\n        },\r\n        responseHandler: (response) => response.text(),\r\n      }),\r\n      async onQueryStarted(\r\n        { userKey, _id, userName, searchTerm, tag },\r\n        { dispatch, queryFulfilled }\r\n      ) {\r\n        const updateFunction = (draft) => {\r\n          const post = postsSelectors.selectById(draft, _id);\r\n          // Use updateOne to update the post with the given ID\r\n          postsAdapter.updateOne(draft, {\r\n            id: _id,\r\n            changes: {\r\n              numLikes: post.hasLiked ? post.numLikes - 1 : post.numLikes + 1,\r\n              hasLiked: !post.hasLiked,\r\n            },\r\n          });\r\n        };\r\n\r\n        if (searchTerm || tag) {\r\n          var searchPatchResult = dispatch(\r\n            discoverApiSlice.util.updateQueryData(\r\n              'getDiscoverPosts',\r\n              { userKey, pageNumber: 1, userName, searchTerm, tag },\r\n              updateFunction\r\n            )\r\n          );\r\n        }\r\n        var patchResult = dispatch(\r\n          discoverApiSlice.util.updateQueryData(\r\n            'getDiscoverPosts',\r\n            { userKey, pageNumber: 1, userName },\r\n            updateFunction\r\n          )\r\n        );\r\n\r\n        try {\r\n          await queryFulfilled;\r\n        } catch {\r\n          if (searchPatchResult) {\r\n            searchPatchResult.undo();\r\n          }\r\n          patchResult.undo();\r\n        }\r\n      },\r\n    }),\r\n\r\n    addComment: builder.mutation({\r\n      query: ({ userKey, _id, text }) => ({\r\n        url: '/discover/addComment',\r\n        method: 'POST',\r\n        headers: { userKey },\r\n        body: {\r\n          _id,\r\n          text,\r\n        },\r\n        responseHandler: (response) => response.text(),\r\n      }),\r\n\r\n      async onQueryStarted(\r\n        { userKey, _id, userName, searchTerm, tag },\r\n        { dispatch, queryFulfilled }\r\n      ) {\r\n        try {\r\n          await queryFulfilled;\r\n\r\n          // Call getPostById to update the post in state\r\n          dispatch(\r\n            discoverApiSlice.endpoints.getPostById.initiate({\r\n              userKey,\r\n              postId: _id,\r\n              userName,\r\n              searchTerm,\r\n              tag,\r\n            })\r\n          );\r\n        } catch (e) {\r\n          console.warn('Error Adding Comment To State', e);\r\n        }\r\n      },\r\n    }),\r\n\r\n    likeComment: builder.mutation({\r\n      query: ({ userKey, postId, commentId }) => ({\r\n        url: '/discover/likeComment',\r\n        method: 'PATCH',\r\n        headers: { userKey },\r\n        body: {\r\n          postId,\r\n          commentId,\r\n        },\r\n        responseHandler: (response) => response.text(),\r\n      }),\r\n      async onQueryStarted(\r\n        { userKey, postId, commentId, userName, searchTerm, tag },\r\n        { dispatch, queryFulfilled }\r\n      ) {\r\n        const updateFunction = (draft) => {\r\n          const post = postsSelectors.selectById(draft, postId);\r\n          // Use updateOne to update the post with the given ID\r\n          postsAdapter.updateOne(draft, {\r\n            id: postId,\r\n            changes: {\r\n              comments: post.comments.map((comment) => {\r\n                if (comment._id === commentId) {\r\n                  return {\r\n                    ...comment,\r\n                    numLikes: comment.hasLiked\r\n                      ? comment.numLikes - 1\r\n                      : comment.numLikes + 1,\r\n                    hasLiked: !comment.hasLiked,\r\n                  };\r\n                }\r\n                return comment;\r\n              }),\r\n            },\r\n          });\r\n        };\r\n        if (searchTerm || tag) {\r\n          var searchPatchResult = dispatch(\r\n            discoverApiSlice.util.updateQueryData(\r\n              'getDiscoverPosts',\r\n              { userKey, pageNumber: 1, userName, searchTerm, tag },\r\n              updateFunction\r\n            )\r\n          );\r\n        }\r\n\r\n        const patchResult = dispatch(\r\n          discoverApiSlice.util.updateQueryData(\r\n            'getDiscoverPosts',\r\n            { userKey, userName, pageNumber: 1 },\r\n            updateFunction\r\n          )\r\n        );\r\n\r\n        try {\r\n          await queryFulfilled;\r\n        } catch {\r\n          patchResult.undo();\r\n          if (searchPatchResult) {\r\n            searchPatchResult.undo();\r\n          }\r\n        }\r\n      },\r\n    }),\r\n\r\n    deleteComment: builder.mutation({\r\n      query: ({ userKey, postId, commentId }) => ({\r\n        url: '/discover/deleteComment',\r\n        method: 'DELETE',\r\n        headers: { userKey },\r\n        body: {\r\n          postId,\r\n          commentId,\r\n        },\r\n        responseHandler: (response) => response.text(),\r\n      }),\r\n      async onQueryStarted(\r\n        { userKey, postId, commentId, userName, searchTerm, tag },\r\n        { dispatch, queryFulfilled }\r\n      ) {\r\n        const updateFunction = (draft) => {\r\n          const post = postsSelectors.selectById(draft, postId);\r\n          // Use updateOne to update the post with the given ID\r\n          postsAdapter.updateOne(draft, {\r\n            id: postId,\r\n            changes: {\r\n              comments: post.comments.filter(\r\n                (comment) => comment._id !== commentId\r\n              ),\r\n            },\r\n          });\r\n        };\r\n        const patchResult = dispatch(\r\n          discoverApiSlice.util.updateQueryData(\r\n            'getDiscoverPosts',\r\n            {\r\n              userKey,\r\n              userName,\r\n              pageNumber: 1,\r\n            },\r\n            updateFunction\r\n          )\r\n        );\r\n\r\n        if (searchTerm || tag) {\r\n          var searchPatchResult = dispatch(\r\n            discoverApiSlice.util.updateQueryData(\r\n              'getDiscoverPosts',\r\n              {\r\n                userKey,\r\n                userName,\r\n                pageNumber: 1,\r\n              },\r\n              updateFunction\r\n            )\r\n          );\r\n        }\r\n\r\n        try {\r\n          await queryFulfilled;\r\n        } catch {\r\n          patchResult.undo();\r\n          if (searchPatchResult) {\r\n            searchPatchResult.undo();\r\n          }\r\n        }\r\n      },\r\n    }),\r\n  }),\r\n});\r\n\r\nconst postsSelectors = postsAdapter.getSelectors();\r\n\r\nexport { postsAdapter, postsSelectors };\r\n\r\nexport const {\r\n  useLazyGetDiscoverPostsQuery,\r\n  useCreateDiscoverPostMutation,\r\n  useDeleteDiscoverPostMutation,\r\n  useLikePostMutation,\r\n  useAddCommentMutation,\r\n  useLazyGetPostByIdQuery,\r\n  useLikeCommentMutation,\r\n  useDeleteCommentMutation,\r\n} = discoverApiSlice;\r\n","import { TouchableOpacity, Platform, UIManager } from 'react-native';\r\nimport React from 'react';\r\nimport { Layout, Text, useTheme } from '@ui-kitten/components';\r\nimport { FontAwesome } from '@expo/vector-icons';\r\nimport {\r\n  discoverApiSlice,\r\n  postsAdapter,\r\n  postsSelectors,\r\n  useLikePostMutation,\r\n} from '../api/discoverApi';\r\nimport { selectDarkMode, selectUserKey } from '../../app/appDataSlice';\r\nimport { useAppSelector } from '../../app/hooks';\r\nimport { usersApiSlice } from '../api/usersApi';\r\nimport withPreventDoubleClick from '../../components/withPreventDoubleClick';\r\n\r\nconst DebounceTouchable = withPreventDoubleClick(TouchableOpacity, 600);\r\n\r\nexport default function BottomBar({\r\n  tags,\r\n  _id,\r\n  commentIconShown = true,\r\n  searchTerm = undefined,\r\n  searchedTag = undefined,\r\n}) {\r\n  const userKey = useAppSelector(selectUserKey);\r\n  const darkMode = useAppSelector(selectDarkMode);\r\n  const theme = useTheme();\r\n\r\n  const { data: userData } =\r\n    usersApiSlice.endpoints.getUserInfo.useQueryState(userKey);\r\n  const [likePost] = useLikePostMutation();\r\n\r\n  const post = discoverApiSlice.endpoints.getDiscoverPosts.useQueryState(\r\n    {\r\n      pageNumber: 1,\r\n      userKey,\r\n      userName: userData.userName,\r\n      searchTerm,\r\n      tag: searchedTag,\r\n    },\r\n    {\r\n      selectFromResult: (result) =>\r\n        postsSelectors.selectById(\r\n          result.data ?? postsAdapter.getInitialState(),\r\n          _id\r\n        ),\r\n    }\r\n  );\r\n\r\n  const onPressLike = async () => {\r\n    if (!post) return;\r\n    try {\r\n      await likePost({\r\n        userKey,\r\n        _id,\r\n        title: post.title,\r\n        postAuthor: post.userName,\r\n        userName: userData.userName,\r\n        searchTerm,\r\n        tag: searchedTag,\r\n      }).unwrap();\r\n    } catch (error) {\r\n      console.log('Error liking post:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout\r\n      style={{\r\n        width: '100%',\r\n        flexDirection: 'row',\r\n        paddingVertical: 5,\r\n        paddingHorizontal: 15,\r\n      }}>\r\n      <Layout\r\n        style={{\r\n          flexDirection: 'row',\r\n          flexWrap: 'wrap',\r\n          flex: 6,\r\n        }}>\r\n        {/* tags */}\r\n        {tags.map((tag: string, index: number) => (\r\n          <Layout\r\n            key={index}\r\n            level=\"3\"\r\n            style={{\r\n              padding: 5,\r\n              borderRadius: 5,\r\n              marginRight: 5,\r\n              marginTop: 2,\r\n            }}>\r\n            <Text style={{ fontSize: 12 }}>{tag}</Text>\r\n          </Layout>\r\n        ))}\r\n      </Layout>\r\n\r\n      {/* Icons */}\r\n      <Layout\r\n        style={{\r\n          flexDirection: 'row',\r\n          flex: 2,\r\n          justifyContent: 'space-evenly',\r\n          alignItems: 'center',\r\n        }}>\r\n        <FontAwesome\r\n          style={{ flex: 2, opacity: commentIconShown ? 1 : 0 }}\r\n          name=\"comments-o\"\r\n          size={20}\r\n          color={darkMode ? '#fff' : '#000'}\r\n        />\r\n        {/* Likes */}\r\n        {/* @ts-ignore */}\r\n        <DebounceTouchable\r\n          style={{\r\n            flexDirection: 'row',\r\n            flex: 3,\r\n            justifyContent: 'space-evenly',\r\n            alignItems: 'center',\r\n          }}\r\n          onPress={onPressLike}>\r\n          <Text\r\n            style={{\r\n              fontSize: 15,\r\n              paddingTop: 1,\r\n            }}>\r\n            {post?.numLikes}\r\n          </Text>\r\n          <FontAwesome\r\n            style={{ alignSelf: 'center' }}\r\n            size={17}\r\n            color={\r\n              post?.hasLiked\r\n                ? theme['color-primary-500']\r\n                : darkMode\r\n                ? '#fff'\r\n                : '#000'\r\n            }\r\n            name={post?.hasLiked ? 'heart' : 'heart-o'}\r\n          />\r\n        </DebounceTouchable>\r\n      </Layout>\r\n      {/* @ts-ignore */}\r\n    </Layout>\r\n  );\r\n}\r\n","import { debounce } from 'lodash';\r\nimport React from 'react';\r\n\r\nexport default function withPreventDoubleClick(WrappedComponent, time = 300) {\r\n  class PreventDoubleClick extends React.PureComponent {\r\n    debouncedOnPress = () => {\r\n      this.props.onPress && this.props.onPress();\r\n    };\r\n\r\n    onPress = debounce(this.debouncedOnPress, time, {\r\n      leading: true,\r\n      trailing: false,\r\n    });\r\n\r\n    render() {\r\n      return <WrappedComponent {...this.props} onPress={this.onPress} />;\r\n    }\r\n  }\r\n\r\n  PreventDoubleClick.displayName = `withPreventDoubleClick(${\r\n    WrappedComponent.displayName || WrappedComponent.name\r\n  })`;\r\n  return PreventDoubleClick;\r\n}\r\n","import {  Layout, ListItem, Text } from '@ui-kitten/components';\r\nimport { TouchableHighlight } from 'react-native';\r\nimport {  FontAwesome5 } from '@expo/vector-icons';\r\nimport BottomBar from '../BottomBar';\r\n\r\nexport default function TextCard({\r\n  navigation,\r\n  tags,\r\n  title,\r\n  body,\r\n  emoji,\r\n  _id,\r\n  searchTerm,\r\n  searchedTag,\r\n  pinnedIcon,\r\n  isUrl = false,\r\n}) {\r\n\r\n  const renderTextBody = () => {\r\n    let text = body;\r\n\r\n    if (text.indexOf('\\n') > 10 && text.indexOf('\\n') < 50) {\r\n      return text.split('\\n')[0] + '...';\r\n    } else if (text.length > 50) {\r\n      return text.substring(0, 50) + '...';\r\n    } else {\r\n      return text;\r\n    }\r\n  };\r\n\r\n  const renderUrl = () => {\r\n    return (\r\n      <Text style={{ color: 'grey' }}>\r\n        <FontAwesome5 name=\"link\" />\r\n        {` `}\r\n        {body.length > 30 ? body.slice(0, 30) + '...' : body}\r\n      </Text>\r\n    );\r\n  };\r\n\r\n\r\n  return (\r\n    <TouchableHighlight\r\n      onPress={() => {\r\n        navigation.navigate('SinglePost', { _id, searchTerm, searchedTag });\r\n      }}>\r\n      <Layout>\r\n        {pinnedIcon}\r\n\r\n        <ListItem\r\n          disabled\r\n          accessoryLeft={() => (\r\n            <Text style={{ fontSize: 35, marginRight: 15 }}>{emoji}</Text>\r\n          )}\r\n          style={{\r\n            paddingLeft: 15,\r\n            paddingTop: 25,\r\n            paddingBottom: 0,\r\n          }}\r\n          title={() => (\r\n            <Text style={{ fontSize: 20, paddingBottom: 5 }}>{title}</Text>\r\n          )}\r\n          description={() => (\r\n            <Text style={{ color: 'grey' }}>\r\n              {isUrl ? renderUrl() : renderTextBody()}\r\n            </Text>\r\n          )}\r\n        />\r\n\r\n        <BottomBar\r\n          tags={tags}\r\n          _id={_id}\r\n          searchTerm={searchTerm}\r\n          searchedTag={searchedTag}\r\n        />\r\n      </Layout>\r\n    </TouchableHighlight>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { TouchableWithoutFeedback } from 'react-native';\r\n\r\nexport default class DoubleTap extends React.Component {\r\n  static defaultProps = {\r\n    delay: 300,\r\n    onDoubleTap: () => {},\r\n    children: null,\r\n  };\r\n\r\n  lastTap = null;\r\n\r\n  // https://gist.github.com/brunotavares/3c9a373ba5cd1b4ff28b\r\n  handleDoubleTap = () => {\r\n    const now = Date.now();\r\n    if (this.lastTap && (now - this.lastTap) < this.props.delay) {\r\n      this.props.onDoubleTap();\r\n    } else {\r\n      this.lastTap = now;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <TouchableWithoutFeedback onPress={this.handleDoubleTap}>\r\n        {this.props.children}\r\n      </TouchableWithoutFeedback>\r\n    );\r\n  }\r\n}","import { FontAwesome } from '@expo/vector-icons';\r\nimport { useTheme } from '@ui-kitten/components';\r\nimport { forwardRef, useImperativeHandle, useRef, useState } from 'react';\r\nimport { Animated, Easing } from 'react-native';\r\n\r\nexport default forwardRef(\r\n  ({ style, iconStyle }: { style: {}; iconStyle?: {} }, ref) => {\r\n    useImperativeHandle(ref, () => ({\r\n      animate,\r\n    }));\r\n\r\n    const opacityAnim = useRef(new Animated.Value(0)).current;\r\n    const scaleAnim = useRef(new Animated.Value(1)).current;\r\n    const [heartRotation, setHeartRotation] = useState('0deg');\r\n\r\n    const pickRandomDegree = () => {\r\n      const options = ['0deg', '15deg', '-15deg'];\r\n      return options[Math.floor(Math.random() * options.length)];\r\n    };\r\n\r\n    const animate = () => {\r\n      // animation: shrink quickly with bounce, opacity 0 - 1. Stop for a moment. Increase in size. Opacity 1-0\r\n      setHeartRotation(pickRandomDegree());\r\n\r\n      scaleAnim.setValue(1);\r\n      opacityAnim.setValue(0);\r\n\r\n      Animated.parallel([\r\n        Animated.sequence([\r\n          Animated.timing(opacityAnim, {\r\n            toValue: 1,\r\n            duration: 200,\r\n            useNativeDriver: true,\r\n          }),\r\n          Animated.timing(opacityAnim, {\r\n            toValue: 1,\r\n            duration: 300,\r\n            useNativeDriver: true,\r\n          }),\r\n          Animated.timing(opacityAnim, {\r\n            toValue: 0,\r\n            duration: 100,\r\n            useNativeDriver: true,\r\n          }),\r\n        ]),\r\n        ,\r\n        Animated.sequence([\r\n          Animated.timing(scaleAnim, {\r\n            toValue: 0.8,\r\n            easing: Easing.bounce,\r\n            duration: 200,\r\n            useNativeDriver: true,\r\n          }),\r\n          Animated.timing(scaleAnim, {\r\n            toValue: 0.8,\r\n            duration: 300,\r\n            useNativeDriver: true,\r\n          }),\r\n          Animated.timing(scaleAnim, {\r\n            toValue: 1.2,\r\n            duration: 100,\r\n            useNativeDriver: true,\r\n          }),\r\n        ]),\r\n      ]).start();\r\n    };\r\n\r\n    return (\r\n      <Animated.View\r\n        style={{\r\n          ...style,\r\n          opacity: opacityAnim,\r\n          transform: [{ scale: scaleAnim }],\r\n        }}>\r\n        <FontAwesome\r\n          name=\"heart\"\r\n          size={110}\r\n          style={{ transform: [{ rotate: heartRotation }], ...iconStyle }}\r\n        />\r\n      </Animated.View>\r\n    );\r\n  }\r\n);\r\n","import { EMOJI_LIST, IMAGE_BUCKET_URL } from './constants/discover';\r\nimport Toast from 'react-native-root-toast';\r\n\r\nexport function getRndInteger(min: number, max: number) {\r\n  return Math.floor(Math.random() * (max - min)) + min;\r\n}\r\n\r\nexport function getImageUrl(imageId: string) {\r\n  return `${IMAGE_BUCKET_URL}/${imageId}.jpg`;\r\n}\r\n\r\nexport function nFormatter(num: number, digits: number) {\r\n  const lookup = [\r\n    { value: 1, symbol: '' },\r\n    { value: 1e3, symbol: 'k' },\r\n    { value: 1e6, symbol: 'M' },\r\n    { value: 1e9, symbol: 'G' },\r\n    { value: 1e12, symbol: 'T' },\r\n    { value: 1e15, symbol: 'P' },\r\n    { value: 1e18, symbol: 'E' },\r\n  ];\r\n  const rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\r\n  var item = lookup\r\n    .slice()\r\n    .reverse()\r\n    .find(function (item) {\r\n      return num >= item.value;\r\n    });\r\n  return item\r\n    ? (num / item.value).toFixed(digits).replace(rx, '$1') + item.symbol\r\n    : '0';\r\n}\r\n\r\nexport function versionCompare(v1: string, v2: string, options?: any) {\r\n  var lexicographical = options && options.lexicographical,\r\n    zeroExtend = options && options.zeroExtend,\r\n    v1parts = v1.split('.') as any[],\r\n    v2parts = v2.split('.') as any[];\r\n\r\n  function isValidPart(x) {\r\n    return (lexicographical ? /^\\d+[A-Za-z]*$/ : /^\\d+$/).test(x);\r\n  }\r\n\r\n  if (!v1parts.every(isValidPart) || !v2parts.every(isValidPart)) {\r\n    return NaN;\r\n  }\r\n\r\n  if (zeroExtend) {\r\n    while (v1parts.length < v2parts.length) v1parts.push('0');\r\n    while (v2parts.length < v1parts.length) v2parts.push('0');\r\n  }\r\n\r\n  if (!lexicographical) {\r\n    v1parts = v1parts.map(Number);\r\n    v2parts = v2parts.map(Number);\r\n  }\r\n\r\n  for (var i = 0; i < v1parts.length; ++i) {\r\n    if (v2parts.length == i) {\r\n      return 1;\r\n    }\r\n\r\n    if (v1parts[i] == v2parts[i]) {\r\n      continue;\r\n    } else if (v1parts[i] > v2parts[i]) {\r\n      return 1;\r\n    } else {\r\n      return -1;\r\n    }\r\n  }\r\n\r\n  if (v1parts.length != v2parts.length) {\r\n    return -1;\r\n  }\r\n\r\n  return 0;\r\n}\r\n\r\nexport const stringToEmoji = (str: string) => {\r\n  if (!str) {\r\n    return '';\r\n  }\r\n  let dec = 0;\r\n  for (let i = 0; i < str.length; ++i) {\r\n    dec += str.charCodeAt(i) << i;\r\n  }\r\n  const emoji = EMOJI_LIST[dec % EMOJI_LIST.length];\r\n  return emoji;\r\n};\r\n\r\nexport function validURL(str: string) {\r\n  var pattern = new RegExp(\r\n    '^(https?:\\\\/\\\\/)?' + // protocol\r\n      '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\r\n      '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\r\n      '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\r\n      '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\r\n      '(\\\\#[-a-z\\\\d_]*)?$',\r\n    'i'\r\n  ); // fragment locator\r\n  return !!pattern.test(str);\r\n}\r\n\r\nexport function showToast(message: string, backgroundColor: string = '#000') {\r\n  Toast.show(message, {\r\n    duration: Toast.durations.LONG,\r\n    opacity: 1,\r\n    position: -100,\r\n    backgroundColor,\r\n    shadow: false,\r\n  });\r\n}\r\n\r\n// Format range with 12 hour time\r\nexport const FormatTimeRange = (start: string, end: string) => {\r\n  const startDate = new Date(start);\r\n  const endDate = new Date(end);\r\n\r\n  const startHours = startDate.getHours() % 12 || 12;\r\n  const startMinutes = startDate.getMinutes();\r\n  const startAmPm = startDate.getHours() >= 12 ? 'pm' : 'am';\r\n  const endHours = endDate.getHours() % 12 || 12;\r\n  const endMinutes = endDate.getMinutes();\r\n  const endAmPm = endDate.getHours() >= 12 ? 'pm' : 'am';\r\n  return `${startHours}:${startMinutes}${startAmPm} - ${endHours}:${endMinutes}${endAmPm}`;\r\n};\r\n\r\nconst weekDayNumberToName = {\r\n  0: 'Sunday',\r\n  1: 'Monday',\r\n  2: 'Tuesday',\r\n  3: 'Wednesday',\r\n  4: 'Thursday',\r\n  5: 'Friday',\r\n  6: 'Saturday',\r\n};\r\n\r\nexport const FormatDate = (date: string) => {\r\n  const newDate = new Date(date);\r\n\r\n  const weekDay = newDate.getDay();\r\n  const month = newDate.getMonth() + 1;\r\n  const day = newDate.getDate();\r\n  return `${weekDayNumberToName[weekDay]}, ${month}/${day}`;\r\n};\r\n","import { Layout, useTheme } from '@ui-kitten/components';\r\nimport { useRef } from 'react';\r\nimport { Dimensions, Image } from 'react-native';\r\nimport { selectUserKey } from '../../app/appDataSlice';\r\nimport { useAppSelector } from '../../app/hooks';\r\nimport DoubleTap from '../../components/DoubleTap';\r\nimport DoubleTapHeart from '../../components/DoubleTapHeart';\r\nimport { MAX_WIDTH_WEB } from '../../constants/discover';\r\nimport { getImageUrl } from '../../functions';\r\nimport { useLikePostMutation } from '../api/discoverApi';\r\n\r\nconst windowWidth = Dimensions.get('window').width;\r\n\r\nexport default function ImageComponent({ imageId, hasLiked, apiInfo }) {\r\n  const theme = useTheme();\r\n  const [likePost] = useLikePostMutation();\r\n  const userKey = useAppSelector(selectUserKey);\r\n  const likeRef = useRef(null);\r\n\r\n  const handlePressLike = async () => {\r\n    likeRef.current?.animate();\r\n\r\n    if (hasLiked) {\r\n      return;\r\n    }\r\n    try {\r\n      await likePost({\r\n        userKey,\r\n        tag: apiInfo.searchedTag,\r\n        ...apiInfo,\r\n      }).unwrap();\r\n    } catch (error) {\r\n      console.log('Error liking post:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DoubleTap delay={1200} onDoubleTap={handlePressLike}>\r\n      <Layout style={{ flex: 1, alignItems: 'center' }}>\r\n        <Image\r\n          source={{\r\n            uri: getImageUrl(imageId),\r\n          }}\r\n          style={{\r\n            borderRadius: 5,\r\n            width: windowWidth * 0.9,\r\n            height: windowWidth * 0.9,\r\n            maxHeight: MAX_WIDTH_WEB,\r\n            maxWidth: MAX_WIDTH_WEB,\r\n            marginBottom: 10,\r\n            resizeMode: 'contain',\r\n          }}\r\n        />\r\n        <DoubleTapHeart\r\n          style={{\r\n            position: 'absolute',\r\n            top: '35%',\r\n            right: '30%',\r\n            shadowColor: '#000',\r\n            shadowOffset: {\r\n              width: 0,\r\n              height: 3,\r\n            },\r\n            shadowOpacity: 0.29,\r\n            shadowRadius: 4.65,\r\n\r\n            elevation: 7,\r\n          }}\r\n          ref={likeRef}\r\n          iconStyle={{ color: theme['color-primary-500'] }}\r\n        />\r\n      </Layout>\r\n    </DoubleTap>\r\n  );\r\n}\r\n","import { Layout, Text } from '@ui-kitten/components';\r\nimport { useEffect, useRef } from 'react';\r\nimport { TouchableOpacity, Image, Dimensions } from 'react-native';\r\nimport { selectUserKey } from '../../../app/appDataSlice';\r\nimport { useAppSelector } from '../../../app/hooks';\r\nimport DoubleTap from '../../../components/DoubleTap';\r\nimport DoubleTapHeart from '../../../components/DoubleTapHeart';\r\nimport { MAX_WIDTH_WEB } from '../../../constants/discover';\r\nimport { getImageUrl } from '../../../functions';\r\nimport { useLikePostMutation } from '../../api/discoverApi';\r\nimport BottomBar from '../BottomBar';\r\nimport ImageComponent from '../ImageComponent';\r\n\r\nconst windowWidth = Dimensions.get('window').width;\r\n\r\nexport default function ImageCard({\r\n  title,\r\n  _id,\r\n  navigation,\r\n  imageId,\r\n  tags,\r\n  postAuthor,\r\n  userName,\r\n  searchTerm,\r\n  searchedTag,\r\n  pinnedIcon,\r\n  hasLiked,\r\n}) {\r\n  return (\r\n    <Layout>\r\n      {pinnedIcon}\r\n      <Layout style={{ flex: 1, alignItems: 'center' }}>\r\n        <TouchableOpacity\r\n          onPress={() => {\r\n            navigation.navigate('SinglePost', { _id, searchTerm, searchedTag });\r\n          }}\r\n          activeOpacity={0.9}\r\n          style={{\r\n            flex: 1,\r\n            alignItems: 'center',\r\n            paddingVertical: 10,\r\n          }}>\r\n          <Layout\r\n            style={{\r\n              width: windowWidth * 0.9,\r\n              maxWidth: MAX_WIDTH_WEB,\r\n              paddingVertical: 10,\r\n            }}>\r\n            <Text style={{ fontSize: 20 }}>{title}</Text>\r\n          </Layout>\r\n          <ImageComponent\r\n            apiInfo={{\r\n              _id,\r\n              title,\r\n              postAuthor,\r\n              userName,\r\n              searchTerm,\r\n              searchedTag,\r\n            }}\r\n            imageId={imageId}\r\n            hasLiked={hasLiked}\r\n          />\r\n\r\n          <BottomBar\r\n            tags={tags}\r\n            _id={_id}\r\n            searchTerm={searchTerm}\r\n            searchedTag={searchedTag}\r\n          />\r\n        </TouchableOpacity>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n}\r\n","import { Layout, Text } from '@ui-kitten/components';\r\nimport { useEffect, useState } from 'react';\r\nimport {\r\n    Dimensions,\r\n    Image,\r\n    ImageBackground, Platform,\r\n    StyleSheet,\r\n    TouchableHighlight,\r\n} from 'react-native';\r\nimport { selectDarkMode } from '../../../app/appDataSlice';\r\nimport { useAppSelector } from '../../../app/hooks';\r\n\r\nconst windowWidth = Dimensions.get('window').width;\r\n\r\nimport becomeSponsor from '../../../../assets/sponsorPage/become-sponsor.jpeg';\r\n\r\nexport default function SponsorCard({ data, navigation }) {\r\n  const [imageLink, setImageLink] = useState({ uri: data.logo });\r\n  const webWidth = Dimensions.get('window').width * .3\r\n  const hasCoupon = !!data.coupons[0];\r\n\r\n  return (\r\n    <TouchableHighlight\r\n      style={{ flex: 1 }}\r\n      onPress={() => {\r\n        navigation.navigate('SponsorPageDiscover', { data });\r\n      }}>\r\n      <Layout style={{ flex: 1 }}>\r\n        <Text category=\"label\" style={{ marginLeft: 20 }}>\r\n          Ad\r\n        </Text>\r\n\r\n        <Layout\r\n          style={{\r\n            flexDirection: 'row',\r\n            justifyContent: 'space-between',\r\n          }}>\r\n          <Layout\r\n            style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n            <Image\r\n              source={imageLink}\r\n              onError={() => {\r\n                setImageLink(becomeSponsor);\r\n              }}\r\n              style={{\r\n                height: hasCoupon ? Platform.OS === 'web' ? 200 : windowWidth / 2 - 20 : Platform.OS === 'web' ? 200 : windowWidth * 0.8,\r\n                width: hasCoupon ? Platform.OS === 'web' ? '20%' : windowWidth / 2 - 20 : Platform.OS === 'web' ? '20%' : windowWidth * 0.8,\r\n                resizeMode: 'contain',\r\n              }}\r\n            />\r\n            {imageLink?.uri && <Text>{data.sponsorName}</Text>}\r\n          </Layout>\r\n\r\n          {data.coupons[0] && imageLink?.uri && (\r\n            <Layout style={{ flex: 1, alignItems: 'center' }}>\r\n              <ImageBackground\r\n                resizeMode=\"contain\"\r\n                source={require('../../../../assets/sponsorPage/coupon.png')}\r\n                style={{\r\n                  width: windowWidth / 2 - 20,\r\n                  height: 200,\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                }}>\r\n                <Text\r\n                  style={{\r\n                    fontSize: 13,\r\n                    paddingBottom: 7,\r\n                    paddingRight: 7,\r\n                    marginHorizontal: 25,\r\n                  }}>\r\n                  {data.coupons[0].couponDescription}\r\n                </Text>\r\n              </ImageBackground>\r\n            </Layout>\r\n          )}\r\n        </Layout>\r\n      </Layout>\r\n    </TouchableHighlight>\r\n  );\r\n}\r\n","import { Divider, Layout, Text } from '@ui-kitten/components';\r\nimport { useMemo } from 'react';\r\nimport { TouchableOpacity, Dimensions } from 'react-native';\r\nimport { FontAwesome5 } from '@expo/vector-icons';\r\n\r\nimport { MAX_WIDTH_WEB } from '../../constants/discover';\r\nimport { FormatDate, FormatTimeRange } from '../../functions';\r\nimport BottomBar from './BottomBar';\r\nimport ImageComponent from './ImageComponent';\r\nimport { A } from '@expo/html-elements';\r\n\r\nconst windowWidth = Dimensions.get('window').width;\r\n\r\ninterface EventCardProps {\r\n  title: string;\r\n  location: string;\r\n  date: string;\r\n  startTime: string;\r\n  endTime: string;\r\n  _id: string;\r\n  postAuthor: string;\r\n  userName: string;\r\n  hasLiked: boolean;\r\n  searchTerm?: string;\r\n  searchedTag?: string;\r\n  tags?: string[];\r\n  contentURL?: string;\r\n  contentText?: string;\r\n  contentImage?: string;\r\n  host?: string;\r\n  truncated?: boolean;\r\n}\r\n\r\nexport default function EventBody({\r\n  title,\r\n  location,\r\n  date,\r\n  startTime,\r\n  endTime,\r\n  contentURL,\r\n  contentText,\r\n  contentImage,\r\n  host,\r\n  hasLiked,\r\n  _id,\r\n  searchTerm,\r\n  searchedTag,\r\n  postAuthor,\r\n  userName,\r\n  truncated = true,\r\n}: EventCardProps) {\r\n  const eventInfo = useMemo(\r\n    () => [\r\n      {\r\n        title: 'Location',\r\n        value: location,\r\n      },\r\n      {\r\n        title: 'Date',\r\n        value: FormatDate(date),\r\n      },\r\n      {\r\n        title: 'Time',\r\n        value: FormatTimeRange(startTime, endTime),\r\n      },\r\n      {\r\n        title: 'Host',\r\n        value: host,\r\n      },\r\n      {\r\n        title: 'Description',\r\n        value: contentText,\r\n      },\r\n    ],\r\n    [location, date, startTime, endTime, host, contentURL, contentText]\r\n  );\r\n\r\n  const renderUrl = (link: string) => {\r\n    return (\r\n      <Layout\r\n        style={{\r\n          flexDirection: 'row',\r\n          width: windowWidth * 0.9,\r\n          maxWidth: MAX_WIDTH_WEB,\r\n          paddingVertical: 5,\r\n        }}>\r\n        <Text category=\"s1\">Link: </Text>\r\n        {truncated ? (\r\n          <Text category=\"p1\">\r\n            {link.length > 30 ? link.slice(0, 30) + '...' : link}\r\n          </Text>\r\n        ) : (\r\n          <A>\r\n            <Text>{link}</Text>\r\n          </A>\r\n        )}\r\n      </Layout>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout style={{ flex: 1, alignItems: 'center' }}>\r\n      {contentImage ? (\r\n        <ImageComponent\r\n          apiInfo={{\r\n            _id,\r\n            title,\r\n            postAuthor,\r\n            userName,\r\n            searchTerm,\r\n            searchedTag,\r\n          }}\r\n          imageId={contentImage}\r\n          hasLiked={hasLiked}\r\n        />\r\n      ) : (\r\n        <Divider />\r\n      )}\r\n\r\n      {/* Event Info  */}\r\n      {eventInfo.map((info, index) => {\r\n        if (info.value)\r\n          return (\r\n            <Layout\r\n              key={index}\r\n              style={{\r\n                flexDirection: 'row',\r\n                width: windowWidth * 0.9,\r\n                maxWidth: MAX_WIDTH_WEB,\r\n                paddingVertical: 5,\r\n              }}>\r\n              <Text category=\"s1\">\r\n                {info.title}\r\n                {`: `}\r\n                <Text category=\"p1\">\r\n                  {truncated\r\n                    ? info.value.length > 30\r\n                      ? info.value.slice(0, 30) + '...'\r\n                      : info.value\r\n                    : info.value}\r\n                </Text>\r\n              </Text>\r\n            </Layout>\r\n          );\r\n      })}\r\n\r\n      {contentURL ? renderUrl(contentURL) : null}\r\n    </Layout>\r\n  );\r\n}\r\n","import { Divider, Layout, Text } from '@ui-kitten/components';\r\nimport React, {useEffect, useMemo, useState} from 'react';\r\nimport { TouchableOpacity, Dimensions } from 'react-native';\r\nimport { FontAwesome5 } from '@expo/vector-icons';\r\n\r\nimport EventBody from '../EventBody';\r\nimport { MAX_WIDTH_WEB } from '../../../constants/discover';\r\nimport { FormatDate, FormatTimeRange } from '../../../functions';\r\nimport BottomBar from '../BottomBar';\r\nimport ImageComponent from '../ImageComponent';\r\nimport {useAppSelector} from \"../../../app/hooks\";\r\nimport {selectDarkMode, selectUserKey} from \"../../../app/appDataSlice\";\r\nimport ModalContainer from \"../../../components/ModalContainer\";\r\nimport {useEditUserMutation, useGetUserInfoQuery} from \"../../api/usersApi\";\r\nimport Toast from \"react-native-root-toast\";\r\nimport {useFocusEffect, useIsFocused} from \"@react-navigation/native\";\r\n\r\nconst windowWidth = Dimensions.get('window').width;\r\n\r\ninterface EventCardProps {\r\n  title: string;\r\n  location: string;\r\n  date: string;\r\n  startTime: string;\r\n  endTime: string;\r\n  pinnedIcon: JSX.Element;\r\n  _id: string;\r\n  postAuthor: string;\r\n  userName: string;\r\n  hasLiked: boolean;\r\n  navigation: any;\r\n  searchTerm?: string;\r\n  searchedTag?: string;\r\n  tags?: string[];\r\n  contentURL?: string;\r\n  contentText?: string;\r\n  contentImage?: string;\r\n  host?: string;\r\n}\r\n\r\nexport default function EventCard({\r\n  title,\r\n  location,\r\n  date,\r\n  startTime,\r\n  endTime,\r\n  pinnedIcon,\r\n  tags,\r\n  contentURL,\r\n  contentText,\r\n  contentImage,\r\n  host,\r\n  hasLiked,\r\n  _id,\r\n  searchTerm,\r\n  searchedTag,\r\n  postAuthor,\r\n  userName,\r\n  navigation,\r\n}: EventCardProps) {\r\n  const darkMode = useAppSelector(selectDarkMode)\r\n  const userKey = useAppSelector(selectUserKey)\r\n  const {data: userData} = useGetUserInfoQuery(useAppSelector(selectUserKey));\r\n  const [ eventPopUp, setEventPopUp ] = useState(false)\r\n  const [ isAdded, setIsAdded ] = useState(false)\r\n  const [editUser] = useEditUserMutation();\r\n\r\n  useEffect(() => {\r\n    setIsAdded(userData.customEvents.some(customEvent => {\r\n      return (\r\n          customEvent.name === title &&\r\n          customEvent.startTime == startTime &&\r\n          customEvent.endTime == endTime &&\r\n          customEvent.date == date\r\n      )\r\n    }))\r\n  }, [useIsFocused()]) // this forces just the button component to re-render when the focus changes\r\n\r\n  function handleEventSyncWithServer(isAdd: boolean) {\r\n    editUser({\r\n      userKey,\r\n      userName: userData.userName,\r\n      fields: JSON.stringify(isAdd ? {\r\n        \"addCustomEvent\": {\r\n          \"name\": title,\r\n          \"startTime\": new Date(startTime).toTimeString().slice(0, 5),\r\n          \"endTime\": new Date(endTime).toTimeString().slice(0, 5),\r\n          \"days\": [],\r\n          \"date\": date\r\n        },\r\n      } : {\r\n        \"removeCustomEvent\": {\r\n          \"name\": title,\r\n          \"startTime\": new Date(startTime).toTimeString().slice(0, 5),\r\n          \"endTime\": new Date(endTime).toTimeString().slice(0, 5),\r\n          \"days\": [],\r\n          \"date\": date\r\n        },\r\n      })\r\n    }).unwrap().then(async () => {\r\n      setIsAdded(isAdd)\r\n    }).catch(() => {\r\n      Toast.show(\r\n          \"Failed to add event.\\nPlease try again later\",\r\n          {\r\n            duration: Toast.durations.LONG,\r\n            opacity: 1,\r\n            position: -100,\r\n            backgroundColor: 'grey',\r\n            shadow: false,\r\n          }\r\n      );\r\n    })\r\n  }\r\n\r\n  function toggleAdditionOfEvent() {\r\n    handleEventSyncWithServer(!isAdded)\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      {pinnedIcon}\r\n      <Layout style={{ flex: 1, alignItems: 'center' }}>\r\n        <TouchableOpacity\r\n          onPress={() => {\r\n            navigation.navigate('SinglePost', { _id, searchTerm, searchedTag });\r\n          }}\r\n          activeOpacity={0.9}\r\n          style={{\r\n            flex: 1,\r\n            alignItems: 'center',\r\n            paddingVertical: 10,\r\n          }}>\r\n          <Layout\r\n            style={{\r\n              width: windowWidth * 0.9,\r\n              maxWidth: MAX_WIDTH_WEB,\r\n              paddingVertical: 10,\r\n              flexDirection: 'row'\r\n            }}>\r\n            <Text style={{ fontSize: 20 }}>{title}</Text>\r\n            <TouchableOpacity style={{alignSelf: 'flex-end', marginLeft: 'auto'}} onPress={ () => {\r\n                toggleAdditionOfEvent()\r\n              }\r\n            }>\r\n              <FontAwesome5\r\n                  name={isAdded ? 'times' : 'plus'}\r\n                  size={23}\r\n                  color={darkMode ? 'white' : 'black'}\r\n              />\r\n            </TouchableOpacity>\r\n          </Layout>\r\n\r\n          <EventBody\r\n            contentURL={contentURL}\r\n            contentText={contentText}\r\n            contentImage={contentImage}\r\n            host={host}\r\n            title={title}\r\n            location={location}\r\n            date={date}\r\n            startTime={startTime}\r\n            endTime={endTime}\r\n            _id={_id}\r\n            postAuthor={postAuthor}\r\n            userName={userName}\r\n            hasLiked={hasLiked}\r\n          />\r\n\r\n          <BottomBar\r\n            tags={tags}\r\n            _id={_id}\r\n            searchTerm={searchTerm}\r\n            searchedTag={searchedTag}\r\n          />\r\n        </TouchableOpacity>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n}\r\n","import {\r\n  Button,\r\n  Divider,\r\n  Icon,\r\n  Layout,\r\n  List,\r\n  ListItem,\r\n  Spinner,\r\n  Text,\r\n  useTheme,\r\n} from '@ui-kitten/components';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { FontAwesome5, MaterialIcons } from '@expo/vector-icons';\r\nimport Modal from 'react-native-modal';\r\n\r\nimport { useAppSelector } from '../../app/hooks';\r\nimport Header from '../../components/Header';\r\nimport {\r\n  discoverApiSlice,\r\n  postsAdapter,\r\n  postsSelectors,\r\n  useLazyGetDiscoverPostsQuery,\r\n} from '../api/discoverApi';\r\nimport { Keyboard, Platform, TouchableOpacity } from 'react-native';\r\nimport { selectDarkMode, selectUserKey } from '../../app/appDataSlice';\r\nimport TextCard from './Cards/TextCard';\r\nimport { DiscoverPost } from '../../app/types';\r\nimport ImageCard from './Cards/ImageCard';\r\nimport { usersApiSlice } from '../api/usersApi';\r\nimport SponsorCard from './Cards/SponsorCard';\r\nimport EventCard from './Cards/EventCard';\r\nimport {LinearGradient} from \"expo-linear-gradient\";\r\n\r\nexport default function PostsList({\r\n  navigation,\r\n  tag,\r\n  searchTerm,\r\n  recentSearches,\r\n  handleRemoveRecentSearch,\r\n  handleClickRecentSearch,\r\n  route\r\n}: {\r\n  navigation: any;\r\n  tag?: string;\r\n  searchTerm?: string;\r\n  recentSearches?: string[];\r\n  sponsor?: boolean;\r\n  handleRemoveRecentSearch?: (searchTerm: string) => void;\r\n  handleClickRecentSearch?: (searchTerm: string) => void;\r\n  route?: { params: { sponsor: boolean } };\r\n}) {\r\n\r\n  const theme = useTheme();\r\n  const userKey = useAppSelector(selectUserKey);\r\n  const darkMode = useAppSelector(selectDarkMode);\r\n\r\n  const {\r\n    data: { userName },\r\n  } = usersApiSlice.endpoints.getUserInfo.useQueryState(userKey);\r\n\r\n  const pageNumber = useRef(0);\r\n  const [fetchPosts, { isFetching, isLoading, isError }] =\r\n    useLazyGetDiscoverPostsQuery();\r\n\r\n  const { posts, hasMorePages } =\r\n    discoverApiSlice.endpoints.getDiscoverPosts.useQueryState(\r\n      { pageNumber: 1, userKey, userName, tag, searchTerm, },\r\n      {\r\n        selectFromResult: (result) => {\r\n          return {\r\n            hasMorePages: result.data?.hasMorePages,\r\n            posts: postsSelectors.selectAll(\r\n              result.data ?? postsAdapter.getInitialState()\r\n            ),\r\n          };\r\n        },\r\n      }\r\n    );\r\n\r\n  const fetchFirstPage = async () => {\r\n    pageNumber.current = 1;\r\n    await fetchPosts({\r\n      userKey,\r\n      pageNumber: pageNumber.current,\r\n      userName,\r\n      tag,\r\n      searchTerm,\r\n      // sponsor,\r\n    });\r\n  };\r\n\r\n  const fetchMorePosts = async () => {\r\n    if (!hasMorePages || isFetching) return;\r\n    pageNumber.current++;\r\n    await fetchPosts({\r\n      userKey,\r\n      pageNumber: pageNumber.current,\r\n      userName,\r\n      tag,\r\n      searchTerm,\r\n      // sponsor,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchFirstPage();\r\n  }, [searchTerm, tag]);\r\n\r\n  const PinIcon = (\r\n    <Layout\r\n      style={{\r\n        flexDirection: 'row',\r\n        marginBottom: 0,\r\n        marginTop: 10,\r\n        marginLeft: 10,\r\n      }}>\r\n      <MaterialIcons\r\n        name=\"push-pin\"\r\n        size={20}\r\n        color={theme['color-primary-500']}\r\n      />\r\n      <Text style={{ color: theme['color-primary-500'] }}>pinned</Text>\r\n    </Layout>\r\n  );\r\n\r\n  // Render Content\r\n\r\n  const renderItem = ({ item }: { item: DiscoverPost }) => {\r\n    const commonProps = {\r\n      title: item.title,\r\n      tags: item.tags,\r\n      _id: item._id,\r\n      postAuthor: item.userName,\r\n      navigation,\r\n      key: item._id,\r\n      searchTerm,\r\n      searchedTag: tag,\r\n      pinnedIcon: item.pinned ? PinIcon : null,\r\n    };\r\n\r\n    if (item.isSponsor) {\r\n      const sponsorProps = JSON.parse(item.contentText);\r\n      return <SponsorCard data={sponsorProps} navigation={navigation} />;\r\n    }\r\n\r\n    switch (item.type) {\r\n      case 'contentText':\r\n        return (\r\n          <TextCard\r\n            {...commonProps}\r\n            body={item.contentText}\r\n            emoji={item.emoji}\r\n            isUrl={false}\r\n          />\r\n        );\r\n      case 'contentUrl':\r\n        return (\r\n          <TextCard\r\n            {...commonProps}\r\n            body={item.contentUrl}\r\n            emoji={item.emoji}\r\n            isUrl={true}\r\n          />\r\n        );\r\n      case 'contentImage':\r\n        return (\r\n          <ImageCard\r\n            {...commonProps}\r\n            hasLiked={item.hasLiked}\r\n            imageId={item.contentImage}\r\n            postAuthor={item.userName}\r\n            userName={userName}\r\n          />\r\n        );\r\n        case 'contentEvent':\r\n          return (\r\n            <EventCard\r\n              location={item.location}\r\n              date={item.date}\r\n              startTime={item.startTime}\r\n              postAuthor={item.userName}\r\n              userName={userName}\r\n              contentURL={item.contentUrl}\r\n              contentText={item.contentText}\r\n              contentImage={item.contentImage}\r\n              endTime={item.endTime}\r\n              hasLiked={item.hasLiked}\r\n              host={item.host}\r\n              {...commonProps}\r\n              />)\r\n\r\n      default:\r\n        console.log('Tried to load an unknown post type:', item?.type);\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const renderRecentSearch = ({ item }: { item: string }) => {\r\n    return (\r\n      <ListItem\r\n        onPress={() => {\r\n          handleClickRecentSearch(item);\r\n          Keyboard.dismiss();\r\n        }}\r\n        style={{\r\n          paddingVertical: 10,\r\n          marginVertical: 0,\r\n          backgroundColor: 'transparent',\r\n        }}\r\n        title={item}\r\n        accessoryLeft={() => (\r\n          <Icon\r\n            name=\"clock\"\r\n            style={{\r\n              height: 20,\r\n              color: theme['color-basic-400'],\r\n              marginHorizontal: 10,\r\n            }}\r\n          />\r\n        )}\r\n        accessoryRight={(props) => (\r\n          <Button\r\n            appearance=\"ghost\"\r\n            onPress={() => handleRemoveRecentSearch(item)}\r\n            accessoryLeft={<Icon {...props} name=\"x\" pack=\"feather\" />}\r\n          />\r\n        )}\r\n      />\r\n    );\r\n  };\r\n\r\n  const FooterSpinner = () => {\r\n    if (isFetching) {\r\n      return (\r\n        <Layout style={{ alignItems: 'center', paddingVertical: 10 }}>\r\n          <Spinner />\r\n        </Layout>\r\n      );\r\n    }\r\n  };\r\n\r\n  let content = <></>;\r\n  if (isLoading) {\r\n    content = (\r\n      <Layout style={{ marginTop: 20, alignItems: 'center' }}>\r\n        <Spinner />\r\n      </Layout>\r\n    );\r\n  } else if (isError) {\r\n    content = (\r\n      <Layout style={{ alignItems: 'center', marginTop: 20 }}>\r\n        <FontAwesome5\r\n          name=\"exclamation\"\r\n          size={50}\r\n          color={theme['color-danger-500']}\r\n        />\r\n        <Text style={{ textAlign: 'center', fontSize: 20 }}>\r\n          Error loading posts\r\n        </Text>\r\n      </Layout>\r\n    );\r\n  } else if (posts.length === 0) {\r\n    content = (\r\n      <Layout style={{ alignItems: 'center', marginTop: 20 }}>\r\n        <FontAwesome5\r\n          name=\"sad-tear\"\r\n          size={50}\r\n          color={theme['color-danger-500']}\r\n        />\r\n        <Text style={{ textAlign: 'center', fontSize: 20 }}>\r\n          No posts found\r\n        </Text>\r\n      </Layout>\r\n    );\r\n  } else if (searchTerm === '' && tag === '') {\r\n    if (recentSearches?.length > 0) {\r\n      content = (\r\n        <Layout style={{ flex: 1 }}>\r\n          <List\r\n            keyboardShouldPersistTaps=\"handled\"\r\n            ListHeaderComponent={() => (\r\n              <Text\r\n                status=\"success\"\r\n                style={{ fontStyle: 'italic', marginLeft: 20 }}>\r\n                Recent Searches\r\n              </Text>\r\n            )}\r\n            data={Array.from(recentSearches)}\r\n            renderItem={renderRecentSearch}\r\n          />\r\n        </Layout>\r\n      );\r\n    } else {\r\n      content = (\r\n        <Layout style={{ flex: 1 }}>\r\n          <Layout style={{ marginTop: 30, justifyContent: 'center' }}>\r\n            <Text style={{ textAlign: 'center', fontSize: 20 }}>\r\n              Search for posts\r\n            </Text>\r\n            <Text\r\n              style={{\r\n                textAlign: 'center',\r\n                fontSize: 16,\r\n                color: theme['color-basic-500'],\r\n              }}>\r\n              Search by title, tag, or college\r\n            </Text>\r\n          </Layout>\r\n        </Layout>\r\n      );\r\n    }\r\n  } else {\r\n    content = (\r\n        Platform.OS === 'web' ?\r\n            <LinearGradient\r\n                colors={\r\n                    darkMode\r\n                        ? [theme['color-basic-1100'], theme['color-basic-1100']]\r\n                        : [theme['color-primary-500'], theme['color-success-500']]\r\n                }\r\n                style={{ width: '100%', margin: 0, alignItems: 'center', flex: 1 }}\r\n                start={{ x: 0, y: 0 }}\r\n                end={{ x: 1, y: 0.4 }}>\r\n                <List\r\n                    contentContainerStyle={{ width: '100%', alignSelf: 'center', paddingHorizontal: 10}}\r\n                    onRefresh={fetchFirstPage}\r\n                    refreshing={isLoading}\r\n                    data={posts}\r\n                    keyExtractor={(item) => item._id}\r\n                    renderItem={renderItem}\r\n                    onEndReachedThreshold={0.5}\r\n                    onEndReached={fetchMorePosts}\r\n                    ListFooterComponent={FooterSpinner}\r\n                    showsVerticalScrollIndicator={false}\r\n                    ItemSeparatorComponent={null}\r\n                />\r\n            </LinearGradient> :\r\n          <Layout style={{ flex: 1 }}>\r\n            <List\r\n              contentContainerStyle={{ width: '100%' }}\r\n              onRefresh={fetchFirstPage}\r\n              refreshing={isLoading}\r\n              data={posts}\r\n              keyExtractor={(item) => item._id}\r\n              renderItem={renderItem}\r\n              onEndReachedThreshold={0.5}\r\n              onEndReached={fetchMorePosts}\r\n              ListFooterComponent={FooterSpinner}\r\n              showsVerticalScrollIndicator={false}\r\n              ItemSeparatorComponent={Divider}\r\n            />\r\n          </Layout>\r\n    );\r\n  }\r\n\r\n  return <Layout style={{ flex: 1 }}>{content}</Layout>;\r\n}\r\n","import { Card, Modal, Text, Button } from '@ui-kitten/components';\r\nimport { StyleSheet } from 'react-native';\r\n\r\nexport default function DisabledFieldModal({setShowModal}) {\r\n  return (\r\n    <Modal\r\n      visible={true}\r\n      backdropStyle={myStyles.backdrop}\r\n      style={{ width: '75%' }}\r\n      onBackdropPress={() => setShowModal(false)}>\r\n      <Card disabled={true}>\r\n        <Text style={{ fontSize: 15, paddingTop: 5, paddingBottom: 10 }}>\r\n          Sorry, we are experiencing technical difficulties and this\r\n          functionality is currently undergoing maintenance. Please try again\r\n          later.\r\n        </Text>\r\n        <Button\r\n          onPress={() => {\r\n            setShowModal(false);\r\n          }}>\r\n          Dismiss\r\n        </Button>\r\n      </Card>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nconst myStyles = StyleSheet.create({\r\n  backdrop: {\r\n    backgroundColor: 'rgba(0, 0, 0, 0.65)',\r\n  },\r\n});\r\n","import { TouchableOpacity, Alert } from 'react-native';\r\nimport { Layout, Text, useTheme } from '@ui-kitten/components';\r\nimport { useState } from 'react';\r\n\r\nimport { FontAwesome } from '@expo/vector-icons';\r\nimport { stringToEmoji } from '../../../functions';\r\nimport { useAppSelector } from '../../../app/hooks';\r\nimport { selectDarkMode, selectUserKey } from '../../../app/appDataSlice';\r\nimport {\r\n  useDeleteCommentMutation,\r\n  useLikeCommentMutation,\r\n} from '../../api/discoverApi';\r\n\r\nexport default function Comment({\r\n  body,\r\n  postId,\r\n  commentId,\r\n  isOwnComment,\r\n  userName,\r\n  numLikes,\r\n  hasLiked,\r\n  searchTerm,\r\n  searchedTag,\r\n}) {\r\n  const theme = useTheme();\r\n  const userKey = useAppSelector(selectUserKey);\r\n  const darkMode = useAppSelector(selectDarkMode);\r\n  const [isExpanded, setIsExpanded] = useState(true);\r\n  const [likeComment] = useLikeCommentMutation();\r\n  const [deleteComment, deleteCommentLoading] = useDeleteCommentMutation();\r\n\r\n  const handleLikeComment = async () => {\r\n    try {\r\n      await likeComment({\r\n        commentId,\r\n        postId,\r\n        userKey,\r\n        userName,\r\n        searchTerm,\r\n        tag: searchedTag,\r\n      }).unwrap();\r\n    } catch (error) {\r\n      console.warn(\"Couldn't like comment\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteComment = () => {\r\n    try {\r\n      deleteComment({\r\n        commentId,\r\n        postId,\r\n        userKey,\r\n        userName,\r\n        searchTerm,\r\n        tag: searchedTag,\r\n      }).unwrap();\r\n    } catch (error) {\r\n      console.warn(\"Couldn't delete comment\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      style={{ flexDirection: 'row', marginVertical: 10, marginHorizontal: 15 }}\r\n      onPress={() => setIsExpanded(!isExpanded)}\r\n      onLongPress={() => {\r\n        if (isOwnComment) {\r\n          Alert.alert('', body, [\r\n            {\r\n              text: 'Cancel',\r\n              style: 'cancel',\r\n            },\r\n            {\r\n              text: 'Delete',\r\n              onPress: handleDeleteComment,\r\n            },\r\n          ]);\r\n        }\r\n      }}>\r\n      <Layout\r\n        style={{\r\n          height: '100%',\r\n          flexDirection: 'row',\r\n          flex: 11,\r\n        }}>\r\n        <Layout\r\n          style={{\r\n            borderRadius: 100,\r\n            width: 35,\r\n            height: 35,\r\n            marginRight: 10,\r\n            backgroundColor: darkMode\r\n              ? theme['color-basic-600']\r\n              : theme['color-basic-300'],\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}>\r\n          <Text style={{ fontSize: 15 }}>{stringToEmoji(body)}</Text>\r\n        </Layout>\r\n\r\n        <Text style={{ fontWeight: 'normal', flex: 1, paddingTop: 7 }}>\r\n          {`  `}\r\n          {isExpanded || body.length <= 50 ? body : `${body.slice(0, 50)}...`}\r\n        </Text>\r\n      </Layout>\r\n\r\n      <TouchableOpacity\r\n        style={{\r\n          flexDirection: 'row',\r\n          alignSelf: 'center',\r\n          alignItems: 'center',\r\n        }}\r\n        onPress={handleLikeComment}>\r\n        <Text style={{ padding: 5, fontSize: 15 }}>{numLikes}</Text>\r\n        <FontAwesome\r\n          size={15}\r\n          color={\r\n            hasLiked ? theme['color-primary-500'] : theme['color-basic-400']\r\n          }\r\n          name=\"heart\"\r\n        />\r\n      </TouchableOpacity>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n","import { A } from '@expo/html-elements';\r\nimport { Input, Text } from '@ui-kitten/components';\r\nimport { Dimensions } from 'react-native';\r\nimport { selectDarkMode } from '../../../app/appDataSlice';\r\nimport { useAppSelector } from '../../../app/hooks';\r\nimport { validURL } from '../../../functions';\r\n\r\nconst windowWidth = Dimensions.get('window').width;\r\n\r\nexport default function SinglePostBody({ type, body, handleLikePost }) {\r\n  const darkMode = useAppSelector(selectDarkMode);\r\n\r\n  if (type === 'contentText') {\r\n    return (\r\n      <Input\r\n        scrollEnabled={false}\r\n        multiline\r\n        disabled\r\n        value={body}\r\n        style={{\r\n          backgroundColor: 'transparent',\r\n          borderWidth: 0,\r\n        }}\r\n        textStyle={{ color: darkMode ? 'white' : 'black' }}\r\n      />\r\n    );\r\n  } else if (type === 'contentUrl') {\r\n    if (validURL(body)) {\r\n      return (\r\n        <A style={{ color: 'blue' }} href={body}>\r\n          {body}\r\n        </A>\r\n      );\r\n    } else {\r\n      return <Text>{body}</Text>;\r\n    }\r\n  }\r\n  return <></>;\r\n}\r\n","import { Layout, Spinner } from '@ui-kitten/components';\r\n\r\nexport default function FullPageSpinner({opacity = 0.4}) {\r\n  return (\r\n    <Layout\r\n      style={{\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '100%',\r\n        height: '100%',\r\n        position: 'absolute',\r\n        backgroundColor: 'black',\r\n        flex: 1,\r\n        opacity,\r\n        zIndex: 100,\r\n      }}>\r\n      <Spinner size=\"large\" />\r\n    </Layout>\r\n  );\r\n}\r\n","import {\r\n  Layout,\r\n  Text,\r\n  Card,\r\n  Button,\r\n  List,\r\n  Input,\r\n  useTheme,\r\n  Spinner,\r\n  Divider,\r\n} from '@ui-kitten/components';\r\nimport { useEffect, useState } from 'react';\r\nimport {\r\n  Keyboard,\r\n  TouchableWithoutFeedback,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n  RefreshControl,\r\n} from 'react-native';\r\nimport { FontAwesome5 } from '@expo/vector-icons';\r\n\r\nimport { selectDarkMode, selectUserKey } from '../../../app/appDataSlice';\r\nimport { useAppSelector } from '../../../app/hooks';\r\nimport DisabledFieldModal from '../../../components/DisabledOptionModal';\r\nimport {\r\n  discoverApiSlice,\r\n  postsAdapter,\r\n  postsSelectors,\r\n  useAddCommentMutation,\r\n  useDeleteDiscoverPostMutation,\r\n  useLazyGetPostByIdQuery,\r\n  useLikePostMutation,\r\n} from '../../api/discoverApi';\r\nimport { usersApiSlice } from '../../api/usersApi';\r\nimport BottomBar from '../BottomBar';\r\nimport Comment from './Comment';\r\nimport SinglePostBody from './SinglePostBody';\r\nimport { stringToEmoji } from '../../../functions';\r\nimport FullPageSpinner from '../../../components/FullPageSpinner';\r\nimport { useAddClassMutation } from '../../api/classPagesApi';\r\nimport { MAX_WIDTH_WEB } from '../../../constants/discover';\r\nimport ImageComponent from '../ImageComponent';\r\nimport {LinearGradient} from \"expo-linear-gradient\";\r\n\r\nexport default function SinglePost({\r\n  route: {\r\n    params: { _id, searchTerm, searchedTag },\r\n  },\r\n  navigation,\r\n}) {\r\n  const theme = useTheme();\r\n  const darkMode = useAppSelector(selectDarkMode);\r\n  const userKey = useAppSelector(selectUserKey);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [comment, setComment] = useState('');\r\n  const [inputFocused, setInputFocused] = useState(false);\r\n\r\n  const [likePost] = useLikePostMutation();\r\n  const [refreshPost, { isLoading: refreshPostLoading }] =\r\n    useLazyGetPostByIdQuery();\r\n  const [addComment, { isLoading: addCommentLoading }] =\r\n    useAddCommentMutation();\r\n  const [deletePost, { isLoading: deletePostLoading }] =\r\n    useDeleteDiscoverPostMutation();\r\n  const { data: userData } =\r\n    usersApiSlice.endpoints.getUserInfo.useQueryState(userKey);\r\n  const post = discoverApiSlice.endpoints.getDiscoverPosts.useQueryState(\r\n    { pageNumber: 1, userKey, userName: userData.userName },\r\n    {\r\n      selectFromResult: (result) =>\r\n        postsSelectors.selectById(\r\n          result.data ?? postsAdapter.getInitialState(),\r\n          _id\r\n        ),\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!post) navigation.goBack();\r\n  }, [post]);\r\n\r\n  const handleRefreshPost = async () => {\r\n    try {\r\n      await refreshPost({\r\n        postId: _id,\r\n        userKey,\r\n        userName: userData.userName,\r\n        searchTerm,\r\n        tag: searchedTag,\r\n      }).unwrap();\r\n    } catch (error) {\r\n      console.warn(\"Couldn't refresh post\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeletePost = async () => {\r\n    try {\r\n      await deletePost({\r\n        _id,\r\n        userKey,\r\n        userName: userData.userName,\r\n        title: post.title,\r\n        searchTerm,\r\n        tag: searchedTag,\r\n      }).unwrap();\r\n    } catch (error) {\r\n      console.warn(\"Couldn't delete post\", error);\r\n    }\r\n  };\r\n\r\n  const handleSubmitComment = async () => {\r\n    try {\r\n      await addComment({\r\n        _id,\r\n        userKey,\r\n        userName: userData.userName,\r\n        text: comment,\r\n        searchTerm,\r\n        tag: searchedTag,\r\n      }).unwrap();\r\n      setComment('');\r\n      setInputFocused(false);\r\n      Keyboard.dismiss();\r\n    } catch (e) {\r\n      console.warn('Error submitting comment', e);\r\n    }\r\n  };\r\n\r\n  const handlePressLike = async () => {\r\n    try {\r\n      await likePost({\r\n        userKey,\r\n        _id,\r\n        title: post.title,\r\n        postAuthor: post.userName,\r\n        userName: userData.userName,\r\n        searchTerm,\r\n        tag: searchedTag,\r\n      }).unwrap();\r\n    } catch (error) {\r\n      console.log('Error liking post:', error);\r\n    }\r\n  };\r\n\r\n  let body = <></>;\r\n  if (post?.type === 'contentImage') {\r\n    body = (\r\n      <ImageComponent\r\n        apiInfo={{\r\n          userKey,\r\n          _id,\r\n          title: post.title,\r\n          postAuthor: post.userName,\r\n          userName: userData.userName,\r\n          searchTerm,\r\n          searchedTag,\r\n        }}\r\n        hasLiked={post.hasLiked}\r\n        imageId={post.contentImage}\r\n      />\r\n    );\r\n  } else if (post?.type === 'contentText' || post?.type === 'contentUrl') {\r\n    body = (\r\n      <SinglePostBody\r\n        handleLikePost={handlePressLike}\r\n        type={post.type}\r\n        body={post.contentText || post.contentUrl}\r\n      />\r\n    );\r\n  }\r\n\r\n  const TopContent = () => {\r\n    return (\r\n      <Layout style={{ maxWidth: MAX_WIDTH_WEB, alignSelf: 'center' }}>\r\n        <Card\r\n          disabled\r\n          style={{ margin: 8, borderWidth: 0 }}\r\n          header={\r\n            <Layout>\r\n              <Text style={{ fontWeight: 'bold', fontSize: 20 }}>\r\n                {post.title}\r\n              </Text>\r\n            </Layout>\r\n          }\r\n          footer={\r\n            <Layout style={{ margin: 0, padding: 0 }}>\r\n              <BottomBar\r\n                commentIconShown={false}\r\n                tags={post.tags}\r\n                _id={post._id}\r\n              />\r\n            </Layout>\r\n          }>\r\n          {body}\r\n        </Card>\r\n        {post.userName === userData.userName ? (\r\n          <Layout style={{ flexDirection: 'row', width: '100%' }}>\r\n            <Button\r\n              status=\"danger\"\r\n              style={{ margin: 8, flex: 1 }}\r\n              onPress={handleDeletePost}>\r\n              Delete Post\r\n            </Button>\r\n            {/* <Button style={{ margin: 8, flex: 1 }} disabled>\r\n              Edit Post\r\n            </Button> */}\r\n          </Layout>\r\n        ) : null}\r\n\r\n        <Card disabled style={{ borderWidth: 0 }}>\r\n          <Text\r\n            style={{\r\n              fontWeight: '600',\r\n            }}>{`Comments (${post.comments.length})`}</Text>\r\n        </Card>\r\n      </Layout>\r\n    );\r\n  };\r\n\r\n  if (!post) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n      <LinearGradient\r\n          colors={\r\n              darkMode\r\n                  ? [theme['color-basic-1100'], theme['color-basic-1100']]\r\n                  : [theme['color-primary-500'], theme['color-success-500']]\r\n          }\r\n          style={{ width: '100%', margin: 0, alignItems: 'center', flex: 1 }}\r\n          start={{ x: 0, y: 0 }}\r\n          end={{ x: 1, y: 0.4 }}>\r\n    <Layout style={{ flex: 1 }}>\r\n      {showModal && <DisabledFieldModal setShowModal={setShowModal} />}\r\n      {/* Render Comments */}\r\n      <List\r\n        onRefresh={handleRefreshPost}\r\n        showsVerticalScrollIndicator={false}\r\n        refreshing={refreshPostLoading}\r\n        ListHeaderComponent={TopContent}\r\n        contentContainerStyle={{\r\n          marginHorizontal: 10,\r\n          maxWidth: 700,\r\n          alignSelf: 'center',\r\n        }}\r\n        style={{ backgroundColor: 'transparent' }}\r\n        data={post.comments}\r\n        ItemSeparatorComponent={Divider}\r\n        renderItem={({ item }) => (\r\n          <Comment\r\n            body={item.text}\r\n            postId={post._id}\r\n            commentId={item._id}\r\n            numLikes={item.numLikes}\r\n            hasLiked={item.hasLiked}\r\n            userName={userData.userName}\r\n            isOwnComment={item.userName === userData.userName}\r\n            searchTerm={searchTerm}\r\n            searchedTag={searchedTag}\r\n          />\r\n        )}\r\n        keyExtractor={(comment) => {\r\n          return comment._id;\r\n        }}\r\n      />\r\n      <Layout\r\n        style={{\r\n          flexDirection: 'row',\r\n          alignItems: 'center',\r\n          height: 55,\r\n          bottom: 0,\r\n          width: '100%',\r\n          paddingVertical: 10,\r\n          paddingRight: 10,\r\n          borderColor: darkMode\r\n            ? theme['color-basic-500']\r\n            : theme['color-basic-300'],\r\n          borderTopWidth: 1,\r\n        }}>\r\n        <Layout\r\n          style={{\r\n            flex: 1,\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n          }}>\r\n          <Layout\r\n            style={{\r\n              borderRadius: 100,\r\n              width: 35,\r\n              height: 35,\r\n              backgroundColor: darkMode\r\n                ? theme['color-basic-600']\r\n                : theme['color-basic-300'],\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n            }}>\r\n            <Text style={{ fontSize: 15 }}>\r\n              {stringToEmoji(userData.userName)}\r\n            </Text>\r\n          </Layout>\r\n        </Layout>\r\n\r\n        <Input\r\n          accessoryRight={\r\n            inputFocused ? (\r\n              <TouchableOpacity onPress={handleSubmitComment}>\r\n                <FontAwesome5\r\n                  name=\"arrow-alt-circle-right\"\r\n                  size={22}\r\n                  color={theme['color-primary-500']}\r\n                />\r\n              </TouchableOpacity>\r\n            ) : null\r\n          }\r\n          style={{ flex: 7 }}\r\n          placeholder=\"Add a comment...\"\r\n          onFocus={() => setInputFocused(true)}\r\n          onBlur={() => setInputFocused(false)}\r\n          value={comment}\r\n          onChangeText={(text) => setComment(text)}\r\n          onSubmitEditing={handleSubmitComment}\r\n        />\r\n      </Layout>\r\n      {(deletePostLoading || addCommentLoading) && <FullPageSpinner />}\r\n    </Layout>\r\n      </LinearGradient>\r\n  );\r\n}\r\n","import {\r\n  Alert,\r\n  Image,\r\n  TouchableOpacity,\r\n  Dimensions,\r\n  Platform,\r\n} from 'react-native';\r\nimport React from 'react';\r\nimport { Layout, Text, Input } from '@ui-kitten/components';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport { FontAwesome } from '@expo/vector-icons';\r\nimport { Feather } from '@expo/vector-icons';\r\nimport Toast from 'react-native-root-toast';\r\n\r\nconst windowWidth = Dimensions.get('window').width;\r\n\r\nexport default function CreateImage({\r\n  discoverPostInputs,\r\n  setDiscoverPostInputs,\r\n  TagInput,\r\n  showTitle = true,\r\n}) {\r\n  const [imagePickerStatus, requestImagePickerPermission] =\r\n    ImagePicker.useMediaLibraryPermissions();\r\n  const [cameraStatus, requestCameraPermission] =\r\n    ImagePicker.useCameraPermissions();\r\n\r\n  const onPressCamera = async () => {\r\n    const response = await requestCameraPermission();\r\n    if (response.granted || cameraStatus.granted) {\r\n      let result = await ImagePicker.launchCameraAsync({\r\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n      });\r\n      if (!result.canceled) {\r\n        setDiscoverPostInputs({\r\n          ...discoverPostInputs,\r\n          contentImage: result.assets[0],\r\n        });\r\n      }\r\n    } else {\r\n      Alert.alert(\r\n        \"Permission to access camera is required. Please enable it in your phone's settings.\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const pickImage = async () => {\r\n    const response = await requestImagePickerPermission();\r\n    if (response.granted || imagePickerStatus.granted) {\r\n      let result = await ImagePicker.launchImageLibraryAsync({\r\n        allowsEditing: false,\r\n      });\r\n      if (!result.canceled) {\r\n        setDiscoverPostInputs({\r\n          ...discoverPostInputs,\r\n          contentImage: result.assets[0],\r\n        });\r\n\r\n        if (Platform.OS === 'android') {\r\n          Toast.show(\r\n            \"Don't worry if the image seems blurry on the sides.\",\r\n            {\r\n              duration: Toast.durations.LONG,\r\n              opacity: 1,\r\n              position: -100,\r\n              backgroundColor: 'grey',\r\n              shadow: false,\r\n            }\r\n          );\r\n        }\r\n      }\r\n    } else {\r\n      Alert.alert(\r\n        \"Permission to access camera roll is required. Please enable it in your phone's settings.\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const Title = (\r\n    <Layout\r\n      style={{\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-evenly',\r\n        alignItems: 'center',\r\n        marginTop: 15,\r\n      }}>\r\n      <Input\r\n        label=\"Title\"\r\n        placeholder=\"Post Title\"\r\n        value={discoverPostInputs?.title ? discoverPostInputs.title : ''}\r\n        style={{ flex: 5 }}\r\n        onChangeText={(newText) => {\r\n          setDiscoverPostInputs({\r\n            ...discoverPostInputs,\r\n            title: newText,\r\n          });\r\n        }}\r\n      />\r\n    </Layout>\r\n  );\r\n\r\n  let imagePicker = <></>;\r\n\r\n  if (discoverPostInputs?.contentImage) {\r\n    // Image Preview\r\n    imagePicker = (\r\n      <Layout\r\n        level=\"2\"\r\n        style={{\r\n          height: 300,\r\n          marginVertical: 10,\r\n          borderRadius: 10,\r\n          shadowColor: '#000',\r\n          shadowOffset: {\r\n            width: 0,\r\n            height: 5,\r\n          },\r\n          shadowOpacity: 0.34,\r\n          shadowRadius: 6.27,\r\n\r\n          elevation: 10,\r\n        }}>\r\n        <TouchableOpacity\r\n          onPress={() => {\r\n            setDiscoverPostInputs(null);\r\n          }}\r\n          style={{ position: 'absolute', right: 10, top: 5, zIndex: 1 }}>\r\n          <Feather name=\"x-circle\" size={30} color={'grey'} />\r\n        </TouchableOpacity>\r\n\r\n        <Image\r\n          source={{\r\n            uri: discoverPostInputs.contentImage.uri,\r\n          }}\r\n          style={{\r\n            borderRadius: 5,\r\n            width: '100%',\r\n            height: '100%',\r\n            resizeMode: 'contain',\r\n          }}\r\n        />\r\n      </Layout>\r\n    );\r\n  } else {\r\n    // Image Picker\r\n    imagePicker = (\r\n      <Layout style={{ flexDirection: 'row' }}>\r\n        <TouchableOpacity\r\n          onPress={() => {\r\n            pickImage();\r\n          }}\r\n          style={{\r\n            height: 80,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            flex: 1,\r\n            paddingVertical: 8,\r\n            flexDirection: 'row',\r\n          }}>\r\n          <Layout\r\n            level=\"2\"\r\n            style={{\r\n              flex: 1,\r\n              flexDirection: 'row',\r\n              height: '100%',\r\n              marginHorizontal: 10,\r\n              paddingVertical: 15,\r\n              paddingHorizontal: 5,\r\n              borderRadius: 8,\r\n              alignItems: 'center',\r\n              justifyContent: 'space-around',\r\n            }}>\r\n            <FontAwesome name=\"image\" size={25} color={'grey'} />\r\n            <Text>Select Image</Text>\r\n          </Layout>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n          onPress={onPressCamera}\r\n          style={{\r\n            height: 80,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            flex: 1,\r\n            paddingVertical: 8,\r\n            flexDirection: 'row',\r\n          }}>\r\n          <Layout\r\n            level=\"2\"\r\n            style={{\r\n              flex: 1,\r\n              flexDirection: 'row',\r\n              height: '100%',\r\n              marginHorizontal: 10,\r\n              paddingVertical: 15,\r\n              paddingHorizontal: 5,\r\n              borderRadius: 8,\r\n              alignItems: 'center',\r\n              justifyContent: 'space-around',\r\n            }}>\r\n            <FontAwesome name=\"camera\" size={25} color={'grey'} />\r\n            <Text>Use Camera</Text>\r\n          </Layout>\r\n        </TouchableOpacity>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {showTitle && Title}\r\n      {TagInput()}\r\n      {imagePicker}\r\n    </>\r\n  );\r\n}\r\n","import { Layout } from '@ui-kitten/components';\r\nimport React from 'react';\r\n\r\nexport default function WrapItems({ childStyle, children, ...LayoutProps }) {\r\n  return (\r\n    <Layout {...LayoutProps}>\r\n      {React.Children.map(children, (child) => (\r\n        <Layout style={childStyle}>{child}</Layout>\r\n      ))}\r\n    </Layout>\r\n  );\r\n}\r\n","import {\r\n  Button,\r\n  CheckBox,\r\n  Datepicker,\r\n  Divider,\r\n  Input,\r\n  Layout,\r\n  NativeDateService,\r\n  Text,\r\n} from '@ui-kitten/components';\r\nimport { useMemo, useState } from 'react';\r\nimport { Platform } from 'react-native';\r\nimport DateTimePicker from '@react-native-community/datetimepicker';\r\nimport { AntDesign } from '@expo/vector-icons';\r\n\r\nimport CreateImage from './CreateImagePost';\r\nimport { OptionalText } from './CreatePost';\r\nimport WrapItems from '../../../components/WrapItems';\r\n\r\nexport default function CreateEvent({\r\n  discoverPostInputs,\r\n  setDiscoverPostInputs,\r\n  TagInput,\r\n  startTime,\r\n  setStartTime,\r\n  endTime,\r\n  setEndTime,\r\n  date,\r\n  setDate,\r\n}) {\r\n  // Needed because Android date picker uses a modal\r\n  const [showTimePickerAndroid, setShowTimePickerAndroid] = useState(false);\r\n\r\n  const formatDateService = new NativeDateService('en', {\r\n    format: 'MM/DD/YYYY',\r\n  });\r\n  const timePickerOptions = useMemo(\r\n    () => ({\r\n      'Start Time': { time: startTime, setTime: setStartTime },\r\n      'End Time': { time: endTime, setTime: setEndTime },\r\n    }),\r\n    [startTime, setStartTime, endTime, setEndTime]\r\n  );\r\n\r\n  const formatAMPM = (date: Date) => {\r\n    let hours = date.getHours();\r\n    let minutes = date.getMinutes() as any;\r\n    const ampm = hours >= 12 ? 'pm' : 'am';\r\n    hours = hours % 12;\r\n    hours = hours ? hours : 12; // the hour '0' should be '12'\r\n    minutes = minutes < 10 ? '0' + minutes : minutes;\r\n    let strTime = hours + ':' + minutes + ' ' + ampm;\r\n    return strTime;\r\n  };\r\n\r\n  const Title = (\r\n    <Layout\r\n      style={{\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-evenly',\r\n        alignItems: 'center',\r\n        marginTop: 15,\r\n      }}>\r\n      <Input\r\n        label=\"Title\"\r\n        placeholder=\"Post Title\"\r\n        value={discoverPostInputs?.title ? discoverPostInputs.title : ''}\r\n        style={{ flex: 5 }}\r\n        onChangeText={(newText) => {\r\n          setDiscoverPostInputs({\r\n            ...discoverPostInputs,\r\n            title: newText,\r\n          });\r\n        }}\r\n      />\r\n    </Layout>\r\n  );\r\n\r\n  const TimePicker = () => {\r\n    if (Platform.OS === 'android') {\r\n      return (\r\n        <Layout\r\n          style={{\r\n            flexDirection: 'row',\r\n            justifyContent: 'space-around',\r\n          }}>\r\n          {Object.entries(timePickerOptions).map(\r\n            ([label, { time, setTime }], i) => (\r\n              <Layout key={i} style={{ alignItems: 'center' }}>\r\n                <Text category=\"label\" style={{ marginBottom: 5 }}>\r\n                  {label}\r\n                </Text>\r\n                <Button\r\n                  onPress={() => {\r\n                    setShowTimePickerAndroid(true);\r\n                  }}>\r\n                  {formatAMPM(time)}\r\n                </Button>\r\n                {showTimePickerAndroid && (\r\n                  <DateTimePicker\r\n                    mode=\"time\"\r\n                    onChange={(change, date) => {\r\n                      setTime(date);\r\n                      setShowTimePickerAndroid(false);\r\n                    }}\r\n                    value={time}\r\n                  />\r\n                )}\r\n              </Layout>\r\n            )\r\n          )}\r\n        </Layout>\r\n      );\r\n    }\r\n    if (Platform.OS === 'ios') {\r\n      return (\r\n        <Layout\r\n          style={{\r\n            flexDirection: 'row',\r\n            justifyContent: 'space-around',\r\n          }}>\r\n          {Object.entries(timePickerOptions).map(\r\n            ([label, { time, setTime }], i) => (\r\n              <Layout key={i} style={{ alignItems: 'center' }}>\r\n                <Text category=\"label\" style={{ marginBottom: 5 }}>\r\n                  {label}\r\n                </Text>\r\n\r\n                <DateTimePicker\r\n                  mode=\"time\"\r\n                  onChange={(change, date) => {\r\n                    setTime(date);\r\n                  }}\r\n                  value={time}\r\n                />\r\n              </Layout>\r\n            )\r\n          )}\r\n        </Layout>\r\n      );\r\n    }\r\n  };\r\n\r\n  if (Platform.OS === 'web') {\r\n    return (\r\n      <Text>\r\n        Creating Event Posts is not supported on the web. Download the app on\r\n        the App Store or Play Store to make an Event Post.\r\n      </Text>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <WrapItems childStyle={{ marginVertical: 10 }}>\r\n        {Title}\r\n        <Input\r\n          label={'Location'}\r\n          placeholder={'Ex: North Dorm, HMC'}\r\n          value={discoverPostInputs?.location}\r\n          onChangeText={(newText) => {\r\n            setDiscoverPostInputs({\r\n              ...discoverPostInputs,\r\n              location: newText,\r\n            });\r\n          }}\r\n        />\r\n        <Datepicker\r\n          label={'Date'}\r\n          dateService={formatDateService}\r\n          onSelect={(nextDate) => setDate(nextDate)}\r\n          date={date}\r\n          placement=\"top\"\r\n        />\r\n        <TimePicker />\r\n        <Layout style={{ padding: 6 }}>\r\n          <Divider />\r\n          <AntDesign name=\"caretdown\" style={{ position: 'absolute' }} />\r\n          <AntDesign\r\n            name=\"caretdown\"\r\n            style={{ position: 'absolute', right: 0 }}\r\n          />\r\n          <Layout\r\n            style={{ position: 'absolute', right: '44%', marginBottom: 6 }}>\r\n            <Text appearance=\"hint\">Optional</Text>\r\n          </Layout>\r\n        </Layout>\r\n\r\n        <Layout>\r\n          <Input\r\n            label=\"Link\"\r\n            placeholder=\"www.example.com\"\r\n            style={{ marginBottom: 10 }}\r\n            value={\r\n              discoverPostInputs?.contentUrl\r\n                ? discoverPostInputs.contentUrl\r\n                : ''\r\n            }\r\n            onChangeText={(newText) => {\r\n              setDiscoverPostInputs({\r\n                ...discoverPostInputs,\r\n                contentUrl: newText,\r\n              });\r\n            }}\r\n          />\r\n          <Input\r\n            label={'Host'}\r\n            placeholder={'Ex: John Doe'}\r\n            style={{ marginBottom: 5 }}\r\n            value={discoverPostInputs?.host}\r\n            onChangeText={(newText) => {\r\n              setDiscoverPostInputs({\r\n                ...discoverPostInputs,\r\n                host: newText,\r\n              });\r\n            }}\r\n          />\r\n\r\n          <Input\r\n            label={'Description'}\r\n            multiline\r\n            placeholder={'Describe the event...'}\r\n            style={{ marginVertical: 10 }}\r\n            value={discoverPostInputs?.description}\r\n            onChangeText={(newText) => {\r\n              setDiscoverPostInputs({\r\n                ...discoverPostInputs,\r\n                description: newText,\r\n              });\r\n            }}\r\n          />\r\n\r\n          <CreateImage\r\n            showTitle={false}\r\n            {...{ discoverPostInputs, setDiscoverPostInputs, TagInput }}\r\n          />\r\n        </Layout>\r\n      </WrapItems>\r\n    </Layout>\r\n  );\r\n}\r\n","import {\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  TouchableWithoutFeedback,\r\n  Keyboard,\r\n  ScrollView,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n} from 'react-native';\r\nimport React, { useState } from 'react';\r\nimport {\r\n  Text,\r\n  Input,\r\n  Select,\r\n  SelectItem,\r\n  IndexPath,\r\n  Layout,\r\n  Button,\r\n  Spinner,\r\n  useTheme,\r\n  CheckBox,\r\n  Divider,\r\n} from '@ui-kitten/components';\r\nimport { FontAwesome5 } from '@expo/vector-icons';\r\n\r\nimport CreateImage from './CreateImagePost';\r\nimport {\r\n  tagIndices,\r\n  adminTagIndices,\r\n  postOptions,\r\n} from '../../../constants/discover';\r\nimport { useCreateDiscoverPostMutation } from '../../api/discoverApi';\r\nimport { useAppSelector } from '../../../app/hooks';\r\nimport { usersApiSlice } from '../../api/usersApi';\r\nimport Toast from 'react-native-root-toast';\r\nimport { selectDarkMode } from '../../../app/appDataSlice';\r\nimport CreateEventPost from './CreateEventPost';\r\nimport { showToast } from '../../../functions';\r\n\r\nexport const OptionalText = () => (\r\n  <Text\r\n    style={{\r\n      alignSelf: 'flex-end',\r\n      marginRight: 5,\r\n      color: 'grey',\r\n      fontSize: 11,\r\n    }}>\r\n    Optional\r\n  </Text>\r\n);\r\n\r\nexport default function CreatePost() {\r\n  const theme = useTheme();\r\n  const darkMode = useAppSelector(selectDarkMode);\r\n  const userKey = useAppSelector((state) => state.appData.secure.userKey);\r\n  const {\r\n    data: { userName, permissionLevel },\r\n  } = usersApiSlice.endpoints.getUserInfo.useQueryState(userKey);\r\n  const [discoverPostInputs, setDiscoverPostInputs] = useState(null);\r\n  const [startTime, setStartTime] = useState(new Date());\r\n  const [endTime, setEndTime] = useState(new Date());\r\n  const [date, setDate] = useState(new Date());\r\n  const [selectedTagIndex, setSelectedTagIndex] = useState<IndexPath[]>([]);\r\n  const [selectedPostTypeIndex, setSelectedPostTypeIndex] = useState(\r\n    new IndexPath(0)\r\n  );\r\n  const [error, setError] = useState(null);\r\n  const [isEmojiShown, setIsEmojiShown] = useState(false);\r\n\r\n  const [createDiscoverPost, { isLoading }] = useCreateDiscoverPostMutation();\r\n\r\n  const tagArray = permissionLevel === 'admin' ? adminTagIndices : tagIndices;\r\n\r\n  const submitEvent = async (tags: string[]) => {\r\n    // Validate date and time\r\n    if (date < new Date()) {\r\n      setError('Date must be in the future');\r\n      return;\r\n    }\r\n\r\n    if (startTime > endTime) {\r\n      setError('Start time must be before end time');\r\n      return;\r\n    }\r\n    \r\n\r\n    let formdata = new FormData();\r\n    formdata.append('type', 'contentEvent');\r\n    formdata.append('title', discoverPostInputs.title);\r\n    formdata.append('location', discoverPostInputs.location);\r\n    formdata.append('date', date.toISOString());\r\n    formdata.append('startTime', startTime.toISOString());\r\n    formdata.append('endTime', endTime.toISOString());\r\n\r\n    // Optional fields\r\n    if (discoverPostInputs.contentUrl)\r\n      formdata.append('contentUrl', discoverPostInputs.contentUrl);\r\n    if (discoverPostInputs.host)\r\n      formdata.append('host', discoverPostInputs.host);\r\n    if (discoverPostInputs.description)\r\n      formdata.append('contentText', discoverPostInputs.description);\r\n    if (discoverPostInputs.contentImage)\r\n      formdata.append('picture', {\r\n        uri: discoverPostInputs.contentImage.uri,\r\n        name: 'discoverImage',\r\n        type: 'image/jpg',\r\n      } as any);\r\n\r\n    tags.forEach((tag) => {\r\n      formdata.append('tags', tag);\r\n    });\r\n\r\n    try {\r\n      await createDiscoverPost({\r\n        type: 'contentEvent',\r\n        userKey,\r\n        userName,\r\n        postBody: formdata,\r\n      }).unwrap();\r\n\r\n      showToast('Posted Successfully!', theme['color-success-500']);\r\n\r\n      setDiscoverPostInputs(null);\r\n      setSelectedTagIndex([]);\r\n      setError(null);\r\n    } catch (e) {\r\n      console.warn(\"Couldn't post image\", e);\r\n      showToast('Post failed to send.', theme['color-warning-500']);\r\n    }\r\n  };\r\n\r\n  const submitImage = async (tags: string[]) => {\r\n    let formdata = new FormData();\r\n    formdata.append('title', discoverPostInputs.title);\r\n    formdata.append('type', 'contentImage');\r\n    formdata.append('picture', {\r\n      uri: discoverPostInputs.contentImage.uri,\r\n      name: 'discoverImage',\r\n      type: 'image/jpg',\r\n    } as any);\r\n    tags.forEach((tag) => {\r\n      formdata.append('tags', tag);\r\n    });\r\n\r\n    try {\r\n      await createDiscoverPost({\r\n        type: 'contentImage',\r\n        userKey,\r\n        userName,\r\n        postBody: formdata,\r\n      }).unwrap();\r\n\r\n      showToast('Posted Successfully!', theme['color-success-500']);\r\n\r\n      setDiscoverPostInputs(null);\r\n      setSelectedTagIndex([]);\r\n      setError(null);\r\n    } catch (e) {\r\n      console.warn(\"Couldn't post image\", e);\r\n      showToast('Post failed to send.', theme['color-warning-500']);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    //\r\n    // Validate Input\r\n    //\r\n    if (\r\n      (selectedPostTypeIndex.row === 1 &&\r\n        (!discoverPostInputs ||\r\n          !discoverPostInputs.title ||\r\n          !discoverPostInputs.contentText)) ||\r\n      (selectedPostTypeIndex.row === 2 &&\r\n        (!discoverPostInputs ||\r\n          !discoverPostInputs.title ||\r\n          !discoverPostInputs.contentUrl)) ||\r\n      (selectedPostTypeIndex.row === 0 &&\r\n        (!discoverPostInputs ||\r\n          !discoverPostInputs.title ||\r\n          !discoverPostInputs.contentImage)) ||\r\n      (selectedPostTypeIndex.row === 3 &&\r\n        (!discoverPostInputs ||\r\n          !discoverPostInputs.title ||\r\n          !discoverPostInputs.location ||\r\n          !date ||\r\n          !startTime ||\r\n          !endTime))\r\n    ) {\r\n      console.log('onsubmit error', discoverPostInputs);\r\n      setError('Please Fill in All Fields');\r\n      return;\r\n    }\r\n\r\n    //\r\n    // Submit Post\r\n    //\r\n\r\n    const tags = selectedTagIndex.map((index) => tagArray[index.row]);\r\n\r\n    // Special Case for Image Post\r\n    if (selectedPostTypeIndex.row === 0) {\r\n      submitImage(tags);\r\n      return;\r\n    }\r\n\r\n    // Special Case for Event Post\r\n    if (selectedPostTypeIndex.row === 3) {\r\n      submitEvent(tags);\r\n      return;\r\n    }\r\n\r\n    let type = '';\r\n    if (selectedPostTypeIndex.row === 1) {\r\n      type = 'contentText';\r\n    } else if (selectedPostTypeIndex.row === 2) {\r\n      type = 'contentUrl';\r\n    }\r\n    try {\r\n      await createDiscoverPost({\r\n        type,\r\n        userKey,\r\n        userName,\r\n        tags,\r\n        content: discoverPostInputs[type],\r\n        title: discoverPostInputs.title,\r\n        emoji: discoverPostInputs.emoji,\r\n      }).unwrap();\r\n\r\n      let toast = Toast.show('Posted Successfully!', {\r\n        duration: Toast.durations.LONG,\r\n        opacity: 1,\r\n        position: -100,\r\n        backgroundColor: theme['color-success-500'],\r\n        shadow: false,\r\n      });\r\n\r\n      setTimeout(function hideToast() {\r\n        Toast.hide(toast);\r\n      }, 7000);\r\n\r\n      setDiscoverPostInputs(null);\r\n      setSelectedTagIndex([]);\r\n      setError(null);\r\n    } catch (e) {\r\n      let toast = Toast.show('Post failed to send.', {\r\n        duration: Toast.durations.LONG,\r\n        opacity: 1,\r\n        position: -100,\r\n        backgroundColor: theme['color-warning-500'],\r\n        shadow: false,\r\n      });\r\n\r\n      setTimeout(function hideToast() {\r\n        Toast.hide(toast);\r\n      }, 4000);\r\n    }\r\n  };\r\n\r\n  const TagInput = () => {\r\n    const groupedData = selectedTagIndex.map((index) => {\r\n      return tagArray[index.row];\r\n    });\r\n    return (\r\n      <Layout>\r\n        <Select\r\n          label={'Tags'}\r\n          multiSelect\r\n          value={groupedData.join(', ')}\r\n          placeholder=\"Select Tags\"\r\n          selectedIndex={selectedTagIndex}\r\n          onSelect={(index: IndexPath[]) => {\r\n            setSelectedTagIndex(index);\r\n          }}\r\n          style={styles.input}>\r\n          {tagArray.map((title, i) => (\r\n            <SelectItem title={title} key={i} />\r\n          ))}\r\n        </Select>\r\n        <OptionalText />\r\n      </Layout>\r\n    );\r\n  };\r\n\r\n  const renderPostOptions = () => {\r\n    // Text\r\n    if (selectedPostTypeIndex.row === 1) {\r\n      return (\r\n        <>\r\n          <Layout\r\n            style={{\r\n              flexDirection: 'row',\r\n              justifyContent: 'space-evenly',\r\n              alignItems: 'center',\r\n              marginTop: 15,\r\n            }}>\r\n            {/* <EmojiToggle /> */}\r\n\r\n            <Input\r\n              placeholder=\"Post Title\"\r\n              onFocus={() => {\r\n                setIsEmojiShown(false);\r\n              }}\r\n              value={discoverPostInputs?.title ? discoverPostInputs.title : ''}\r\n              style={{ ...styles.input, flex: 5 }}\r\n              onChangeText={(newText) => {\r\n                setDiscoverPostInputs({\r\n                  ...discoverPostInputs,\r\n                  title: newText,\r\n                });\r\n              }}\r\n            />\r\n          </Layout>\r\n          {TagInput()}\r\n          <Input\r\n            multiline\r\n            placeholder=\"Post Body\"\r\n            onFocus={() => {\r\n              setIsEmojiShown(false);\r\n            }}\r\n            textStyle={{ minHeight: 100 }}\r\n            style={{ ...styles.input, alignSelf: 'center', width: '100%' }}\r\n            value={\r\n              discoverPostInputs?.contentText\r\n                ? discoverPostInputs.contentText\r\n                : ''\r\n            }\r\n            onChangeText={(newText) => {\r\n              setDiscoverPostInputs({\r\n                ...discoverPostInputs,\r\n                contentText: newText,\r\n              });\r\n            }}\r\n          />\r\n        </>\r\n      );\r\n    } else if (selectedPostTypeIndex.row === 2) {\r\n      // LINK\r\n      return (\r\n        <>\r\n          <Layout\r\n            style={{\r\n              flexDirection: 'row',\r\n              justifyContent: 'space-evenly',\r\n              alignItems: 'center',\r\n              marginTop: 15,\r\n            }}>\r\n            {/* <EmojiToggle /> */}\r\n            <Input\r\n              placeholder=\"Post Title\"\r\n              onFocus={() => {\r\n                setIsEmojiShown(false);\r\n              }}\r\n              value={discoverPostInputs?.title ? discoverPostInputs.title : ''}\r\n              style={{ ...styles.input, flex: 5 }}\r\n              onChangeText={(newText) => {\r\n                setDiscoverPostInputs({\r\n                  ...discoverPostInputs,\r\n                  title: newText,\r\n                });\r\n              }}\r\n            />\r\n          </Layout>\r\n\r\n          <Input\r\n            placeholder=\"Post Link\"\r\n            style={styles.input}\r\n            onFocus={() => {\r\n              setIsEmojiShown(false);\r\n            }}\r\n            value={\r\n              discoverPostInputs?.contentUrl\r\n                ? discoverPostInputs.contentUrl\r\n                : ''\r\n            }\r\n            onChangeText={(newText) => {\r\n              setDiscoverPostInputs({\r\n                ...discoverPostInputs,\r\n                contentUrl: newText,\r\n              });\r\n            }}\r\n          />\r\n          {/* {PostTypeInput} */}\r\n          {TagInput()}\r\n        </>\r\n      );\r\n    } else if (selectedPostTypeIndex.row === 0) {\r\n      // IMAGE\r\n      return (\r\n        <CreateImage\r\n          discoverPostInputs={discoverPostInputs}\r\n          setDiscoverPostInputs={setDiscoverPostInputs}\r\n          TagInput={TagInput}\r\n        />\r\n      );\r\n    } else if (selectedPostTypeIndex.row === 3) {\r\n      // EVENT\r\n      return (\r\n        <CreateEventPost\r\n          discoverPostInputs={discoverPostInputs}\r\n          setDiscoverPostInputs={setDiscoverPostInputs}\r\n          TagInput={TagInput}\r\n          startTime={startTime}\r\n          setStartTime={setStartTime}\r\n          endTime={endTime}\r\n          setEndTime={setEndTime}\r\n          date={date}\r\n          setDate={setDate}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout style={{ flex: 1 }}>\r\n      <KeyboardAvoidingView\r\n        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\r\n        style={{ flex: 1 }}>\r\n        <ScrollView style={{ flex: 1 }}>\r\n          <TouchableWithoutFeedback\r\n            style={{ flex: 1 }}\r\n            onPress={() => {\r\n              Keyboard.dismiss();\r\n            }}>\r\n            <Layout\r\n              style={{ flex: 1, marginBottom: 100, marginHorizontal: 16 }}>\r\n              <Select\r\n                status=\"success\"\r\n                label=\"Select Post Type\"\r\n                value={postOptions[selectedPostTypeIndex.row]}\r\n                selectedIndex={selectedPostTypeIndex}\r\n                onSelect={(index: IndexPath) => {\r\n                  setSelectedPostTypeIndex(index);\r\n                  setSelectedTagIndex([]);\r\n                  setDiscoverPostInputs(null);\r\n                  setError(null);\r\n                  setIsEmojiShown(false);\r\n                }}\r\n                style={styles.input}>\r\n                <SelectItem\r\n                  title=\"Image Post\"\r\n                  accessoryLeft={\r\n                    <FontAwesome5\r\n                      name=\"image\"\r\n                      size={17}\r\n                      color={darkMode ? '#fff' : '#000'}\r\n                    />\r\n                  }\r\n                />\r\n                <SelectItem\r\n                  title=\"Text Post\"\r\n                  accessoryLeft={\r\n                    <FontAwesome5\r\n                      name=\"file-alt\"\r\n                      size={17}\r\n                      color={darkMode ? '#fff' : '#000'}\r\n                    />\r\n                  }\r\n                />\r\n                <SelectItem\r\n                  title=\"Link\"\r\n                  accessoryLeft={\r\n                    <FontAwesome5\r\n                      name=\"link\"\r\n                      size={17}\r\n                      color={darkMode ? '#fff' : '#000'}\r\n                    />\r\n                  }\r\n                />\r\n                <SelectItem\r\n                  title=\"Event\"\r\n                  accessoryLeft={\r\n                    <FontAwesome5\r\n                      name=\"calendar-alt\"\r\n                      size={17}\r\n                      color={darkMode ? '#fff' : '#000'}\r\n                    />\r\n                  }\r\n                />\r\n              </Select>\r\n\r\n              <Divider />\r\n              {renderPostOptions()}\r\n              {error && (\r\n                <Layout>\r\n                  <Text\r\n                    style={{\r\n                      textAlign: 'center',\r\n                      color: 'red',\r\n                      fontStyle: 'italic',\r\n                    }}>\r\n                    {error}\r\n                  </Text>\r\n                </Layout>\r\n              )}\r\n              {!isEmojiShown && (\r\n                <Button\r\n                  style={styles.input}\r\n                  onPress={onSubmit}\r\n                  disabled={isLoading}>\r\n                  Submit\r\n                </Button>\r\n              )}\r\n            </Layout>\r\n          </TouchableWithoutFeedback>\r\n        </ScrollView>\r\n      </KeyboardAvoidingView>\r\n      {isLoading && (\r\n        <Layout\r\n          style={{\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            width: '100%',\r\n            height: '100%',\r\n            position: 'absolute',\r\n            backgroundColor: 'black',\r\n            flex: 1,\r\n            opacity: 0.3,\r\n          }}>\r\n          <Spinner size=\"medium\" />\r\n        </Layout>\r\n      )}\r\n    </Layout>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  input: {\r\n    marginVertical: 5,\r\n  },\r\n});\r\n","import { Layout, Input, Button } from '@ui-kitten/components';\r\nimport { Icon } from '@ui-kitten/components';\r\nimport { useState } from 'react';\r\nimport {\r\n  Keyboard,\r\n  TouchableOpacity,\r\n  LayoutAnimation,\r\n  TouchableWithoutFeedback,\r\n} from 'react-native';\r\nimport { useTheme } from '@ui-kitten/components';\r\n\r\nimport { useAppSelector } from '../app/hooks';\r\nimport { selectDarkMode } from '../app/appDataSlice';\r\n\r\ntype SearchBarProps = {\r\n  onChangeText: (text: string) => void;\r\n  searchTerm: string;\r\n  placeholder?: string;\r\n  accessoryLeft?: any;\r\n  inputProps?: any;\r\n  inputStyle?: any;\r\n  inputRef?: any;\r\n  cancelButtonAction?: () => void;\r\n  onSubmitEditing?: () => void;\r\n  alwaysShowCancelButton?: boolean;\r\n  cancelButtonStatus?:\r\n    | 'basic'\r\n    | 'primary'\r\n    | 'success'\r\n    | 'info'\r\n    | 'warning'\r\n    | 'danger';\r\n};\r\n\r\nexport default function SearchBar({\r\n  onChangeText,\r\n  searchTerm,\r\n  accessoryLeft,\r\n  placeholder,\r\n  inputRef,\r\n  inputStyle,\r\n  inputProps,\r\n  cancelButtonAction = () => {},\r\n  onSubmitEditing = () => {},\r\n  cancelButtonStatus = 'warning',\r\n  alwaysShowCancelButton = false,\r\n}: SearchBarProps) {\r\n  const [selected, setSelected] = useState(false);\r\n\r\n  const darkMode = useAppSelector(selectDarkMode);\r\n  const theme = useTheme();\r\n\r\n  const select = () => {\r\n    setSelected(true);\r\n    if (!alwaysShowCancelButton) {\r\n      LayoutAnimation.configureNext(\r\n        LayoutAnimation.create(100, 'linear', 'scaleX')\r\n      );\r\n    }\r\n  };\r\n\r\n  const deselect = () => {\r\n    setSelected(false);\r\n    if (!alwaysShowCancelButton) {\r\n      LayoutAnimation.configureNext(\r\n        LayoutAnimation.create(100, 'linear', 'opacity')\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout\r\n      style={{\r\n        backgroundColor: 'transparent',\r\n        flexDirection: 'row',\r\n      }}>\r\n      {accessoryLeft}\r\n\r\n      <Input\r\n        style={{\r\n          ...inputStyle,\r\n          borderRadius: 20,\r\n          flex: 1,\r\n          borderWidth: 1,\r\n          borderColor: darkMode\r\n            ? theme['color-basic-500']\r\n            : theme['color-basic-100'],\r\n        }}\r\n        placeholderTextColor={theme['color-basic-500']}\r\n        accessoryRight={\r\n          selected && searchTerm.length > 0\r\n            ? (props) => (\r\n                <TouchableOpacity onPress={() => onChangeText('')}>\r\n                  <Icon {...props} name=\"times\" pack=\"fontAwesome\" />\r\n                </TouchableOpacity>\r\n              )\r\n            : null\r\n        }\r\n        onFocus={select}\r\n        onBlur={deselect}\r\n        placeholder={placeholder}\r\n        value={searchTerm}\r\n        onChangeText={(text) => {\r\n          onChangeText(text);\r\n        }}\r\n        onSubmitEditing={onSubmitEditing}\r\n        ref={inputRef}\r\n        autoCorrect={false}\r\n        {...inputProps}\r\n      />\r\n\r\n      {alwaysShowCancelButton || selected ? (\r\n        <Button\r\n          size=\"small\"\r\n          status={cancelButtonStatus}\r\n          appearance=\"ghost\"\r\n          onPress={() => {\r\n            Keyboard.dismiss();\r\n            cancelButtonAction();\r\n          }}>\r\n          Cancel\r\n        </Button>\r\n      ) : null}\r\n    </Layout>\r\n  );\r\n}\r\n","import { Input, Layout, useTheme } from '@ui-kitten/components';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { selectDarkMode } from '../../app/appDataSlice';\r\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\r\nimport Header from '../../components/Header';\r\nimport SearchBar from '../../components/SearchBar';\r\nimport {\r\n  selectSearchTerm,\r\n  selectSubmittedSearchTerm,\r\n  searchTermChanged,\r\n  searchTermSubmitted,\r\n  selectTag,\r\n  selectRecentSearches,\r\n  recentSearchTermRemoved,\r\n  recentSearchTermSelected,\r\n} from './discoverSlice';\r\nimport PostsList from './PostsList';\r\nimport {LinearGradient} from \"expo-linear-gradient\";\r\nimport {CurrentTermLabel} from \"../classPages/ClassesList\";\r\n\r\nexport default function SearchPage({ navigation }) {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const searchTerm = useAppSelector(selectSearchTerm);\r\n  const tag = useAppSelector(selectTag);\r\n  const submittedSearchTerm = useAppSelector(selectSubmittedSearchTerm);\r\n  const recentSearches = useAppSelector(selectRecentSearches);\r\n\r\n  const inputRef = useRef<Input>(null);\r\n\r\n  const darkMode = useAppSelector(selectDarkMode);\r\n  const theme = useTheme();\r\n\r\n  useEffect(() => {\r\n    inputRef.current?.focus();\r\n  }, []);\r\n\r\n  const onSubmitEditing = async () => {\r\n    dispatch(searchTermSubmitted(searchTerm));\r\n  };\r\n\r\n  const onChangeText = (text: string) => {\r\n    dispatch(searchTermChanged(text));\r\n  };\r\n\r\n  const handleRemoveRecentSearch = (searchTerm: string) => {\r\n    dispatch(recentSearchTermRemoved(searchTerm));\r\n  };\r\n\r\n  const handleClickRecentSearch = (searchTerm: string) => {\r\n    dispatch(recentSearchTermSelected(searchTerm));\r\n  };\r\n\r\n  let searchBarBackgroundColor = '';\r\n  if (darkMode) {\r\n    searchBarBackgroundColor = theme['color-basic-800'];\r\n  } else {\r\n    searchBarBackgroundColor = theme['color-basic-100'];\r\n  }\r\n\r\n  return (\r\n    <Layout style={{ flex: 1 }}>\r\n      <Layout level=\"2\" style={{ paddingBottom: 15 }}>\r\n        <Header\r\n          level=\"2\"\r\n          center={\r\n            <Layout\r\n              level=\"2\"\r\n              style={{ flex: 1, backgroundColor: 'transparent' }}>\r\n              <SearchBar\r\n                inputRef={inputRef}\r\n                inputStyle={{\r\n                  opacity: 1,\r\n                  backgroundColor: searchBarBackgroundColor,\r\n                }}\r\n                searchTerm={searchTerm}\r\n                onChangeText={onChangeText}\r\n                onSubmitEditing={onSubmitEditing}\r\n                placeholder=\"Search Posts...\"\r\n                cancelButtonAction={() => navigation.goBack()}\r\n                cancelButtonStatus=\"basic\"\r\n                alwaysShowCancelButton\r\n              />\r\n            </Layout>\r\n          }\r\n          title=\"\"\r\n        />\r\n      </Layout>\r\n      <PostsList\r\n        navigation={navigation}\r\n        tag={tag}\r\n        searchTerm={submittedSearchTerm}\r\n        recentSearches={recentSearches}\r\n        handleRemoveRecentSearch={handleRemoveRecentSearch}\r\n        handleClickRecentSearch={handleClickRecentSearch}\r\n        sponsor={true}\r\n      />\r\n    </Layout>\r\n  );\r\n}\r\n","import { ScrollView, View, Text } from 'react-native';\r\nimport React from 'react';\r\nimport { Button, useTheme } from '@ui-kitten/components';\r\nimport { Feather } from '@expo/vector-icons';\r\nimport { FontAwesome5 } from '@expo/vector-icons';\r\n\r\nexport default function Menu({ menuItems, setMenuItems }) {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <View style={{ marginVertical: 10 }}>\r\n      <ScrollView\r\n        showsHorizontalScrollIndicator={false}\r\n        horizontal={true}\r\n        style={{ flexDirection: 'row' }}>\r\n        {Object.entries(menuItems).map(([name, value]: any[], index) => {\r\n          if (!value.selected) {\r\n            return (\r\n              <Button\r\n                onPress={() => {\r\n                  setMenuItems({\r\n                    ...menuItems,\r\n                    [name]: { selected: !value.selected },\r\n                  });\r\n                }}\r\n                status={value.selected ? 'info' : 'primary'}\r\n                style={{\r\n                  height: 45,\r\n                  marginHorizontal: 10,\r\n                  borderRadius: 20,\r\n                  backgroundColor: `rgba(${theme['color-success-500']}, ${1 - 0.03 * index})`,\r\n                  borderColor: `rgba(${theme['color-success-500']}, ${1 - 0.03 * index})`,\r\n                }}\r\n                key={index}>\r\n                <View\r\n                  style={{ alignItems: 'center', justifyContent: 'center' }}>\r\n                  <Text style={{ color: 'white' }}>\r\n                    {name}\r\n                    {value.selected && (\r\n                      <Text>\r\n                        {`    `}\r\n                        <Feather name=\"x\" size={15} />\r\n                      </Text>\r\n                    )}\r\n                  </Text>\r\n                </View>\r\n              </Button>\r\n            );\r\n          }\r\n        })}\r\n      </ScrollView>\r\n      <ScrollView\r\n        showsHorizontalScrollIndicator={false}\r\n        horizontal={true}\r\n        style={{ flexDirection: 'row', marginTop: 3, marginLeft: 8 }}>\r\n        {Object.entries(menuItems).map(([name, value] : any[], index) => {\r\n          if (value.selected) {\r\n            return (\r\n              <Button\r\n                accessoryRight={\r\n                  <FontAwesome5 name=\"times\" size={14} color=\"white\" />\r\n                }\r\n                onPress={() => {\r\n                  setMenuItems({\r\n                    ...menuItems,\r\n                    [name]: { selected: !value.selected },\r\n                  });\r\n                }}\r\n                style={{\r\n                  height: 45,\r\n                  marginHorizontal: 2,\r\n                  borderRadius: 20,\r\n                  backgroundColor: theme['color-success-500'],\r\n                  borderColor: theme['color-success-500'],\r\n                }}\r\n                key={index}>\r\n                <View\r\n                  style={{ alignItems: 'center', justifyContent: 'center' }}>\r\n                  <Text style={{ color: 'white' }}>{name}</Text>\r\n                </View>\r\n              </Button>\r\n            );\r\n          }\r\n        })}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n","import { apiSlice } from './apiSlice';\r\n\r\nexport const sponsorsApiSlice = apiSlice.injectEndpoints({\r\n  overrideExisting: true,\r\n  endpoints: (builder) => ({\r\n    refreshSponsors: builder.query({\r\n      query: (userKey) => ({\r\n        url: '/sponsors',\r\n        headers: {\r\n          userKey,\r\n        },\r\n      }),\r\n      transformResponse: (sponsors: any[]) => {\r\n        sponsors = sponsors.sort(function (a, b) {\r\n          const textA = a.sponsorName.toUpperCase();\r\n          const textB = b.sponsorName.toUpperCase();\r\n          return textA < textB ? 1 : textA > textB ? -1 : 0;\r\n        });\r\n\r\n        return [\r\n          sponsors.find((sponsor) => sponsor.sponsorName === \"Big Mo's\"),\r\n          ...sponsors.filter((sponsor) => sponsor.sponsorName !== \"Big Mo's\"),\r\n        ];\r\n      },\r\n    }),\r\n    postSponsorVisit: builder.mutation({\r\n      query: ({ userKey, sponsorId }) => ({\r\n        url: '/analytics/sponsor/ping',\r\n        method: 'POST',\r\n        headers: {\r\n          userKey,\r\n        },\r\n        body: {\r\n          sponsorId,\r\n        },\r\n        responseHandler: (response) => response.text(),\r\n      }),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useLazyRefreshSponsorsQuery, usePostSponsorVisitMutation } =\r\n  sponsorsApiSlice;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  StyleSheet,\r\n  Image,\r\n  TouchableOpacity,\r\n  SafeAreaView,\r\n  ScrollView,\r\n  Linking,\r\n  View,\r\n  Text,\r\n  Platform,\r\n} from 'react-native';\r\nimport { FontAwesome5 } from '@expo/vector-icons';\r\n\r\nimport _ from 'lodash';\r\nimport { useAppSelector } from '../../app/hooks';\r\nimport { selectDarkMode, selectUserKey } from '../../app/appDataSlice';\r\nimport Menu from '../../components/Menu';\r\nimport {\r\n  useLazyRefreshSponsorsQuery,\r\n  usePostSponsorVisitMutation,\r\n} from '../api/sponsorsApi';\r\nimport { Layout } from '@ui-kitten/components';\r\n\r\nexport const SponsorPage = ({\r\n  route: {\r\n    params: { data },\r\n  },\r\n}) => {\r\n\r\n  console.log(data);\r\n  \r\n  const isDarkMode = useAppSelector(selectDarkMode);\r\n  const sponsorPageStyles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n    },\r\n    header: {\r\n      marginTop: 20,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      width: '100%',\r\n    },\r\n    address: {\r\n      color: isDarkMode ? 'white' : 'black',\r\n      alignItems: 'center',\r\n      margin: 10,\r\n      borderColor: 'black',\r\n      borderWidth: 1,\r\n      padding: 10,\r\n    },\r\n    video: {\r\n      marginTop: 20,\r\n      display: 'flex',\r\n      justifyContent: 'flex-start',\r\n    },\r\n    title: {\r\n      color: isDarkMode ? 'white' : 'black',\r\n      fontSize: 26,\r\n      marginLeft: 10,\r\n    },\r\n    subtitle: {\r\n      color: isDarkMode ? 'white' : 'black',\r\n      fontSize: 14,\r\n      justifyContent: 'center',\r\n    },\r\n    logo: {\r\n      width: '100%',\r\n      height: 100,\r\n    },\r\n    description: {\r\n      borderWidth: 1,\r\n      margin: 10,\r\n      borderColor: '#F1E4B5',\r\n      borderRadius: 5,\r\n      width: '95%',\r\n      padding: 10,\r\n      //backgroundColor: '#F9F9F9',\r\n    },\r\n    couponContainer: {\r\n      width: '100%',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      marginTop: 20,\r\n      marginBottom: 20,\r\n    },\r\n    coupon: {\r\n      width: 400,\r\n      height: 267,\r\n    },\r\n    imageGallery: {\r\n      justifyContent: 'center',\r\n      flexDirection: 'row',\r\n      flexWrap: 'wrap',\r\n      margin: 10,\r\n      marginBottom: 0,\r\n    },\r\n    imageStyle: {\r\n      width: 150,\r\n      height: 150,\r\n      paddingTop: 100,\r\n      margin: 5,\r\n    },\r\n    headerText: {\r\n      color: isDarkMode ? 'white' : 'black',\r\n      fontSize: 20,\r\n      fontWeight: 'bold',\r\n    },\r\n  });\r\n  const [imageIndex, setImageIndex] = useState(0);\r\n  const [visible, setIsVisible] = useState(false);\r\n  const [canOpenLink, setCanOpenLink] = useState(false);\r\n\r\n  const [postSponsorVisitQuery] = usePostSponsorVisitMutation();\r\n\r\n  const userKey = useAppSelector(selectUserKey);\r\n\r\n  const videoLinkArray = data.videoLink && data.videoLink.split('/');\r\n  const videoLink = data.videoLink && videoLinkArray[videoLinkArray.length - 1];\r\n\r\n  function getSubtitle() {\r\n    if (data.phoneNumber && data.email) {\r\n      return data.phoneNumber + ' \\u2022 ' + data.email;\r\n    } else if (data.phoneNumber) {\r\n      return data.phoneNumber;\r\n    } else if (data.email) {\r\n      return data.email;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  const postSponsorVisit = async () => {\r\n    try {\r\n      await postSponsorVisitQuery({ userKey, sponsorId: data._id }).unwrap();\r\n    } catch (e) {\r\n      console.warn('Error posting sponsor visit: ', e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const funct = async () => {\r\n      setCanOpenLink(await Linking.canOpenURL(data.website));\r\n      postSponsorVisit();\r\n    };\r\n    funct();\r\n  }, []);\r\n\r\n  function renderWebsiteLink() {\r\n    if (canOpenLink) {\r\n      return (\r\n        <View>\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              Linking.openURL(data.website);\r\n            }}\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'row',\r\n              alignItems: 'center',\r\n            }}>\r\n            <Text\r\n              style={{\r\n                fontSize: 15,\r\n                color: isDarkMode ? '#6b7ee5' : '#4b5dc7',\r\n                paddingRight: 5,\r\n              }}>\r\n              Check Out Our Website!\r\n            </Text>\r\n            <FontAwesome5 name=\"link\" size={15} color=\"#4b5dc7\" />\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Layout style={{ flex: 1 }}>\r\n      <ScrollView>\r\n        <Layout style={sponsorPageStyles.container}>\r\n          <View style={sponsorPageStyles.header}>\r\n            <Image\r\n              resizeMode=\"contain\"\r\n              style={sponsorPageStyles.logo}\r\n              source={{ uri: data.logo }}\r\n            />\r\n          </View>\r\n          <View\r\n            style={{ width: '100%', display: 'flex', alignItems: 'center' }}>\r\n            <Text style={sponsorPageStyles.title}>{data.sponsorName}</Text>\r\n            <Text style={sponsorPageStyles.subtitle}>{getSubtitle()}</Text>\r\n          </View>\r\n\r\n          {data.location && (\r\n            <View style={sponsorPageStyles.address}>\r\n              <Text\r\n                style={{ fontSize: 18, color: isDarkMode ? 'white' : 'black' }}>\r\n                {data.location}\r\n              </Text>\r\n            </View>\r\n          )}\r\n\r\n          <View\r\n            style={{ width: '100%', display: 'flex', alignItems: 'center' }}>\r\n            {renderWebsiteLink()}\r\n          </View>\r\n\r\n        \r\n\r\n          <Layout style={sponsorPageStyles.description}>\r\n            <Text\r\n              style={{ fontSize: 17, color: isDarkMode ? 'white' : 'black' }}>\r\n              {data.description}\r\n            </Text>\r\n          </Layout>\r\n          <View\r\n            style={{\r\n              width: '100%',\r\n              alignSelf: 'flex-start',\r\n              marginLeft: 20,\r\n              borderBottomColor: '#F1E4B5',\r\n              borderBottomWidth: 2,\r\n              paddingBottom: 5,\r\n            }}>\r\n            <Text style={sponsorPageStyles.headerText}>Image Gallery</Text>\r\n          </View>\r\n\r\n          <View style={sponsorPageStyles.imageGallery}>\r\n            {data.images.map((img, index) => {\r\n              return (\r\n                <TouchableOpacity\r\n                  onPress={() => {\r\n                    setImageIndex(index);\r\n                    setIsVisible(true);\r\n                  }}>\r\n                  <Image\r\n                    style={sponsorPageStyles.imageStyle}\r\n                    source={{ uri: img }}\r\n                  />\r\n                </TouchableOpacity>\r\n              );\r\n            })}\r\n          </View>\r\n\r\n          {data.coupons[0] && (\r\n            <Layout style={sponsorPageStyles.couponContainer}>\r\n              <Image\r\n                resizeMode={'contain'}\r\n                source={require('../../../assets/sponsorPage/coupon.png')}\r\n                style={sponsorPageStyles.coupon}\r\n              />\r\n              <Text\r\n                style={{\r\n                  position: 'absolute',\r\n                  fontSize: 30,\r\n                  textAlign: 'center',\r\n                  justifyContent: 'center',\r\n                  width: '75%',\r\n                  paddingBottom: 20,\r\n                  paddingRight: 7,\r\n                }}>\r\n                {data.coupons[0].couponDescription}\r\n              </Text>\r\n              <Text\r\n                style={{ fontSize: 15, color: isDarkMode ? 'white' : 'black' }}>\r\n                Show this coupon at the store to redeem.\r\n              </Text>\r\n            </Layout>\r\n          )}\r\n\r\n          <View\r\n            style={{\r\n              width: '100%',\r\n              alignSelf: 'flex-start',\r\n              marginLeft: 20,\r\n              borderBottomColor: '#F1E4B5',\r\n              borderBottomWidth: 2,\r\n              paddingBottom: 5,\r\n            }}>\r\n            <Text style={sponsorPageStyles.headerText}>Hours</Text>\r\n          </View>\r\n          <View\r\n            style={{\r\n              justifyContent: 'center',\r\n              alignSelf: 'center',\r\n              marginLeft: 25,\r\n              marginBottom: 50,\r\n            }}>\r\n            {data.hours.map((day, i) => {\r\n              return (\r\n                <Layout\r\n                  key={i}\r\n                  style={{\r\n                    justifyContent: 'space-between',\r\n                    flexDirection: 'row',\r\n                    width: '100%',\r\n                  }}>\r\n                  <Text\r\n                    style={{\r\n                      marginTop: 10,\r\n                      color: isDarkMode ? 'white' : 'black',\r\n                    }}>\r\n                    {day.dayOfTheWeek}:\r\n                  </Text>\r\n                  <Text\r\n                    style={{\r\n                      alignSelf: 'flex-end',\r\n                      paddingRight: 30,\r\n                      marginTop: 10,\r\n                      color: isDarkMode ? 'white' : 'black',\r\n                    }}>\r\n                    {buildTimeString(day)}\r\n                  </Text>\r\n                </Layout>\r\n              );\r\n            })}\r\n          </View>\r\n        </Layout>\r\n      </ScrollView>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nfunction buildTimeString(time) {\r\n  if (!time.openTime || time.openTime === '' || time.openTime === null) {\r\n    return 'closed';\r\n  }\r\n  return (\r\n    convertTo12HourTime(time.openTime) +\r\n    ' - ' +\r\n    convertTo12HourTime(time.closeTime)\r\n  );\r\n}\r\n\r\nfunction convertTo12HourTime(time) {\r\n  if (time.length !== 5) {\r\n    time = '0' + time;\r\n  }\r\n  let hours = time.slice(0, 2);\r\n  let minutes = time.slice(3, 5);\r\n  let ampm = Number.parseInt(hours) > 12 ? 'pm' : 'am';\r\n  hours = hours % 12;\r\n  if (hours === 0) {\r\n    hours = 12;\r\n    ampm = 'pm';\r\n  }\r\n  return hours + ':' + minutes + ampm;\r\n}\r\n\r\nexport function SponsorsList({ navigation }) {\r\n  const isDarkMode = useAppSelector(selectDarkMode);\r\n  const [sponsorFilters, setSponsorFilters] = useState({});\r\n  const [gotSponsors, setGotSponsors] = useState(false);\r\n  const userKey = useAppSelector(selectUserKey);\r\n  const [refreshSponsorsQuery, { data: sponsors }] =\r\n    useLazyRefreshSponsorsQuery();\r\n\r\n  if (!gotSponsors) {\r\n    setGotSponsors(true);\r\n    refreshSponsors();\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (sponsors?.length > 0) {\r\n      getFilters();\r\n    }\r\n  }, [sponsors]);\r\n\r\n  async function refreshSponsors() {\r\n    try {\r\n      await refreshSponsorsQuery(userKey).unwrap();\r\n    } catch (e) {\r\n      console.warn('Error refreshing sponsors: ', e);\r\n    }\r\n  }\r\n\r\n  function getFilters() {\r\n    let tabNames = [];\r\n    let final = [];\r\n    for (const sponsor of sponsors) {\r\n      if (sponsor.tags !== undefined) {\r\n        for (const name of sponsor.tags) {\r\n          if (!tabNames.includes(name)) {\r\n            tabNames.push(name);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    tabNames = tabNames.sort();\r\n\r\n    // Puts 'Other' at the end\r\n    const temp = tabNames.includes('Other')\r\n      ? tabNames.findIndex((item) => item === 'Other')\r\n      : -1;\r\n    if (temp !== -1) {\r\n      tabNames.splice(temp, 1);\r\n    }\r\n    tabNames.push('Other');\r\n\r\n    let tempFilters = {};\r\n    for (const name of tabNames) {\r\n      tempFilters[name] = {\r\n        selected: false,\r\n      };\r\n    }\r\n    setSponsorFilters(tempFilters);\r\n  }\r\n\r\n  function renderSponsorsBasedOnFilters() {\r\n    let shouldLimitPrint = false;\r\n    for (const filterName in sponsorFilters) {\r\n      if (sponsorFilters[filterName].selected) {\r\n        shouldLimitPrint = true;\r\n        break;\r\n      }\r\n    }\r\n    if (!shouldLimitPrint) {\r\n      return getTheSponsors(sponsors || [], navigation);\r\n    } else {\r\n      let sponsorsToSend = [];\r\n      for (const filterName in sponsorFilters) {\r\n        if (sponsorFilters[filterName].selected) {\r\n          for (const sponsor of sponsors) {\r\n            if (sponsor.tags.includes(filterName)) {\r\n              sponsorsToSend.push(sponsor);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return getTheSponsors(sponsorsToSend || [], navigation);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Layout style={{ flex: 1 }}>\r\n      <Menu\r\n        setMenuItems={setSponsorFilters}\r\n        menuItems={Object.keys(sponsorFilters).length > 0}\r\n      />\r\n      <ScrollView showsVerticalScrollIndicator={false} style={{ flexDirection: 'column' }}>\r\n        {sponsors?.length === 0 ? (\r\n          <Text>Nothing to see here</Text>\r\n        ) : (\r\n          renderSponsorsBasedOnFilters()\r\n        )}\r\n      </ScrollView>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nfunction getTheSponsors(sponsors, navigation) {\r\n  const isDarkMode = useAppSelector(selectDarkMode);\r\n  const listingStyles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n    },\r\n    cardContainer: {\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      width: '100%',\r\n      height: 130,\r\n      backgroundColor: isDarkMode ? '#464646' : '#fff',\r\n      borderRadius: 10,\r\n      borderWidth: 1,\r\n      borderColor: isDarkMode ? '#818181' : '#ddd',\r\n      borderBottomWidth: isDarkMode ? 1 : 0,\r\n      shadowColor: '#000',\r\n      shadowOffset: { width: 0, height: 2 },\r\n      shadowOpacity: 0.2,\r\n      shadowRadius: 2,\r\n      elevation: 1,\r\n      marginLeft: 5,\r\n      marginRight: 5,\r\n      marginTop: 10,\r\n    },\r\n    text: {\r\n      flex: 1,\r\n      color: isDarkMode ? 'white' : 'black',\r\n      fontSize: 20,\r\n      textAlign: 'center',\r\n      marginTop: 5,\r\n      marginBottom: 5,\r\n    },\r\n    image: {\r\n      width: '100%',\r\n      height: '100%',\r\n      marginLeft: 10,\r\n      borderRadius: 10,\r\n    },\r\n  });\r\n  if (sponsors.length === 0) {\r\n    return;\r\n  }\r\n  let final = [];\r\n  let starredFinal = [];\r\n  for (const sponsor of sponsors) {\r\n    if (sponsor.coupons && sponsor.coupons.length > 0) {\r\n      starredFinal.push(\r\n        <TouchableOpacity\r\n          onPress={() => {\r\n            navigation.navigate('SponsorPage', { data: sponsor });\r\n          }}\r\n          style={listingStyles.cardContainer}\r\n          key={sponsor._id}>\r\n          {sponsor.coupons?.length ? (\r\n            <FontAwesome5\r\n              name=\"star\"\r\n              color={'gold'}\r\n              style={{\r\n                alignSelf: 'flex-start',\r\n                top: 5,\r\n                left: 5,\r\n              }}\r\n            />\r\n          ) : null}\r\n\r\n          <View style={{ flex: 1 }}>\r\n            <Image\r\n              resizeMode={'contain'}\r\n              style={listingStyles.image}\r\n              source={{ uri: sponsor.logo }}\r\n            />\r\n          </View>\r\n\r\n          <Text style={listingStyles.text}>{sponsor.sponsorName}</Text>\r\n        </TouchableOpacity>\r\n      );\r\n    } else {\r\n      final.push(\r\n        <TouchableOpacity\r\n          onPress={() => {\r\n            navigation.navigate('SponsorPage', { data: sponsor });\r\n          }}\r\n          style={listingStyles.cardContainer}\r\n          key={sponsor._id}>\r\n          {sponsor.coupons?.length ? (\r\n            <FontAwesome5\r\n              name=\"star\"\r\n              color={'gold'}\r\n              style={{\r\n                position: 'absolute',\r\n                alignSelf: 'flex-start',\r\n                top: 5,\r\n                left: 5,\r\n              }}\r\n            />\r\n          ) : null}\r\n\r\n          <View style={{ flex: 1 }}>\r\n            <Image\r\n              resizeMode={'contain'}\r\n              style={listingStyles.image}\r\n              source={{ uri: sponsor.logo }}\r\n            />\r\n          </View>\r\n\r\n          <Text style={listingStyles.text}>{sponsor.sponsorName}</Text>\r\n        </TouchableOpacity>\r\n      );\r\n    }\r\n  }\r\n  for (const object of final) {\r\n    starredFinal.push(object);\r\n  }\r\n  return starredFinal;\r\n}\r\n","import { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport {\r\n    Image,\r\n    Platform,\r\n    TouchableOpacity,\r\n    TouchableWithoutFeedback,\r\n} from 'react-native';\r\nimport { FontAwesome5 } from '@expo/vector-icons';\r\nimport Header from '../../components/Header';\r\nimport PostsList from './PostsList';\r\nimport SinglePost from './SinglePost/SinglePostPage';\r\nimport { Divider, Layout, Text, useTheme } from '@ui-kitten/components';\r\nimport CreatePost from './CreatePost/CreatePost';\r\nimport SearchBar from '../../components/SearchBar';\r\nimport React, { useState } from 'react';\r\nimport { selectDarkMode } from '../../app/appDataSlice';\r\nimport { useAppSelector } from '../../app/hooks';\r\nimport SearchPage from './SearchPage';\r\nimport { SponsorPage } from '../sponsors/SponsorsList';\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nexport default function Discover({ navigation }) {\r\n  const theme = useTheme();\r\n  const darkMode = useAppSelector(selectDarkMode);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  const accessoryRight = (\r\n    <TouchableOpacity onPress={() => navigation.navigate('CreatePost')}>\r\n      <FontAwesome5 name=\"plus\" size={23} color={theme['color-primary-500']} />\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  const accessoryLeft = (\r\n      <Image\r\n          style={{\r\n              height: 28,\r\n              width: 28,\r\n          }}\r\n          source={require('../../../assets/logos/app-logo-transparent.png')}\r\n      />\r\n  )\r\n\r\n  let searchBarBackgroundColor = '';\r\n  if (darkMode) {\r\n    searchBarBackgroundColor = theme['color-basic-800'];\r\n  } else {\r\n    searchBarBackgroundColor = theme['color-basic-100'];\r\n  }\r\n\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen\r\n        name=\"PostsList\"\r\n        initialParams={{ sponsor: true }}\r\n        component={PostsList}\r\n        options={{\r\n          title: 'Discover',\r\n          header: () => (\r\n            <Layout level=\"2\" style={{ paddingBottom: 15 }}>\r\n              <Header\r\n                level=\"2\"\r\n                title=\"Discover\"\r\n                accessoryLeft={accessoryLeft}\r\n                accessoryRight={accessoryRight}\r\n                center={\r\n                  <Layout level=\"2\" style={{ flex: 1, marginHorizontal: 10 }}>\r\n                    {Platform.OS === 'ios' ? (\r\n                      <SearchBar\r\n                        inputStyle={{\r\n                          opacity: 0.8,\r\n                          backgroundColor: searchBarBackgroundColor,\r\n                        }}\r\n                        searchTerm={searchTerm}\r\n                        onChangeText={setSearchTerm}\r\n                        placeholder=\"Search Posts...\"\r\n                        inputProps={{\r\n                          disabled: true,\r\n                          onPressIn: () => {\r\n                            navigation.navigate('SearchPage');\r\n                          },\r\n\r\n                          onBlur: () => {\r\n                            navigation.goBack();\r\n                          },\r\n                        }}\r\n                      />\r\n                    ) : (\r\n                      <Layout\r\n                        style={{\r\n                          minHeight: 35,\r\n                          paddingLeft: 15,\r\n                          borderRadius: 20,\r\n                          flex: 1,\r\n                          borderWidth: 1,\r\n                          borderColor: darkMode\r\n                            ? theme['color-basic-500']\r\n                            : theme['color-basic-100'],\r\n                          justifyContent: 'center',\r\n                        }}>\r\n                        <TouchableWithoutFeedback\r\n                          onPress={() => {\r\n                            navigation.navigate('SearchPage');\r\n                          }}>\r\n                          <Text\r\n                            style={{\r\n                              color: theme['color-basic-400'],\r\n                              fontSize: 14,\r\n                            }}>\r\n                            Search Posts...\r\n                          </Text>\r\n                        </TouchableWithoutFeedback>\r\n                      </Layout>\r\n                    )}\r\n                  </Layout>\r\n                }\r\n              />\r\n            </Layout>\r\n          ),\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"CreatePost\"\r\n        component={CreatePost}\r\n        options={{ headerTitle: 'Create a Post' }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"SinglePost\"\r\n        component={SinglePost}\r\n        options={{\r\n          headerTitle: '',\r\n          title: 'Discover',\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"SearchPage\"\r\n        component={SearchPage}\r\n        options={{ headerShown: false, animation: 'fade', title: 'Discover' }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"SponsorPageDiscover\"\r\n        component={SponsorPage}\r\n        options={{ headerTitle: '', title: 'Discover' }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n","import {\r\n    Keyboard,\r\n    KeyboardAvoidingView,\r\n    Platform,\r\n    Text,\r\n    TouchableOpacity,\r\n    TouchableWithoutFeedback,\r\n    View\r\n} from 'react-native'\r\nimport React, {useEffect, useMemo, useState} from 'react'\r\nimport {\r\n    Button,\r\n    CheckBox,\r\n    Datepicker,\r\n    Divider,\r\n    Input,\r\n    Layout,\r\n    NativeDateService,\r\n    Select,\r\n    SelectItem\r\n} from \"@ui-kitten/components\";\r\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\r\nimport WrapItems from \"../../components/WrapItems\";\r\nimport {AntDesign} from \"@expo/vector-icons\";\r\nimport CreateImage from \"../discover/CreatePost/CreateImagePost\";\r\nimport {base_URL} from \"../notifications/constants\";\r\nimport {useEditUserMutation, useGetUserInfoQuery} from \"../api/usersApi\";\r\nimport {useAppSelector} from \"../../app/hooks\";\r\nimport {selectUserKey} from \"../../app/appDataSlice\";\r\nimport {useNavigation} from \"@react-navigation/native\";\r\nimport Toast from \"react-native-root-toast\";\r\nimport {SafeAreaView} from \"react-native-safe-area-context\";\r\nimport {KeyboardAwareView} from \"react-native-keyboard-aware-view\";\r\nimport {useAddClassMutation} from \"../api/classPagesApi\";\r\nimport Loader from \"react-native-three-dots-loader\";\r\n\r\nexport default function CreateCustomEvent() {\r\n    const [editUser] = useEditUserMutation();\r\n    const [ showDots, setShowDots ] = useState(false)\r\n    const navigation = useNavigation()\r\n    const dateToUse = new Date()\r\n    const [selectedDate, setSelectedDate] = useState(dateToUse)\r\n    const [ isOneDay, setIsOneDay ] = useState(false)\r\n    const [ allValuesPopulated, setAllValuesPopulated ] = useState(false)\r\n    const [ selectedIndex, setSelectedIndex ] = useState([]);\r\n    const [daysArray, setDaysArray] = useState([])\r\n    const [startTime, setStartTime] = useState(new Date())\r\n    const [endTime, setEndTime] = useState(new Date())\r\n    const [eventTitle, setEventTitle] = useState('')\r\n    const userKey = useAppSelector(selectUserKey)\r\n    const {data: userData} = useGetUserInfoQuery(userKey, {\r\n        skip: !userKey,\r\n    });\r\n\r\n    const daysOfWeek = [\r\n        'Monday',\r\n        'Tuesday',\r\n        'Wednesday',\r\n        'Thursday',\r\n        'Friday',\r\n        'Saturday',\r\n        'Sunday'\r\n    ]\r\n\r\n    useEffect(() => {\r\n        setAllValuesPopulated(\r\n            (isOneDay ? selectedDate.toISOString() !== (dateToUse).toISOString() : daysArray.length >= 1) &&\r\n            eventTitle !== '' &&\r\n            startTime < endTime\r\n        )\r\n    }, [daysArray, eventTitle, startTime, endTime, selectedDate, isOneDay])\r\n\r\n    function addEvent() {\r\n        setShowDots(true)\r\n        editUser({\r\n            userKey,\r\n            userName: userData.userName,\r\n            fields: JSON.stringify({\r\n                \"addCustomEvent\": {\r\n                    \"name\": eventTitle,\r\n                    \"startTime\": startTime.toTimeString().slice(0, 5),\r\n                    \"endTime\": endTime.toTimeString().slice(0, 5),\r\n                    \"days\": daysArray,\r\n                    \"date\": selectedDate.toISOString() !== dateToUse.toISOString() ? selectedDate.toISOString() : null\r\n                },\r\n            })\r\n        }).unwrap().then(async () => {\r\n            setTimeout(() => {\r\n                setShowDots(false)\r\n                navigation.goBack()\r\n            }, 2000)\r\n        }).catch(() => {\r\n            setShowDots(false)\r\n            Toast.show(\r\n                \"Failed to add event.\\nPlease try again later\",\r\n                {\r\n                    duration: Toast.durations.LONG,\r\n                    opacity: 1,\r\n                    position: -100,\r\n                    backgroundColor: 'grey',\r\n                    shadow: false,\r\n                }\r\n            );\r\n        })\r\n        /*\r\n        fetch(base_URL + '/users/' + userData.userName, {\r\n            method: 'PATCH',\r\n            body: JSON.stringify({\r\n                \"addCustomEvent\": {\r\n                    \"name\": eventTitle,\r\n                    \"startTime\": startTime.toTimeString().slice(0, 5),\r\n                    \"endTime\": endTime.toTimeString().slice(0, 5),\r\n                    \"days\": daysArray\r\n                },\r\n            }),\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                userKey: userKey\r\n            }\r\n        }).then((res) => {\r\n            if (res.ok) {\r\n                navigation.goBack()\r\n            } else {\r\n                Toast.show(\r\n                    \"Failed to add event\\nStatus: \" + res.status,\r\n                    {\r\n                        duration: Toast.durations.LONG,\r\n                        opacity: 1,\r\n                        position: -100,\r\n                        backgroundColor: 'grey',\r\n                        shadow: false,\r\n                    }\r\n                );\r\n            }\r\n        })*/\r\n    }\r\n\r\n    // Needed because Android date picker uses a modal\r\n    const [showTimePickerAndroid, setShowTimePickerAndroid] = useState(false);\r\n\r\n    const timePickerOptions = useMemo(\r\n        () => ({\r\n            'Start Time': { time: startTime, setTime: setStartTime },\r\n            'End Time': { time: endTime, setTime: setEndTime },\r\n        }),\r\n        [startTime, setStartTime, endTime, setEndTime]\r\n    );\r\n\r\n    const formatAMPM = (date: Date) => {\r\n        let hours = date.getHours()\r\n        let minutes: string | number = date.getMinutes()\r\n        const ampm = hours >= 12 ? 'pm' : 'am';\r\n        hours = hours % 12;\r\n        hours = hours ? hours : 12;\r\n        minutes = minutes < 10 ? '0' + minutes : minutes;\r\n        return hours + ':' + minutes + ' ' + ampm;\r\n    };\r\n\r\n    const Title = (\r\n        <Layout\r\n            style={{\r\n                flexDirection: 'row',\r\n                justifyContent: 'space-evenly',\r\n                alignItems: 'center',\r\n                marginTop: 15,\r\n            }}>\r\n            <Input\r\n                label=\"Title\"\r\n                disabled={showDots}\r\n                placeholder=\"Title of Event\"\r\n                value={eventTitle}\r\n                style={{ flex: 5 }}\r\n                onChangeText={(title) => {\r\n                    setEventTitle(title)\r\n                }}\r\n            />\r\n        </Layout>\r\n    );\r\n\r\n    const TimePicker = () => {\r\n        if (Platform.OS === 'android') {\r\n            return (\r\n                <Layout\r\n                    style={{\r\n                        flexDirection: 'row',\r\n                        justifyContent: 'space-around',\r\n                    }}>\r\n                    {Object.entries(timePickerOptions).map(\r\n                        ([label, { time, setTime }], i) => (\r\n                            <Layout key={i} style={{ alignItems: 'center' }}>\r\n                                <Text category=\"label\" style={{ marginBottom: 5 }}>\r\n                                    {label}\r\n                                </Text>\r\n                                <Button\r\n                                    onPress={() => {\r\n                                        setShowTimePickerAndroid(true);\r\n                                    }}>\r\n                                    {formatAMPM(time)}\r\n                                </Button>\r\n                                {showTimePickerAndroid && (\r\n                                    <DateTimePicker\r\n                                        mode=\"time\"\r\n                                        onChange={(change, date) => {\r\n                                            setTime(date);\r\n                                            setShowTimePickerAndroid(false);\r\n                                        }}\r\n                                        value={time}\r\n                                    />\r\n                                )}\r\n                            </Layout>\r\n                        )\r\n                    )}\r\n                </Layout>\r\n            );\r\n        }\r\n        if (Platform.OS === 'ios') {\r\n            return (\r\n                <Layout\r\n                    style={{\r\n                        flexDirection: 'row',\r\n                        justifyContent: 'space-around',\r\n                    }}>\r\n                    {Object.entries(timePickerOptions).map(\r\n                        ([label, { time, setTime }], i) => (\r\n                            <Layout key={i} style={{ alignItems: 'center' }}>\r\n                                <Text category=\"label\" style={{ marginBottom: 5 }}>\r\n                                    {label}\r\n                                </Text>\r\n\r\n                                <DateTimePicker\r\n                                    mode=\"time\"\r\n                                    onChange={(change, date) => {\r\n                                        setTime(date);\r\n                                    }}\r\n                                    value={time}\r\n                                />\r\n                            </Layout>\r\n                        )\r\n                    )}\r\n                </Layout>\r\n            );\r\n        }\r\n    };\r\n\r\n    if (Platform.OS === 'web') {\r\n        return (\r\n            <Text>\r\n                Creating Events is not supported on the web. Download the app on\r\n                the App Store or Play Store to make a new Event.\r\n            </Text>\r\n        );\r\n    }\r\n\r\n    const renderMultiSelectDropDown = () => {\r\n        function renderEachDropItem() {\r\n            const final = []\r\n            for (const option of daysOfWeek) {\r\n                final.push(\r\n                    <SelectItem title={option}/>\r\n                )\r\n            }\r\n            return final\r\n        }\r\n        function toggleValue(index) {\r\n            setSelectedIndex(index)\r\n            const newSelection = index.map((littleIndex) => {\r\n                return daysOfWeek[littleIndex - 1]\r\n            })\r\n            setDaysArray(newSelection)\r\n        }\r\n        function calculateSelectedValues() {\r\n            let finalArray = selectedIndex.map((littleIndex) => {\r\n                return daysOfWeek[littleIndex - 1] + ', '\r\n            })\r\n            if (finalArray.length > 0){\r\n                let finalObject = finalArray.at(-1)\r\n                finalObject = finalObject.replace(', ', '')\r\n                finalArray.splice(-1, 1)\r\n                finalArray.push(finalObject)\r\n                return finalArray\r\n            }\r\n        }\r\n        return (\r\n            <Layout style={{\r\n                flexDirection: 'row',\r\n                justifyContent: 'space-evenly',\r\n                alignItems: 'center',\r\n                marginTop: 15,\r\n            }} level='1'>\r\n                <Select\r\n                    style={{flex: 5}}\r\n                    multiSelect={true}\r\n                    label={'Days'}\r\n                    disabled={showDots}\r\n                    value={daysArray.length > 0 ? calculateSelectedValues() : null}\r\n                    selectedIndex={selectedIndex}\r\n                    onSelect={index => toggleValue(index)}>\r\n                    {renderEachDropItem()}\r\n                </Select>\r\n            </Layout>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Layout style={{flex: 1}}>\r\n            <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n                <WrapItems childStyle={{ marginVertical: 10, marginHorizontal: 15 }}>\r\n                    {Title}\r\n                    <TimePicker />\r\n                    <CheckBox\r\n                        style={{alignSelf: 'center', marginTop: 20}}\r\n                        checked={isOneDay}\r\n                        onChange={(nextChecked) => {\r\n                            setDaysArray([])\r\n                            setSelectedIndex([])\r\n                            setSelectedDate(dateToUse)\r\n                            setIsOneDay(nextChecked)\r\n                        }}>\r\n                        One Time Event\r\n                    </CheckBox>\r\n                    {isOneDay ?\r\n                        <DateTimePicker\r\n                            testID=\"datePicker\"\r\n                            value={selectedDate}\r\n                            mode={'date'}\r\n                            style={{alignSelf: 'center', marginVertical: 15}}\r\n                            onChange={(event, date) => setSelectedDate(date)}\r\n                        /> : renderMultiSelectDropDown()}\r\n                    <TouchableOpacity\r\n                        style={{backgroundColor: allValuesPopulated ? \"#a245ee\" : \"rgba(162,69,238,0.34)\",\r\n                            width: \"35%\",\r\n                            alignSelf: 'center',\r\n                            height: 45,\r\n                            borderRadius: 3,\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                        onPress={addEvent}\r\n                        disabled={!allValuesPopulated || showDots}\r\n                    >\r\n                        <View>\r\n                            <Text style={{ color: \"#f2f0f1\", fontSize: 15 }}>Create Event</Text>\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                    {\r\n                        showDots && (\r\n                            <Loader style={{position: 'absolute', marginTop: '30%', marginHorizontal: 'auto'}}/>\r\n                        )\r\n                    }\r\n                </WrapItems>\r\n            </TouchableWithoutFeedback>\r\n        </Layout>\r\n    );\r\n}","import {useAppSelector} from \"../../app/hooks\";\r\nimport {selectClassesList} from \"../classPages/classPagesSlice\";\r\nimport {Class} from \"../../app/types\";\r\n\r\nexport default class CalendarFunctions{\r\n    convertTo12HourTime(time) {\r\n        if (time.length !== 5) {\r\n            time = '0' + time;\r\n        }\r\n        let hours = time.slice(0, 2);\r\n        let minutes = time.slice(3, 5);\r\n        let ampm = Number.parseInt(hours) > 12 ? 'pm' : 'am';\r\n        hours = hours % 12;\r\n        if (hours === 0) {\r\n            hours = 12;\r\n            ampm = 'pm';\r\n        }\r\n        return hours + ':' + minutes + ampm;\r\n    }\r\n\r\n    getColor(string: String) {\r\n        let final = 0\r\n        for (let charIndex = 0; charIndex < string.length; charIndex++) {\r\n            final += string.charCodeAt(charIndex)\r\n        }\r\n        final -= Number(final.toString()[0]) * (10 ** (final.toString().length - 1))\r\n        final = final / (10 ** final.toString().length)\r\n        return \"hsl(\" + (180 * final + 90) + ',' +\r\n            (30 + 65 * final) + '%,' +\r\n            (50 + 15 * final) + '%)'\r\n    }\r\n\r\n    stringToColour(str: String) {\r\n        return this.getColor(str)\r\n    };\r\n\r\n    getMinutesDiff(startTime, endTime, minuteHeight) {\r\n        if (endTime > startTime) {\r\n            return (endTime - startTime) * minuteHeight;\r\n        } else if (startTime === endTime) {\r\n            return 0;\r\n        } else {\r\n            return (startTime - endTime) * -minuteHeight;\r\n        }\r\n    }\r\n\r\n    getFullClassData(courseCode: String, allClassData: any): Class {\r\n        const APIdata = allClassData\r\n        const generalCourseCode = courseCode.split('-').slice(0, -1).join('-');\r\n        return APIdata[generalCourseCode];\r\n    };\r\n\r\n}","import {Alert, Dimensions, Text, TouchableOpacity, View} from \"react-native\";\r\nimport React from \"react\";\r\nimport CalendarFunctions from \"./CalendarFunctions\";\r\nimport {useAppSelector} from \"../../app/hooks\";\r\nimport {useRemoveClassMutation} from \"../api/classPagesApi\";\r\nimport Toast from \"react-native-root-toast\";\r\nimport {useEditUserMutation} from \"../api/usersApi\";\r\nimport {selectUserKey} from \"../../app/appDataSlice\";\r\n\r\n\r\nexport default function renderCustomEvent(event, userData, userKey, editUser) {\r\n    const universalHeight = (Dimensions.get('window').height - 50) / 12\r\n    const minuteHeight = universalHeight / 60\r\n    const calendarFun = new CalendarFunctions()\r\n    const [startHour, startMinute] = event.startTime.split(':');\r\n    const [endHour, endMinute] = event.endTime.split(':');\r\n    let color = calendarFun.stringToColour(event.name);\r\n\r\n    function removeEvent(event: any) {\r\n        editUser({\r\n            userKey,\r\n            userName: userData.userName,\r\n            fields: JSON.stringify({\r\n                \"removeCustomEvent\": {\r\n                    \"name\": event.name,\r\n                    \"startTime\": event.startTime,\r\n                    \"endTime\": event.endTime,\r\n                    \"days\": event.days\r\n                },\r\n            })\r\n        }).unwrap().catch(() => {\r\n            Toast.show(\r\n                \"Failed to remove event.\\nPlease try again later\",\r\n                {\r\n                    duration: Toast.durations.SHORT,\r\n                    opacity: 1,\r\n                    position: -100,\r\n                    backgroundColor: 'grey',\r\n                    shadow: false,\r\n                }\r\n            );\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <TouchableOpacity onLongPress={() => {\r\n                Alert.alert(\r\n                    event.name,\r\n                    calendarFun.convertTo12HourTime(event.startTime) +\r\n                    ' - ' +\r\n                    calendarFun.convertTo12HourTime(event.endTime),\r\n                    [\r\n                        {\r\n                            text: 'Remove',\r\n                            onPress: () => {\r\n                                removeEvent(event);\r\n                            },\r\n                        },\r\n                        {\r\n                            text: 'Back',\r\n                            onPress: () => {},\r\n                            style: 'cancel',\r\n                        },\r\n                    ],\r\n                    { cancelable: true }\r\n                )\r\n            }}\r\n            key={event.name + event.days}\r\n            style={{\r\n                backgroundColor: color,\r\n                top: (universalHeight * startHour) + (startMinute * minuteHeight),\r\n                height:\r\n                    universalHeight * (endHour - startHour) + calendarFun.getMinutesDiff(startMinute, endMinute, minuteHeight),\r\n                width: '100%',\r\n                position: 'absolute',\r\n                justifyContent: 'center',\r\n            }}>\r\n            <Text\r\n                adjustsFontSizeToFit={true}\r\n                numberOfLines={endHour - startHour + 2}\r\n                style={{ color: 'white', textAlign: 'center' }}>\r\n                {event.name}\r\n            </Text>\r\n        </TouchableOpacity>\r\n    );\r\n};","import { useNavigation } from '@react-navigation/native';\r\nimport {Alert, Dimensions, Text, TouchableOpacity, View} from 'react-native';\r\nimport React from 'react';\r\nimport { useAppSelector } from '../../app/hooks';\r\nimport CalendarFunctions from './CalendarFunctions';\r\nimport {\r\n  useGetCurrentSectionQuery,\r\n  useRemoveClassMutation,\r\n} from '../api/classPagesApi';\r\n\r\nexport default function renderItem(\r\n  masterClassInfo,\r\n  courseCode,\r\n  handleClassSelected = (string: string) => {}\r\n) {\r\n  const calendarFun = new CalendarFunctions();\r\n    const universalHeight = (Dimensions.get('window').height - 50) / 12\r\n    const minuteHeight = universalHeight / 60\r\n  const thisTime = masterClassInfo.times.find(\r\n    (course) => course.courseCode === courseCode\r\n  );\r\n\r\n  const [startHour, startMinute] = thisTime.startTime.split(':');\r\n  const [endHour, endMinute] = thisTime.endTime.split(':');\r\n  let color = calendarFun.stringToColour(masterClassInfo.masterCourseCode);\r\n  let code = courseCode.split(' ');\r\n  return (\r\n    <View\r\n      key={thisTime._id}\r\n      style={{\r\n        backgroundColor: color,\r\n        top: universalHeight * startHour + startMinute * minuteHeight,\r\n        height:\r\n          universalHeight * (endHour - startHour) +\r\n          calendarFun.getMinutesDiff(startMinute, endMinute, minuteHeight),\r\n        width: '100%',\r\n        position: 'absolute',\r\n        margin: 0,\r\n        justifyContent: 'center',\r\n      }}>\r\n      <TouchableOpacity\r\n        onPress={() => {\r\n          handleClassSelected(masterClassInfo.masterCourseCode);\r\n        }}\r\n        onLongPress={\r\n          () => {} /*{\r\n                    Alert.alert(\r\n                        courseCode,\r\n                        null,\r\n                        [\r\n                            {\r\n                                text: 'Delete',\r\n                                onPress: () => {\r\n\r\n                                },\r\n                            },\r\n                            {\r\n                                text: 'Cancel',\r\n                                onPress: () => console.log('Cancel Pressed'),\r\n                                style: 'cancel',\r\n                            },\r\n                        ],\r\n                        { cancelable: true }\r\n                    );\r\n                }*/\r\n        }>\r\n        <Text\r\n          adjustsFontSizeToFit\r\n          numberOfLines={5}\r\n          style={{\r\n            color: parseInt(color.slice(1), 16) > 9079434 ? 'black' : 'white',\r\n            fontSize: 11,\r\n            marginHorizontal: 3,\r\n            textAlign: 'center',\r\n          }}>\r\n          {code[0]} {code[1]}\r\n          {'\\n'}\r\n          {code[2]}\r\n          {thisTime.classLocation ? '\\n(' + thisTime.classLocation + ')' : null}\r\n        </Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n","import { Button, Icon, Layout, Text, useTheme } from '@ui-kitten/components';\r\nimport Modal from 'react-native-modal';\r\nimport { selectDarkMode } from '../app/appDataSlice';\r\nimport { useAppSelector } from '../app/hooks';\r\n\r\ntype ModalContainerProps = {\r\n  children: React.ReactNode;\r\n  backDropVisible: boolean;\r\n  setBackDropVisible: React.Dispatch<React.SetStateAction<boolean>>;\r\n  title: string;\r\n};\r\n\r\nexport default function ModalContainer({\r\n  children,\r\n  backDropVisible,\r\n  setBackDropVisible,\r\n  title,\r\n}: ModalContainerProps) {\r\n  const theme = useTheme();\r\n  const darkMode = useAppSelector(selectDarkMode);\r\n\r\n  return (\r\n    <Modal\r\n      backdropOpacity={0}\r\n      onBackdropPress={() => setBackDropVisible(false)}\r\n      isVisible={backDropVisible}\r\n      style={{\r\n        backgroundColor: darkMode\r\n          ? theme['color-basic-900']\r\n          : theme['color-basic-50'],\r\n        borderRadius: 20,\r\n        flex: 1,\r\n        marginTop: 300,\r\n        marginBottom: 50,\r\n        shadowColor: '#000',\r\n        shadowOffset: {\r\n          width: 0,\r\n          height: 12,\r\n        },\r\n        shadowOpacity: 0.58,\r\n        shadowRadius: 16.0,\r\n\r\n        elevation: 11,\r\n      }}>\r\n      <Layout\r\n        style={{\r\n          flex: 1,\r\n          alignItems: 'center',\r\n          borderRadius: 20,\r\n          backgroundColor: darkMode\r\n            ? theme['color-basic-900']\r\n            : theme['color-basic-100'],\r\n        }}>\r\n        <Button\r\n          appearance=\"ghost\"\r\n          style={{\r\n            position: 'absolute',\r\n            top: 0,\r\n            right: 0,\r\n            flex: 1,\r\n            borderRadius: 20,\r\n          }}\r\n          accessoryRight={(props) => (\r\n            <Icon pack=\"fontAwesome\" name=\"angle-down\" {...props} />\r\n          )}\r\n          onPress={() => setBackDropVisible(false)}\r\n        />\r\n        <Text category=\"h5\" style={{ marginVertical: 15 }}>\r\n          {title}\r\n        </Text>\r\n        {children}\r\n      </Layout>\r\n    </Modal>\r\n  );\r\n}\r\n","import {apiSlice} from \"../api/apiSlice\";\r\n\r\nexport const base_URL = \"https://api.athenaserver.com:5678/api\"","import {useEffect, useState} from \"react\";\r\nimport {base_URL} from \"../features/notifications/constants\";\r\nimport {useAppSelector} from \"../app/hooks\";\r\nimport {selectDarkMode, selectUserKey} from \"../app/appDataSlice\";\r\nimport {Autocomplete, AutocompleteItem} from \"@ui-kitten/components\";\r\n\r\n/**\r\n * Renders a dropdown with the names filtered as user types\r\n * @param setHasChosen set function of a useState which contains a boolean determining whether a user has been chosen\r\n * @param setRecipient set function of a useState which contains is either: 1. a string containing the userName of the user when one has been chosen, 2. null when a user has not been chosen\r\n * @constructor\r\n */\r\nexport default function UserNameSelectionDropDown({setHasChosen, setRecipient, placeholder}) {\r\n    const userKey = useAppSelector(selectUserKey)\r\n    const darkMode = useAppSelector(selectDarkMode)\r\n    const [names, setNames] = useState([]) // filtered list of names\r\n    const [users, setUsers] = useState([]) // clean list of users\r\n    const [ value, setValue ] = useState('') // typed name\r\n    const myStyles = {\r\n        modal: {\r\n            fontSize: 18, paddingBottom: 20, fontWeight: 'bold',\r\n            textAlign: 'center', width: '100%', color: darkMode ? 'rgb(255,255,255)' : 'rgb(0,0,0)'\r\n        },\r\n        backdrop: {\r\n            backgroundColor: darkMode ? 'rgba(141,141,141,0.5)' : 'rgba(0, 0, 0, 0.5)',\r\n        },\r\n        containerDrop: {\r\n            minWidth: 200,\r\n            paddingBottom: 15\r\n        },\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(base_URL + '/users/userNamesAndNames', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'userKey': userKey\r\n            }\r\n        }).then(async (data) => {\r\n            if (data.ok) {\r\n                const userList = await data.json();\r\n                setNames(userList.map(user => {\r\n                    if (user) {\r\n                        return user.realName + ' (' + user.userName + ')'\r\n                    }\r\n                }))\r\n                setUsers(userList)\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    function renderEachDropItem() {\r\n        let final = []\r\n        for (const option in names) {\r\n            final.push(\r\n                <AutocompleteItem\r\n                    title={names[option]}\r\n                    key={option}\r\n                />\r\n            )\r\n        }\r\n        return final\r\n    }\r\n\r\n    const onChangeText = (query) => {\r\n        setNames(\r\n            freshNames().filter(name =>\r\n                name?.toLowerCase().includes(query.toLowerCase())\r\n                || userNameContainsString(name, query))\r\n        );\r\n        setValue(query);\r\n    };\r\n\r\n    function freshNames() {\r\n        return users.map(user => {\r\n            if (user) {\r\n                return user.realName + ' (' + user.userName + ')'\r\n            }\r\n        })\r\n    }\r\n\r\n    const userNameContainsString = (name, query) => {\r\n        const user = users.find(auser => auser?.userName.toLowerCase().includes(query.toLowerCase()) && auser?.realName === name);\r\n        return user !== undefined;\r\n    }\r\n\r\n    function handleSelection(index) {\r\n        if (index === 0) {\r\n            setHasChosen(false)\r\n            setRecipient(null)\r\n            // @ts-ignore\r\n            setValue('')\r\n        } else {\r\n            setHasChosen(true)\r\n            setValue(names[index - 1])\r\n            setRecipient(findUserNameFromName(names[index - 1]))\r\n        }\r\n    }\r\n\r\n    function findUserNameFromName(name) {\r\n        const firstPar = name.indexOf('(')\r\n        const secondPar = name.indexOf(')')\r\n        return name.slice(firstPar + 1, secondPar)\r\n    }\r\n\r\n    return (\r\n        <Autocomplete\r\n            style={myStyles.containerDrop}\r\n            value={value}\r\n            placeholder={placeholder ? 'Recipient' : null}\r\n            onChangeText={onChangeText}\r\n            onSelect={handleSelection}>\r\n            <AutocompleteItem title={' '}/>\r\n            {renderEachDropItem()}\r\n        </Autocomplete>\r\n    );\r\n}","import {Alert, Button, TouchableOpacity, View} from \"react-native\";\r\nimport {FontAwesome5} from \"@expo/vector-icons\";\r\nimport {Card, Modal, Text} from \"@ui-kitten/components\";\r\nimport ModalContainer from \"../../../components/ModalContainer\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {useAppSelector} from \"../../../app/hooks\";\r\nimport {selectDarkMode, selectIsGuest, selectUserKey} from \"../../../app/appDataSlice\";\r\nimport {useGetUserInfoQuery} from \"../../api/usersApi\";\r\nimport {useGetCurrentSectionQuery} from \"../../api/classPagesApi\";\r\nimport {base_URL} from \"../../notifications/constants\";\r\nimport UserNameSelectionDropDown from \"../../../components/UserNameSelectionDropDown\";\r\n\r\nexport default function ExportModalClass({classData}) {\r\n    const isGuest = useAppSelector(selectIsGuest)\r\n    const [ showGuestModal, setShowGuestModal ] = useState(false)\r\n    const [ showModal, setShowModal ] = useState(false)\r\n    const darkMode = useAppSelector(selectDarkMode)\r\n\r\n    return (\r\n        <View style={{alignSelf: 'flex-end', marginRight: '7%',  flexDirection: 'column-reverse', marginTop: -10, paddingBottom: 10}}>\r\n            <TouchableOpacity\r\n                onPress={() => {\r\n                    if (isGuest) {\r\n                        setShowGuestModal(true)\r\n                    } else {\r\n                        setShowModal(true);\r\n                    }\r\n                }}\r\n                style={{\r\n                    alignItems: 'center',\r\n                }}>\r\n                <View style={{ height: 45, flexDirection: 'column', justifyContent: 'center', paddingLeft: 5}}>\r\n                    <FontAwesome5\r\n                        name={'file-export'}\r\n                        size={20}\r\n                        color={darkMode ? 'white' : 'black'}\r\n                    />\r\n                </View>\r\n                <Text style={{marginTop: -10, fontSize: 10}}>\r\n                    Share Class\r\n                </Text>\r\n            </TouchableOpacity>\r\n            {\r\n                showGuestModal &&\r\n                <ModalContainer\r\n                    title=\"Wait!\"\r\n                    children={<Text style={{paddingHorizontal: 30}}>This feature is locked to our Guest Users. Please create a free account with us to take advantage this feature.</Text>}\r\n                    backDropVisible={showGuestModal}\r\n                    setBackDropVisible={setShowGuestModal}\r\n                />\r\n            }\r\n            {renderModal(setShowModal, showModal, classData)}\r\n        </View>\r\n    )\r\n}\r\n\r\nfunction renderModal(setShowModal, showModal, classData: any) {\r\n    const {data: userData} = useGetUserInfoQuery(useAppSelector(selectUserKey));\r\n\r\n    const [ value, setValue ] = useState('')\r\n    const darkMode = useAppSelector(selectDarkMode)\r\n    const userKey = useAppSelector(selectUserKey)\r\n    const [ recipient, setRecipient ] = useState(null)\r\n    const [ hasChosen, setHasChosen ] = useState(false)\r\n\r\n    const myStyles = {\r\n        modal: {\r\n            fontSize: 18, paddingBottom: 20, fontWeight: 'bold',\r\n            textAlign: 'center', width: '100%', color: darkMode ? 'rgb(255,255,255)' : 'rgb(0,0,0)'\r\n        },\r\n        backdrop: {\r\n            backgroundColor: darkMode ? 'rgba(141,141,141,0.5)' : 'rgba(0, 0, 0, 0.5)',\r\n        },\r\n        containerDrop: {\r\n            minWidth: 200,\r\n            paddingBottom: 15\r\n        },\r\n    }\r\n\r\n    const exportClass = async (recipient) => {\r\n        try {\r\n            let status = await fetch(base_URL + '/users/sendNotification', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'userKey': userKey\r\n                },\r\n                body: JSON.stringify({\r\n                    recipients: [recipient],\r\n                    text: JSON.stringify({masterCourseCode: classData.masterCourseCode, courseTerm: classData.courseTerm}),\r\n                    title: userData.realFirstName + \" shared a course\",\r\n                    isCourseData: true\r\n                })\r\n            })\r\n            return status.ok\r\n        } catch (e) {\r\n            console.log(e)\r\n            return false\r\n        }\r\n    }\r\n    return (\r\n        <Modal\r\n            visible={showModal}\r\n            backdropStyle={myStyles.backdrop}\r\n            style={{ width: '80%', height: '70%' }}\r\n            onBackdropPress={() => setShowModal(false)}>\r\n            <Card disabled={true}>\r\n                <Text style={myStyles.modal}>\r\n                    Share This Course\r\n                </Text>\r\n                {UserNameSelectionDropDown({setHasChosen, setRecipient, placeholder: true})}\r\n                <View>\r\n                    <Button disabled={recipient === null} title={'Send'} onPress={() => {\r\n                        exportClass(recipient).then((returnValue) => {\r\n                            setShowModal(false)\r\n                            returnValue ? Alert.alert('Message Sent') :\r\n                                Alert.alert('Error Sending Message', 'Please Try Again Later')\r\n                        })\r\n                    }} />\r\n                    <Button title={'Dismiss'} onPress={() => {\r\n                        setShowModal(false)\r\n                        setHasChosen(false)\r\n                        setValue('')\r\n                        setRecipient(null)\r\n                    }} />\r\n                </View>\r\n            </Card>\r\n        </Modal>\r\n    );\r\n}","import {\r\n  Button,\r\n  Card,\r\n  Layout,\r\n  Modal,\r\n  Text, useTheme,\r\n  withStyles,\r\n} from '@ui-kitten/components';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { StyleSheet, ScrollView, TouchableOpacity } from 'react-native';\r\n\r\nimport { useAppSelector } from '../../../app/hooks';\r\nimport { useIsAllowedToReviewQuery } from '../../api/classPagesApi';\r\nimport { selectDarkMode, selectUserKey } from '../../../app/appDataSlice';\r\nimport ExportModalClass from \"./exportModalClass\";\r\nimport {LinearGradient} from \"expo-linear-gradient\";\r\n\r\nfunction SingleClassPage({ eva, navigation, selectedClass = null }) {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const scrollViewRef = useRef(null);\r\n  const theme = useTheme();\r\n  const userKey = useAppSelector(selectUserKey);\r\n  const darkMode = useAppSelector(selectDarkMode);\r\n  const filters = useAppSelector((state) => state.appData.classPages.filters);\r\n  const isHMC = useAppSelector((state) => state.appData.classPages.isHMC);\r\n  if (!selectedClass) {\r\n    selectedClass = useAppSelector(\r\n        (state) => state.appData.classPages.selectedClass\r\n    );\r\n  }\r\n\r\n\r\n  const backgroundColor = darkMode ? eva.style.dark : eva.style.light;\r\n\r\n  const { data: isAllowedToReviewRes } = useIsAllowedToReviewQuery({\r\n    userKey,\r\n    masterCourseCode: selectedClass.masterCourseCode,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (scrollViewRef?.current) {\r\n      scrollViewRef.current.scrollTo({\r\n        y: 0,\r\n        animated: false,\r\n      });\r\n    }\r\n  }, [selectedClass]);\r\n\r\n  function buildTimeString(time) {\r\n    if (!time.startTime || time.startTime === '' || time.startTime === null) {\r\n      return 'closed';\r\n    }\r\n    return (\r\n      convertTo12HourTime(time.startTime) +\r\n      ' - ' +\r\n      convertTo12HourTime(time.endTime) +\r\n      '\\n'\r\n    );\r\n  }\r\n\r\n  function convertTo12HourTime(time) {\r\n    if (time.length !== 5) {\r\n      time = '0' + time;\r\n    }\r\n    let hours = time.slice(0, 2);\r\n    let minutes = time.slice(3, 5);\r\n    let ampm = Number.parseInt(hours) > 12 ? 'pm' : 'am';\r\n    hours = hours % 12;\r\n    if (hours === 0) {\r\n      hours = 12;\r\n      ampm = 'pm';\r\n    }\r\n    return hours + ':' + minutes + ampm;\r\n  }\r\n\r\n  const averageGradeMSGModal = (\r\n    <Modal\r\n      visible={showModal}\r\n      backdropStyle={styles.backdrop}\r\n      style={{ width: '75%' }}\r\n      onBackdropPress={() => setShowModal(false)}>\r\n      <Card disabled={true}>\r\n        <Text style={{ fontSize: 15, paddingTop: 5, paddingBottom: 10 }}>\r\n          The Athena Network collects and aggregates the data anonymously\r\n          submitted by the Course Review process and calculates what the average\r\n          student's experience in this course will look like. Given that it is\r\n          based on voluntarily submitted data, this information is to be used as\r\n          a reference only. Please consult your advisor before making any\r\n          impactful decisions.\r\n        </Text>\r\n        <Button onPress={() => setShowModal(false)}>Dismiss</Button>\r\n      </Card>\r\n    </Modal>\r\n  );\r\n\r\n  if (!selectedClass.times) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n      <LinearGradient\r\n          colors={\r\n            darkMode\r\n                ? [theme['color-basic-1100'], theme['color-basic-1100']]\r\n                : [theme['color-primary-500'], theme['color-success-500']]\r\n          }\r\n          style={{ width: '100%', margin: 0, alignItems: 'center', flex: 1 }}\r\n          start={{ x: 0, y: 0 }}\r\n          end={{ x: 1, y: 0.4 }}>\r\n    <ScrollView\r\n      contentContainerStyle={{ alignSelf: 'center', maxWidth: 700 }}\r\n      style={backgroundColor}\r\n      showsVerticalScrollIndicator={false}\r\n      ref={scrollViewRef}>\r\n      <Layout style={[{ alignItems: 'center' }, backgroundColor]}>\r\n        <ExportModalClass classData={selectedClass}/>\r\n        <Text style={styles.title}>{selectedClass.courseName}</Text>\r\n        <Text style={{ paddingTop: 30 }}>{selectedClass.masterCourseCode}</Text>\r\n\r\n        <Text style={styles.subtitle}>\r\n          {`${selectedClass.courseTerm} \\u2022 credits: ${\r\n            isHMC\r\n              ? selectedClass.creditWeightHM\r\n              : selectedClass.creditWeight\r\n          }`}\r\n        </Text>\r\n        {selectedClass.timeSpentOutOfClass && (\r\n          <Layout\r\n            style={[\r\n              {\r\n                flexDirection: 'row',\r\n                alignItems: 'flex-start',\r\n                paddingRight: 5,\r\n              },\r\n              backgroundColor,\r\n            ]}>\r\n            <Text style={styles.subtitle}>Time Spent Per Week</Text>\r\n            <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\r\n            <Text style={styles.subtitle}>\r\n              : {selectedClass.timeSpentOutOfClass} hours\r\n            </Text>\r\n          </Layout>\r\n        )}\r\n        {selectedClass.averageGrade && (\r\n          <Layout\r\n            style={[\r\n              {\r\n                flexDirection: 'row',\r\n                alignItems: 'flex-start',\r\n                paddingRight: 5,\r\n              },\r\n              backgroundColor,\r\n            ]}>\r\n            <Text style={styles.subtitle}>Average Grade</Text>\r\n            <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\r\n            <Text style={styles.subtitle}>: {selectedClass.averageGrade}</Text>\r\n          </Layout>\r\n        )}\r\n        {selectedClass.difficulty && (\r\n          <Layout\r\n            style={[\r\n              {\r\n                flexDirection: 'row',\r\n                alignItems: 'flex-start',\r\n                paddingRight: 5,\r\n              },\r\n              backgroundColor,\r\n            ]}>\r\n            <Text style={styles.subtitle}>Estimated Difficulty</Text>\r\n            <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\r\n            <Text style={styles.subtitle}>\r\n              : {selectedClass.difficulty} / 5\r\n            </Text>\r\n          </Layout>\r\n        )}\r\n        {selectedClass.rating && (\r\n          <Layout\r\n            style={[\r\n              {\r\n                flexDirection: 'row',\r\n                alignItems: 'flex-start',\r\n                paddingRight: 5,\r\n              },\r\n              backgroundColor,\r\n            ]}>\r\n            <Text style={styles.subtitle}>Average Rating</Text>\r\n            <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\r\n            <Text style={styles.subtitle}>: {selectedClass.rating} / 5</Text>\r\n          </Layout>\r\n        )}\r\n      </Layout>\r\n      <Layout style={backgroundColor}>\r\n        <Text style={styles.courseDescription}>{selectedClass.summary}</Text>\r\n      </Layout>\r\n      <Layout style={{ ...backgroundColor, ...styles.boxed }}>\r\n        <Text style={{ fontSize: 15, fontWeight: 'bold' }}>\r\n          Stated Prerequisites:\r\n        </Text>\r\n        <Text style={{ fontSize: 15 }}>\r\n          {selectedClass.prerequisites !== ''\r\n            ? selectedClass.prerequisites\r\n            : 'none'}\r\n        </Text>\r\n\r\n        <Text style={{ fontSize: 15, fontWeight: 'bold' }}>\r\n          Stated Corequisites:\r\n        </Text>\r\n        <Text style={{ fontSize: 15 }}>\r\n          {selectedClass.corequisites !== ''\r\n            ? selectedClass.corequisites\r\n            : 'none'}\r\n        </Text>\r\n\r\n        <Text style={{ fontSize: 15, fontWeight: 'bold' }}>\r\n          Number of PERMs:\r\n        </Text>\r\n        <Text style={{ fontSize: 15 }}>\r\n          {selectedClass.permCount\r\n              ? selectedClass.permCount.toString()\r\n              : '0'}\r\n        </Text>\r\n      </Layout>\r\n      <Layout style={[{ alignItems: 'flex-end' }, backgroundColor]}>\r\n        {(selectedClass.timeSpentOutOfClass ||\r\n          selectedClass.averageGrade ||\r\n          selectedClass.difficulty ||\r\n          selectedClass.rating) && (\r\n          <TouchableOpacity onPress={() => setShowModal(!showModal)}>\r\n            <Layout\r\n              style={[\r\n                {\r\n                  flexDirection: 'row',\r\n                  alignItems: 'flex-start',\r\n                  paddingRight: 5,\r\n                },\r\n                backgroundColor,\r\n              ]}>\r\n              <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\r\n              <Text style={styles.disclaimer}>How Do We Estimate This?</Text>\r\n            </Layout>\r\n          </TouchableOpacity>\r\n        )}\r\n      </Layout>\r\n      <Layout style={backgroundColor}>\r\n        {selectedClass.times.length > 0 && (\r\n          <Layout style={backgroundColor}>\r\n            <Text style={styles.subHeader}>Sections</Text>\r\n            <Layout style={[styles.section, backgroundColor]}>\r\n              <Text style={styles.headerText}>Course Code</Text>\r\n              <Text style={styles.headerText}>Seats</Text>\r\n              <Text style={styles.headerText}>Professor</Text>\r\n              <Text style={styles.headerText}>Time</Text>\r\n              <Text style={styles.headerText}>Location</Text>\r\n            </Layout>\r\n          </Layout>\r\n        )}\r\n        {selectedClass.times.map((time) => {\r\n          return (\r\n            <Layout\r\n              key={time.courseCode}\r\n              style={{ backgroundColor, ...styles.section }}>\r\n              <Text style={styles.sectionText}>{time.courseCode}</Text>\r\n              <Text style={styles.sectionText}>\r\n                {time.seatsFilled} / {time.seatsFilled + time.seatsAvailable}\r\n              </Text>\r\n              <Text style={styles.sectionText}>{time.professorName}</Text>\r\n              <Text style={styles.sectionText}>\r\n                {buildTimeString(time)}\r\n                {time.daysOfTheWeek.join(', ')}\r\n              </Text>\r\n              <Text style={styles.sectionText}>\r\n                {time.classLocation ? time.classLocation : 'TBD'}\r\n              </Text>\r\n            </Layout>\r\n          );\r\n        })}\r\n        {averageGradeMSGModal}\r\n      </Layout>\r\n      {isAllowedToReviewRes?.isAllowed ? (\r\n        <Button\r\n          style={{ margin: 10 }}\r\n          onPress={() => {\r\n            navigation.navigate('PostReview');\r\n          }}>\r\n          Post Review\r\n        </Button>\r\n      ) : null}\r\n      <Text style={styles.subHeader}>Reviews</Text>\r\n      {selectedClass.reviews.length === 0 ? (\r\n        <Text style={{ alignSelf: 'center', marginBottom: 10 }}>\r\n          No Reviews yet\r\n        </Text>\r\n      ) : (\r\n        selectedClass.reviews.map((review, index) => (\r\n          <Card key={index} disabled={true}>\r\n            <Text>{review.text + '\\n\\nPosted: ' + review.date}</Text>\r\n            {review.professor && (\r\n              <Text>{'Taught By: ' + review.professor}</Text>\r\n            )}\r\n          </Card>\r\n        ))\r\n      )}\r\n    </ScrollView>\r\n      </LinearGradient>\r\n  );\r\n}\r\n\r\nexport default withStyles(SingleClassPage, (theme) => ({\r\n  dark: {\r\n    backgroundColor: theme['color-basic-900'],\r\n  },\r\n  light: {\r\n    backgroundColor: theme['color-basic-200'],\r\n  },\r\n}));\r\n\r\nconst styles = StyleSheet.create({\r\n  title: {\r\n    fontSize: 20,\r\n    marginTop: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  subtitle: {\r\n    fontSize: 16,\r\n  },\r\n  courseOpen: {\r\n    backgroundColor: 'green',\r\n    color: '#fff',\r\n    padding: 5,\r\n    marginRight: 10,\r\n  },\r\n  courseClosed: {\r\n    backgroundColor: 'red',\r\n    color: '#fff',\r\n    padding: 5,\r\n    borderRadius: 5,\r\n  },\r\n  header: {\r\n    alignItems: 'center',\r\n  },\r\n  details: {\r\n    flexDirection: 'row',\r\n    padding: 10,\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n  },\r\n  courseDescription: {\r\n    paddingRight: 20,\r\n    paddingLeft: 20,\r\n    paddingTop: 10,\r\n    paddingBottom: 5,\r\n    fontSize: 17,\r\n  },\r\n  BodyContainer: {\r\n    borderTopWidth: 1,\r\n    borderTopColor: 'black',\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-evenly',\r\n    padding: 10,\r\n    paddingTop: 20,\r\n    paddingBottom: 20,\r\n  },\r\n  boxed: {\r\n    alignItems: 'center',\r\n    margin: 8,\r\n    borderColor: 'black',\r\n    borderWidth: 1,\r\n    padding: 7,\r\n  },\r\n  documentStyle: {\r\n    width: 150,\r\n    height: 190,\r\n    paddingTop: 100,\r\n  },\r\n  imageLabel: {\r\n    fontSize: 12,\r\n    color: 'black',\r\n    padding: 10,\r\n    textAlign: 'center',\r\n  },\r\n  schedule: {\r\n    paddingLeft: 20,\r\n    paddingTop: 10,\r\n  },\r\n  graphImage: {\r\n    width: '100%',\r\n    aspectRatio: 1,\r\n    resizeMode: 'contain',\r\n  },\r\n  grade: {\r\n    fontSize: 50,\r\n    fontWeight: 'bold',\r\n    color: 'green',\r\n  },\r\n  reviewText: {\r\n    fontSize: 16,\r\n    fontStyle: 'italic',\r\n  },\r\n  reviewBox: {\r\n    width: '95%',\r\n    padding: 10,\r\n    borderWidth: 1,\r\n    borderColor: 'black',\r\n    borderRadius: 5,\r\n    marginBottom: 10,\r\n  },\r\n  section: {\r\n    flexDirection: 'row',\r\n    paddingLeft: 5,\r\n    borderBottomWidth: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  headerText: {\r\n    fontWeight: 'bold',\r\n    fontSize: 13,\r\n    flex: 1,\r\n  },\r\n  sectionText: {\r\n    flex: 1,\r\n  },\r\n  disclaimer: {\r\n    fontSize: 14,\r\n    fontStyle: 'italic',\r\n  },\r\n  backdrop: {\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n  },\r\n  input: {\r\n    height: 50,\r\n    margin: 12,\r\n    borderWidth: 1,\r\n    padding: 10,\r\n  },\r\n  containerDrop: {\r\n    height: 42,\r\n    margin: 12,\r\n    borderWidth: 1,\r\n  },\r\n  indentedInput: {\r\n    height: 50,\r\n    marginVertical: 12,\r\n    borderWidth: 1,\r\n    padding: 10,\r\n    marginRight: 12,\r\n    marginLeft: 30,\r\n  },\r\n  text: {\r\n    fontSize: 16,\r\n    lineHeight: 21,\r\n    fontWeight: 'bold',\r\n    letterSpacing: 0.25,\r\n    color: 'white',\r\n  },\r\n  subHeader: {\r\n    fontSize: 20,\r\n    paddingLeft: 20,\r\n    paddingBottom: 20,\r\n    paddingTop: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n","export const RENDERED_RESULTS_LIMIT = 10;\r\nexport const NEW_REVIEW_FIELDS = [\r\n  {\r\n    label: 'Professor',\r\n    id: 'professor',\r\n    mandatory: false,\r\n    type: 'String',\r\n  },\r\n  {\r\n    label: 'Grade',\r\n    id: 'grade',\r\n    type: 'DropDown',\r\n    mandatory: false,\r\n    options: [\r\n      {\r\n        label: 'A+',\r\n        id: 'A',\r\n      },\r\n      {\r\n        label: 'A',\r\n        id: 'A',\r\n      },\r\n      {\r\n        label: 'A-',\r\n        id: 'A',\r\n      },\r\n      {\r\n        label: 'B+',\r\n        id: 'B',\r\n      },\r\n      {\r\n        label: 'B',\r\n        id: 'B',\r\n      },\r\n      {\r\n        label: 'B-',\r\n        id: 'B',\r\n      },\r\n      {\r\n        label: 'C+',\r\n        id: 'C',\r\n      },\r\n      {\r\n        label: 'C',\r\n        id: 'C',\r\n      },\r\n      {\r\n        label: 'C-',\r\n        id: 'C',\r\n      },\r\n      {\r\n        label: 'D+',\r\n        id: 'D',\r\n      },\r\n      {\r\n        label: 'D',\r\n        id: 'D',\r\n      },\r\n      {\r\n        label: 'D-',\r\n        id: 'D',\r\n      },\r\n      {\r\n        label: 'F+',\r\n        id: 'F',\r\n      },\r\n      {\r\n        label: 'F',\r\n        id: 'F',\r\n      },\r\n      {\r\n        label: 'F-',\r\n        id: 'F',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    label: 'Time Spent in Hours (ie: 7)',\r\n    id: 'timeSpent',\r\n    mandatory: false,\r\n    type: 'String',\r\n  },\r\n];\r\n","import {\r\n  IndexPath,\r\n  Layout,\r\n  Select,\r\n  SelectItem,\r\n  Text,\r\n  useTheme,\r\n  Button,\r\n  Spinner,\r\n  Input,\r\n} from '@ui-kitten/components';\r\nimport { useState } from 'react';\r\nimport { Alert, StyleSheet, ScrollView } from 'react-native';\r\nimport { selectUserKey } from '../../../app/appDataSlice';\r\nimport { useAppSelector } from '../../../app/hooks';\r\nimport { NEW_REVIEW_FIELDS as fields } from '../../../constants/classPages';\r\nimport { useSendReviewMutation } from '../../api/classPagesApi';\r\n\r\nexport default function NewReview({ navigation }) {\r\n  const [body, setBody] = useState({});\r\n  const userKey = useAppSelector(selectUserKey);\r\n  const darkMode = useAppSelector((state) => state.appData.secure.darkMode);\r\n  const selectedClass = useAppSelector(\r\n    (state) => state.appData.classPages.selectedClass\r\n  );\r\n  const [sendReview, { isLoading }] = useSendReviewMutation();\r\n\r\n  const theme = useTheme();\r\n\r\n  const backgroundColor = darkMode\r\n    ? theme['color-basic-900']\r\n    : theme['color-basic-200'];\r\n\r\n  const color = darkMode ? theme['color-basic-200'] : theme['color-basic-900'];\r\n\r\n  const handleReviewSubmitted = async () => {\r\n    try {\r\n      await sendReview({\r\n        body: {\r\n          ...body,\r\n          masterCourseCode: selectedClass.masterCourseCode,\r\n        },\r\n        userKey,\r\n      }).unwrap();\r\n      Alert.alert(\r\n        'Review Submitted',\r\n        `Your review of \"${selectedClass.courseName}\" has been submitted and is now pending approval.\\n\\nThank You!`,\r\n        [\r\n          {\r\n            text: 'OK',\r\n            onPress: () => {\r\n              navigation.goBack();\r\n            },\r\n          },\r\n        ]\r\n      );\r\n    } catch (error) {\r\n      Alert.alert(\r\n        'Error',\r\n        `There was an error submitting your review. Please try again later.`\r\n      );\r\n      console.warn('Error submitting review: ', error);\r\n    }\r\n  };\r\n\r\n  function renderTheFieldsNecessary(fields) {\r\n    const changeValue = (theValue, valueToChange) => {\r\n      let newBody = body;\r\n      for (const aspect in newBody) {\r\n        if (\r\n          newBody[aspect] === null ||\r\n          newBody[aspect] === undefined ||\r\n          newBody[aspect] === ''\r\n        ) {\r\n          delete newBody[aspect];\r\n        }\r\n      }\r\n      if (theValue !== undefined) {\r\n        newBody[valueToChange] = theValue;\r\n      } else {\r\n        if (newBody[valueToChange]) {\r\n          delete newBody[valueToChange];\r\n        }\r\n      }\r\n      setBody(newBody);\r\n    };\r\n    const renderFilterParameters = (fields) => {\r\n      if (fields.length === 0) {\r\n        return null;\r\n      }\r\n      return (\r\n        <Layout style={{ flexDirection: 'row', backgroundColor }}>\r\n          <Text\r\n            style={{\r\n              fontSize: 15,\r\n              paddingLeft: 12,\r\n              paddingBottom: 5,\r\n              paddingTop: 5,\r\n              alignContent: 'center',\r\n              fontWeight: 'bold',\r\n            }}>\r\n            Review Details\r\n          </Text>\r\n        </Layout>\r\n      );\r\n    };\r\n    let final = [];\r\n\r\n    const renderDropDown = (field) => {\r\n      const [selectedIndex, setSelectedIndex] = useState(new IndexPath(0));\r\n      const [hasChosen, setHasChosen] = useState(false);\r\n\r\n      function currentValue() {\r\n        return (\r\n          <Text key={'gal;fkdjsl;f'}>\r\n            {!hasChosen\r\n              ? 'Choose ' +\r\n                field.label +\r\n                (field.mandatory ? ' (mandatory)' : '')\r\n              : field.options[selectedIndex.row - 1].label}{' '}\r\n          </Text>\r\n        );\r\n      }\r\n\r\n      function handleSelection(index) {\r\n        setSelectedIndex(index);\r\n        changeValue(\r\n          index.row === 0 ? undefined : field.options[index.row - 1].id,\r\n          field.id\r\n        );\r\n        if (index.row === 0) {\r\n          setHasChosen(false);\r\n        } else {\r\n          setHasChosen(true);\r\n        }\r\n      }\r\n\r\n      return (\r\n        <Select\r\n          style={{ ...styles.containerDrop, backgroundColor }}\r\n          value={currentValue}\r\n          selectedIndex={selectedIndex}\r\n          onSelect={handleSelection}>\r\n          <SelectItem title={' '} />\r\n          {field.options.map(({ label }, index) => (\r\n            <SelectItem title={label} key={index} />\r\n          ))}\r\n        </Select>\r\n      );\r\n    };\r\n    final.push(\r\n      <Input\r\n        key={'lfjdsa;lfaj'}\r\n        autoCapitalize={'sentences'}\r\n        onChangeText={(theValue) => changeValue(theValue, 'text')}\r\n        style={{ ...styles.inputBig, backgroundColor, color }}\r\n        multiline={true}\r\n        placeholderTextColor={darkMode ? theme['color-basic-500'] : 'gray'}\r\n        placeholder={'Review Text (mandatory)'}\r\n      />\r\n    );\r\n    for (let i = 0; i < fields.length; i++) {\r\n      const type = fields[i].type;\r\n      if (type === 'String') {\r\n        final.push(\r\n          <Input\r\n            key={i}\r\n            autoCapitalize={'words'}\r\n            clearButtonMode={'always'}\r\n            onChangeText={(theValue) => changeValue(theValue, fields[i].id)}\r\n            style={{ ...styles.input, backgroundColor, color }}\r\n            placeholderTextColor={darkMode ? theme['color-basic-500'] : 'gray'}\r\n            placeholder={\r\n              fields[i].mandatory\r\n                ? fields[i].label + ' (mandatory)'\r\n                : fields[i].label\r\n            }\r\n          />\r\n        );\r\n      } else if (type === 'DropDown') {\r\n        final.push(renderDropDown(fields[i]));\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Layout style={{ backgroundColor }}>\r\n        {renderFilterParameters(fields)}\r\n        <Layout style={{ backgroundColor }}>{final}</Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ScrollView style={{ backgroundColor }}>\r\n      <Layout style={{ backgroundColor, ...styles.container }}>\r\n        <Layout style={{ backgroundColor }}>\r\n          {renderTheFieldsNecessary(fields)}\r\n        </Layout>\r\n        <Button style={{ margin: 12 }} onPress={handleReviewSubmitted}>\r\n          Post Review\r\n        </Button>\r\n      </Layout>\r\n      {isLoading ? (\r\n        <Layout\r\n          style={{\r\n            backgroundColor: 'transparent',\r\n            position: 'absolute',\r\n            right: '50%',\r\n            top: '50%',\r\n          }}>\r\n          <Spinner />\r\n        </Layout>\r\n      ) : null}\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  input: {\r\n    height: 50,\r\n    margin: 12,\r\n    padding: 10,\r\n    borderColor: '#B3B3B3',\r\n    borderRadius: 5,\r\n    borderWidth: 1,\r\n  },\r\n  inputBig: {\r\n    height: 200,\r\n    margin: 12,\r\n    padding: 10,\r\n    borderColor: '#B3B3B3',\r\n    borderRadius: 5,\r\n    borderWidth: 1,\r\n  },\r\n  containerDrop: {\r\n    height: 42,\r\n    margin: 12,\r\n  },\r\n  indentedInput: {\r\n    height: 50,\r\n    marginVertical: 12,\r\n    padding: 10,\r\n    marginRight: 12,\r\n    marginLeft: 30,\r\n  },\r\n  text: {\r\n    fontSize: 16,\r\n    lineHeight: 21,\r\n    fontWeight: 'bold',\r\n    letterSpacing: 0.25,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    // alignItems: 'center',\r\n  },\r\n  header: {\r\n    marginTop: 20,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: '100%',\r\n  },\r\n  address: {\r\n    alignItems: 'center',\r\n    margin: 10,\r\n    padding: 10,\r\n  },\r\n  video: {\r\n    marginTop: 20,\r\n    display: 'flex',\r\n    justifyContent: 'flex-start',\r\n  },\r\n  title: {\r\n    fontSize: 26,\r\n    marginLeft: 10,\r\n  },\r\n  logo: {\r\n    width: '100%',\r\n    height: 100,\r\n  },\r\n  couponContainer: {\r\n    width: '100%',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n  },\r\n  coupon: {\r\n    width: 400,\r\n    height: 267,\r\n  },\r\n  imageGallery: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    margin: 10,\r\n    marginBottom: 0,\r\n  },\r\n  imageStyle: {\r\n    width: 150,\r\n    height: 150,\r\n    paddingTop: 100,\r\n    margin: 5,\r\n  },\r\n  headerText: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n","import { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport InfoPage from './InfoPage';\r\nimport PostReview from './PostReview';\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nexport default function SingleClassPage({ bottomSheetRef }) {\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen\r\n        name=\"InfoPage\"\r\n        component={InfoPage}\r\n        options={{ title: 'ClassPages' }}\r\n      />\r\n      <Stack.Screen\r\n          name=\"PostReview\"\r\n          component={PostReview}\r\n          options={{ title: 'Post Review' }}\r\n        />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n","import { Layout, Text } from '@ui-kitten/components';\r\n\r\nexport default function Message({ title, item }) {\r\n  return (\r\n    <Layout\r\n      style={{\r\n        flex: 1,\r\n        marginTop: 10,\r\n        alignItems: 'center',\r\n        backgroundColor: 'transparent',\r\n      }}>\r\n      <Text style={{ margin: 20, color: '#fff' }}>{title}</Text>\r\n      {item}\r\n    </Layout>\r\n  );\r\n}\r\n","import { Layout, Text } from '@ui-kitten/components';\r\nimport {\r\n  StyleSheet,\r\n  Animated,\r\n  TouchableOpacity,\r\n} from 'react-native';\r\nimport { FontAwesome5 } from '@expo/vector-icons';\r\nimport { useRef } from 'react';\r\n\r\nexport default function ClassListItemItem({\r\n  courseCode,\r\n  seatsAvailable,\r\n  seatsFilled,\r\n  handleAddClass,\r\n  handleRemoveClass,\r\n  darkMode,\r\n  added,\r\n  masterCourseCode,\r\n}) {\r\n  const selectedAnim = useRef(new Animated.Value(1)).current;\r\n\r\n  return (\r\n    <Layout style={styles.dropDownItem}>\r\n      <Text>{`\\u2022 ${courseCode}`}</Text>\r\n      <Text\r\n        style={seatsAvailable > 0 ? styles.isAvailable : styles.notAvailable}>\r\n        {seatsFilled} / {seatsFilled + seatsAvailable}\r\n      </Text>\r\n      {/* Add / Remove Class */}\r\n      <TouchableOpacity\r\n        activeOpacity={1}\r\n        onPress={() => {\r\n          if (added) {\r\n            handleRemoveClass(courseCode, masterCourseCode);\r\n          } else {\r\n            handleAddClass(courseCode, masterCourseCode);\r\n          }\r\n          Animated.sequence([\r\n            Animated.spring(selectedAnim, {\r\n              toValue: 0.0,\r\n              speed: 16,\r\n              useNativeDriver: true,\r\n            }),\r\n          ]).start(() => {\r\n            Animated.spring(selectedAnim, {\r\n              toValue: 1,\r\n              speed: 16,\r\n              useNativeDriver: true,\r\n            }).start();\r\n          });\r\n        }}>\r\n        <Animated.View\r\n          style={{\r\n            width: 50,\r\n            alignItems: 'center',\r\n            transform: [\r\n              {\r\n                scale: selectedAnim,\r\n              },\r\n            ],\r\n          }}>\r\n          <FontAwesome5\r\n            style={{ padding: 5 }}\r\n            size={24}\r\n            name={added ? 'times' : 'plus'}\r\n            color={darkMode ? 'white' : 'black'}\r\n          />\r\n        </Animated.View>\r\n      </TouchableOpacity>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  list__container: {\r\n    margin: 10,\r\n    marginLeft: 0,\r\n    height: '90%',\r\n    width: '100%',\r\n  },\r\n  addedClassesContainer: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    width: '60%',\r\n    borderTopRightRadius: 20,\r\n    borderBottomRightRadius: 20,\r\n    borderColor: '#c2c2c2',\r\n    backgroundColor: '#f7f7f7',\r\n    paddingTop: 5,\r\n    borderTopWidth: 1.5,\r\n    borderBottomWidth: 1.5,\r\n    borderRightWidth: 1.5,\r\n  },\r\n  addedClasses: {\r\n    position: 'absolute',\r\n    right: 3,\r\n    top: 3,\r\n    padding: 7,\r\n    margin: 5,\r\n    backgroundColor: '#c9c9c9',\r\n    borderRadius: 100,\r\n  },\r\n  item: {\r\n    marginBottom: 10,\r\n    marginTop: 10,\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    marginBottom: 5,\r\n  },\r\n  buttonContainer: {\r\n    right: 0,\r\n    position: 'absolute',\r\n    width: 50,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100%',\r\n  },\r\n  button: {\r\n    padding: 5,\r\n    borderColor: 'grey',\r\n  },\r\n  dropDown: {\r\n    backgroundColor: '#f7f7f7',\r\n    paddingLeft: 30,\r\n    paddingBottom: 10,\r\n    paddingTop: 10,\r\n  },\r\n  dropDownItem: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    height: 54,\r\n  },\r\n  isAvailable: {\r\n    color: 'green',\r\n  },\r\n  notAvailable: {\r\n    color: 'red',\r\n  },\r\n  loadingMessage: {\r\n    fontSize: 20,\r\n    color: 'white',\r\n    alignSelf: 'center',\r\n    fontStyle: 'italic',\r\n  },\r\n  loadingMessageRefresh: {\r\n    fontSize: 15,\r\n    paddingTop: 20,\r\n    color: 'white',\r\n    alignSelf: 'center',\r\n    fontWeight: 'bold',\r\n  },\r\n  filters: {\r\n    backgroundColor: 'white',\r\n    alignItems: 'center',\r\n    padding: 10,\r\n  },\r\n});\r\n","import { Layout, Text } from '@ui-kitten/components';\r\nimport {\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  LayoutAnimation,\r\n  UIManager,\r\n  Platform,\r\n  Animated,\r\n} from 'react-native';\r\nimport { FontAwesome5 } from '@expo/vector-icons';\r\nimport { useEffect, useMemo, useRef, useState } from 'react';\r\nimport useTraceUpdate from '../../hooks/useTraceUpdate';\r\nimport ClassListItemItem from './ClassListItemItem';\r\n\r\nif (\r\n  Platform.OS === 'android' &&\r\n  UIManager.setLayoutAnimationEnabledExperimental\r\n) {\r\n  UIManager.setLayoutAnimationEnabledExperimental(true);\r\n}\r\n\r\nexport default function Item({\r\n  courseName,\r\n  masterCourseCode,\r\n  schedule,\r\n  menuOpen,\r\n  setIsMenuOpen,\r\n  darkMode,\r\n  handleClassSelected,\r\n  handleAddClass,\r\n  handleRemoveClass,\r\n  inItem,\r\n}) {\r\n  \r\n\r\n  const memoizedItem = useMemo(() => {\r\n    return (\r\n      <Layout\r\n        style={{\r\n          borderRadius: 20,\r\n          opacity: 1,\r\n          marginTop: 7,\r\n          marginRight: 9,\r\n          marginLeft: 9,\r\n        }}>\r\n        {/* Name and master coursecode */}\r\n        <Layout style={{ marginHorizontal: 20 }}>\r\n          <Layout style={{ height: 67 }}>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                handleClassSelected(masterCourseCode);\r\n              }}>\r\n              <Layout style={styles.item}>\r\n                <Text style={styles.title}>{courseName}</Text>\r\n                <Text>{masterCourseCode}</Text>\r\n              </Layout>\r\n            </TouchableOpacity>\r\n\r\n            {/* Dropdown Menu Toggle */}\r\n            <TouchableOpacity\r\n              style={styles.buttonContainer}\r\n              onPress={() => {\r\n                if (menuOpen === masterCourseCode) {\r\n                  setIsMenuOpen('');\r\n                  LayoutAnimation.configureNext({\r\n                    duration: 730,\r\n                    create: { type: 'easeInEaseOut', property: 'opacity' },\r\n                    update: { type: 'spring', springDamping: 0.8 },\r\n                  });\r\n                } else {\r\n                  setIsMenuOpen(masterCourseCode);\r\n                  LayoutAnimation.configureNext({\r\n                    duration: Platform.OS === \"android\" ? 500 : 730,\r\n                    create: { type: 'easeInEaseOut', property: 'opacity' },\r\n                    update: { type: 'spring', springDamping: 0.8 },\r\n                  });\r\n                }\r\n              }}>\r\n              <Layout style={styles.button}>\r\n                <FontAwesome5\r\n                  name={\r\n                    menuOpen === masterCourseCode\r\n                      ? 'chevron-up'\r\n                      : 'chevron-down'\r\n                  }\r\n                  size={20}\r\n                  color={darkMode ? 'white' : 'black'}\r\n                />\r\n              </Layout>\r\n            </TouchableOpacity>\r\n          </Layout>\r\n\r\n          {/* Dropdown Menu */}\r\n          {menuOpen === masterCourseCode && (\r\n            <Layout>\r\n              {schedule.map(\r\n                ({ _id, courseCode, seatsAvailable, seatsFilled, added }) => (\r\n                  <ClassListItemItem\r\n                    key={_id}\r\n                    courseCode={courseCode}\r\n                    seatsAvailable={seatsAvailable}\r\n                    seatsFilled={seatsFilled}\r\n                    handleAddClass={handleAddClass}\r\n                    handleRemoveClass={handleRemoveClass}\r\n                    darkMode={darkMode}\r\n                    added={added}\r\n                    masterCourseCode={masterCourseCode}\r\n                  />\r\n                )\r\n              )}\r\n            </Layout>\r\n          )}\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }, [menuOpen, inItem, darkMode]);\r\n\r\n  // useTraceUpdate(memoizedItem);\r\n  return memoizedItem;\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  list__container: {\r\n    margin: 10,\r\n    marginLeft: 0,\r\n    height: '90%',\r\n    width: '100%',\r\n  },\r\n  addedClassesContainer: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    width: '60%',\r\n    borderTopRightRadius: 20,\r\n    borderBottomRightRadius: 20,\r\n    borderColor: '#c2c2c2',\r\n    backgroundColor: '#f7f7f7',\r\n    paddingTop: 5,\r\n    borderTopWidth: 1.5,\r\n    borderBottomWidth: 1.5,\r\n    borderRightWidth: 1.5,\r\n  },\r\n  addedClasses: {\r\n    position: 'absolute',\r\n    right: 3,\r\n    top: 3,\r\n    padding: 7,\r\n    margin: 5,\r\n    backgroundColor: '#c9c9c9',\r\n    borderRadius: 100,\r\n  },\r\n  item: {\r\n    marginBottom: 10,\r\n    marginTop: 10,\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    marginBottom: 5,\r\n  },\r\n  buttonContainer: {\r\n    right: 0,\r\n    position: 'absolute',\r\n    width: 50,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100%',\r\n  },\r\n  button: {\r\n    padding: 5,\r\n    borderColor: 'grey',\r\n  },\r\n  dropDown: {\r\n    backgroundColor: '#f7f7f7',\r\n    paddingLeft: 30,\r\n    paddingBottom: 10,\r\n    paddingTop: 10,\r\n  },\r\n  dropDownItem: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    height: 54,\r\n  },\r\n  isAvailable: {\r\n    color: 'green',\r\n  },\r\n  notAvailable: {\r\n    color: 'red',\r\n  },\r\n  loadingMessage: {\r\n    fontSize: 20,\r\n    color: 'white',\r\n    alignSelf: 'center',\r\n    fontStyle: 'italic',\r\n  },\r\n  loadingMessageRefresh: {\r\n    fontSize: 15,\r\n    paddingTop: 20,\r\n    color: 'white',\r\n    alignSelf: 'center',\r\n    fontWeight: 'bold',\r\n  },\r\n  addClassButton: {\r\n    padding: 15,\r\n  },\r\n  filters: {\r\n    backgroundColor: 'white',\r\n    alignItems: 'center',\r\n    padding: 10,\r\n  },\r\n});\r\n","import { Divider, Layout, Text, useTheme } from '@ui-kitten/components';\r\nimport { Entypo } from '@expo/vector-icons';\r\nimport { FlatList, TouchableOpacity } from 'react-native';\r\n\r\ntype AddedClassesProps = {\r\n  setAddedClassesVisible: (visible: boolean) => void;\r\n  addedClasses: { [masterCourseCode: string]: string[] };\r\n  handleRemoveClass: (courseCode: string, masterCourseCode: string) => void;\r\n  darkMode: boolean;\r\n};\r\n\r\nexport default function AddedClasses({\r\n  addedClasses,\r\n  handleRemoveClass,\r\n  darkMode,\r\n}: AddedClassesProps) {\r\n  const theme = useTheme();\r\n\r\n  let classes = [];\r\n  Object.entries(addedClasses).forEach(([masterCourseCode, courseCodes]) => {\r\n    courseCodes.forEach((courseCode) => {\r\n      classes.push([masterCourseCode, courseCode]);\r\n    });\r\n  });\r\n\r\n  const renderItem = ({ item }) => {\r\n    const [masterCourseCode, courseCode] = item;\r\n    return (\r\n      <Layout\r\n        style={{\r\n          flexDirection: 'row',\r\n          justifyContent: 'space-between',\r\n          alignItems: 'center',\r\n          paddingVertical: 7,\r\n          backgroundColor: darkMode\r\n            ? theme['color-basic-900']\r\n            : theme['color-basic-100'],\r\n        }}>\r\n        <Text style={{ fontSize: 18 }}>{courseCode}</Text>\r\n\r\n        <TouchableOpacity\r\n          onPress={() => handleRemoveClass(courseCode, masterCourseCode)}>\r\n          <Entypo name=\"cross\" size={28} color={'red'} />\r\n        </TouchableOpacity>\r\n      </Layout>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout\r\n      style={{\r\n        flex: 1,\r\n        paddingBottom: 10,\r\n        backgroundColor: darkMode\r\n          ? theme['color-basic-900']\r\n          : theme['color-basic-100'],\r\n      }}>\r\n      <FlatList\r\n        contentContainerStyle={{ width: 300 }}\r\n        ListEmptyComponent={\r\n          <Text>\r\n            No classes yet... Click the{' '}\r\n            <Text style={{ fontWeight: 'bold' }}>+</Text> next to a class to see\r\n            it here\r\n          </Text>\r\n        }\r\n        ItemSeparatorComponent={() => <Divider />}\r\n        data={classes}\r\n        renderItem={renderItem}\r\n      />\r\n    </Layout>\r\n  );\r\n}\r\n","import {\r\n  Button,\r\n  CheckBox,\r\n  Divider,\r\n  Layout,\r\n  Text,\r\n  Toggle,\r\n  useTheme,\r\n} from '@ui-kitten/components';\r\nimport { useState } from 'react';\r\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\r\nimport {\r\n  classPagesSlice,\r\n  filtersReset,\r\n  filtersSaved,\r\n  isHMCUpdated,\r\n} from './classPagesSlice';\r\n\r\nexport default function FilterClasses({ darkMode, setFiltersMenuVisible }) {\r\n  const theme = useTheme();\r\n  const initialFilters = classPagesSlice.getInitialState().filters;\r\n  const filters = useAppSelector((state) => state.appData.classPages.filters);\r\n  const isHMC = useAppSelector((state) => state.appData.classPages.isHMC);\r\n\r\n  const [colleges, setColleges] = useState(filters.colleges);\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const onChangeIsHMC = (change: boolean) => {\r\n    dispatch(isHMCUpdated(change));\r\n  };\r\n\r\n  const onChangeFilterCollege = (college: string, change: boolean) => {\r\n    setColleges({ ...colleges, [college]: change });\r\n  };\r\n\r\n  const resetFilters = () => {\r\n    setColleges(initialFilters.colleges);\r\n    dispatch(filtersReset());\r\n  };\r\n\r\n  const saveFilters = () => {\r\n    dispatch(filtersSaved({ colleges }));\r\n    setFiltersMenuVisible(false);\r\n  };\r\n\r\n  return (\r\n    <Layout\r\n      style={{\r\n        backgroundColor: darkMode\r\n          ? theme['color-basic-900']\r\n          : theme['color-basic-100'],\r\n        alignItems: 'center',\r\n        padding: 10,\r\n      }}>\r\n      <Layout\r\n        style={{\r\n          flexDirection: 'row',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          marginBottom: 10,\r\n          backgroundColor: darkMode\r\n            ? theme['color-basic-900']\r\n            : theme['color-basic-100'],\r\n        }}>\r\n        <Text>4C Credits </Text>\r\n        <Toggle\r\n          checked={isHMC}\r\n          onChange={(change) => {\r\n            onChangeIsHMC(change);\r\n          }}\r\n        />\r\n        <Text> HMC Credits</Text>\r\n      </Layout>\r\n      <Divider />\r\n      <Text style={{ marginVertical: 5 }}>Colleges</Text>\r\n      <Layout\r\n        style={{\r\n          flexDirection: 'row',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n        }}>\r\n        {Object.keys(colleges).map((college) => (\r\n          <CheckBox\r\n            style={{\r\n              backgroundColor: darkMode\r\n                ? theme['color-basic-900']\r\n                : theme['color-basic-100'],\r\n            }}\r\n            key={college}\r\n            checked={colleges[college]}\r\n            onChange={(change) => {\r\n              onChangeFilterCollege(college, change);\r\n            }}>\r\n            {college}\r\n          </CheckBox>\r\n        ))}\r\n      </Layout>\r\n      {/* <Layout style={{ width: '100%' }}>\r\n        <Text style={{ marginVertical: 5 }}>Semester</Text>\r\n        <Select\r\n          placeholder=\"Semester\"\r\n          value={Object.keys(semesterSelectVals)[semsesterSelectIndex.row]}\r\n          selectedIndex={semsesterSelectIndex}\r\n          onSelect={(index) => setSemesterSelectedIndex(index)}>\r\n          {Object.keys(semesterSelectVals).map((option, i) => (\r\n            <SelectItem\r\n              key={i}\r\n              disabled={semesterSelectVals[option].disabled}\r\n              title={option}\r\n            />\r\n          ))}\r\n        </Select>\r\n      </Layout> */}\r\n      <Button style={{ marginTop: 20 }} onPress={saveFilters}>\r\n        Update Results\r\n      </Button>\r\n      <Button\r\n        size=\"small\"\r\n        style={{ marginTop: 20 }}\r\n        status=\"info\"\r\n        onPress={resetFilters}>\r\n        Reset Filters\r\n      </Button>\r\n    </Layout>\r\n  );\r\n}\r\n","import {\r\n  Button,\r\n  Layout,\r\n  List,\r\n  Spinner,\r\n  Text,\r\n  useTheme,\r\n} from '@ui-kitten/components';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { FontAwesome5 } from '@expo/vector-icons';\r\nimport BottomSheet from '@gorhom/bottom-sheet/lib/typescript/components/bottomSheet/BottomSheet';\r\nimport {\r\n  Keyboard,\r\n  Platform,\r\n  RefreshControl,\r\n  TouchableOpacity,\r\n} from 'react-native';\r\nimport { selectDarkMode, selectUserKey } from '../../app/appDataSlice';\r\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\r\nimport Message from '../../components/Message';\r\nimport SearchBar from '../../components/SearchBar';\r\nimport {\r\n  useAddClassMutation,\r\n  useRemoveClassMutation,\r\n  useLazyGetAllClassesQuery,\r\n} from '../api/classPagesApi';\r\nimport { useGetUserInfoQuery, useLazyGetUserInfoQuery } from '../api/usersApi';\r\nimport {\r\n  classSelected,\r\n  endOfListReached,\r\n  resetClasses,\r\n  searchTermUpdated,\r\n  selectClassesList,\r\n} from './classPagesSlice';\r\nimport Item from './ClassListItem';\r\nimport { RENDERED_RESULTS_LIMIT } from '../../constants/classPages';\r\nimport SingleClassPage from './SingleClassPage';\r\nimport AddedClasses from './AddedClasses';\r\nimport FilterClasses from './FilterClasses';\r\nimport ModalContainer from '../../components/ModalContainer';\r\n\r\nexport const CurrentTermLabel = ({\r\n  navigation,\r\n  currentSection,\r\n  style = {},\r\n  textStyle = {},\r\n}) => {\r\n  return (\r\n    <TouchableOpacity\r\n      style={style}\r\n      onPress={() => navigation.navigate('SelectTerm')}>\r\n      <Text category=\"label\" style={textStyle}>\r\n        {`Term: ${currentSection}`}\r\n      </Text>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nexport default function ClassesList({ navigation }) {\r\n  const [menuOpen, setMenuOpen] = useState(null);\r\n  const [addedClassesVisible, setAddedClassesVisible] = useState(false);\r\n  const [filtersMenuVisible, setFiltersMenuVisible] = useState(false);\r\n  const [listRef, setListRef] = useState(null);\r\n\r\n  const [addClass] = useAddClassMutation();\r\n  const [removeClass] = useRemoveClassMutation();\r\n  const [fetchUserInfo] = useLazyGetUserInfoQuery();\r\n  const [getClasses, { isLoading: classListLoading, isError }] =\r\n    useLazyGetAllClassesQuery();\r\n  const currentSection = useAppSelector(\r\n    (state) => state.appData.classPages.currentSection\r\n  );\r\n\r\n  // Selectors\r\n  const filters = useAppSelector((state) => state.appData.classPages.filters);\r\n  const classes = useAppSelector(selectClassesList);\r\n  const userKey = useAppSelector(selectUserKey);\r\n  const page = useAppSelector((state) => state.appData.classPages.page);\r\n  const darkMode = useAppSelector(selectDarkMode);\r\n  const searchTerm = useAppSelector(\r\n    (state) => state.appData.classPages.searchTerm\r\n  );\r\n  const renderedClasses = useAppSelector(\r\n    (state) => state.appData.classPages.renderedClasses\r\n  );\r\n\r\n  const { data: userData, isSuccess: userInfoSuccess } = useGetUserInfoQuery(\r\n    userKey,\r\n    { skip: !userKey }\r\n  );\r\n  const collegeName = userData?.collegeName || 'claremontColleges';\r\n\r\n  const userName = userData?.userName;\r\n  const addedClasses = userData?.addedClasses?.classes;\r\n  const length = userData?.addedClasses?.classes?.[currentSection]\r\n    ? Object.keys(userData.addedClasses.classes?.[currentSection]).length\r\n    : 0;\r\n\r\n  // Other Hooks\r\n  const theme = useTheme();\r\n  const dispatch = useAppDispatch();\r\n  const bottomSheetRef = useRef<BottomSheet>(null);\r\n\r\n  useEffect(() => {\r\n    fetchClasses();\r\n  }, []);\r\n\r\n  const fetchClasses = () => {\r\n    if (Object.keys(classes).length === 0) {\r\n      try {\r\n        getClasses({\r\n          userKey,\r\n          collegeName,\r\n          courseTerm: currentSection,\r\n        }).unwrap();\r\n      } catch (e) {\r\n        console.warn('Error getting classes: ', e);\r\n      }\r\n    } else {\r\n      dispatch(resetClasses());\r\n    }\r\n  };\r\n\r\n  const handleRefresh = () => {\r\n    fetchUserInfo(userKey);\r\n    fetchClasses();\r\n  };\r\n\r\n  const handleSearch = (searchPhrase: string) => {\r\n    if (listRef) {\r\n      listRef.scrollToOffset({ animated: true, offset: 0 });\r\n    }\r\n    dispatch(searchTermUpdated(searchPhrase));\r\n  };\r\n\r\n  const handleClassSelected = (courseCode: string) => {\r\n    dispatch(classSelected(courseCode));\r\n    if (Platform.OS === 'web') {\r\n      navigation.navigate('SingleClassPage');\r\n    } else {\r\n      bottomSheetRef.current?.snapToIndex(0);\r\n    }\r\n  };\r\n\r\n  const handleAddClass = (courseCode: string, masterCourseCode: string) => {\r\n    try {\r\n      addClass({\r\n        userKey,\r\n        courseCode,\r\n        courseTerm: currentSection,\r\n        userName,\r\n        masterCourseCode,\r\n      }).unwrap();\r\n    } catch (e) {\r\n      console.warn('Add class error: ', e);\r\n    }\r\n  };\r\n\r\n  const handleRemoveClass = (courseCode: string, masterCourseCode: string) => {\r\n    try {\r\n      removeClass({\r\n        userKey,\r\n        courseCode,\r\n        courseTerm: currentSection,\r\n        userName,\r\n        masterCourseCode,\r\n      }).unwrap();\r\n    } catch (e) {\r\n      console.warn('Add class error: ', e);\r\n    }\r\n  };\r\n\r\n  const renderItem = ({ item: [masterCourseCode, courseInfo] }) => {\r\n    // check if course is in addedClasses set and set to true if it is\r\n    let inItem = [];\r\n    const schedule = courseInfo.times.map((time) => {\r\n      if (\r\n        currentSection in addedClasses &&\r\n        masterCourseCode in addedClasses[currentSection] &&\r\n        addedClasses[currentSection][masterCourseCode].includes(time.courseCode)\r\n      ) {\r\n        inItem.push(time.courseCode);\r\n        return { ...time, added: true };\r\n      } else {\r\n        inItem.push(time.courseCode);\r\n        return { ...time, added: false };\r\n      }\r\n    });\r\n\r\n    return (\r\n      <Item\r\n        courseName={courseInfo.courseName}\r\n        masterCourseCode={masterCourseCode}\r\n        schedule={schedule}\r\n        menuOpen={menuOpen}\r\n        setIsMenuOpen={setMenuOpen}\r\n        darkMode={darkMode}\r\n        handleClassSelected={handleClassSelected}\r\n        handleAddClass={handleAddClass}\r\n        handleRemoveClass={handleRemoveClass}\r\n        inItem={inItem}\r\n      />\r\n    );\r\n  };\r\n\r\n  const accessoryLeft = (\r\n    <Layout style={{ flexDirection: 'row', backgroundColor: 'transparent' }}>\r\n      <TouchableOpacity\r\n        onPress={() => setAddedClassesVisible(!addedClassesVisible)}\r\n        style={{ justifyContent: 'center', marginRight: 10 }}>\r\n        <FontAwesome5\r\n          name=\"list-ul\"\r\n          size={24}\r\n          color={darkMode ? theme['color-basic-500'] : theme['color-basic-200']}\r\n        />\r\n        {length > 0 ? (\r\n          <Layout\r\n            style={{\r\n              position: 'absolute',\r\n              backgroundColor: darkMode ? 'red' : '#fff',\r\n              borderRadius: 10,\r\n              paddingHorizontal: 3,\r\n              right: -7,\r\n              top: -3,\r\n            }}>\r\n            <Text>{length}</Text>\r\n          </Layout>\r\n        ) : null}\r\n      </TouchableOpacity>\r\n      <TouchableOpacity\r\n        style={{ justifyContent: 'center', marginRight: 10 }}\r\n        onPress={() => setFiltersMenuVisible(!filtersMenuVisible)}>\r\n        <FontAwesome5\r\n          name={filtersMenuVisible ? 'chevron-up' : 'chevron-down'}\r\n          size={24}\r\n          color={darkMode ? theme['color-basic-500'] : theme['color-basic-200']}\r\n        />\r\n      </TouchableOpacity>\r\n    </Layout>\r\n  );\r\n\r\n  const renderFilteredCollegesList = () => {\r\n    const filteredColleges = Object.keys(filters.colleges).filter(\r\n      (c) => filters.colleges[c]\r\n    );\r\n\r\n    if (filteredColleges.length < 5) {\r\n      return (\r\n        <Text\r\n          category=\"label\"\r\n          style={{ fontStyle: 'italic', marginTop: 5, color: '#fff' }}>\r\n          {`Colleges: ${filteredColleges.join(', ')}`}\r\n        </Text>\r\n      );\r\n    } else {\r\n      return (\r\n        <Layout style={{ backgroundColor: 'transparent', marginTop: 20 }} />\r\n      );\r\n    }\r\n  };\r\n\r\n  // Decide what content to render\r\n  let content: keyof JSX.IntrinsicElements | JSX.Element;\r\n\r\n  if (classListLoading || !userInfoSuccess) {\r\n    content = <Message title=\"Loading Classes\" item={<Spinner />} />;\r\n  } else if (isError) {\r\n    content = (\r\n      <Message\r\n        title=\"Error Loading Classes\"\r\n        item={<Button onPress={fetchClasses}>Refresh</Button>}\r\n      />\r\n    );\r\n  } else {\r\n    content = (\r\n      <List\r\n        style={{ backgroundColor: 'transparent' }}\r\n        contentContainerStyle={{ paddingBottom: 20 }}\r\n        data={Object.entries(renderedClasses).slice(\r\n          0,\r\n          RENDERED_RESULTS_LIMIT * page\r\n        )}\r\n        renderItem={renderItem}\r\n        keyExtractor={([courseCode, _]) => courseCode}\r\n        maxToRenderPerBatch={10}\r\n        ListEmptyComponent={\r\n          <Message\r\n            title=\"No Classes Found\"\r\n            item={<Button onPress={fetchClasses}>Refresh</Button>}\r\n          />\r\n        }\r\n        initialNumToRender={10}\r\n        showsVerticalScrollIndicator={false}\r\n        // ListHeaderComponent={() => <Layout style={{minHeight: 67, opacity: 0}}/>}\r\n        onEndReachedThreshold={0.5}\r\n        onEndReached={() => dispatch(endOfListReached())}\r\n        refreshControl={\r\n          <RefreshControl\r\n            refreshing={classListLoading}\r\n            onRefresh={handleRefresh}\r\n            title=\"Pull to refresh\"\r\n            tintColor={theme['color-basic-100']}\r\n            titleColor={theme['color-basic-100']}\r\n          />\r\n        }\r\n        ref={(ref) => {\r\n          setListRef(ref);\r\n        }}\r\n        onScroll={Keyboard.dismiss}\r\n        scrollEventThrottle={16}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Layout style={{ flex: 1 }}>\r\n      <LinearGradient\r\n        colors={\r\n          darkMode\r\n            ? [theme['color-basic-1100'], theme['color-basic-1100']]\r\n            : [theme['color-primary-500'], theme['color-success-500']]\r\n        }\r\n        style={{ width: '100%', margin: 0, flex: 1 }}\r\n        start={{ x: 0, y: 0 }}\r\n        end={{ x: 1, y: 0.4 }}>\r\n        <LinearGradient\r\n          colors={[\r\n            // 'rgba(219,76,113,1)',\r\n            // 'rgba(219,76,113,00)',\r\n\r\n            'rgba(225,78,106,0)',\r\n            'rgba(225,78,106,0)',\r\n            // 'rgba(225,78,106,.6)',\r\n            // 'rgba(225,78,106,0)',\r\n          ]}\r\n          locations={[0, 1]}\r\n          style={{\r\n            zIndex: 1,\r\n            width: '100%',\r\n            paddingHorizontal: 20,\r\n            paddingTop: 7,\r\n          }}>\r\n          <CurrentTermLabel\r\n            navigation={navigation}\r\n            currentSection={currentSection}\r\n            textStyle={{ color: '#fff', paddingBottom: 5, marginLeft: 80 }}\r\n          />\r\n          <SearchBar\r\n            accessoryLeft={accessoryLeft}\r\n            searchTerm={searchTerm}\r\n            onChangeText={handleSearch}\r\n            inputProps={{ autoCorrect: false }}\r\n            placeholder=\"Search classes...\"\r\n          />\r\n          {renderFilteredCollegesList()}\r\n        </LinearGradient>\r\n\r\n        {content}\r\n      </LinearGradient>\r\n\r\n      <ModalContainer\r\n        setBackDropVisible={setAddedClassesVisible}\r\n        backDropVisible={addedClassesVisible}\r\n        title=\"Added Classes\">\r\n        {addedClasses && currentSection ? (\r\n          <AddedClasses\r\n            setAddedClassesVisible={setAddedClassesVisible}\r\n            addedClasses={addedClasses[currentSection] || {}}\r\n            handleRemoveClass={handleRemoveClass}\r\n            darkMode={darkMode}\r\n          />\r\n        ) : (\r\n          <Layout\r\n            style={{\r\n              flex: 1,\r\n              alignItems: 'center',\r\n              borderRadius: 20,\r\n              paddingTop: 50,\r\n            }}>\r\n            <Text>Loading</Text>\r\n            <Spinner />\r\n          </Layout>\r\n        )}\r\n      </ModalContainer>\r\n\r\n      <ModalContainer\r\n        setBackDropVisible={setFiltersMenuVisible}\r\n        backDropVisible={filtersMenuVisible}\r\n        title=\"Filters\">\r\n        <FilterClasses\r\n          setFiltersMenuVisible={setFiltersMenuVisible}\r\n          darkMode={darkMode}\r\n        />\r\n      </ModalContainer>\r\n      {Platform.OS !== 'web' && (\r\n        <SingleClassPage bottomSheetRef={bottomSheetRef} />\r\n      )}\r\n    </Layout>\r\n  );\r\n}\r\n","import {\r\n  Alert,\r\n  Animated,\r\n  Dimensions,\r\n  LogBox,\r\n  Platform,\r\n  SafeAreaView,\r\n  ScrollView,\r\n  Text,\r\n  TouchableOpacity,\r\n  View,\r\n} from 'react-native';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\r\nimport {\r\n  classSelected,\r\n  selectClassesList,\r\n} from '../classPages/classPagesSlice';\r\nimport {\r\n  appDataSlice,\r\n  selectDarkMode,\r\n  selectUserKey,\r\n} from '../../app/appDataSlice';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport renderCustomEvent from './customEvent';\r\nimport { useGetCurrentSectionQuery } from '../api/classPagesApi';\r\nimport renderItem from './ScheduledItem';\r\nimport CalendarFunctions from './CalendarFunctions';\r\nimport {\r\n  useEditUserMutation,\r\n  useGetUserInfoQuery,\r\n  usersApiSlice,\r\n} from '../api/usersApi';\r\nimport { Button, Layout, useTheme } from '@ui-kitten/components';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport BottomSheet from '@gorhom/bottom-sheet/lib/typescript/components/bottomSheet/BottomSheet';\r\nimport SingleClassPage from '../classPages/SingleClassPage';\r\nimport Toast from 'react-native-root-toast';\r\nimport { CurrentTermLabel } from '../classPages/ClassesList';\r\nimport moment from \"moment-timezone\";\r\n\r\nLogBox.ignoreAllLogs();\r\n\r\nexport default function CalendarPage({ navigation }) {\r\n  const isWeb = Platform.OS === 'web';\r\n  const [editUser] = useEditUserMutation();\r\n  const userKey = useAppSelector(selectUserKey);\r\n  const isThreeDay = useAppSelector(\r\n    (state) => state.appData.calendar.isThreeDay\r\n  );\r\n  const dispatch = useAppDispatch();\r\n  const bottomSheetRef = useRef<BottomSheet>(null);\r\n  const darkMode: Boolean = useAppSelector(selectDarkMode);\r\n  const calendarFun = new CalendarFunctions();\r\n  const universalHeight = (Dimensions.get('window').height - 50) / 12;\r\n  const threeDayWidth = (Dimensions.get('window').width - 75) / 3;\r\n  const fiveDayWidth = (Dimensions.get('window').width - 75) / 5;\r\n  const days = [\r\n    { day: 'Mon', id: 'Monday' },\r\n    { day: 'Tues', id: 'Tuesday' },\r\n    { day: 'Wed', id: 'Wednesday' },\r\n    { day: 'Thurs', id: 'Thursday' },\r\n    { day: 'Fri', id: 'Friday' },\r\n    { day: 'Sat', id: 'Saturday' },\r\n    { day: 'Sun', id: 'Sunday' },\r\n  ];\r\n  const times = [\r\n    '12:00 AM',\r\n    '1:00 AM',\r\n    '2:00 AM',\r\n    '3:00 AM',\r\n    '4:00 AM',\r\n    '5:00 AM',\r\n    '6:00 AM',\r\n    '7:00 AM',\r\n    '8:00 AM',\r\n    '9:00 AM',\r\n    '10:00 AM',\r\n    '11:00 AM',\r\n    '12:00 PM',\r\n    '1:00 PM',\r\n    '2:00 PM',\r\n    '3:00 PM',\r\n    '4:00 PM',\r\n    '5:00 PM',\r\n    '6:00 PM',\r\n    '7:00 PM',\r\n    '8:00 PM',\r\n    '9:00 PM',\r\n    '10:00 PM',\r\n    '11:00 PM',\r\n  ];\r\n\r\n  const { data: userData } =\r\n    usersApiSlice.endpoints.getUserInfo.useQueryState(userKey);\r\n  let addedClasses = userData?.addedClasses?.classes;\r\n  const allClassData = useAppSelector(selectClassesList);\r\n  const currentSection = useAppSelector(\r\n    (state) => state.appData.classPages.currentSection\r\n  );\r\n\r\n  const renderCustomEvents = (elem) => {\r\n    let finalRender = [];\r\n    if (!userData.customEvents) {\r\n      return null;\r\n    }\r\n    for (const event of userData.customEvents) {\r\n      if (event.days.includes(elem.id)) {\r\n        finalRender.push(renderCustomEvent(event, userData, userKey, editUser));\r\n      } else if (event.date && eventIsThisDay(elem.id, new Date(event.date)) && showThisWeek(new Date(event.date))) {\r\n        finalRender.push(renderCustomEvent(event, userData, userKey, editUser));\r\n      }\r\n    }\r\n    return finalRender;\r\n  };\r\n\r\n  function eventIsThisDay(dayString: String, date: Date) {\r\n    let dayOfWeek = adjustDays(date.getDay())\r\n    return dayString === days[dayOfWeek].id\r\n  }\r\n\r\n  function adjustDays(dayOfWeek) {\r\n    if (dayOfWeek === 0) {\r\n      dayOfWeek = 6\r\n    } else {\r\n      dayOfWeek -= 1\r\n    }\r\n    return dayOfWeek\r\n  }\r\n\r\n  function getMs(hours, minutes, seconds) {\r\n    let final = 0\r\n    final += hours * 3600000\r\n    final += minutes * 60000\r\n    final += seconds * 1000\r\n    return final\r\n  }\r\n\r\n\r\n  function showThisWeek(dateOfEvent: Date) {\r\n    const currentDate = new Date()\r\n    const currentDayOfWeek = adjustDays(currentDate.getDay())\r\n    const startOfWeek = new Date(currentDate.valueOf() - (currentDayOfWeek * 86400000) - getMs(currentDate.getHours(), currentDate.getMinutes(), currentDate.getSeconds()))\r\n    const endOfWeek = new Date(currentDate.valueOf() + ((6 - currentDayOfWeek) * 86400000) + getMs(23 - currentDate.getHours(), 59 - currentDate.getMinutes(), 59 - currentDate.getSeconds()))\r\n    return !(\r\n        dateOfEvent.valueOf() > endOfWeek.valueOf()\r\n          || dateOfEvent.valueOf() < startOfWeek.valueOf()\r\n    )\r\n  }\r\n\r\n  const handleClassSelected = (courseCode: string) => {\r\n    dispatch(classSelected(courseCode));\r\n    if (Platform.OS === 'web') {\r\n      navigation.navigate('SingleClassPage');\r\n    } else {\r\n      bottomSheetRef.current?.snapToIndex(0);\r\n    }\r\n  };\r\n\r\n  function renderDashes() {\r\n    let final = [];\r\n    for (let i = 0; i < 24; i++) {\r\n      final.push(\r\n        <View\r\n          style={{\r\n            width: (isThreeDay ? threeDayWidth : fiveDayWidth) * 0.73016,\r\n            marginLeft: (isThreeDay ? threeDayWidth : fiveDayWidth) * 0.14286,\r\n            top: universalHeight * i,\r\n            position: 'absolute',\r\n            height: universalHeight,\r\n            borderBottomWidth: Platform.OS === 'web' ? 1.2 : 0.7,\r\n            borderBottomColor: darkMode ? 'rgb(68,68,68)' : 'rgb(204,204,204)',\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    return final;\r\n  }\r\n\r\n  const renderClasses = (elem) => {\r\n    let classes = [];\r\n    Object.keys(addedClasses).map((term) => {\r\n      if (term === currentSection) {\r\n        Object.keys(addedClasses[term]).map((masterCourseCode) => {\r\n          for (const courseCode of addedClasses[term][masterCourseCode]) {\r\n            try {\r\n              let data = calendarFun.getFullClassData(courseCode, allClassData);\r\n              let data2 = data.times.find(\r\n                (time) => time.courseCode === courseCode\r\n              );\r\n              for (const day in data2['daysOfTheWeek']) {\r\n                if (data2['daysOfTheWeek'][day] === elem.id) {\r\n                  classes.push(\r\n                    renderItem(data, courseCode, handleClassSelected)\r\n                  );\r\n                }\r\n              }\r\n            } catch (e) {\r\n              console.log(e);\r\n            }\r\n          }\r\n        });\r\n      }\r\n    });\r\n    return classes;\r\n  };\r\n\r\n  const topBar = useRef(null);\r\n  const [startingOffset, setStartingOffset] = useState({ x: 0, y: 292 });\r\n\r\n  return (\r\n    <View style={{ flex: 1, backgroundColor: darkMode ? null : 'white' }}>\r\n      {/* Times */}\r\n      <CurrentTermLabel navigation={navigation} currentSection={currentSection} style={{margin: 10}}/>\r\n      <ScrollView\r\n        horizontal={true}\r\n        snapToInterval={isThreeDay ? threeDayWidth : fiveDayWidth}\r\n        showsHorizontalScrollIndicator={false}\r\n        style={{ marginLeft: 75, height: isWeb ? 50 : undefined }}\r\n        ref={topBar}>\r\n        <View style={{ flexDirection: 'row' }}>\r\n          {days.map((elem) => {\r\n            return (\r\n              <View>\r\n                <View\r\n                  style={{\r\n                    borderColor: darkMode ? '#7a7a7a' : '#525252',\r\n                    borderBottomWidth: 1,\r\n                    width: '100%',\r\n                  }}>\r\n                  <Text\r\n                    style={{\r\n                      textAlign: 'center',\r\n                      color: darkMode ? '#7a7a7a' : '#525252',\r\n                      width: isThreeDay ? threeDayWidth : fiveDayWidth,\r\n                    }}>\r\n                    {elem.day}\r\n                  </Text>\r\n                </View>\r\n              </View>\r\n            );\r\n          })}\r\n        </View>\r\n      </ScrollView>\r\n      <ScrollView\r\n        contentOffset={startingOffset}\r\n        showsVerticalScrollIndicator={false}\r\n        bounces={false}>\r\n        <View style={{ flexDirection: 'row' }}>\r\n          <View\r\n            style={{\r\n              justifyContent: 'space-around',\r\n              //height: 1000,\r\n            }}>\r\n            {times.map((time) => {\r\n              return (\r\n                <Text\r\n                  style={{\r\n                    height: universalHeight,\r\n                    width: 75,\r\n                    borderWidth: 1,\r\n                    borderColor: darkMode ? '#7a7a7a' : '#525252',\r\n                    textAlign: 'center',\r\n                    color: darkMode ? '#7a7a7a' : '#525252',\r\n                  }}>\r\n                  {time}\r\n                </Text>\r\n              );\r\n            })}\r\n          </View>\r\n          {/* Classes */}\r\n          <ScrollView\r\n            horizontal={true}\r\n            snapToInterval={isThreeDay ? threeDayWidth : fiveDayWidth}\r\n            decelerationRate={'normal'}\r\n            showsHorizontalScrollIndicator={false}\r\n            bounces={false}\r\n            scrollEventThrottle={1}\r\n            onScroll={(e) =>\r\n              topBar.current.scrollTo({\r\n                x: e.nativeEvent.contentOffset.x,\r\n                animated: false,\r\n                useNativeDriver: true,\r\n              })\r\n            }\r\n            onMomentumScrollBegin={(e) =>\r\n              topBar.current.scrollTo({\r\n                x: e.nativeEvent.contentOffset.x,\r\n                animated: false,\r\n                useNativeDriver: true,\r\n              })\r\n            }>\r\n            <View style={{ flexDirection: 'row' }}>\r\n              {days.map((elem) => {\r\n                return (\r\n                  <View>\r\n                    {renderDashes()}\r\n                    <View\r\n                      key={elem.day}\r\n                      style={{\r\n                        width: isThreeDay ? threeDayWidth : fiveDayWidth,\r\n                      }}>\r\n                      {userData?.addedClasses && renderClasses(elem)}\r\n                      {userData?.addedClasses && renderCustomEvents(elem)}\r\n                    </View>\r\n                    <View\r\n                      style={{\r\n                        height: '100%',\r\n                        width: 1,\r\n                        backgroundColor: darkMode ? '#7a7a7a' : '#525252',\r\n                      }}\r\n                    />\r\n                  </View>\r\n                );\r\n              })}\r\n            </View>\r\n          </ScrollView>\r\n        </View>\r\n      </ScrollView>\r\n\r\n      {Platform.OS !== 'web' && (\r\n        <SingleClassPage bottomSheetRef={bottomSheetRef} />\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst myStyles = {\r\n  input: {\r\n    height: 50,\r\n    margin: 12,\r\n    borderWidth: 1,\r\n    padding: 10,\r\n  },\r\n  indentedInput: {\r\n    height: 50,\r\n    marginVertical: 12,\r\n    borderWidth: 1,\r\n    padding: 10,\r\n    marginRight: 12,\r\n    marginLeft: 30,\r\n  },\r\n  text: {\r\n    fontSize: 16,\r\n    lineHeight: 21,\r\n    fontWeight: 'bold',\r\n    letterSpacing: 0.25,\r\n    color: 'white',\r\n  },\r\n  button: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 32,\r\n    borderRadius: 4,\r\n    elevation: 3,\r\n    backgroundColor: 'black',\r\n  },\r\n  timeButton: {\r\n    width: 100,\r\n    height: 50,\r\n    marginHorizontal: 40,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    borderRadius: 4,\r\n    backgroundColor: '#c45269',\r\n  },\r\n  timeText: {\r\n    fontSize: 16,\r\n    lineHeight: 21,\r\n    fontWeight: 'bold',\r\n    letterSpacing: 0.25,\r\n    color: 'white',\r\n  },\r\n  actualTimeText: {\r\n    fontSize: 13,\r\n    lineHeight: 18,\r\n    fontWeight: 'bold',\r\n    letterSpacing: 0.25,\r\n    color: 'white',\r\n  },\r\n};\r\n\r\nconst sponsorPageStyles = {\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: 'white',\r\n    // alignItems: 'center',\r\n  },\r\n  header: {\r\n    marginTop: 20,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: '100%',\r\n  },\r\n  address: {\r\n    alignItems: 'center',\r\n    margin: 10,\r\n    borderColor: 'black',\r\n    borderWidth: 1,\r\n    padding: 10,\r\n  },\r\n  video: {\r\n    marginTop: 20,\r\n    display: 'flex',\r\n    justifyContent: 'flex-start',\r\n  },\r\n  title: {\r\n    fontSize: 26,\r\n    marginLeft: 10,\r\n  },\r\n  logo: {\r\n    width: '100%',\r\n    height: 100,\r\n  },\r\n  description: {\r\n    borderWidth: 1,\r\n    margin: 10,\r\n    borderColor: '#5d5c5c',\r\n    borderRadius: 5,\r\n    width: '95%',\r\n    padding: 10,\r\n    backgroundColor: 'rgba(178,166,166,0.22)',\r\n  },\r\n  couponContainer: {\r\n    width: '100%',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n  },\r\n  coupon: {\r\n    width: 400,\r\n    height: 267,\r\n  },\r\n  imageGallery: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    margin: 10,\r\n    marginBottom: 0,\r\n  },\r\n  imageStyle: {\r\n    width: 150,\r\n    height: 150,\r\n    paddingTop: 100,\r\n    margin: 5,\r\n  },\r\n  headerText: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n};\r\n","import {JSXElementConstructor, ReactElement, useEffect, useState} from \"react\";\r\nimport {base_URL} from \"../notifications/constants\";\r\nimport {useAppSelector} from \"../../app/hooks\";\r\nimport {selectDarkMode, selectUserKey} from \"../../app/appDataSlice\";\r\nimport {Autocomplete, AutocompleteItem, Card, Modal} from \"@ui-kitten/components\";\r\nimport {Alert, Button, View, Text} from \"react-native\";\r\nimport {useGetUserInfoQuery} from \"../api/usersApi\";\r\nimport {useGetCurrentSectionQuery} from \"../api/classPagesApi\";\r\nimport renderItem from \"./ScheduledItem\";\r\nimport UserNameSelectionDropDown from \"../../components/UserNameSelectionDropDown\";\r\n\r\nexport default function renderModal(setShowModal, showModal) {\r\n    const {data: userData} = useGetUserInfoQuery(useAppSelector(selectUserKey));\r\n    const {data: currentSection} = useGetCurrentSectionQuery();\r\n    const darkMode = useAppSelector(selectDarkMode)\r\n    const userKey = useAppSelector(selectUserKey)\r\n    const [ names, setNames ] = useState([])\r\n    const [ users, setUsers ] = useState([])\r\n    const [ value, setValue ] = useState('')\r\n    const [ hasChosen, setHasChosen ] = useState(false)\r\n    const [ recipient, setRecipient ] = useState(null)\r\n\r\n    const myStyles = {\r\n        modal: {\r\n            fontSize: 18, paddingBottom: 20, fontWeight: 'bold',\r\n            textAlign: 'center', width: '100%', color: darkMode ? 'rgb(255,255,255)' : 'rgb(0,0,0)'\r\n        },\r\n        backdrop: {\r\n            backgroundColor: darkMode ? 'rgba(141,141,141,0.5)' : 'rgba(0, 0, 0, 0.5)',\r\n        },\r\n        containerDrop: {\r\n            minWidth: 200,\r\n            paddingBottom: 15\r\n        },\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(base_URL + '/users/userNamesAndNames', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'userKey': userKey\r\n            }\r\n        }).then(async (data) => {\r\n            if (data.ok) {\r\n                const userList = await data.json();\r\n                setNames(userList.map(user => {\r\n                    if (user) {\r\n                        return user.realName + ' (' + user.userName + ')'\r\n                    }\r\n                }))\r\n                setUsers(userList)\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const exportSchedule = async (recipient) => {\r\n        function convert(addedClasses) {\r\n            let final = []\r\n            Object.keys(addedClasses).map((term) => {\r\n                if (term === currentSection) {\r\n                    Object.keys(addedClasses[term]).map((masterCourseCode) => {\r\n                        for (const courseCode of addedClasses[term][masterCourseCode]) {\r\n                            final.push({\r\n                                courseCode,\r\n                                courseTerm: currentSection\r\n                            })\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n            return final\r\n        }\r\n        let status = await fetch(base_URL + '/users/sendNotification', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'userKey': userKey\r\n            },\r\n            body: JSON.stringify({\r\n                recipients: [recipient],\r\n                text: JSON.stringify(convert(userData.addedClasses?.classes)),\r\n                title: userData.realFirstName + \"'s Schedule\",\r\n                isSchedule: true\r\n            })\r\n        })\r\n        return status.ok\r\n    }\r\n    return (\r\n        <Modal\r\n            visible={showModal}\r\n            backdropStyle={myStyles.backdrop}\r\n            style={{ width: '80%', height: '70%' }}\r\n            onBackdropPress={() => setShowModal(false)}>\r\n            <Card disabled={true}>\r\n                <Text style={myStyles.modal}>\r\n                    Share Your Schedule\r\n                </Text>\r\n                {UserNameSelectionDropDown({setHasChosen, setRecipient, placeholder: false})}\r\n                <View>\r\n                    <Button disabled={recipient === null} title={'Send'} onPress={() => {\r\n                        exportSchedule(recipient).then((returnValue) => {\r\n                            setShowModal(false)\r\n                            returnValue ? Alert.alert('Message Sent') :\r\n                                Alert.alert('Error Sending Message', 'Please Try Again Later')\r\n                        })\r\n                    }} />\r\n                    <Button title={'Dismiss'} onPress={() => {\r\n                        setShowModal(false)\r\n                    }} />\r\n                </View>\r\n            </Card>\r\n        </Modal>\r\n    );\r\n}","import { View } from 'react-native';\r\nimport React, { useState } from 'react';\r\nimport {\r\n  Button,\r\n  IndexPath,\r\n  Layout,\r\n  Select,\r\n  SelectItem,\r\n  Text,\r\n} from '@ui-kitten/components';\r\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\r\nimport { TouchableOpacity } from 'react-native';\r\nimport { useLazyGetAllClassesQuery } from '../api/classPagesApi';\r\nimport { usersApiSlice } from '../api/usersApi';\r\nimport { currentSectionUpdated } from './classPagesSlice';\r\n\r\nexport default function SelectTerm({ navigation }) {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const availableSections = useAppSelector(\r\n    (state) => state.appData.classPages.availableSections\r\n  );\r\n  const userKey = useAppSelector((state) => state.appData.secure.userKey);\r\n  const currentSection = useAppSelector(\r\n    (state) => state.appData.classPages.currentSection\r\n  );\r\n\r\n  const { data: userDataCache } =\r\n    usersApiSlice.endpoints.getUserInfo.useQueryState(userKey, {\r\n      skip: !userKey,\r\n    });\r\n  const [getAllClasses] = useLazyGetAllClassesQuery();\r\n\r\n  let startIndexValue =\r\n    availableSections.findIndex((term) => term == currentSection) || 0;\r\n\r\n  const [selectedSectionIndex, setSelectedSectionIndex] = useState<IndexPath>(\r\n    new IndexPath(startIndexValue)\r\n  );\r\n\r\n  const saveChanges = () => {\r\n    if (availableSections[selectedSectionIndex.row] !== currentSection) {\r\n      try {\r\n        getAllClasses({\r\n          userKey,\r\n          collegeName: userDataCache.collegeName,\r\n          courseTerm: availableSections[selectedSectionIndex.row],\r\n        }).unwrap();\r\n\r\n        dispatch(\r\n          currentSectionUpdated(availableSections[selectedSectionIndex.row])\r\n        );\r\n      } catch (e) {\r\n        console.log('Changing section: could not fetch classes', e);\r\n      }\r\n    }\r\n\r\n    navigation.goBack();\r\n  };\r\n\r\n  return (\r\n    <Layout style={{ flex: 1 }}>\r\n      <Layout\r\n        style={{\r\n          flexDirection: 'row',\r\n          justifyContent: 'space-between',\r\n          margin: 20,\r\n          marginTop: 60,\r\n        }}>\r\n        <TouchableOpacity\r\n          onPress={() => {\r\n            navigation.goBack();\r\n          }}>\r\n          <Text>Cancel</Text>\r\n        </TouchableOpacity>\r\n\r\n        <Text category=\"s1\">Select Term</Text>\r\n\r\n        <TouchableOpacity onPress={saveChanges}>\r\n          <Text>Save</Text>\r\n        </TouchableOpacity>\r\n      </Layout>\r\n\r\n      <Select\r\n        style={{ margin: 20 }}\r\n        label=\"Term\"\r\n        value={availableSections[selectedSectionIndex.row]}\r\n        selectedIndex={selectedSectionIndex}\r\n        onSelect={(index: IndexPath) => {\r\n          setSelectedSectionIndex(index);\r\n        }}>\r\n        {availableSections.map((term, index) => (\r\n          <SelectItem key={index} title={term} />\r\n        ))}\r\n      </Select>\r\n    </Layout>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { Button, Layout, Text, useTheme } from '@ui-kitten/components';\r\nimport Toggle from 'react-native-toggle-element';\r\nimport CreateCustomEvent from './CreateCustomEvent';\r\nimport CalendarPage from './CalendarPage';\r\nimport Header from '../../components/Header';\r\nimport {\r\n  Dimensions,\r\n  Image,\r\n  Platform,\r\n  TouchableOpacity,\r\n  View,\r\n} from 'react-native';\r\nimport { FontAwesome5, MaterialCommunityIcons } from '@expo/vector-icons';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\r\nimport {\r\n  selectDarkMode,\r\n  selectIsGuest,\r\n  selectUserKey,\r\n} from '../../app/appDataSlice';\r\nimport { base_URL } from '../notifications/constants';\r\nimport renderModal from './exportModal';\r\nimport { isThreeDaySet } from './calendarSlice';\r\nimport ModalContainer from '../../components/ModalContainer';\r\nimport SingleClassPage from '../classPages/SingleClassPage';\r\nimport SelectTerm from '../classPages/SelectTerm';\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nexport default function Calendar() {\r\n    const navigation = useNavigation()\r\n  const isThreeDay = useAppSelector(\r\n    (state) => state.appData.calendar.isThreeDay\r\n  );\r\n  const theme = useTheme();\r\n  const dispatch = useAppDispatch();\r\n  const isGuest = useAppSelector(selectIsGuest);\r\n  const darkMode = useAppSelector(selectDarkMode);\r\n  const userKey = useAppSelector(selectUserKey);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showGuestModal, setShowGuestModal] = useState(false);\r\n  async function sendNotification(bodyTosend) {\r\n    await fetch(base_URL + '/users/sendNotification', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        userKey: userKey,\r\n      },\r\n      body: JSON.stringify(bodyTosend),\r\n    });\r\n  }\r\n  const accessoryLeft = (\r\n    <Image\r\n      style={{\r\n        height: 28,\r\n        width: 28,\r\n        alignItems: 'center',\r\n      }}\r\n      source={require('../../../assets/logos/app-logo-transparent.png')}\r\n    />\r\n  );\r\n\r\n  const title = (\r\n      <View\r\n          style={{\r\n              alignItems: 'center',\r\n              paddingRight: 20,\r\n          }}>\r\n          {Dimensions.get('window').width < 525 && (\r\n              <Toggle\r\n                  leftComponent={\r\n                      <MaterialCommunityIcons name=\"numeric-5\" size={25} color=\"#fff\" />\r\n                  }\r\n                  rightComponent={\r\n                      <MaterialCommunityIcons name=\"numeric-3\" size={25} color=\"#fff\" />\r\n                  }\r\n                  trackBar={{\r\n                      activeBackgroundColor: theme['color-primary-500'],\r\n                      inActiveBackgroundColor: theme['color-primary-500'],\r\n                      width: 60,\r\n                      height: 23,\r\n                  }}\r\n                  thumbButton={{\r\n                      width: 30,\r\n                      height: 30,\r\n                      activeBackgroundColor: theme['color-primary-800'],\r\n                      inActiveBackgroundColor: theme['color-primary-300'],\r\n                      activeColor: theme['color-primary-100'],\r\n                      inActiveColor: '#fff',\r\n                      borderWidth: 5,\r\n                  }}\r\n                  value={isThreeDay}\r\n                  onPress={(bool) => dispatch(isThreeDaySet(!bool))}\r\n              />\r\n          )}\r\n      </View>\r\n  )\r\n  const accessoryRight = (\r\n    <View\r\n      style={{\r\n        paddingHorizontal: 0,\r\n        alignItems: 'center',\r\n        flexDirection: 'row',\r\n      }}>\r\n        <TouchableOpacity\r\n            onPress={() => {\r\n                if (isGuest) {\r\n                    setShowGuestModal(true);\r\n                } else {\r\n                    // @ts-ignore\r\n                    navigation.navigate('CreateCustomEvent');\r\n                }\r\n            }}\r\n            style={{\r\n                marginRight: 10,\r\n                alignItems: 'center',\r\n            }}>\r\n            <View\r\n                style={{\r\n                    height: 45,\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'flex-end',\r\n                }}>\r\n                <FontAwesome5\r\n                    name={'plus'}\r\n                    size={20}\r\n                    color={darkMode ? 'white' : 'black'}\r\n                />\r\n                <Text style={{ paddingTop: 5, fontSize: 10 }}>Add Event</Text>\r\n            </View>\r\n        </TouchableOpacity>\r\n        { Platform.OS !== 'web' && <TouchableOpacity\r\n            onPress={() => {\r\n                if (isGuest) {\r\n                    setShowGuestModal(true);\r\n                } else {\r\n                    setShowModal(true);\r\n                }\r\n            }}\r\n            style={{\r\n                alignItems: 'center',\r\n            }}>\r\n            <View\r\n                style={{\r\n                    height: 45,\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'flex-end',\r\n                }}>\r\n                <FontAwesome5\r\n                    name={'file-export'}\r\n                    size={20}\r\n                    color={darkMode ? 'white' : 'black'}\r\n                />\r\n                <Text style={{paddingTop: 5, fontSize: 10}}>Share Schedule</Text>\r\n            </View>\r\n        </TouchableOpacity>}\r\n      {showGuestModal && (\r\n        <ModalContainer\r\n          title=\"Wait!\"\r\n          children={\r\n            <Text style={{ paddingHorizontal: 30 }}>\r\n              This feature is locked to our Guest Users. Please create a free\r\n              account with us to take advantage this feature.\r\n            </Text>\r\n          }\r\n          backDropVisible={showGuestModal}\r\n          setBackDropVisible={setShowGuestModal}\r\n        />\r\n      )}\r\n      {renderModal(setShowModal, showModal)}\r\n    </View>\r\n  );\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen\r\n        name=\"CalendarPage\"\r\n        component={CalendarPage}\r\n        options={{\r\n          header: () => {\r\n            return (\r\n              <Layout style={{ paddingBottom: 10 }}>\r\n                <Header center={title} accessoryRight={accessoryRight} accessoryLeft={accessoryLeft} title=\"Calendar\" />\r\n              </Layout>\r\n            );\r\n          },\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"CreateCustomEvent\"\r\n        component={CreateCustomEvent}\r\n        options={{ headerTitle: 'Add Event' }}\r\n      />\r\n      {Platform.OS === 'web' && (\r\n        <Stack.Screen\r\n          name=\"SingleClassPage\"\r\n          component={SingleClassPage}\r\n          options={{ headerShown: false, headerTitle: 'Class Pages' }}\r\n        />\r\n      )}\r\n       <Stack.Screen\r\n          name=\"SelectTerm\"\r\n          component={SelectTerm}\r\n          options={{\r\n            title: 'Select Term',\r\n            headerShown: false,\r\n            animation: 'slide_from_bottom',\r\n            gestureDirection: 'vertical',\r\n          }}\r\n        />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n","import { Input, Layout, Spinner, Text } from '@ui-kitten/components';\r\nimport { TouchableWithoutFeedback } from '@ui-kitten/components/devsupport';\r\nimport { useState } from 'react';\r\nimport {\r\n  Keyboard,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  TouchableOpacity,\r\n} from 'react-native';\r\nimport { selectUserKey } from '../../app/appDataSlice';\r\nimport { useAppSelector } from '../../app/hooks';\r\nimport WrapItems from '../../components/WrapItems';\r\nimport { useEditUserMutation, useGetUserInfoQuery } from '../api/usersApi';\r\n\r\nconst EditProfileHeader = ({ navigation, saveChanges }) => {\r\n  return (\r\n    <Layout\r\n      style={{\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        margin: 20,\r\n        marginTop: Platform.OS !== 'ios' ? 40 : 20,\r\n      }}>\r\n      <TouchableOpacity\r\n        onPress={() => {\r\n          navigation.goBack();\r\n        }}>\r\n        <Text>Cancel</Text>\r\n      </TouchableOpacity>\r\n      <Text category=\"s1\">Edit Profile</Text>\r\n      <TouchableOpacity onPress={saveChanges}>\r\n        <Text>Save</Text>\r\n      </TouchableOpacity>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default function EditUser({ navigation }) {\r\n  const userKey = useAppSelector(selectUserKey);\r\n  const { data: userData } = useGetUserInfoQuery(userKey, {\r\n    skip: !userKey,\r\n  });\r\n\r\n  const inputs = [\r\n    {\r\n      placeholder: '*******',\r\n      label: 'password',\r\n      name: 'password',\r\n    },\r\n    {\r\n      placeholder: userData.realFirstName,\r\n      label: 'First Name',\r\n      name: 'realFirstName',\r\n    },\r\n    {\r\n      placeholder: userData.realLastName,\r\n      label: 'Last Name',\r\n      name: 'realLastName',\r\n    },\r\n    {\r\n      placeholder: userData.profileDescription,\r\n      label: 'Profile Description',\r\n      name: 'profileDescription',\r\n      propOptions: { multiline: true, textStyle: { minHeight: 64 } },\r\n    },\r\n    {\r\n      placeholder: userData.linkedin,\r\n      label: 'LinkedIn',\r\n      name: 'linkedin',\r\n    },\r\n    {\r\n      placeholder: userData.major,\r\n      label: 'Major',\r\n      name: 'major',\r\n    },\r\n  ];\r\n\r\n  const [fields, setFields] = useState(\r\n    Object.fromEntries(inputs.map((input) => [input.name, '']))\r\n  );\r\n  const [editUser, { isLoading }] = useEditUserMutation();\r\n\r\n  const saveChanges = async () => {\r\n    const changedFields = Object.entries(fields).filter(\r\n      ([_, value]) => value !== ''\r\n    );\r\n\r\n    try {\r\n      if (changedFields.length > 0) {\r\n        await editUser({\r\n          userKey,\r\n          userName: userData.userName,\r\n          fields: Object.fromEntries(changedFields),\r\n        }).unwrap();\r\n      }\r\n\r\n      navigation.goBack();\r\n    } catch (err) {\r\n      console.log('Error editing user', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout style={{ flex: 1 }}>\r\n      {isLoading ? (\r\n        <Layout\r\n          style={{\r\n            flex: 1,\r\n            backgroundColor: 'transparent',\r\n            position: 'absolute',\r\n            top: '30%',\r\n            right: '50%',\r\n            zIndex: 1,\r\n          }}>\r\n          <Spinner size=\"medium\" />\r\n        </Layout>\r\n      ) : null}\r\n\r\n      <EditProfileHeader navigation={navigation} saveChanges={saveChanges} />\r\n      <KeyboardAvoidingView\r\n        style={{ flex: 1 }}\r\n        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}>\r\n        <TouchableWithoutFeedback\r\n          style={{ flex: 1 }}\r\n          onPress={Keyboard.dismiss}>\r\n          <WrapItems\r\n            style={{ marginVertical: 20 }}\r\n            childStyle={{ marginHorizontal: 40, marginVertical: 10 }}>\r\n            {inputs.map(({ placeholder, label, name, propOptions }) => (\r\n              <Input\r\n                key={name}\r\n                placeholder={placeholder}\r\n                label={label}\r\n                onChangeText={(text) => setFields({ ...fields, [name]: text })}\r\n                {...propOptions}\r\n              />\r\n            ))}\r\n          </WrapItems>\r\n        </TouchableWithoutFeedback>\r\n      </KeyboardAvoidingView>\r\n    </Layout>\r\n  );\r\n}\r\n","import { Button, Divider, Layout, Text, Toggle } from '@ui-kitten/components';\r\nimport React, { useState } from 'react';\r\nimport Constants from 'expo-constants';\r\n\r\nimport {\r\n  deviceDarkModeSet,\r\n  selectDarkMode,\r\n  selectIsGuest,\r\n  selectUserKey,\r\n} from '../../app/appDataSlice';\r\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\r\nimport { reset as resetClassPages } from '../classPages/classPagesSlice';\r\nimport { reset as resetDiscover } from '../discover/discoverSlice';\r\nimport {\r\n  reset as resetAppData,\r\n  useDeviceColorSchemeSet,\r\n} from '../../app/appDataSlice';\r\nimport { apiSlice } from '../api/apiSlice';\r\nimport { useDeleteAccountMutation, useGetUserInfoQuery } from '../api/usersApi';\r\nimport WrapItems from '../../components/WrapItems';\r\nimport { useColorScheme } from 'react-native';\r\nimport ModalContainer from '../../components/ModalContainer';\r\n\r\nexport default function SettingsPage({ navigation }) {\r\n  const darkMode = useAppSelector(selectDarkMode);\r\n  const useDeviceColorScheme = useAppSelector(\r\n    (state) => state.appData.secure.useDeviceColorScheme\r\n  );\r\n  const userKey = useAppSelector(selectUserKey);\r\n  const isGuest = useAppSelector(selectIsGuest);\r\n  const colorScheme = useColorScheme();\r\n  const { data: userData } = useGetUserInfoQuery(userKey, {\r\n    skip: !userKey,\r\n  });\r\n  const dispatch = useAppDispatch();\r\n  const [showGuestModal, setShowGuestModal] = useState(false);\r\n  const [deleteAccount, { isLoading }] = useDeleteAccountMutation();\r\n\r\n  const logOut = () => {\r\n    dispatch(resetClassPages());\r\n    dispatch(resetDiscover());\r\n    dispatch(resetAppData());\r\n    dispatch(apiSlice.util.resetApiState());\r\n  };\r\n\r\n  const handleDeleteAccount = async () => {\r\n    try {\r\n      await deleteAccount({ userKey, userName: userData.userName }).unwrap();\r\n      logOut();\r\n    } catch (e) {\r\n      console.warn('Error deleting account: ', e);\r\n    }\r\n  };\r\n\r\n  const handleUseDeviceSettingToggled = (checked: boolean) => {\r\n    dispatch(useDeviceColorSchemeSet(checked));\r\n    if (checked) {\r\n      dispatch(deviceDarkModeSet(colorScheme === 'dark'));\r\n    }\r\n  };\r\n\r\n  const handleDarkModeToggled = (checked: boolean) => {\r\n    dispatch(useDeviceColorSchemeSet(false));\r\n    dispatch(deviceDarkModeSet(checked));\r\n  };\r\n\r\n  return (\r\n    <Layout style={{ flex: 1 }}>\r\n      <Layout\r\n        style={{\r\n          flexDirection: 'row',\r\n          marginHorizontal: 20,\r\n          justifyContent: 'space-between',\r\n          alignItems: 'center',\r\n          flex: 1,\r\n        }}>\r\n        <Layout>\r\n          <Text category=\"h2\">\r\n            {userData?.realFirstName} {userData?.realLastName}\r\n          </Text>\r\n          <Text category=\"h6\" status=\"success\">\r\n            @{userData?.userName}\r\n          </Text>\r\n        </Layout>\r\n        <Layout>\r\n          <Button\r\n            onPress={() => {\r\n              if (isGuest) {\r\n                setShowGuestModal(true);\r\n              } else {\r\n                navigation.navigate('EditUser');\r\n              }\r\n            }}>\r\n            Edit\r\n          </Button>\r\n        </Layout>\r\n      </Layout>\r\n      {showGuestModal && (\r\n        <ModalContainer\r\n          title=\"Wait!\"\r\n          children={\r\n            <Text style={{ paddingHorizontal: 30 }}>\r\n              This feature is locked to our Guest Users. Please create a free\r\n              account with us to take advantage this feature.\r\n            </Text>\r\n          }\r\n          backDropVisible={showGuestModal}\r\n          setBackDropVisible={setShowGuestModal}\r\n        />\r\n      )}\r\n\r\n      <Divider />\r\n\r\n      <Layout\r\n        style={{\r\n          flex: 5,\r\n          justifyContent: 'space-between',\r\n          marginHorizontal: 20,\r\n        }}>\r\n        <Layout>\r\n          <Text category=\"h6\" style={{ textAlign: 'center', marginTop: 20 }}>\r\n            Dark Mode\r\n          </Text>\r\n          <Layout\r\n            style={{\r\n              marginTop: 20,\r\n              flexDirection: 'row',\r\n              justifyContent: 'space-between',\r\n            }}>\r\n            <Text>Use Device Setting</Text>\r\n            <Toggle\r\n              onChange={(checked) => handleUseDeviceSettingToggled(checked)}\r\n              checked={useDeviceColorScheme}\r\n            />\r\n          </Layout>\r\n          <Layout\r\n            style={{\r\n              marginTop: 20,\r\n              flexDirection: 'row',\r\n              justifyContent: 'space-between',\r\n              opacity: useDeviceColorScheme ? 0.4 : 1,\r\n            }}>\r\n            <Text>Dark Mode</Text>\r\n            <Toggle\r\n              onChange={(checked) => handleDarkModeToggled(checked)}\r\n              checked={darkMode}\r\n            />\r\n          </Layout>\r\n        </Layout>\r\n\r\n        <WrapItems\r\n          childStyle={{ marginVertical: 3 }}\r\n          style={{ alignItems: 'center', marginBottom: 10 }}>\r\n          <Button onPress={logOut} status=\"warning\" appearance=\"outline\">\r\n            Log Out\r\n          </Button>\r\n          <Button\r\n            onPress={handleDeleteAccount}\r\n            status=\"danger\"\r\n            appearance=\"ghost\">\r\n            Delete Account\r\n          </Button>\r\n          <Text>\r\n            {Constants?.manifest2?.extra?.expoClient?.version\r\n              ? `Version ${Constants.manifest2.extra.expoClient.version}`\r\n              : ''}\r\n          </Text>\r\n        </WrapItems>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n}\r\n","import { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { HeaderBackButton } from '@react-navigation/elements';\r\n\r\nimport { Platform, TouchableOpacity } from 'react-native';\r\nimport { Text, useTheme } from '@ui-kitten/components';\r\nimport { selectDarkMode } from '../../app/appDataSlice';\r\nimport { useAppSelector } from '../../app/hooks';\r\nimport EditUser from './EditUser';\r\nimport SettingsPage from './SettingsPage';\r\nimport BackButton from '../../components/BackButton';\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nexport default function Settings() {\r\n  const theme = useTheme();\r\n  const darkMode = useAppSelector(selectDarkMode);\r\n\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={{\r\n        headerStyle: {\r\n          backgroundColor: darkMode ? theme['color-basic-800'] : '#fff',\r\n        },\r\n      }}>\r\n      <Stack.Screen\r\n        name=\"SettingsPage\"\r\n        component={SettingsPage}\r\n        options={({ navigation }) => ({\r\n          title: 'Settings',\r\n          headerLeft: (props) => (\r\n            <BackButton navigation={navigation} {...props} />\r\n          ),\r\n        })}\r\n      />\r\n      <Stack.Group screenOptions={{ presentation: 'modal' }}>\r\n        <Stack.Screen\r\n          name=\"EditUser\"\r\n          component={EditUser}\r\n          options={{ headerShown: false }}\r\n        />\r\n      </Stack.Group>\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n","import {useEffect, useRef, useState} from \"react\";\r\nimport {useAppSelector} from \"../../app/hooks\";\r\nimport {selectDarkMode, selectUserKey} from \"../../app/appDataSlice\";\r\nimport {useIsAllowedToReviewQuery} from \"../api/classPagesApi\";\r\nimport {Button, Card, Layout, Modal, Text} from \"@ui-kitten/components\";\r\nimport {BottomSheetScrollView, TouchableOpacity} from \"@gorhom/bottom-sheet\";\r\nimport ExportModalClass from \"../classPages/SingleClassPage/exportModalClass\";\r\nimport {ScrollView, StyleSheet, View} from \"react-native\";\r\nimport {useNavigation} from \"@react-navigation/native\";\r\n\r\n\r\nexport default function SingleClassPage({ selectedClass }) {\r\n    const [showModal, setShowModal] = useState(false);\r\n    const darkMode = useAppSelector(selectDarkMode);\r\n    const filters = useAppSelector((state) => state.appData.classPages.filters);\r\n    const backgroundColor = darkMode ? {backgroundColor: '#1F1F1F'} : {backgroundColor: '#F5F5F5'};\r\n\r\n    useEffect(() => {\r\n        console.log('THE CLASS IS HERE: ' + selectedClass)\r\n    }, [])\r\n\r\n\r\n    function buildTimeString(time) {\r\n        if (!time.startTime || time.startTime === '' || time.startTime === null) {\r\n            return 'closed';\r\n        }\r\n        return (\r\n            convertTo12HourTime(time.startTime) +\r\n            ' - ' +\r\n            convertTo12HourTime(time.endTime) +\r\n            '\\n'\r\n        );\r\n    }\r\n\r\n    function convertTo12HourTime(time) {\r\n        if (time.length !== 5) {\r\n            time = '0' + time;\r\n        }\r\n        let hours = time.slice(0, 2);\r\n        let minutes = time.slice(3, 5);\r\n        let ampm = Number.parseInt(hours) > 12 ? 'pm' : 'am';\r\n        hours = hours % 12;\r\n        if (hours === 0) {\r\n            hours = 12;\r\n            ampm = 'pm';\r\n        }\r\n        return hours + ':' + minutes + ampm;\r\n    }\r\n\r\n    const averageGradeMSGModal = (\r\n        <Modal\r\n            visible={showModal}\r\n            backdropStyle={styles.backdrop}\r\n            style={{ width: '75%' }}\r\n            onBackdropPress={() => setShowModal(false)}>\r\n            <Card disabled={true}>\r\n                <Text style={{ fontSize: 15, paddingTop: 5, paddingBottom: 10 }}>\r\n                    The Athena Network collects and aggregates the data anonymously\r\n                    submitted by the Course Review process and calculates what the average\r\n                    student's experience in this course will look like. Given that it is\r\n                    based on voluntarily submitted data, this information is to be used as\r\n                    a reference only. Please consult your advisor before making any\r\n                    impactful decisions.\r\n                </Text>\r\n                <Button onPress={() => setShowModal(false)}>Dismiss</Button>\r\n            </Card>\r\n        </Modal>\r\n    );\r\n\r\n    if (!selectedClass?.times) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <ScrollView style={backgroundColor}>\r\n            <Layout style={[{ alignItems: 'center' }, backgroundColor]}>\r\n                <ExportModalClass classData={selectedClass}/>\r\n                <Text style={styles.title}>{selectedClass.courseName}</Text>\r\n                <Text style={{ paddingTop: 30 }}>{selectedClass.masterCourseCode}</Text>\r\n\r\n                <Text style={styles.subtitle}>\r\n                    {`${selectedClass.courseTerm} \\u2022 credits: ${\r\n                        filters.isHMC\r\n                            ? selectedClass.creditWeightHM\r\n                            : selectedClass.creditWeight\r\n                    }`}\r\n                </Text>\r\n                {selectedClass.timeSpentOutOfClass && (\r\n                    <Layout\r\n                        style={[\r\n                            {\r\n                                flexDirection: 'row',\r\n                                alignItems: 'flex-start',\r\n                                paddingRight: 5,\r\n                            },\r\n                            backgroundColor,\r\n                        ]}>\r\n                        <Text style={styles.subtitle}>Time Spent Per Week</Text>\r\n                        <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\r\n                        <Text style={styles.subtitle}>\r\n                            : {selectedClass.timeSpentOutOfClass} hours\r\n                        </Text>\r\n                    </Layout>\r\n                )}\r\n                {selectedClass.averageGrade && (\r\n                    <Layout\r\n                        style={[\r\n                            {\r\n                                flexDirection: 'row',\r\n                                alignItems: 'flex-start',\r\n                                paddingRight: 5,\r\n                            },\r\n                            backgroundColor,\r\n                        ]}>\r\n                        <Text style={styles.subtitle}>Average Grade</Text>\r\n                        <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\r\n                        <Text style={styles.subtitle}>: {selectedClass.averageGrade}</Text>\r\n                    </Layout>\r\n                )}\r\n                {selectedClass.difficulty && (\r\n                    <Layout\r\n                        style={[\r\n                            {\r\n                                flexDirection: 'row',\r\n                                alignItems: 'flex-start',\r\n                                paddingRight: 5,\r\n                            },\r\n                            backgroundColor,\r\n                        ]}>\r\n                        <Text style={styles.subtitle}>Estimated Difficulty</Text>\r\n                        <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\r\n                        <Text style={styles.subtitle}>\r\n                            : {selectedClass.difficulty} / 5\r\n                        </Text>\r\n                    </Layout>\r\n                )}\r\n                {selectedClass.rating && (\r\n                    <Layout\r\n                        style={[\r\n                            {\r\n                                flexDirection: 'row',\r\n                                alignItems: 'flex-start',\r\n                                paddingRight: 5,\r\n                            },\r\n                            backgroundColor,\r\n                        ]}>\r\n                        <Text style={styles.subtitle}>Average Rating</Text>\r\n                        <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\r\n                        <Text style={styles.subtitle}>: {selectedClass.rating} / 5</Text>\r\n                    </Layout>\r\n                )}\r\n            </Layout>\r\n            <Layout style={backgroundColor}>\r\n                <Text style={styles.courseDescription}>{selectedClass.summary}</Text>\r\n            </Layout>\r\n            <Layout style={{ ...backgroundColor, ...styles.boxed }}>\r\n                <Text style={{ fontSize: 15, fontWeight: 'bold' }}>\r\n                    Stated Prerequisites:\r\n                </Text>\r\n                <Text style={{ fontSize: 15 }}>\r\n                    {selectedClass.prerequisites !== ''\r\n                        ? selectedClass.prerequisites\r\n                        : 'none'}\r\n                </Text>\r\n\r\n                <Text style={{ fontSize: 15, fontWeight: 'bold' }}>\r\n                    Stated Corequisites:\r\n                </Text>\r\n                <Text style={{ fontSize: 15 }}>\r\n                    {selectedClass.corequisites !== ''\r\n                        ? selectedClass.corequisites\r\n                        : 'none'}\r\n                </Text>\r\n\r\n                <Text style={{ fontSize: 15, fontWeight: 'bold' }}>\r\n                    Number of PERMs:\r\n                </Text>\r\n                <Text style={{ fontSize: 15 }}>\r\n                    {selectedClass.permCount\r\n                        ? selectedClass.permCount.toString()\r\n                        : '0'}\r\n                </Text>\r\n            </Layout>\r\n            <Layout\r\n                style={[\r\n                    { alignItems: 'flex-end' },\r\n                    backgroundColor,\r\n                ]}>\r\n                {(selectedClass.timeSpentOutOfClass ||\r\n                    selectedClass.averageGrade ||\r\n                    selectedClass.difficulty ||\r\n                    selectedClass.rating) && (\r\n                    <TouchableOpacity onPress={() => setShowModal(!showModal)}>\r\n                        <Layout\r\n                            style={[\r\n                                {\r\n                                    flexDirection: 'row',\r\n                                    alignItems: 'flex-start',\r\n                                    paddingRight: 5,\r\n                                },\r\n                                backgroundColor,\r\n                            ]}>\r\n                            <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\r\n                            <Text style={styles.disclaimer}>How Do We Estimate This?</Text>\r\n                        </Layout>\r\n                    </TouchableOpacity>\r\n                )}\r\n            </Layout>\r\n            <Layout style={backgroundColor}>\r\n                {selectedClass.times.length > 0 && (\r\n                    <Layout style={backgroundColor}>\r\n                        <Text style={styles.subHeader}>Sections</Text>\r\n                        <Layout style={[styles.section, backgroundColor]}>\r\n                            <Text style={styles.headerText}>Course Code</Text>\r\n                            <Text style={styles.headerText}>Seats</Text>\r\n                            <Text style={styles.headerText}>Professor</Text>\r\n                            <Text style={styles.headerText}>Time</Text>\r\n                            <Text style={styles.headerText}>Location</Text>\r\n                        </Layout>\r\n                    </Layout>\r\n                )}\r\n                {selectedClass.times.map((time) => {\r\n                    return (\r\n                        <Layout\r\n                            key={time.courseCode}\r\n                            style={{ backgroundColor, ...styles.section }}>\r\n                            <Text style={styles.sectionText}>{time.courseCode}</Text>\r\n                            <Text style={styles.sectionText}>\r\n                                {time.seatsFilled} / {time.seatsFilled + time.seatsAvailable}\r\n                            </Text>\r\n                            <Text style={styles.sectionText}>{time.professorName}</Text>\r\n                            <Text style={styles.sectionText}>\r\n                                {buildTimeString(time)}\r\n                                {time.daysOfTheWeek.join(', ')}\r\n                            </Text>\r\n                            <Text style={styles.sectionText}>\r\n                                {time.classLocation ? time.classLocation : 'TBD'}\r\n                            </Text>\r\n                        </Layout>\r\n                    );\r\n                })}\r\n                {averageGradeMSGModal}\r\n            </Layout>\r\n            <Text style={styles.subHeader}>Reviews</Text>\r\n            {selectedClass.reviews.length === 0 ? (\r\n                <Text style={{ alignSelf: 'center', marginBottom: 10 }}>\r\n                    No Reviews yet\r\n                </Text>\r\n            ) : (\r\n                selectedClass.reviews.map((review, index) => (\r\n                    <Card key={index} disabled={true}>\r\n                        <Text>{review.text + '\\n\\nPosted: ' + review.date}</Text>\r\n                        {review.professor && (\r\n                            <Text>{'Taught By: ' + review.professor}</Text>\r\n                        )}\r\n                    </Card>\r\n                ))\r\n            )}\r\n        </ScrollView>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    title: {\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n    },\r\n    subtitle: {\r\n        fontSize: 16,\r\n    },\r\n    courseOpen: {\r\n        backgroundColor: 'green',\r\n        color: '#fff',\r\n        padding: 5,\r\n        marginRight: 10,\r\n    },\r\n    courseClosed: {\r\n        backgroundColor: 'red',\r\n        color: '#fff',\r\n        padding: 5,\r\n        borderRadius: 5,\r\n    },\r\n    header: {\r\n        alignItems: 'center',\r\n    },\r\n    details: {\r\n        flexDirection: 'row',\r\n        padding: 10,\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n    },\r\n    courseDescription: {\r\n        paddingRight: 20,\r\n        paddingLeft: 20,\r\n        paddingTop: 10,\r\n        paddingBottom: 5,\r\n        fontSize: 17,\r\n    },\r\n    BodyContainer: {\r\n        borderTopWidth: 1,\r\n        borderTopColor: 'black',\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-evenly',\r\n        padding: 10,\r\n        paddingTop: 20,\r\n        paddingBottom: 20,\r\n    },\r\n    boxed: {\r\n        alignItems: 'center',\r\n        margin: 8,\r\n        borderColor: 'black',\r\n        borderWidth: 1,\r\n        padding: 7,\r\n    },\r\n    documentStyle: {\r\n        width: 150,\r\n        height: 190,\r\n        paddingTop: 100,\r\n    },\r\n    imageLabel: {\r\n        fontSize: 12,\r\n        color: 'black',\r\n        padding: 10,\r\n        textAlign: 'center',\r\n    },\r\n    schedule: {\r\n        paddingLeft: 20,\r\n        paddingTop: 10,\r\n    },\r\n    graphImage: {\r\n        width: '100%',\r\n        aspectRatio: 1,\r\n        resizeMode: 'contain',\r\n    },\r\n    grade: {\r\n        fontSize: 50,\r\n        fontWeight: 'bold',\r\n        color: 'green',\r\n    },\r\n    reviewText: {\r\n        fontSize: 16,\r\n        fontStyle: 'italic',\r\n    },\r\n    reviewBox: {\r\n        width: '95%',\r\n        padding: 10,\r\n        borderWidth: 1,\r\n        borderColor: 'black',\r\n        borderRadius: 5,\r\n        marginBottom: 10,\r\n    },\r\n    section: {\r\n        flexDirection: 'row',\r\n        paddingLeft: 5,\r\n        borderBottomWidth: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    headerText: {\r\n        fontWeight: 'bold',\r\n        fontSize: 13,\r\n        flex: 1,\r\n    },\r\n    sectionText: {\r\n        flex: 1,\r\n    },\r\n    disclaimer: {\r\n        fontSize: 14,\r\n        fontStyle: 'italic',\r\n    },\r\n    backdrop: {\r\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    },\r\n    input: {\r\n        height: 50,\r\n        margin: 12,\r\n        borderWidth: 1,\r\n        padding: 10,\r\n    },\r\n    containerDrop: {\r\n        height: 42,\r\n        margin: 12,\r\n        borderWidth: 1,\r\n    },\r\n    indentedInput: {\r\n        height: 50,\r\n        marginVertical: 12,\r\n        borderWidth: 1,\r\n        padding: 10,\r\n        marginRight: 12,\r\n        marginLeft: 30,\r\n    },\r\n    text: {\r\n        fontSize: 16,\r\n        lineHeight: 21,\r\n        fontWeight: 'bold',\r\n        letterSpacing: 0.25,\r\n        color: 'white',\r\n    },\r\n    subHeader: {\r\n        fontSize: 20,\r\n        paddingLeft: 20,\r\n        paddingBottom: 20,\r\n        paddingTop: 20,\r\n        fontWeight: 'bold',\r\n    },\r\n});","import React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from 'react';\r\nimport {\r\n  Alert,\r\n  Animated,\r\n  Dimensions,\r\n  Image,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  RefreshControl,\r\n  SafeAreaView,\r\n  ScrollView,\r\n  StyleSheet,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  TouchableWithoutFeedback,\r\n  View,\r\n} from 'react-native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport BackButton from '../../components/BackButton';\r\nimport {\r\n  IndexPath,\r\n  Select,\r\n  SelectItem,\r\n  Layout,\r\n  Text,\r\n  Button,\r\n  Input,\r\n  List,\r\n} from '@ui-kitten/components';\r\nimport { base_URL } from './constants';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { FontAwesome5, FontAwesome } from '@expo/vector-icons';\r\nimport {useAppDispatch, useAppSelector} from '../../app/hooks';\r\nimport {selectDarkMode, selectIsGuest, selectUserKey} from '../../app/appDataSlice';\r\nimport { useGetCurrentSectionQuery } from '../api/classPagesApi';\r\nimport CalendarFunctions from '../calendar/CalendarFunctions';\r\nimport { useGetUserInfoQuery } from '../api/usersApi';\r\nimport {classSelected, selectClassesList} from '../classPages/classPagesSlice';\r\nimport renderCustomEvent from '../calendar/customEvent';\r\nimport renderItem from '../calendar/ScheduledItem';\r\nimport GestureRecognizer from 'react-native-swipe-gestures';\r\nimport { SwipeRow } from 'react-native-swipe-list-view';\r\nimport BottomSheet from \"@gorhom/bottom-sheet/lib/typescript/components/bottomSheet/BottomSheet\";\r\nimport ModalContainer from \"../../components/ModalContainer\";\r\nimport UserNameSelectionDropDown from \"../../components/UserNameSelectionDropDown\";\r\nimport {Class} from \"../../app/types\";\r\nimport SingleClassPage from \"./notificationSinglePage\";\r\n\r\nconst NotificationHomePage = createNativeStackNavigator();\r\n\r\nexport default function NotificationsNavigation({ navigation }) {\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [selectedIndex, setSelectedIndex] = React.useState([]);\r\n  const [hasChosen, setHasChosen] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n  const [showGuestModal, setShowGuestModal] = useState(false)\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const userKey = useAppSelector(selectUserKey);\r\n  const darkMode = useAppSelector(selectDarkMode);\r\n  const isGuest = useAppSelector(selectIsGuest)\r\n\r\n  useEffect(() => {\r\n    refreshNotifications();\r\n    fetch(base_URL + '/users/getUserNameList', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        userKey: userKey,\r\n      },\r\n    }).then(async (data) => {\r\n      if (data.ok) {\r\n        let newUsers = (await data.json()).map((userName) => {\r\n          return {\r\n            label: userName,\r\n            id: userName,\r\n          };\r\n        });\r\n        setUsers(newUsers);\r\n      }\r\n    });\r\n  }, []);\r\n  async function refreshNotifications() {\r\n    fetch(base_URL + '/users/getNotifications', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        userKey: userKey,\r\n      },\r\n    }).then((res) => {\r\n      res.text().then((notifications) => {\r\n        notifications = JSON.parse(notifications);\r\n        // @ts-ignore\r\n        setNotifications(notifications);\r\n      });\r\n    });\r\n  }\r\n  async function sendNotification(bodyTosend) {\r\n    await fetch(base_URL + '/users/sendNotification', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        userKey: userKey,\r\n      },\r\n      body: JSON.stringify(bodyTosend),\r\n    });\r\n  }\r\n  function createNotificationButton() {\r\n    navigation.navigate('CreateNotification');\r\n  }\r\n  function clearNotifications() {\r\n    fetch(base_URL + '/users/clearNotifications', {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        userKey: userKey,\r\n      },\r\n    }).then(() => {\r\n      refreshNotifications();\r\n    });\r\n  }\r\n  const navigationHeader = (navigation) => (\r\n    <Layout\r\n      style={{\r\n        width: '100%',\r\n        justifyContent: 'space-between',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        flex: 1,\r\n        backgroundColor: 'transparent',\r\n      }}>\r\n      {Platform.OS === 'ios' && <BackButton navigation={navigation} />}\r\n\r\n      <Layout\r\n        style={{\r\n          paddingBottom: 5,\r\n          flexDirection: 'row',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          flex: 1,\r\n          backgroundColor: 'transparent',\r\n        }}>\r\n        {/* <Image\r\n          style={{\r\n            height: 28,\r\n            width: 28,\r\n          }}\r\n          source={require('../../../assets/logos/app-logo.png')}\r\n        /> */}\r\n        <Text\r\n          style={{\r\n            paddingTop: 3,\r\n            fontSize: 20,\r\n            fontWeight: '500',\r\n            color: darkMode ? '#fff' : '#000',\r\n          }}>\r\n          Notifications\r\n        </Text>\r\n      </Layout>\r\n      <Layout\r\n        style={{\r\n          alignSelf: 'flex-end',\r\n          paddingRight: 40,\r\n          paddingBottom: 10,\r\n          flexDirection: 'row',\r\n          backgroundColor: 'transparent',\r\n        }}>\r\n        <TouchableOpacity\r\n          style={{\r\n            paddingLeft: 20,\r\n            marginRight: Platform.OS == 'android' ? 50 : 0,\r\n          }}\r\n          onPress={() => {\r\n            if (isGuest) {\r\n              setShowGuestModal(true)\r\n            } else {\r\n              createNotificationButton();\r\n            }\r\n          }}>\r\n          <FontAwesome5 size={25} color={'#1E90FF'} name=\"plus\" />\r\n        </TouchableOpacity>\r\n        {\r\n            showGuestModal &&\r\n            <ModalContainer\r\n                title=\"Wait!\"\r\n                children={<Text style={{paddingHorizontal: 30}}>This feature is locked to our Guest Users. Please create a free account with us to take advantage this feature.</Text>}\r\n                backDropVisible={showGuestModal}\r\n                setBackDropVisible={setShowGuestModal}\r\n            />\r\n        }\r\n        {/*<TouchableOpacity\r\n\r\n          onPress={() => {\r\n            Alert.alert(\r\n              'Caution',\r\n              'Are you sure you want to clear your notifications?\\nThis action cannot be undone.',\r\n              [\r\n                {\r\n                  text: 'No',\r\n                  style: 'cancel',\r\n                },\r\n                {\r\n                  text: 'Yes',\r\n                  onPress: async () => {\r\n                    clearNotifications();\r\n                  },\r\n                },\r\n              ]\r\n            );\r\n          }}>\r\n          <FontAwesome5 size={25} color={'#d71717'} name=\"times\" />\r\n        </TouchableOpacity>\r\n        /* <TouchableOpacity\r\n          style={{ paddingLeft: 20 }}\r\n          onPress={() => {\r\n            refreshNotifications();\r\n          }}>\r\n          <FontAwesome size={25} color={'#1E90FF'} name=\"rotate-right\" />\r\n        </TouchableOpacity> */}\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n  const Notifications = ({ navigation }) => {\r\n    const [refreshing, setRefreshing] = useState(false);\r\n    const [isMoving, setIsMoving] = useState(false);\r\n\r\n    const onRefresh = useCallback(() => {\r\n      setRefreshing(true);\r\n      refreshNotifications().then(() => {\r\n        setRefreshing(false);\r\n      });\r\n    }, []);\r\n    async function handleOnLeftSwipe(postId) {\r\n      const newNotifications = notifications.map((not) => {\r\n        if (not._id !== postId) {\r\n          return not;\r\n        }\r\n      });\r\n      console.log(newNotifications);\r\n      setNotifications(newNotifications);\r\n      let res = await fetch(base_URL + '/users/removeNotification', {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          userKey: userKey,\r\n        },\r\n        body: JSON.stringify({\r\n          id: postId,\r\n        }),\r\n        redirect: 'follow',\r\n      });\r\n      if (res.ok) {\r\n        refreshNotifications();\r\n      } else {\r\n        console.log(await res.json());\r\n      }\r\n      setIsOpen(false);\r\n      setIsMoving(false);\r\n    }\r\n\r\n    const renderItem = ({ item: notification }) => {\r\n      return (\r\n        <Layout>\r\n          {notification && (\r\n            // @ts-ignore\r\n            <SwipeRow\r\n              disableRightSwipe={true}\r\n              onSwipeValueChange={(status) => {\r\n                if (status.value < -Dimensions.get('window').width * (1/3)) {\r\n                  if (!isOpen) {\r\n                    setIsOpen(true);\r\n                    handleOnLeftSwipe(notification._id);\r\n                  }\r\n                } else if (status.value < -5) {\r\n                  setIsMoving(true);\r\n                } else {\r\n                  setIsMoving(false);\r\n                }\r\n              }}\r\n              useNativeDriver={true}>\r\n              <Layout\r\n                style={{\r\n                  alignItems: 'flex-end',\r\n                  justifyContent: 'center',\r\n                  alignSelf: 'center',\r\n                  width: '95%',\r\n                  height: 75,\r\n                  borderRadius: 11,\r\n                  backgroundColor: '#ce0f0f',\r\n                  marginLeft: 5,\r\n                  paddingRight: 20,\r\n                  marginRight: 5,\r\n                  marginTop: 10,\r\n                }}>\r\n                <Text style={{ color: '#fff' }}>Delete</Text>\r\n              </Layout>\r\n              <TouchableWithoutFeedback\r\n                style={{\r\n                  alignItems: 'center',\r\n                  alignSelf: 'center',\r\n                  width: '95%',\r\n                  height: 75,\r\n                  borderRadius: 10,\r\n                  marginLeft: 5,\r\n                  marginRight: 5,\r\n                  marginTop: 10,\r\n                }}\r\n                onPress={() => {\r\n                  navigation.navigate('SingleNotification', {\r\n                    data: notification,\r\n                  });\r\n                }}\r\n                key={notification?._id}>\r\n                <Layout\r\n                  style={{\r\n                    alignItems: 'center',\r\n                    alignSelf: 'center',\r\n                    width: '95%',\r\n                    height: 75,\r\n                    borderRadius: 10,\r\n                    backgroundColor: darkMode ? '#333333' : '#ebebeb',\r\n                    shadowColor: '#000',\r\n                    shadowOffset: { width: 0, height: 1 },\r\n                    shadowOpacity: 0.2,\r\n                    shadowRadius: 2,\r\n                    elevation: 1,\r\n                    marginLeft: 5,\r\n                    marginRight: 5,\r\n                    marginTop: 10,\r\n                  }}>\r\n                  <Text\r\n                    style={{\r\n                      paddingTop: 5,\r\n                      fontWeight: 'bold',\r\n                      fontSize: 20,\r\n                    }}>\r\n                    {notification?.title}\r\n                  </Text>\r\n                  <Text style={{}}>From: {notification?.from}</Text>\r\n                  {notification?.creationDate ? (\r\n                    <Text style={{ fontStyle: 'italic', fontSize: 12 }}>\r\n                      {notification?.creationDate}\r\n                    </Text>\r\n                  ) : null}\r\n                </Layout>\r\n              </TouchableWithoutFeedback>\r\n            </SwipeRow>\r\n          )}\r\n        </Layout>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <Layout style={{ flex: 1 }}>\r\n        {notifications.length === 0 ? (\r\n          <Layout style={{ alignItems: 'center' }}>\r\n            <Text\r\n              style={{\r\n                paddingTop: '25%',\r\n                paddingBottom: 10,\r\n                textAlign: 'center',\r\n              }}>\r\n              No New Notifications\r\n            </Text>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                refreshNotifications();\r\n              }}>\r\n              <FontAwesome size={25} color={'#1E90FF'} name=\"rotate-right\" />\r\n            </TouchableOpacity>\r\n          </Layout>\r\n        ) : null}\r\n        <List\r\n          style={{ backgroundColor: 'transparent' }}\r\n          contentContainerStyle={{ flex: 1 }}\r\n          data={notifications}\r\n          scrollEnabled={!isMoving}\r\n          renderItem={renderItem}\r\n          onRefresh={refreshNotifications}\r\n          refreshing={refreshing}\r\n        />\r\n      </Layout>\r\n    );\r\n  };\r\n\r\n  function getDateText(text) {\r\n    let spaceIndex = text.indexOf(' ');\r\n    let first = text.substring(0, spaceIndex);\r\n    let second = text.substring(spaceIndex + 1);\r\n    return second + ' |  ' + first;\r\n  }\r\n\r\n  const SingleNotification = ({\r\n    route: {\r\n      params: { data },\r\n    },\r\n  }) => {\r\n    navigation = useNavigation();\r\n    const { data: currentSection } = useGetCurrentSectionQuery();\r\n\r\n    let listToRemove = [];\r\n    if (data.isSchedule) {\r\n      let jsonSchedule = JSON.parse(data.message);\r\n      let thereIsAtLeastOne = false;\r\n      for (const index in jsonSchedule) {\r\n        if (jsonSchedule[index].courseTerm === currentSection) {\r\n          thereIsAtLeastOne = true;\r\n        } else {\r\n          listToRemove.push(index);\r\n        }\r\n      }\r\n      for (const index of listToRemove) {\r\n        jsonSchedule.splice(index, 1);\r\n      }\r\n      if (!thereIsAtLeastOne) {\r\n        Alert.alert(\r\n          'This schedule is either empty or contains outdated class information'\r\n        );\r\n        navigation.goBack();\r\n      }\r\n      return thereIsAtLeastOne ? (\r\n        <Layout>{Calendar(jsonSchedule)}</Layout>\r\n      ) : null;\r\n    } else if (data.isCourseData) {\r\n      const allClassData = useAppSelector(selectClassesList);\r\n      const courseSimpleData = JSON.parse(data.message);\r\n      if (courseSimpleData.courseTerm === currentSection) {\r\n        return <SingleClassPage\r\n            selectedClass={allClassData[courseSimpleData.masterCourseCode]}/>\r\n      } else {\r\n        Alert.alert(\r\n            'This course contains outdated information'\r\n        );\r\n        navigation.goBack();\r\n        return null\r\n      }\r\n    }\r\n    return (\r\n      <KeyboardAvoidingView\r\n        style={{ flex: 1 }}\r\n        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}>\r\n        <ScrollView contentContainerStyle={{ flex: 1 }}>\r\n          <Layout style={sponsorPageStyles.container}>\r\n            <Layout\r\n              style={{ width: '100%', alignItems: 'center', marginTop: 20 }}>\r\n              <Text style={sponsorPageStyles.title}>{data.title}</Text>\r\n            </Layout>\r\n\r\n            {data.from && (\r\n              <Layout style={sponsorPageStyles.address}>\r\n                <Layout style={{ flexDirection: 'row' }}>\r\n                  <Text style={{ fontSize: 15, fontWeight: 'bold' }}>\r\n                    From:{' '}\r\n                  </Text>\r\n                  <Text style={{ fontSize: 15 }}>{data.from}</Text>\r\n                </Layout>\r\n                <Layout style={{ flexDirection: 'row' }}>\r\n                  <Text style={{ fontSize: 15 }}>\r\n                    {getDateText(data.creationDate)}\r\n                  </Text>\r\n                </Layout>\r\n              </Layout>\r\n            )}\r\n            <Layout style={sponsorPageStyles.description}>\r\n              <Text>{data.message}</Text>\r\n            </Layout>\r\n            {data.repliable && (\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  // TODO: reply\r\n                }}\r\n                style={myStyles.button}>\r\n                <Text style={myStyles.text}>Reply</Text>\r\n              </TouchableOpacity>\r\n            )}\r\n          </Layout>\r\n        </ScrollView>\r\n      </KeyboardAvoidingView>\r\n    );\r\n  };\r\n  const CreateNotification = ({ navigation }) => {\r\n    const [body, setBody] = useState({});\r\n    const [done, setDone] = useState(false);\r\n    const [recipient, setRecipient] = useState(null)\r\n    const [hasChosen, setHasChosen] = useState(false);\r\n\r\n    useEffect(() => {\r\n      changeValue(hasChosen ? [recipient] : null, 'recipients')\r\n    }, [recipient, hasChosen])\r\n\r\n    function checkForDone(tempBody) {\r\n      if (tempBody.recipients && tempBody.title && tempBody.text) {\r\n        setDone(true);\r\n      } else {\r\n        setDone(false);\r\n      }\r\n    }\r\n\r\n    const changeValue = (theValue, valueToChange) => {\r\n      let newBody = body;\r\n      for (const aspect in newBody) {\r\n        if (\r\n            newBody[aspect] === null ||\r\n            newBody[aspect] === undefined ||\r\n            newBody[aspect] === ''\r\n        ) {\r\n          delete newBody[aspect];\r\n        }\r\n      }\r\n      if (theValue !== undefined) {\r\n        newBody[valueToChange] = theValue;\r\n      } else {\r\n        if (newBody[valueToChange]) {\r\n          delete newBody[valueToChange];\r\n        }\r\n      }\r\n      console.log(JSON.stringify(newBody));\r\n      checkForDone(newBody);\r\n      setBody(newBody);\r\n    };\r\n\r\n    function renderInputFields() {\r\n      const renderHeader = () => {\r\n        return (\r\n          <Layout style={{ flexDirection: 'row' }}>\r\n            <Text\r\n              style={{\r\n                fontSize: 15,\r\n                paddingLeft: 12,\r\n                paddingBottom: 5,\r\n                paddingTop: 5,\r\n                alignContent: 'center',\r\n                fontWeight: 'bold',\r\n              }}>\r\n              Send Message\r\n            </Text>\r\n          </Layout>\r\n        );\r\n      };\r\n      let final = [];\r\n      final.push(\r\n          <View style={{\r\n            height: 50,\r\n            margin: 12,\r\n            padding: 10,\r\n          }}>\r\n            {UserNameSelectionDropDown({setHasChosen, setRecipient, placeholder: true})}\r\n          </View>\r\n      );\r\n      final.push(\r\n        <Input\r\n          autoCapitalize={'words'}\r\n          onChangeText={(theValue) => changeValue(theValue, 'title')}\r\n          style={myStyles.input}\r\n          placeholderTextColor={'gray'}\r\n          placeholder={'Title'}\r\n        />\r\n      );\r\n      final.push(\r\n        <Input\r\n          autoCapitalize={'sentences'}\r\n          onChangeText={(theValue) => changeValue(theValue, 'text')}\r\n          style={myStyles.inputBig}\r\n          multiline={true}\r\n          textStyle={{ minHeight: 150 }}\r\n          placeholderTextColor={'gray'}\r\n          placeholder={'Body'}\r\n        />\r\n      );\r\n\r\n      return (\r\n        <Layout style={{ flex: 1 }}>\r\n          {renderHeader()}\r\n          {final}\r\n        </Layout>\r\n      );\r\n    }\r\n    return (\r\n      <SafeAreaView style={{ flex: 1 }}>\r\n        <KeyboardAvoidingView\r\n          style={{ flex: 1 }}\r\n          behavior={Platform.OS === 'ios' ? 'padding' : 'height'}>\r\n          <ScrollView contentContainerStyle={{ flex: 1 }}>\r\n            <Layout style={sponsorPageStyles.container}>\r\n              <Layout style={sponsorPageStyles.description}>\r\n                {renderInputFields()}\r\n                <Button\r\n                  disabled={!done}\r\n                  onPress={async () => {\r\n                    // console.log(JSON.stringify(body));\r\n                    await sendNotification(body);\r\n                    navigation.navigate('Notifications');\r\n                  }}>\r\n                  <Text style={myStyles.text}>Send Message</Text>\r\n                </Button>\r\n              </Layout>\r\n            </Layout>\r\n          </ScrollView>\r\n        </KeyboardAvoidingView>\r\n      </SafeAreaView>\r\n    );\r\n  };\r\n  return (\r\n    <NotificationHomePage.Navigator initialRouteName=\"Notifications & Messages\">\r\n      <NotificationHomePage.Screen\r\n        options={({ navigation }) => ({\r\n          title: 'Notifications',\r\n          headerTitle: () => {\r\n            return navigationHeader(navigation);\r\n          },\r\n        })}\r\n        name=\"Notifications\"\r\n        component={Notifications}\r\n      />\r\n      <NotificationHomePage.Screen\r\n        name=\"SingleNotification\"\r\n        component={SingleNotification}\r\n        options={{ headerTitle: '' }}\r\n      />\r\n      <NotificationHomePage.Screen\r\n        name=\"CreateNotification\"\r\n        component={CreateNotification}\r\n        options={{ headerTitle: '' }}\r\n      />\r\n    </NotificationHomePage.Navigator>\r\n  );\r\n}\r\n\r\nfunction convertTo12HourTime(time) {\r\n  if (time.length !== 5) {\r\n    time = '0' + time;\r\n  }\r\n  let hours = time.slice(0, 2);\r\n  let minutes = time.slice(3, 5);\r\n  let ampm = Number.parseInt(hours) > 12 ? 'pm' : 'am';\r\n  hours = hours % 12;\r\n  if (hours === 0) {\r\n    hours = 12;\r\n    ampm = 'pm';\r\n  }\r\n  return hours + ':' + minutes + ampm;\r\n}\r\n\r\nfunction getMinutesDiff(startTime, endTime) {\r\n  if (endTime > startTime) {\r\n    return (endTime - startTime) * 0.7;\r\n  } else if (startTime === endTime) {\r\n    return 0;\r\n  } else {\r\n    return (startTime - endTime) * -0.7;\r\n  }\r\n}\r\n\r\nfunction Calendar(userData) {\r\n  const allClassData = useAppSelector(selectClassesList);\r\n  const { data: currentSection, isLoading: isCurrentSectionLoading } =\r\n    useGetCurrentSectionQuery();\r\n  const darkMode: Boolean = useAppSelector(selectDarkMode);\r\n  const calendarFun = new CalendarFunctions();\r\n  const days = [\r\n    { day: 'Mon', id: 'Monday' },\r\n    { day: 'Tues', id: 'Tuesday' },\r\n    { day: 'Wed', id: 'Wednesday' },\r\n    { day: 'Thurs', id: 'Thursday' },\r\n    { day: 'Fri', id: 'Friday' },\r\n    { day: 'Sat', id: 'Saturday' },\r\n    { day: 'Sun', id: 'Sunday' },\r\n  ];\r\n  const times = [\r\n    '12:00 AM',\r\n    '1:00 AM',\r\n    '2:00 AM',\r\n    '3:00 AM',\r\n    '4:00 AM',\r\n    '5:00 AM',\r\n    '6:00 AM',\r\n    '7:00 AM',\r\n    '8:00 AM',\r\n    '9:00 AM',\r\n    '10:00 AM',\r\n    '11:00 AM',\r\n    '12:00 PM',\r\n    '1:00 PM',\r\n    '2:00 PM',\r\n    '3:00 PM',\r\n    '4:00 PM',\r\n    '5:00 PM',\r\n    '6:00 PM',\r\n    '7:00 PM',\r\n    '8:00 PM',\r\n    '9:00 PM',\r\n    '10:00 PM',\r\n    '11:00 PM',\r\n  ];\r\n\r\n  function renderDashes() {\r\n    let final = [];\r\n    for (let i = 0; i < 24; i++) {\r\n      final.push(\r\n        <Layout\r\n          style={{\r\n            width: 46,\r\n            marginLeft: 9,\r\n            top: 41.7 * i,\r\n            position: 'absolute',\r\n            height: 41.7,\r\n            borderBottomWidth: 0.7,\r\n            borderBottomColor: darkMode ? 'rgb(68,68,68)' : 'rgb(204,204,204)',\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    return final;\r\n  }\r\n\r\n  const renderClasses = (elem) => {\r\n    let classes = [];\r\n    for (const course of userData) {\r\n      if (course.courseTerm === currentSection) {\r\n        let data = calendarFun.getFullClassData(\r\n          course.courseCode,\r\n          allClassData\r\n        );\r\n        let data2 = data.times.find(\r\n          (time) => time.courseCode === course.courseCode\r\n        );\r\n        for (const day in data2['daysOfTheWeek']) {\r\n          if (data2['daysOfTheWeek'][day] === elem.id) {\r\n            classes.push(renderItem(data, course.courseCode, () => {}));\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return classes;\r\n  };\r\n\r\n  const topBar = useRef(null);\r\n\r\n  return (\r\n    <SafeAreaView\r\n      style={{\r\n        marginTop: 0,\r\n        marginLeft: 0,\r\n        paddingBottom: 15,\r\n        marginBottom: 20,\r\n      }}>\r\n      {/* Times */}\r\n      <ScrollView\r\n        horizontal={true}\r\n        snapToInterval={63}\r\n        showsHorizontalScrollIndicator={false}\r\n        style={{ marginLeft: 75 }}\r\n        ref={topBar}>\r\n        <View style={{ flexDirection: 'row' }}>\r\n          {days.map((elem) => {\r\n            return (\r\n              <Layout>\r\n                <Layout\r\n                  style={{\r\n                    borderColor: darkMode ? '#7a7a7a' : '#525252',\r\n                    borderBottomWidth: 1,\r\n                    width: '100%',\r\n                  }}>\r\n                  <Text\r\n                    style={{\r\n                      textAlign: 'center',\r\n                      color: darkMode ? '#7a7a7a' : '#525252',\r\n                      width: 63,\r\n                    }}>\r\n                    {elem.day}\r\n                  </Text>\r\n                </Layout>\r\n              </Layout>\r\n            );\r\n          })}\r\n        </View>\r\n      </ScrollView>\r\n      <ScrollView\r\n        contentOffset={{ x: 0, y: 292 }}\r\n        showsVerticalScrollIndicator={false}\r\n        bounces={false}>\r\n        <View style={{ flexDirection: 'row' }}>\r\n          <View\r\n            style={{\r\n              justifyContent: 'space-around',\r\n              height: 1000,\r\n            }}>\r\n            {times.map((time) => {\r\n              return (\r\n                <Text\r\n                  style={{\r\n                    textAlign: 'center',\r\n                    color: darkMode ? '#7a7a7a' : '#525252',\r\n                    paddingTop: '15%',\r\n                    height: 43,\r\n                    width: 75,\r\n                    borderWidth: 1,\r\n                    borderColor: darkMode ? '#7a7a7a' : '#525252',\r\n                  }}>\r\n                  {time}\r\n                </Text>\r\n              );\r\n            })}\r\n          </View>\r\n          {/* Classes */}\r\n          <ScrollView\r\n            horizontal={true}\r\n            snapToInterval={63}\r\n            decelerationRate={'normal'}\r\n            showsHorizontalScrollIndicator={false}\r\n            bounces={false}\r\n            scrollEventThrottle={1}\r\n            onScroll={(e) =>\r\n              topBar.current.scrollTo({\r\n                x: e.nativeEvent.contentOffset.x,\r\n                animated: false,\r\n                useNativeDriver: true,\r\n              })\r\n            }\r\n            onMomentumScrollBegin={(e) =>\r\n              topBar.current.scrollTo({\r\n                x: e.nativeEvent.contentOffset.x,\r\n                animated: false,\r\n                useNativeDriver: true,\r\n              })\r\n            }>\r\n            <View style={{ flexDirection: 'row' }}>\r\n              {days.map((elem) => {\r\n                return (\r\n                  <Layout>\r\n                    {renderDashes()}\r\n                    <Layout key={elem.day} style={{ width: 63 }}>\r\n                      {renderClasses(elem)}\r\n                    </Layout>\r\n                    <Layout\r\n                      style={{\r\n                        height: '100%',\r\n                        width: 1,\r\n                        backgroundColor: darkMode ? '#7a7a7a' : '#525252',\r\n                      }}\r\n                    />\r\n                  </Layout>\r\n                );\r\n              })}\r\n            </View>\r\n          </ScrollView>\r\n        </View>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst sponsorPageStyles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    // alignItems: 'center',\r\n  },\r\n  header: {\r\n    marginTop: 20,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: '100%',\r\n  },\r\n  address: {\r\n    alignItems: 'center',\r\n    margin: 10,\r\n    borderColor: 'black',\r\n    borderWidth: 1,\r\n    padding: 10,\r\n  },\r\n  video: {\r\n    marginTop: 20,\r\n    display: 'flex',\r\n    justifyContent: 'flex-start',\r\n  },\r\n  title: {\r\n    fontSize: 26,\r\n    marginLeft: 10,\r\n  },\r\n  logo: {\r\n    width: '100%',\r\n    height: 100,\r\n  },\r\n  description: {\r\n    flex: 1,\r\n    margin: 10,\r\n    borderRadius: 5,\r\n    width: '95%',\r\n    padding: 10,\r\n  },\r\n  couponContainer: {\r\n    width: '100%',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n  },\r\n  coupon: {\r\n    width: 400,\r\n    height: 267,\r\n  },\r\n  imageGallery: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    margin: 10,\r\n    marginBottom: 0,\r\n  },\r\n  imageStyle: {\r\n    width: 150,\r\n    height: 150,\r\n    paddingTop: 100,\r\n    margin: 5,\r\n  },\r\n  headerText: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nconst myStyles = StyleSheet.create({\r\n  inputBig: {\r\n    height: 200,\r\n    margin: 12,\r\n    borderWidth: 1,\r\n    padding: 10,\r\n  },\r\n  input: {\r\n    height: 50,\r\n    margin: 12,\r\n    borderWidth: 1,\r\n    padding: 10,\r\n  },\r\n  indentedInput: {\r\n    height: 50,\r\n    marginVertical: 12,\r\n    borderWidth: 1,\r\n    padding: 10,\r\n    marginRight: 12,\r\n    marginLeft: 30,\r\n  },\r\n  text: {\r\n    fontSize: 16,\r\n    lineHeight: 21,\r\n    fontWeight: 'bold',\r\n    letterSpacing: 0.25,\r\n  },\r\n  button: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 32,\r\n    borderRadius: 4,\r\n    elevation: 3,\r\n  },\r\n  timeButton: {\r\n    width: 100,\r\n    height: 50,\r\n    marginHorizontal: 40,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    borderRadius: 4,\r\n  },\r\n  timeText: {\r\n    fontSize: 16,\r\n    lineHeight: 21,\r\n    fontWeight: 'bold',\r\n    letterSpacing: 0.25,\r\n    color: 'white',\r\n  },\r\n  actualTimeText: {\r\n    fontSize: 13,\r\n    lineHeight: 18,\r\n    fontWeight: 'bold',\r\n    letterSpacing: 0.25,\r\n    color: 'white',\r\n  },\r\n  timeStyle: {\r\n    flex: 0.3,\r\n    borderWidth: 2,\r\n    borderLeftColor: 'white',\r\n  },\r\n});\r\n\r\nconst listingStyles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n  },\r\n  cardContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    alignSelf: 'center',\r\n    width: '95%',\r\n    height: 75,\r\n    borderRadius: 10,\r\n    borderWidth: 1,\r\n    borderColor: '#ddd',\r\n    borderBottomWidth: 0,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 2,\r\n    elevation: 1,\r\n    marginLeft: 5,\r\n    marginRight: 5,\r\n    marginTop: 10,\r\n  },\r\n  containerForNotifications: {\r\n    alignItems: 'center',\r\n    alignSelf: 'center',\r\n    width: '95%',\r\n    height: 75,\r\n    borderRadius: 10,\r\n    borderWidth: 1,\r\n    borderColor: '#ddd',\r\n    borderBottomWidth: 0,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 2,\r\n    elevation: 1,\r\n    marginLeft: 5,\r\n    marginRight: 5,\r\n    marginTop: 10,\r\n  },\r\n  text: {\r\n    flex: 1,\r\n    fontSize: 20,\r\n    textAlign: 'center',\r\n    marginTop: 5,\r\n    marginBottom: 5,\r\n  },\r\n  image: {\r\n    width: '100%',\r\n    height: '100%',\r\n    borderRadius: 10,\r\n  },\r\n});\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Image, Platform, TouchableOpacity } from 'react-native';\r\nimport { FontAwesome5, Ionicons } from '@expo/vector-icons';\r\nimport { Button, Layout, Text, useTheme } from '@ui-kitten/components';\r\n\r\nimport ClassesList from './ClassesList';\r\nimport { SponsorsList, SponsorPage } from '../sponsors/SponsorsList';\r\nimport Header from '../../components/Header';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport Settings from '../settings/index';\r\nimport { useAppSelector } from '../../app/hooks';\r\nimport {\r\n  selectDarkMode,\r\n  selectIsGuest,\r\n  selectUserKey,\r\n} from '../../app/appDataSlice';\r\nimport NotificationsNavigation from '../notifications/Notifications';\r\nimport { base_URL } from '../notifications/constants';\r\nimport SingleClassPage from './SingleClassPage/index';\r\nimport SelectTerm from './SelectTerm';\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nexport default function SearchClasses({ navigation }) {\r\n  const theme = useTheme();\r\n  const userKey = useAppSelector(selectUserKey);\r\n  const darkMode = useAppSelector(selectDarkMode);\r\n  const [numberOfNotifications, setNumberOfNotifications] = useState(0);\r\n\r\n  function refreshNotifications() {\r\n    fetch(base_URL + '/users/getNotifications', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        userKey: userKey,\r\n      },\r\n    }).then((res) => {\r\n      res.text().then((notifications) => {\r\n        notifications = JSON.parse(notifications);\r\n        setNumberOfNotifications(notifications.length);\r\n      });\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    refreshNotifications();\r\n    setInterval(() => {\r\n      refreshNotifications();\r\n    }, 60000); // refresh every minute\r\n  }, []);\r\n\r\n  const accessoryLeft = (\r\n    <Image\r\n      style={{\r\n        height: 28,\r\n        width: 28,\r\n      }}\r\n      source={require('../../../assets/logos/app-logo-transparent.png')}\r\n    />\r\n  );\r\n\r\n  const accessoryRight = (\r\n    <Layout\r\n      style={{\r\n        flexDirection: 'row',\r\n        width: 100,\r\n        justifyContent: 'space-between',\r\n      }}>\r\n      <TouchableOpacity\r\n        onPress={() => {\r\n          navigation.navigate('SponsorsList');\r\n        }}\r\n        style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n        <FontAwesome5\r\n          name=\"shopping-bag\"\r\n          size={23}\r\n          color={darkMode ? theme['color-basic-200'] : theme['color-basic-800']}\r\n        />\r\n      </TouchableOpacity>\r\n      <TouchableOpacity\r\n        onPress={() => {\r\n          navigation.navigate('Settings');\r\n        }}>\r\n        <Ionicons\r\n          name=\"settings\"\r\n          size={23}\r\n          color={darkMode ? theme['color-basic-200'] : theme['color-basic-800']}\r\n        />\r\n      </TouchableOpacity>\r\n      <TouchableOpacity\r\n        onPress={() => {\r\n          navigation.navigate('NotificationsPage');\r\n        }}>\r\n        <FontAwesome5\r\n          name=\"bell\"\r\n          size={23}\r\n          color={darkMode ? theme['color-basic-200'] : theme['color-basic-800']}\r\n        />\r\n        {numberOfNotifications > 0 ? (\r\n          <Layout\r\n            style={{\r\n              position: 'absolute',\r\n              backgroundColor: darkMode ? 'red' : '#fff',\r\n              borderRadius: 10,\r\n              paddingHorizontal: 3,\r\n              right: -7,\r\n              top: -3,\r\n            }}>\r\n            <Text>{numberOfNotifications}</Text>\r\n          </Layout>\r\n        ) : null}\r\n      </TouchableOpacity>\r\n    </Layout>\r\n  );\r\n\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen\r\n        name=\"ClassesList\"\r\n        component={ClassesList}\r\n        options={{\r\n          header: () => (\r\n            <Layout style={{ paddingBottom: 10 }}>\r\n              <Header\r\n                accessoryLeft={accessoryLeft}\r\n                accessoryRight={accessoryRight}\r\n                title=\"Athena\"\r\n              />\r\n            </Layout>\r\n          ),\r\n          title: 'ClassPages',\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"Settings\"\r\n        component={Settings}\r\n        options={{\r\n          headerShown: false,\r\n        }}\r\n      />\r\n      <Stack.Group screenOptions={{ headerTitle: 'Sponsors' }}>\r\n        <Stack.Screen\r\n          name=\"SponsorsList\"\r\n          component={SponsorsList}\r\n          options={{ title: 'Sponsors' }}\r\n        />\r\n        <Stack.Screen\r\n          name=\"SponsorPage\"\r\n          component={SponsorPage}\r\n          options={{ title: 'Sponsors' }}\r\n        />\r\n      </Stack.Group>\r\n      <Stack.Screen\r\n        name=\"NotificationsPage\"\r\n        component={NotificationsNavigation}\r\n        options={{ headerShown: false, title: 'Notifications' }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"SelectTerm\"\r\n        component={SelectTerm}\r\n        options={{\r\n          title: 'Select Term',\r\n          headerShown: false,\r\n          animation: 'slide_from_bottom',\r\n          gestureDirection: 'vertical',\r\n        }}\r\n      />\r\n      {Platform.OS === 'web' && (\r\n        <Stack.Screen\r\n          name=\"SingleClassPage\"\r\n          component={SingleClassPage}\r\n          options={{\r\n            headerShown: false,\r\n            title: 'ClassPages',\r\n          }}\r\n        />\r\n      )}\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n","export default {\r\n  'color-basic-100': '#FFFFFF',\r\n  'color-basic-200': '#F5F5F5',\r\n  'color-basic-300': '#D4D4D4',\r\n  'color-basic-400': '#B3B3B3',\r\n  'color-basic-500': '#808080',\r\n  'color-basic-600': '#4A4A4A',\r\n  'color-basic-700': '#383838',\r\n  'color-basic-800': '#292929',\r\n  'color-basic-900': '#1F1F1F',\r\n  'color-basic-1000': '#141414',\r\n  'color-basic-1100': '#000000',\r\n  'color-primary-100': '#FFE0D8',\r\n  'color-primary-200': '#FFBBB2',\r\n  'color-primary-300': '#FF8E8B',\r\n  'color-primary-400': '#FF6F78',\r\n  'color-primary-500': '#FF3F5E',\r\n  'color-primary-600': '#DB2E5A',\r\n  'color-primary-700': '#B71F54',\r\n  'color-primary-800': '#93144C',\r\n  'color-primary-900': '#7A0C47',\r\n  'color-success-100': '#FBD4F0',\r\n  'color-success-200': '#F8ABE8',\r\n  'color-success-300': '#EA7EDC',\r\n  'color-success-400': '#D55AD0',\r\n  'color-success-500': '#b42bba',\r\n  'color-success-600': '#8F1F9F',\r\n  'color-success-700': '#6E1585',\r\n  'color-success-800': '#500D6B',\r\n  'color-success-900': '#3A0859',\r\n  'color-info-100': '#CDFDFE',\r\n  'color-info-200': '#9CF4FE',\r\n  'color-info-300': '#6AE4FC',\r\n  'color-info-400': '#45D0FA',\r\n  'color-info-500': '#09B0F7',\r\n  'color-info-600': '#0689D4',\r\n  'color-info-700': '#0466B1',\r\n  'color-info-800': '#02498F',\r\n  'color-info-900': '#013476',\r\n  'color-warning-100': '#FFF6CC',\r\n  'color-warning-200': '#FFEA99',\r\n  'color-warning-300': '#FFDC66',\r\n  'color-warning-400': '#FFCD3F',\r\n  'color-warning-500': '#FFB600',\r\n  'color-warning-600': '#DB9600',\r\n  'color-warning-700': '#B77800',\r\n  'color-warning-800': '#935C00',\r\n  'color-warning-900': '#7A4800',\r\n  'color-danger-100': '#FEE5DE',\r\n  'color-danger-200': '#FEC6BE',\r\n  'color-danger-300': '#FEA09D',\r\n  'color-danger-400': '#FD858D',\r\n  'color-danger-500': '#FC5D77',\r\n  'color-danger-600': '#D8436A',\r\n  'color-danger-700': '#B52E5E',\r\n  'color-danger-800': '#921D51',\r\n  'color-danger-900': '#781149',\r\n  'color-grey-800': '#1F1F1F',\r\n  'color-grey-700': '#2F2F2F',\r\n  'color-grey-600': '#3F3F3F',\r\n  'color-grey-500': '#4F4F4F',\r\n  'color-grey-400': '#5F5F5F',\r\n  'color-grey-300': '#6F6F6F',\r\n  'color-grey-200': '#7F7F7F',\r\n  'color-grey-100': '#8F8F8F',\r\n  'color-grey-50': '#9F9F9F',\r\n};\r\n","import React from 'react';\r\nimport { StyleSheet } from 'react-native';\r\nimport { FontAwesome5 } from '@expo/vector-icons';\r\n\r\nexport const FontAwesomeIconsPack = {\r\n  name: 'fontAwesome',\r\n  icons: createIconsMap(),\r\n};\r\n\r\nfunction createIconsMap() {\r\n  return new Proxy(\r\n    {},\r\n    {\r\n      get(target, name) {\r\n        return IconProvider(name);\r\n      },\r\n    }\r\n  );\r\n}\r\n\r\nconst IconProvider = (name) => ({\r\n  toReactElement: (props) => FontAwesomeIcon({ name, ...props }),\r\n});\r\n\r\nfunction FontAwesomeIcon({ name, style }) {\r\n  const { height, tintColor, ...iconStyle } = StyleSheet.flatten(style);\r\n  return (\r\n    <FontAwesome5\r\n      name={name}\r\n      size={height}\r\n      color={tintColor}\r\n      style={iconStyle}\r\n    />\r\n  );\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { StyleSheet } from 'react-native';\r\nimport { Feather } from '@expo/vector-icons';\r\n\r\nexport const FeatherIconsPack = {\r\n  name: 'feather',\r\n  icons: createIconsMap(),\r\n};\r\n\r\nfunction createIconsMap() {\r\n  return new Proxy(\r\n    {},\r\n    {\r\n      get(target, name) {\r\n        return IconProvider(name);\r\n      },\r\n    }\r\n  );\r\n}\r\n\r\nconst IconProvider = (name) => ({\r\n  toReactElement: (props) => FeatherIcon({ name, ...props }),\r\n});\r\n\r\nfunction FeatherIcon({ name, style }) {\r\n  const { height, tintColor, ...iconStyle } = StyleSheet.flatten(style);\r\n  return (\r\n    <Feather name={name} size={height} color={tintColor} style={iconStyle} />\r\n  );\r\n}\r\n","import {Manager} from \"socket.io-client\";\r\n\r\nexport const base_URL = 'https://api.athenaserver.com:5678/api';\r\n\r\nexport const manager = new Manager(base_URL, {\r\n    randomizationFactor: 0.5,\r\n    addTrailingSlash: false,\r\n    autoConnect: false\r\n});","import {useCallback, useEffect, useState} from \"react\";\r\nimport {base_URL} from \"../../constants/admin\";\r\nimport {useAppSelector} from \"../../app/hooks\";\r\nimport {selectUserKey} from \"../../app/appDataSlice\";\r\nimport {\r\n    View,\r\n    Image,\r\n    Text,\r\n    TouchableOpacity,\r\n    ScrollView,\r\n    TextInput,\r\n    RefreshControl,\r\n    KeyboardAvoidingView,\r\n    Platform,\r\n    Dimensions\r\n} from \"react-native\";\r\nimport { FontAwesome } from '@expo/vector-icons';\r\nimport {createNativeStackNavigator} from \"@react-navigation/native-stack\";\r\nimport {Card, IndexPath, Layout, Select, SelectItem} from \"@ui-kitten/components\";\r\nimport moment from \"moment-timezone\";\r\nimport {LineChart} from \"react-native-chart-kit\";\r\nimport {Divider} from \"@ui-kitten/components\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\n\r\nconst AdminHomePage = createNativeStackNavigator();\r\n\r\nexport default function AdminHomeNavigation() {\r\n    const [ adminCommands, setAdminCommands ] = useState([])\r\n    const userKey = useAppSelector(selectUserKey)\r\n    useEffect(() => {\r\n        getAdminCommands()\r\n    }, [])\r\n    async function getAdminCommands() {\r\n        const adminURL = base_URL + '/adminCommands'\r\n        let res = await fetch(adminURL + '/getAdminCommands', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'userKey': userKey\r\n            },\r\n        })\r\n        let commands: Array<any> = await res.json()\r\n        let filter = await fetch(adminURL + '/toggleAdminCommands', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'userKey': userKey\r\n            },\r\n            body: '{}',\r\n        })\r\n        const filterObject = (await filter.json()).currentAdminCommandsStatus\r\n        console.log(filterObject)\r\n        commands = commands.sort(function(a, b) {\r\n            const textA = a.label.toUpperCase();\r\n            const textB = b.label.toUpperCase();\r\n            return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\r\n        });\r\n        let finalCommandList = []\r\n        for (const command of commands) {\r\n            if (filterObject[command.label]) {\r\n                finalCommandList.push(command)\r\n            }\r\n        }\r\n        // @ts-ignore\r\n        setAdminCommands(finalCommandList)\r\n        return commands\r\n    }\r\n\r\n    const [refreshing, setRefreshing] = useState(false);\r\n\r\n    const onRefresh = useCallback(() => {\r\n        setRefreshing(true);\r\n        setAdminCommands([])\r\n        getAdminCommands().then(commands => setRefreshing(false))\r\n    }, []);\r\n\r\n    const AdminHome = ({ navigation }) => {\r\n        return (\r\n            <ScrollView refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} />}>\r\n                {adminCommands?.length === 0 ? <Text>No Commands Yet. Rip</Text> : null}\r\n                {adminCommands?.map((command) => {\r\n                    return (\r\n                        <TouchableOpacity\r\n                            onPress={() => {\r\n                                navigation.navigate('AdminCommand', { data: command });\r\n                            }}\r\n                            style={listingStyles.cardContainer}\r\n                            key={command.url}>\r\n                            <Text style={listingStyles.text}>{command.label}</Text>\r\n                        </TouchableOpacity>\r\n                    );\r\n                })}\r\n            </ScrollView>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <AdminHomePage.Navigator initialRouteName=\"AdminHome\">\r\n            <AdminHomePage.Screen\r\n                options={{\r\n                    //title: 'Admin Home',\r\n                    /*headerTitle: () => {\r\n                        return adminControlPanelHeader;\r\n                    },*/\r\n                    headerShown: false\r\n                }}\r\n                name=\"AdminHome\"\r\n                component={AdminHome}\r\n            />\r\n            <AdminHomePage.Screen\r\n                name=\"AdminCommand\"\r\n                component={AdminCommand}\r\n                options={{ headerTitle: '' }}\r\n            />\r\n        </AdminHomePage.Navigator>\r\n    );\r\n}\r\n\r\n\r\nconst AdminCommand = ({route: {params: { data }}}) => {\r\n    const [ info, setInfo ] = useState({});\r\n    const [ isFileUpload, setIsFileUpload ] = useState(false);\r\n    const [ body, setBody ] = useState({})\r\n    const [ users, setUsers ] = useState([])\r\n    const [ fileUploads, setFileUploads ] = useState([])\r\n    const [ sponsors, setSponsors ] = useState([])\r\n    const [ status, setStatus ] = useState('0')\r\n    const [ allFieldsFilled, setAllFieldsFilled ] = useState(false)\r\n    const [ buttonPushed, setButtonPushed ] = useState(false) // refresh button\r\n    const userKey = useAppSelector(selectUserKey)\r\n\r\n    useEffect(() => {\r\n        // Check for first button render\r\n        checkForFieldsFilled(body)\r\n        // Fetch User List\r\n        fetch(base_URL + '/users/getUserNameList', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'userKey': userKey\r\n            }\r\n        }).then(async (data) => {\r\n            if (data.ok) {\r\n                let newUsers = (await data.json()).map(userName => {\r\n                    return {\r\n                        label: userName,\r\n                        id: userName\r\n                    }\r\n                })\r\n                setUsers(newUsers)\r\n            }\r\n        })\r\n        // Fetch Sponsor List\r\n        fetch(base_URL + '/sponsors/', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'userKey': userKey\r\n            }\r\n        }).then(async (data) => {\r\n            if (data.ok) {\r\n                let sponsors = (await data.json()).map(sponsor => {\r\n                    return {\r\n                        label: sponsor.sponsorName,\r\n                        id: sponsor._id\r\n                    }\r\n                })\r\n                setSponsors(sponsors)\r\n            }\r\n        })\r\n        // Fetch File upload List\r\n        fetch(base_URL + '/adminCommands/getReferenceImages', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'userKey': userKey\r\n            }\r\n        }).then(async (data) => {\r\n            if (data.ok) {\r\n                let images = (await data.json()).map(imageName => {\r\n                    return {\r\n                        label: imageName,\r\n                        id: imageName\r\n                    }\r\n                })\r\n                setFileUploads(images)\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    function checkForFieldsFilled(body) {\r\n        for (const field of data.fields) {\r\n            if (field.mandatory) {\r\n                if (body[field.id] === undefined || body[field.id] === null) {\r\n                    setAllFieldsFilled(false)\r\n                    return\r\n                }\r\n            }\r\n        }\r\n        setAllFieldsFilled(true)\r\n    }\r\n\r\n    const sendApiData = (data, userKey) => {\r\n        let additionToUrl = ''\r\n        for (const aspect in body) {\r\n            if (body[aspect].paramOverride) {\r\n                additionToUrl += body[aspect]\r\n                break\r\n            }\r\n        }\r\n        if (JSON.stringify(body,null,2) !== '{}' && data.apiType === 'GET') {\r\n            for (const aspect in body) {\r\n                if (additionToUrl === '') {\r\n                    additionToUrl = '?'\r\n                } else {\r\n                    additionToUrl += '&'\r\n                }\r\n                additionToUrl += aspect + '=' + body[aspect]\r\n            }\r\n        }\r\n        const newUrl = data.url + additionToUrl\r\n        console.log('isFileUpload: ' + isFileUpload)\r\n        if (!isFileUpload) {\r\n            fetch(\r\n                newUrl,\r\n                {\r\n                    method: data.apiType,\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        userKey: userKey\r\n                    },\r\n                    body: JSON.stringify(body,null,2) !== '{}' && data.apiType !== 'GET' ? JSON.stringify(body) : undefined\r\n                }\r\n            ).then((res) => {\r\n                // @ts-ignore\r\n                setStatus(res.status)\r\n                res.text().then((text) => {\r\n                    try {\r\n                        const text2 = JSON.parse(text)\r\n                        setInfo(text2)\r\n                    } catch (err) {\r\n                        setInfo(text)\r\n                    }\r\n                })\r\n            })\r\n        } else {\r\n            let formdata = new FormData();\r\n            for (const item in body) {\r\n                if (!item.includes('picture')) {\r\n                    formdata.append(item, body[item]);\r\n                } else {\r\n                    formdata.append(item, {\r\n                        // @ts-ignore\r\n                        uri: body[item].uri,\r\n                        name: item,\r\n                        type: 'image/jpg',\r\n                    });\r\n                }\r\n            }\r\n            fetch(newUrl, {\r\n                body: formdata,\r\n                redirect: 'follow',\r\n                method: data.apiType,\r\n                headers: {\r\n                    userKey: userKey\r\n                },\r\n            }).then((res) => {\r\n                // @ts-ignore\r\n                setStatus(res.status)\r\n                res.text().then((text) => {\r\n                    try {\r\n                        const text2 = JSON.parse(text)\r\n                        setInfo(text2)\r\n                    } catch (err) {\r\n                        setInfo(text)\r\n                    }\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    if (buttonPushed) {\r\n        setButtonPushed(false)\r\n        sendApiData(data, userKey)\r\n    }\r\n\r\n    function renderEachDropItem(field) {\r\n        if (field['data']) {\r\n            // This is where we can add preset lists if we can't use something hardcoded on the server\r\n            switch (field['data']) {\r\n                case 'users' : {\r\n                    field.options = users\r\n                    break\r\n                }\r\n                case 'sponsors' : {\r\n                    field.options = sponsors\r\n                    break\r\n                }\r\n                case 'fileUploads' : {\r\n                    field.options = fileUploads\r\n                    break\r\n                }\r\n            }\r\n        }\r\n        let final = []\r\n        for (const option of field.options) {\r\n            final.push(\r\n                <SelectItem title={option.label}/>\r\n            )\r\n        }\r\n        return final\r\n    }\r\n\r\n    function renderTheFieldsNecessary(fields) {\r\n        const changeValue = (theValue, valueToChange) => {\r\n            let newBody = body\r\n            for (const aspect in newBody) {\r\n                if (newBody[aspect] === null || newBody[aspect] === undefined || newBody[aspect] === '') {\r\n                    delete newBody[aspect]\r\n                }\r\n            }\r\n            if (theValue !== undefined) {\r\n                newBody[valueToChange] = theValue\r\n            } else {\r\n                if (newBody[valueToChange]) {\r\n                    delete newBody[valueToChange]\r\n                }\r\n            }\r\n            console.log(newBody)\r\n            setBody(newBody)\r\n            checkForFieldsFilled(newBody)\r\n        }\r\n\r\n        const fileUploadTemplate = (field) => {\r\n            const pickImage = async () => {\r\n                let result = await ImagePicker.launchImageLibraryAsync({\r\n                    allowsEditing: false,\r\n                });\r\n                if (!result.cancelled) {\r\n                    changeValue(result, field.id);\r\n                }\r\n            };\r\n\r\n            return (\r\n                <View>\r\n                    {/* Image Picker */}\r\n                    <TouchableOpacity\r\n                        onPress={() => {\r\n                            pickImage();\r\n                        }}\r\n                        style={{\r\n                            height: 80,\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            borderRadius: 8,\r\n                            paddingVertical: 8,\r\n                            flexDirection: 'row',\r\n                            backgroundColor: '#dbdbdb',\r\n                            marginVertical: 15,\r\n                            marginHorizontal: 5,\r\n                        }}>\r\n                        <Layout\r\n                            style={{\r\n                                flex: 1,\r\n                                flexDirection: 'row',\r\n                                height: '100%',\r\n                                marginHorizontal: 10,\r\n                                backgroundColor: '#dbdbdb',\r\n                            }}>\r\n                            <Layout\r\n                                style={{\r\n                                    flex: 1,\r\n                                    justifyContent: 'center',\r\n                                    alignItems: 'center',\r\n                                    height: '100%',\r\n                                    borderRadius: 10,\r\n                                    backgroundColor: '#bfbfbf',\r\n                                }}>\r\n                                {body && body[field?.id] ? (\r\n                                    <Image\r\n                                        source={{ uri: body[field.id].uri }}\r\n                                        style={{ width: '90%', height: '90%', borderRadius: 10 }}\r\n                                    />\r\n                                ) : (\r\n                                  <FontAwesome name=\"image\" size={40} color={'grey'} />\r\n                                )}\r\n                            </Layout>\r\n                            <Layout\r\n                                style={{\r\n                                    backgroundColor: '#dbdbdb',\r\n                                    flex: 4,\r\n                                    height: '100%',\r\n                                    justifyContent: 'center',\r\n                                    alignItems: 'center',\r\n                                }}>\r\n                                <Text\r\n                                    style={{\r\n                                        fontSize: 17,\r\n                                    }}>\r\n                                    {body && body[field?.id]\r\n                                        ? 'Select Another Image'\r\n                                        : 'Select Image'}\r\n                                </Text>\r\n                            </Layout>\r\n                        </Layout>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            );\r\n        }\r\n        const renderFilterParameters = (fields) => {\r\n            if (fields.length === 0) {\r\n                return null\r\n            }\r\n            return (\r\n                <View style={{flexDirection:'row'}}>\r\n                    <Text\r\n                        style={{\r\n                            fontSize: 15,\r\n                            paddingLeft: 12,\r\n                            paddingBottom: 5,\r\n                            paddingTop: 5,\r\n                            alignContent:'center',\r\n                            fontWeight: 'bold',\r\n                        }}>\r\n                        Filters/Parameters\r\n                    </Text>\r\n                </View>\r\n            )\r\n        }\r\n        let final = [];\r\n\r\n        function renderStringArray(field) {\r\n            const valuesToSend = {}\r\n            function changeStringValue(theValue, miniField, field) {\r\n                valuesToSend[miniField] = theValue\r\n                let newFieldForBody = []\r\n                for (const value of Object.values(valuesToSend)) {\r\n                    newFieldForBody.push(value)\r\n                }\r\n                changeValue(newFieldForBody, field.id)\r\n            }\r\n            let tempFinal = []\r\n            tempFinal.push(\r\n                <Text\r\n                    style={{\r\n                        fontSize: 14,\r\n                        paddingLeft: 5,\r\n                        paddingBottom: 3,\r\n                        paddingTop: 3,\r\n                    }}>\r\n                    {field.mandatory ? field.label + ' (mandatory)' : field.label}\r\n                </Text>\r\n            )\r\n            for (const eachOne in field.stringArray) {\r\n                tempFinal.push(\r\n                    <TextInput\r\n                        autoCapitalize={'none'}\r\n                        onChangeText={(theValue) => changeStringValue(theValue, field.stringArray[eachOne].label, field)}\r\n                        style={myStyles.indentedInput}\r\n                        placeholderTextColor={'gray'}\r\n                        placeholder={field.stringArray[eachOne].mandatory ? field.stringArray[eachOne].label + ' (mandatory)' : field.stringArray[eachOne].label}\r\n                    />\r\n                )\r\n            }\r\n            return tempFinal;\r\n        }\r\n\r\n        const renderMultiSelectDropDown = (field) => {\r\n            const [ selectedIndex, setSelectedIndex ] = useState([]);\r\n            const [ hasChosen, setHasChosen ] = useState(false)\r\n            function toggleValue(index) {\r\n                setHasChosen(true)\r\n                setSelectedIndex(index)\r\n                const newSelection = Array.isArray(index) ? index.map((littleIndex) => {\r\n                    return field.options[littleIndex.row].id\r\n                }) : field.options[index.row].id\r\n                changeValue(newSelection, field.id)\r\n            }\r\n            function calculateSelectedValues() {\r\n                let finalArray = selectedIndex.map((littleIndex) => {\r\n                    return field.options[littleIndex.row].label + ', '\r\n                })\r\n                if (finalArray.length > 0){\r\n                    let finalObject = finalArray.at(-1)\r\n                    finalObject = finalObject.replace(', ', '')\r\n                    finalArray.splice( -1, 1)\r\n                    finalArray.push(finalObject)\r\n                    return finalArray\r\n                } else {\r\n                    return field.mandatory ? field.label + ' (mandatory)' : field.label\r\n                }\r\n            }\r\n            return (\r\n                <Layout style={myStyles.containerDrop} level='1'>\r\n                    <Select\r\n                        multiSelect={true}\r\n                        value={hasChosen ? calculateSelectedValues() : field.label}\r\n                        selectedIndex={selectedIndex}\r\n                        onSelect={index => toggleValue(index)}>\r\n                        {renderEachDropItem(field)}\r\n                    </Select>\r\n                </Layout>\r\n            );\r\n        }\r\n\r\n        const renderDropDown = (field) => {\r\n            const [ selectedIndex, setSelectedIndex ] = useState(new IndexPath(0));\r\n            const [ hasChosen, setHasChosen ] = useState(false)\r\n\r\n            function currentValue() {\r\n                return <Text>{!hasChosen ? ('Choose ' + field.label + (field.mandatory ? ' (mandatory)' : '')) : field.options[selectedIndex.row - 1].label} </Text>\r\n            }\r\n\r\n            function handleSelection(index) {\r\n                setSelectedIndex(index)\r\n                changeValue(index.row === 0 ? undefined : field.options[index.row - 1].id, field.id)\r\n                if (index.row === 0) {\r\n                    setHasChosen( false)\r\n                } else {\r\n                    setHasChosen(true)\r\n                }\r\n\r\n            }\r\n\r\n            return (\r\n                <Select\r\n                    style={myStyles.containerDrop}\r\n                    value={currentValue}\r\n                    selectedIndex={selectedIndex}\r\n                    onSelect={handleSelection}>\r\n                    <SelectItem title={' '}/>\r\n                    {renderEachDropItem(field)}\r\n                </Select>\r\n            );\r\n        };\r\n\r\n        for (let i = 0; i < fields.length; i++) {\r\n            const type = fields[i].type\r\n            if (type === 'Boolean') {\r\n                final.push(\r\n                    trueFalseTemplate(fields[i])\r\n                )\r\n            } else if (type === 'String') {\r\n                final.push(\r\n                    <TextInput\r\n                        autoCapitalize={'none'}\r\n                        clearButtonMode={'always'}\r\n                        onChangeText={(theValue) => changeValue(theValue, fields[i].id)}\r\n                        style={myStyles.input}\r\n                        placeholderTextColor={'gray'}\r\n                        placeholder={fields[i].mandatory ? fields[i].label + ' (mandatory)' : fields[i].label}\r\n                    />\r\n                )\r\n            } else if (type === 'ArrayString') {\r\n                final.push(renderStringArray(fields[i]))\r\n            } else if (type === 'DropDown') {\r\n                final.push(renderDropDown(fields[i]))\r\n            } else if (type === 'MultiSelectDropDown') {\r\n                final.push(renderMultiSelectDropDown(fields[i]))\r\n            } else if (type === 'BigString') {\r\n                final.push(\r\n                    <TextInput\r\n                        autoCapitalize={'sentences'}\r\n                        clearButtonMode={'always'}\r\n                        onChangeText={(theValue) => changeValue(theValue, fields[i].id)}\r\n                        style={myStyles.inputBig}\r\n                        multiline={true}\r\n                        placeholderTextColor={'gray'}\r\n                        placeholder={fields[i].mandatory ? fields[i].label + ' (mandatory)' : fields[i].label}\r\n                    />\r\n                )\r\n            } else if (type === 'FileUpload') {\r\n                if (!isFileUpload) {\r\n                    setIsFileUpload(true);\r\n                }\r\n                final.push(fileUploadTemplate(fields[i]))\r\n            }\r\n        }\r\n        return (\r\n            <View>\r\n                {renderFilterParameters(fields)}\r\n                <View>\r\n                    {final}\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n\r\n    const trueFalseTemplate = (field) => {\r\n        const [selectedIndex, setSelectedIndex] = useState();\r\n        const boolValues = ['false', 'true']\r\n        // @ts-ignore\r\n        const displayValue = boolValues[selectedIndex - 1]\r\n        const renderOption = (displayValue) => (\r\n            <SelectItem title={displayValue}/>\r\n        );\r\n        const changeEverything = (value) => {\r\n            setSelectedIndex(value)\r\n            if (value.row === 0) {\r\n                let newBody = body\r\n                newBody[field.id] = false\r\n                setBody(newBody)\r\n            } else if (value.row === 1) {\r\n                let newBody = body\r\n                newBody[field.id] = true\r\n                setBody(newBody)\r\n            }\r\n        }\r\n        return (\r\n            <Layout style={styles.container} level='1'>\r\n                <Select\r\n                    label={field.label}\r\n                    selectedIndex={selectedIndex}\r\n                    value={displayValue}\r\n                    onSelect={index => changeEverything(index)}\r\n                    placeholder={field.mandatory ? field.label + \" (mandatory)\" : field.label + \"\"}>\r\n                    {boolValues.map(renderOption)}\r\n                </Select>\r\n            </Layout>\r\n        );\r\n    };\r\n\r\n    function showResponseData(actions) {\r\n        if (JSON.stringify(info,null,2) === '{}') {\r\n            return null\r\n        }\r\n        let informationToShow = [];\r\n\r\n        // use this one for displaying everything pretty\r\n        if (Array.isArray(info)) {\r\n            if (data.isDateGraph) { // check for need for rendering graphs\r\n                const timeFrames = [\r\n                    '2week-unique',\r\n                    '2week-total',\r\n                    'month-unique',\r\n                    '6month-total'\r\n                ]\r\n                for (const item of timeFrames) {\r\n                    const dataToShow = {\r\n                        labels: getDates(item),\r\n                        datasets: [\r\n                            {\r\n                                data: getData(item)\r\n                            }\r\n                        ]\r\n                    }\r\n                    informationToShow.push(renderOneGraph(dataToShow, item))\r\n                }\r\n            }\r\n            for (const oneElement of info) {\r\n                informationToShow.push(\r\n                    renderOneCard(oneElement, actions ? actions : [])\r\n                );\r\n            }\r\n        } else {\r\n            informationToShow.push(\r\n                <Text style={{ flexShrink: 1 }}>\r\n                    {typeof info === 'string' ? info : JSON.stringify(info,null,2)}\r\n                </Text>\r\n            );\r\n        }\r\n\r\n        function getData(timeFrame) {\r\n            let final = [];\r\n            switch (timeFrame) {\r\n                case '2week-unique': {\r\n                    for (let i = 13; i >= 0; i--) {\r\n                        let day = moment().tz(\"America/Los_Angeles\").subtract(i, 'days').format('YYYY-MM-DD');\r\n                        let counter = 0;\r\n                        let usersToday = []\r\n                        // @ts-ignore\r\n                        for (const instance of info) {\r\n                            let userName = instance.userName\r\n                            if (instance.date === day && !usersToday.includes(userName)) {\r\n                                usersToday.push(userName)\r\n                                counter++;\r\n                            }\r\n                        }\r\n                        final.push(counter);\r\n                    }\r\n                    break;\r\n                }\r\n                case '2week-total': {\r\n                    for (let i = 13; i >= 0; i--) {\r\n                        let day = moment().tz(\"America/Los_Angeles\").subtract(i, 'days').format('YYYY-MM-DD');\r\n                        let counter = 0;\r\n                        let usersToday = []\r\n                        // @ts-ignore\r\n                        for (const instance of info) {\r\n                            let userName = instance.userName\r\n                            if (instance.date === day) {\r\n                                usersToday.push(userName)\r\n                                counter++;\r\n                            }\r\n                        }\r\n                        final.push(counter);\r\n                    }\r\n                    break;\r\n                }\r\n                case 'month-unique': {\r\n                    for (let i = 4; i > 0; i--) {\r\n                        let weekStart = moment().tz(\"America/Los_Angeles\").subtract(i, 'weeks').format('YYYY-MM-DD')\r\n                        let weekEnd = moment().tz(\"America/Los_Angeles\").subtract(i - 1, 'weeks').format('YYYY-MM-DD')\r\n                        let counter = 0;\r\n                        let usersMonth = []\r\n                        // @ts-ignore\r\n                        for (const instance of info) {\r\n                            if (instance.date > weekStart && instance.date <= weekEnd && !usersMonth.includes(instance.userName)) {\r\n                                counter++;\r\n                                usersMonth.push(instance.userName)\r\n                            }\r\n                        }\r\n                        final.push(counter);\r\n                    }\r\n                    break;\r\n                }\r\n                case '6month-total': {\r\n                    for (let i = 6; i > 0; i--) {\r\n                        let monthStart = moment().tz(\"America/Los_Angeles\").subtract(i, 'months').format('YYYY-MM-DD')\r\n                        let monthEnd = moment().tz(\"America/Los_Angeles\").subtract(i - 1, 'months').format('YYYY-MM-DD')\r\n                        let counter = 0;\r\n                        // @ts-ignore\r\n                        for (const instance of info) {\r\n                            if (instance.date > monthStart && instance.date <= monthEnd) {\r\n                                counter++;\r\n                            }\r\n                        }\r\n                        final.push(counter);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            return final;\r\n        }\r\n\r\n        function getDates(timeFrame) {\r\n            let final = []\r\n            switch (timeFrame) {\r\n                case '2week-unique': {\r\n                    for (let i = 13; i >= 0; i--) {\r\n                        final.push(moment().tz(\"America/Los_Angeles\").subtract(i, 'days').format('MM/DD'))\r\n                    }\r\n                    break;\r\n                }\r\n                case '2week-total': {\r\n                    for (let i = 13; i >= 0; i--) {\r\n                        final.push(moment().tz(\"America/Los_Angeles\").subtract(i, 'days').format('MM/DD'))\r\n                    }\r\n                    break;\r\n                }\r\n                case 'month-unique': {\r\n                    for (let i = 4; i > 0; i--) {\r\n                        final.push(moment().tz(\"America/Los_Angeles\").subtract(i, 'weeks').add(1, 'days').format('MM/DD')\r\n                            + '-' +\r\n                            moment().tz(\"America/Los_Angeles\").subtract(i - 1, 'weeks').format('MM/DD'))\r\n                    }\r\n                    break;\r\n                }\r\n                case '6month-total': {\r\n                    for (let i = 6; i > 0; i--) {\r\n                        final.push(moment().tz(\"America/Los_Angeles\").subtract(i, 'months').add(1, 'days').format('MM/DD')\r\n                            + '-' +\r\n                            moment().tz(\"America/Los_Angeles\").subtract(i - 1, 'months').format('MM/DD'))\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            return final;\r\n        }\r\n\r\n        function renderOneGraph(graphData, timeFrame) {\r\n            return (\r\n                <View style={{paddingBottom: 10}}>\r\n                    <Text>Timeframe: {timeFrame}</Text>\r\n                    <LineChart\r\n                        data={graphData}\r\n                        width={Dimensions.get(\"window\").width}\r\n                        height={400}\r\n                        verticalLabelRotation={60}\r\n                        fromZero={true}\r\n                        xLabelsOffset={-10}\r\n                        segments={8}\r\n                        chartConfig={{\r\n                            backgroundColor: \"#bdbdbd\",\r\n                            decimalPlaces: 0,\r\n                            color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n                            labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n                            style: {\r\n                                borderRadius: 16\r\n                            },\r\n                            propsForDots: {\r\n                                r: \"6\",\r\n                                strokeWidth: \"2\",\r\n                                stroke: \"#333333\"\r\n                            }\r\n                        }}\r\n                    />\r\n                </View>\r\n            )\r\n        }\r\n\r\n        function renderOneCard(cardInfo, actions) {\r\n            let finalText = []\r\n            for (const aspect in cardInfo) {\r\n                if (aspect !== '_id' && aspect !== '__v'){\r\n                    finalText.push(\r\n                        <View style={{flexDirection: 'row', flexWrap:'wrap'}}>\r\n                            <Text style={{fontWeight: 'bold'}}>\r\n                                {aspect + ' : '}\r\n                            </Text>\r\n                            <Text>\r\n                                {JSON.stringify(cardInfo[aspect],null,'\\t')}\r\n                            </Text>\r\n                        </View>\r\n                    )\r\n                }\r\n            }\r\n            let renderedActions = null\r\n            // @ts-ignore\r\n            if (actions !== []) {\r\n                renderedActions = []\r\n                for (const action of actions) {\r\n                    renderedActions.push(\r\n                        renderButtonForCard(action, cardInfo)\r\n                    )\r\n                }\r\n            }\r\n\r\n            function renderButtonForCard(action, cardInfo) {\r\n                return (\r\n                    <View style={{marginHorizontal: 20}}>\r\n                        <TouchableOpacity style={{\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            width: 100,\r\n                            height: 40,\r\n                            backgroundColor: action.color ? action.color : 'gray',\r\n                            elevation: 3,\r\n                        }} onPress={() => {\r\n                            let params = {}\r\n                            for (const parameter of action.params) {\r\n                                params[parameter] = cardInfo[parameter] ? cardInfo[parameter] : undefined\r\n                            }\r\n                            fetch(\r\n                                action.url,\r\n                                {\r\n                                    method: action.method,\r\n                                    headers: {\r\n                                        'Content-Type': 'application/json',\r\n                                        'userKey': userKey\r\n                                    },\r\n                                    body: JSON.stringify(params)\r\n                                }\r\n                            ).then(res => {\r\n                                if (res.ok) {\r\n                                    setButtonPushed(true)\r\n                                }\r\n                                // res.text().then(final => console.log(final))\r\n                            })\r\n                        }}>\r\n                            {/* @ts-ignore */}\r\n                            <Text style={myStyles.buttonText}>{action.label}</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                )\r\n            }\r\n\r\n\r\n            return (\r\n                <View>\r\n                    <Card>\r\n                        {finalText}\r\n                        <View style={{paddingTop: 15, width:'95%', flexDirection: 'row', alignSelf:'center', alignContent: 'center', justifyContent: 'center'}}>\r\n                            {renderedActions}\r\n                        </View>\r\n                    </Card>\r\n                    <Divider/>\r\n                </View>\r\n            )\r\n\r\n        }\r\n\r\n        return (\r\n            <View style={{ flexShrink: 1 }}>\r\n                <Text\r\n                    style={{\r\n                        fontSize: 20,\r\n                        paddingLeft: 20,\r\n                        paddingBottom: 0,\r\n                        paddingTop: 20,\r\n                        fontWeight: 'bold',\r\n                    }}>\r\n                    Server Response\r\n                </Text>\r\n                <Text\r\n                    style={{\r\n                        fontSize: 13,\r\n                        paddingLeft: 20,\r\n                        paddingBottom: 10,\r\n                        paddingTop: 5,\r\n                        fontStyle: 'italic',\r\n                    }}>\r\n                    Status Code: {status}\r\n                </Text>\r\n                <View style={{paddingTop: 10, backgroundColor: 'lightgray'}}>\r\n                    {informationToShow}\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <KeyboardAvoidingView\r\n            behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}>\r\n            <ScrollView style={{height: '100%'}}>\r\n                <View style={sponsorPageStyles.container}>\r\n                    <View style={{ width: '100%', display: 'flex', alignItems: 'center' }}>\r\n                        <Text style={sponsorPageStyles.title}>{data.label}</Text>\r\n                    </View>\r\n\r\n                    {data.url && (\r\n                        // @ts-ignore\r\n                        <View style={sponsorPageStyles.address}>\r\n                            <Text style={{ fontSize: 18 }}>{data.url}</Text>\r\n                        </View>\r\n                    )}\r\n                    <View style={sponsorPageStyles.description}>\r\n                        {renderTheFieldsNecessary(data.fields)}\r\n                    </View>\r\n                    {allFieldsFilled && <TouchableOpacity onPress={() => {\r\n                        sendApiData(data, userKey)\r\n                        // @ts-ignore\r\n                    }} style={myStyles.button}><Text style={myStyles.text}>Send Call</Text></TouchableOpacity>}\r\n                    {showResponseData(data.actions)}\r\n                </View>\r\n            </ScrollView>\r\n        </KeyboardAvoidingView>\r\n    );\r\n};\r\n\r\nconst sponsorPageStyles = {\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: 'white',\r\n        // alignItems: 'center',\r\n    },\r\n    header: {\r\n        marginTop: 20,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width: '100%',\r\n    },\r\n    address: {\r\n        alignItems: 'center',\r\n        margin: 10,\r\n        borderColor: 'black',\r\n        borderWidth: 1,\r\n        padding: 10,\r\n    },\r\n    video: {\r\n        marginTop: 20,\r\n        display: 'flex',\r\n        justifyContent: 'flex-start',\r\n    },\r\n    title: {\r\n        fontSize: 26,\r\n        marginLeft: 10,\r\n    },\r\n    logo: {\r\n        width: '100%',\r\n        height: 100,\r\n    },\r\n    description: {\r\n        borderWidth: 1,\r\n        margin: 10,\r\n        borderColor: '#5d5c5c',\r\n        borderRadius: 5,\r\n        width: '95%',\r\n        padding: 10,\r\n        backgroundColor: 'rgba(178,166,166,0.22)',\r\n    },\r\n    couponContainer: {\r\n        width: '100%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    },\r\n    coupon: {\r\n        width: 400,\r\n        height: 267,\r\n    },\r\n    imageGallery: {\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n        margin: 10,\r\n        marginBottom: 0,\r\n    },\r\n    imageStyle: {\r\n        width: 150,\r\n        height: 150,\r\n        paddingTop: 100,\r\n        margin: 5,\r\n    },\r\n    headerText: {\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n    },\r\n}\r\n\r\nconst myStyles = {\r\n    inputBig: {\r\n        height: 200,\r\n        backgroundColor: 'white',\r\n        margin: 12,\r\n        borderWidth: 1,\r\n        padding: 10,\r\n    },\r\n    input: {\r\n        backgroundColor: '#ffffff',\r\n        height: 50,\r\n        margin: 12,\r\n        borderWidth: 1,\r\n        padding: 10,\r\n    },\r\n    containerDrop: {\r\n        backgroundColor: '#ffffff',\r\n        height: 42,\r\n        margin: 12,\r\n        borderWidth: 1,\r\n    },\r\n    indentedInput: {\r\n        backgroundColor: '#ffffff',\r\n        height: 50,\r\n        marginVertical: 12,\r\n        borderWidth: 1,\r\n        padding: 10,\r\n        marginRight: 12,\r\n        marginLeft: 30\r\n    },\r\n    text: {\r\n        fontSize: 16,\r\n        lineHeight: 21,\r\n        fontWeight: 'bold',\r\n        letterSpacing: 0.25,\r\n        color: 'white',\r\n    },\r\n    buttonText: {\r\n        fontSize: 13,\r\n        flexWrap: 'wrap',\r\n        lineHeight: 15,\r\n        fontWeight: 'bold',\r\n        letterSpacing: 0.25,\r\n        color: 'white',\r\n    },\r\n    button: {\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        paddingVertical: 12,\r\n        paddingHorizontal: 32,\r\n        borderRadius: 4,\r\n        elevation: 3,\r\n        backgroundColor: 'black',\r\n    }\r\n}\r\n\r\n\r\nconst listingStyles = {\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n    },\r\n    cardContainer: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        alignSelf: 'center',\r\n        width: '95%',\r\n        height: 75,\r\n        backgroundColor: '#bbbbbb',\r\n        borderRadius: 10,\r\n        borderWidth: 1,\r\n        borderColor: '#ddd',\r\n        borderBottomWidth: 0,\r\n        shadowColor: '#000',\r\n        shadowOffset: { width: 0, height: 2 },\r\n        shadowOpacity: 0.2,\r\n        shadowRadius: 2,\r\n        elevation: 1,\r\n        marginLeft: 5,\r\n        marginRight: 5,\r\n        marginTop: 10,\r\n    },\r\n    text: {\r\n        flex: 1,\r\n        fontSize: 20,\r\n        textAlign: 'center',\r\n        marginTop: 5,\r\n        marginBottom: 5,\r\n    },\r\n    image: {\r\n        width: '100%',\r\n        height: '100%',\r\n        borderRadius: 10,\r\n    },\r\n}\r\n\r\nconst styles = {\r\n    imagesContainer: {\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-between',\r\n        padding: 10,\r\n        paddingTop: 20,\r\n    },\r\n    imageContainer: {\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    imageLabel: {\r\n        fontSize: 12,\r\n        color: 'black',\r\n        padding: 10,\r\n        textAlign: 'center',\r\n    },\r\n    cardContainer: {\r\n        backgroundColor: '#FFF',\r\n        borderWidth: 0,\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        margin: 0,\r\n        padding: 0,\r\n    },\r\n    container: {\r\n        flex: 1,\r\n\r\n    }\r\n}","import {createNativeStackNavigator} from \"@react-navigation/native-stack\";\r\nimport {useAppSelector} from \"../../app/hooks\";\r\nimport {selectDarkMode, selectUserKey} from \"../../app/appDataSlice\";\r\nimport React, {useState} from \"react\";\r\nimport {base_URL} from \"../notifications/constants\";\r\nimport {Image, TouchableOpacity} from \"react-native\";\r\nimport {Layout} from \"@ui-kitten/components\";\r\nimport Header from \"../../components/Header\";\r\nimport AdminHomeNavigation from \"./adminPanel\";\r\n\r\n\r\nconst AdminStack = createNativeStackNavigator();\r\nexport default function AdminPanel() {\r\n    const accessoryLeft = (\r\n        <Image\r\n            style={{\r\n                height: 28,\r\n                width: 28,\r\n                alignItems: 'center',\r\n            }}\r\n            source={require('../../../assets/logos/app-logo-transparent.png')}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <AdminStack.Navigator>\r\n            <AdminStack.Screen\r\n                options={{\r\n                    header: () => {\r\n                        return (\r\n                            <Layout style={{paddingBottom: 10}}>\r\n                                <Header\r\n                                    accessoryLeft={accessoryLeft}\r\n                                    title=\"Admin Panel\"\r\n                                />\r\n                            </Layout>\r\n                        )\r\n                    },\r\n                }}\r\n                name={'AdminStack'}\r\n                component={AdminHomeNavigation}\r\n            />\r\n        </AdminStack.Navigator>\r\n    );\r\n}","import { Image, View } from 'react-native';\r\n\r\nexport default function WebSplashScreen() {\r\n  return (\r\n    <View\r\n      style={{\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      }}>\r\n      <Image\r\n        source={require('../../assets/logos/splash-logo.png')}\r\n        style={{ width: 300, height: 300 }}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n","import { View } from 'react-native';\r\nimport React from 'react';\r\n\r\nexport default function ChatRooms() {\r\n  return <View></View>;\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { store } from './src/app/store';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { persistStore } from 'redux-persist';\r\nimport * as eva from '@eva-design/eva';\r\nimport {\r\n  ApplicationProvider,\r\n  IconRegistry,\r\n  Text,\r\n  useTheme,\r\n} from '@ui-kitten/components';\r\nimport {\r\n  DarkTheme,\r\n  DefaultTheme,\r\n  NavigationContainer,\r\n} from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport * as ExpoSplashScreen from 'expo-splash-screen';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\r\nimport { RootSiblingParent } from 'react-native-root-siblings';\r\nimport Constants from 'expo-constants';\r\nimport { isDevice } from 'expo-device';\r\nimport * as Notifications from 'expo-notifications';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport {\r\n  Alert,\r\n  Linking,\r\n  Platform,\r\n  useColorScheme,\r\n  Dimensions,\r\n} from 'react-native';\r\nimport { BottomSheetModalProvider } from '@gorhom/bottom-sheet';\r\n\r\nimport Auth from './src/features/authentication';\r\nimport Discover from './src/features/discover';\r\nimport Calendar from './src/features/calendar';\r\nimport ClassPages from './src/features/classPages';\r\nimport { useAppDispatch, useAppSelector } from './src/app/hooks';\r\nimport {\r\n  deviceDarkModeSet,\r\n  mobileSiteSet,\r\n  selectDarkMode,\r\n  selectUserKey,\r\n  userKeyUpdated,\r\n} from './src/app/appDataSlice';\r\nimport Theme from './src/theme/custom-theme';\r\nimport {\r\n  useGetUserInfoQuery,\r\n  useLazyGetUserInfoQuery,\r\n  usersApiSlice,\r\n  useTrackLoginMutation,\r\n} from './src/features/api/usersApi';\r\nimport {\r\n  useLazyGetAllClassesQuery,\r\n  useLazyGetAllSectionsQuery,\r\n} from './src/features/api/classPagesApi';\r\nimport { FontAwesomeIconsPack } from './src/theme/font-awesome-icons';\r\nimport { useLazyGetCurrentVersionQuery } from './src/features/api/apiSlice';\r\nimport { FeatherIconsPack } from './src/theme/feather-icons';\r\nimport AdminPanel from './src/features/adminPanel';\r\nimport WebSplashScreen from './src/components/WebSplashScreen';\r\nimport { versionCompare } from './src/functions';\r\nimport {\r\n  availableSectionsListUpdated,\r\n  currentSectionUpdated,\r\n  resetClasses,\r\n} from './src/features/classPages/classPagesSlice';\r\nimport ChatsRoomNavigation from './src/features/chats/ChatRooms';\r\n\r\nconst windowWidth = Dimensions.get('window').width;\r\nconst persistor = persistStore(store);\r\nconst Stack = createNativeStackNavigator();\r\nconst Tab = createBottomTabNavigator();\r\n\r\nExpoSplashScreen.preventAutoHideAsync();\r\n\r\nNotifications.setNotificationHandler({\r\n  handleNotification: async () => ({\r\n    shouldShowAlert: true,\r\n    shouldPlaySound: false,\r\n    shouldSetBadge: false,\r\n  }),\r\n});\r\n\r\nasync function registerForPushNotificationsAsync() {\r\n  let token;\r\n  if (isDevice && Platform.OS !== 'web') {\r\n    const { status: existingStatus } =\r\n      await Notifications.getPermissionsAsync();\r\n    let finalStatus = existingStatus;\r\n    if (existingStatus !== 'granted') {\r\n      const { status } = await Notifications.requestPermissionsAsync();\r\n      finalStatus = status;\r\n    }\r\n    if (finalStatus !== 'granted') {\r\n      alert('Failed to get push token for push notification!');\r\n      return;\r\n    }\r\n    token = (await Notifications.getExpoPushTokenAsync()).data;\r\n    console.log(token);\r\n  }\r\n\r\n  if (Platform.OS === 'android') {\r\n    Notifications.setNotificationChannelAsync('default', {\r\n      name: 'default',\r\n      importance: Notifications.AndroidImportance.MAX,\r\n      vibrationPattern: [0, 250, 250, 250],\r\n      lightColor: '#FF231F7C',\r\n    });\r\n  }\r\n\r\n  return token;\r\n}\r\n\r\nexport default function Entry() {\r\n  return (\r\n    <Provider store={store}>\r\n      <PersistGate persistor={persistor}>\r\n        <RootSiblingParent>\r\n          <GestureHandlerRootView style={{ flex: 1 }}>\r\n            <BottomSheetModalProvider>\r\n              <App />\r\n            </BottomSheetModalProvider>\r\n          </GestureHandlerRootView>\r\n        </RootSiblingParent>\r\n      </PersistGate>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  const colorScheme = useColorScheme();\r\n  const dispatch = useAppDispatch();\r\n  const userKey = useAppSelector(selectUserKey);\r\n  const darkMode = useAppSelector(selectDarkMode);\r\n  const useDeviceColorScheme = useAppSelector(\r\n    (state) => state.appData.secure.useDeviceColorScheme\r\n  );\r\n  const localCurrentSection = useAppSelector(\r\n    (state) => state.appData.classPages.currentSection\r\n  );\r\n  const [isReady, setIsReady] = useState(false);\r\n  const [trackLogin] = useTrackLoginMutation();\r\n  const [getAllSections] = useLazyGetAllSectionsQuery();\r\n  const [getAllClasses] = useLazyGetAllClassesQuery();\r\n  const [getCurrentVersion] = useLazyGetCurrentVersionQuery();\r\n  const [getUserInfo, { data: userData, isError }] = useLazyGetUserInfoQuery();\r\n  const { data: userDataCache } =\r\n    usersApiSlice.endpoints.getUserInfo.useQueryState(userKey, {\r\n      skip: !userKey,\r\n    });\r\n\r\n  const [expoPushToken, setExpoPushToken] = useState('');\r\n  const [notification, setNotification] = useState(false);\r\n  const notificationListener = useRef();\r\n  const responseListener = useRef();\r\n\r\n  useEffect(() => {\r\n    const prepare = async () => {\r\n      try {\r\n        let fetchedCurrentSection = await getAllSections().unwrap();\r\n\r\n        // Check for user key\r\n        if (userKey) {\r\n          await getUserInfo(userKey).unwrap();\r\n          await trackLogin(userKey);\r\n\r\n          dispatch(\r\n            availableSectionsListUpdated(fetchedCurrentSection.availableTerms)\r\n          );\r\n\r\n          // Check for current section and update class list if outdated\r\n          if (fetchedCurrentSection.currentTerm !== localCurrentSection) {\r\n            dispatch(currentSectionUpdated(fetchedCurrentSection.currentTerm));\r\n            try {\r\n              getAllClasses({\r\n                userKey,\r\n                collegeName: userDataCache.collegeName,\r\n                courseTerm: fetchedCurrentSection,\r\n              }).unwrap();\r\n            } catch (e) {\r\n              console.log('Section is outdated: could not fetch classes', e);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Attempt to register for push notifications\r\n\r\n        let token = await registerForPushNotificationsAsync();\r\n        setExpoPushToken(token);\r\n\r\n        notificationListener.current =\r\n          Notifications.addNotificationReceivedListener((notification) => {\r\n            setNotification(notification);\r\n          });\r\n\r\n        responseListener.current =\r\n          Notifications.addNotificationResponseReceivedListener((response) => {\r\n            console.log(response);\r\n          });\r\n\r\n        checkForUpdates();\r\n      } catch (e) {\r\n        dispatch(userKeyUpdated('')); // Clear userKey if login fails\r\n        console.warn('Login Fail', e);\r\n      } finally {\r\n        setIsReady(true);\r\n        await ExpoSplashScreen.hideAsync();\r\n      }\r\n    };\r\n    console.log('Preparing app');\r\n\r\n    prepare();\r\n\r\n    return () => {\r\n      if (notificationListener.current) {\r\n        Notifications.removeNotificationSubscription(\r\n          notificationListener.current\r\n        );\r\n      }\r\n\r\n      if (responseListener.current) {\r\n        Notifications.removeNotificationSubscription(responseListener.current);\r\n      }\r\n    };\r\n  }, [userKey]);\r\n\r\n  useEffect(() => {\r\n    if (useDeviceColorScheme) {\r\n      dispatch(deviceDarkModeSet(colorScheme === 'dark'));\r\n    }\r\n  }, [colorScheme]);\r\n\r\n  useEffect(() => {\r\n    dispatch(mobileSiteSet(windowWidth < 768));\r\n  }, [windowWidth]);\r\n\r\n  const checkForUpdates = async () => {\r\n    try {\r\n      // Check for current version\r\n      const currentVersion = Constants.manifest2.extra.expoClient.version;\r\n\r\n      const res = await getCurrentVersion().unwrap();\r\n      const currentFrontEndVersion =\r\n        res?.currentFrontEndVersion.currentFrontEndVersion;\r\n\r\n      if (\r\n        Platform.OS !== 'web' &&\r\n        versionCompare(currentFrontEndVersion, currentVersion) > 0\r\n      ) {\r\n        Alert.alert('There is a new version available!', '', [\r\n          {\r\n            text:\r\n              Platform.OS === 'android'\r\n                ? 'Update on the Play Store'\r\n                : 'Update on the App Store',\r\n            onPress: () =>\r\n              Linking.openURL(\r\n                Platform.OS === 'android'\r\n                  ? 'market://details?id=com.theathenanetwork.app'\r\n                  : 'https://apps.apple.com/us/app/athena-network/id1628317342'\r\n              ),\r\n          },\r\n          {\r\n            text: 'Cancel',\r\n            style: 'cancel',\r\n          },\r\n        ]);\r\n      }\r\n    } catch (e) {\r\n      console.warn('Update check failed', e);\r\n    }\r\n  };\r\n\r\n  if (!isReady) {\r\n    if (Platform.OS === 'web') {\r\n      return <WebSplashScreen />;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <NavigationContainer\r\n      documentTitle={{\r\n        formatter: (options, route) =>\r\n          `${options?.title ?? route?.name} - Athena Network`,\r\n      }}\r\n      theme={darkMode ? DarkTheme : DefaultTheme}>\r\n      <ApplicationProvider\r\n        {...eva}\r\n        theme={{ ...(darkMode ? eva.dark : eva.light), ...Theme }}>\r\n        <StatusBar style={darkMode ? 'light' : 'dark'} />\r\n        <IconRegistry icons={[FontAwesomeIconsPack, FeatherIconsPack]} />\r\n\r\n        <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n          {userDataCache && !isError ? (\r\n            <Stack.Screen name=\"Tabs\" component={TabsPage} />\r\n          ) : (\r\n            <Stack.Screen name=\"Auth\" component={Auth} />\r\n          )}\r\n        </Stack.Navigator>\r\n      </ApplicationProvider>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nconst TabsPage = () => {\r\n  const theme = useTheme();\r\n  const userKey = useAppSelector(selectUserKey);\r\n  const { data: userData } = useGetUserInfoQuery(userKey, {\r\n    skip: !userKey,\r\n  });\r\n  const [isDev] = useState(__DEV__ ? true : false);\r\n\r\n  return (\r\n    <Tab.Navigator\r\n      initialRouteName={'Discover'}\r\n      screenOptions={({ route }) => ({\r\n        // detachInactiveScreens: false,\r\n        // unmountOnBlur: false,\r\n        tabBarHideOnKeyboard: Platform.OS === 'android',\r\n        tabBarIcon: ({ focused }) => {\r\n          // Create type for icon name\r\n          type IoniconsIconName = React.ComponentProps<typeof Ionicons>['name'];\r\n          let iconName: IoniconsIconName = 'ios-home';\r\n\r\n          if (route.name === 'ClassPages') {\r\n            iconName = focused ? 'book' : 'book-outline';\r\n          } else if (route.name === 'Discover') {\r\n            iconName = focused ? 'compass' : 'compass-outline';\r\n          } else if (route.name === 'Calendar') {\r\n            iconName = focused ? 'calendar' : 'calendar-outline';\r\n          } else if (route.name === 'ChatsRoomNavigation') {\r\n            iconName = focused ? 'chatbubbles' : 'chatbubbles-outline';\r\n          }\r\n\r\n          return (\r\n            <Ionicons\r\n              name={iconName}\r\n              size={25}\r\n              color={\r\n                focused ? theme['color-primary-500'] : theme['color-basic-500']\r\n              }\r\n            />\r\n          );\r\n        },\r\n        tabBarStyle: { paddingTop: 5 },\r\n        tabBarItemStyle: {},\r\n        headerShown: false,\r\n      })}>\r\n      <Tab.Screen\r\n        name=\"ClassPages\"\r\n        component={ClassPages}\r\n        options={{\r\n          unmountOnBlur: true,\r\n          tabBarLabel: () => (\r\n            <Text\r\n              style={{\r\n                margin: Platform.OS === 'web' ? 15 : undefined,\r\n                fontSize: 12,\r\n              }}>\r\n              Class Pages\r\n            </Text>\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Calendar\"\r\n        component={Calendar}\r\n        options={{\r\n          unmountOnBlur: true,\r\n          tabBarLabel: () => (\r\n            <Text\r\n              style={{\r\n                margin: Platform.OS === 'web' ? 15 : undefined,\r\n                fontSize: 12,\r\n              }}>\r\n              Calendar\r\n            </Text>\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"ChatsRoomNavigation\"\r\n        component={ChatsRoomNavigation}\r\n        options={{\r\n          tabBarItemStyle: { display: Platform.OS === 'web' ? 'none' : 'flex' },\r\n          unmountOnBlur: true,\r\n          tabBarLabel: () => (\r\n            <Text\r\n              style={{\r\n                margin: Platform.OS === 'web' ? 15 : undefined,\r\n                fontSize: 12,\r\n              }}>\r\n              Chats\r\n            </Text>\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Discover\"\r\n        component={Discover}\r\n        options={{\r\n          unmountOnBlur: false,\r\n          tabBarLabel: () => (\r\n            <Text\r\n              style={{\r\n                margin: Platform.OS === 'web' ? 15 : undefined,\r\n                fontSize: 12,\r\n              }}>\r\n              Discover\r\n            </Text>\r\n          ),\r\n        }}\r\n      />\r\n      {userData?.permissionLevel === 'admin' && (\r\n        <Tab.Screen\r\n          name=\"Admin\"\r\n          component={AdminPanel}\r\n          options={{\r\n            unmountOnBlur: false,\r\n            tabBarLabel: () => (\r\n              <Text\r\n                style={{\r\n                  margin: Platform.OS === 'web' ? 15 : undefined,\r\n                  fontSize: 12,\r\n                }}>\r\n                Admin\r\n              </Text>\r\n            ),\r\n          }}\r\n        />\r\n      )}\r\n    </Tab.Navigator>\r\n  );\r\n};\r\n","import { registerRootComponent } from 'expo';\r\n\r\nimport App from './App';\r\n\r\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\r\n// It also ensures that whether you load the app in Expo Go or in a native build,\r\n// the environment is set up appropriately\r\nregisterRootComponent(App);\r\n"],"sourceRoot":""}