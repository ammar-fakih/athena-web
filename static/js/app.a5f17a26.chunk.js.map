{"version":3,"sources":["assets/logos/app-logo-transparent.png","assets/sponsorPage/coupon.png","assets/sponsorPage/become-sponsor.png","assets/logos/owl-white-text.png","assets/logos/owl-black-text.png","node_modules/moment/locale sync /^/.//.*$","assets/logos/splash-logo.png","assets/logos/app-logo.png","src/app/appDataSlice.ts","src/features/api/apiSlice.ts","src/features/api/usersApi.ts","src/features/api/classPagesApi.ts","src/features/classPages/classPagesSlice.ts","src/features/discover/discoverSlice.ts","src/features/calendar/calendarSlice.ts","src/app/SecureStorage.ts","src/app/storage.ts","src/app/store.ts","src/app/hooks.ts","src/features/authentication/ForgotPassword/EnterCodePage.tsx","src/features/authentication/ForgotPassword/EnterEmailPage.tsx","src/features/authentication/ForgotPassword/index.tsx","src/features/authentication/Login.tsx","src/components/BackButton.tsx","src/constants/admin.ts","src/features/authentication/Signup/SignupForm.tsx","src/features/authentication/Signup/VerifyEmail.tsx","src/features/authentication/Signup/index.tsx","src/features/authentication/index.tsx","src/components/Header.tsx","src/constants/discover.ts","src/features/api/discoverApi.ts","src/features/discover/BottomBar.tsx","src/components/withPreventDoubleClick.tsx","src/features/discover/Cards/TextCard.tsx","src/components/DoubleTap.tsx","src/components/DoubleTapHeart.tsx","src/functions.ts","src/features/discover/ImageComponent.tsx","src/features/discover/Cards/ImageCard.tsx","src/features/discover/Cards/SponsorCard.tsx","src/features/discover/EventBody.tsx","src/features/discover/Cards/EventCard.tsx","src/features/discover/PostsList.tsx","src/components/DisabledOptionModal.tsx","src/features/discover/SinglePost/Comment.tsx","src/features/discover/SinglePost/SinglePostBody.tsx","src/components/FullPageSpinner.tsx","src/features/discover/SinglePost/SinglePostPage.tsx","src/features/discover/CreatePost/CreateImagePost.tsx","src/components/WrapItems.tsx","src/features/discover/CreatePost/CreateEventPost.tsx","src/features/discover/CreatePost/CreatePost.tsx","src/components/SearchBar.tsx","src/features/discover/SearchPage.tsx","src/components/Menu.tsx","src/features/api/sponsorsApi.ts","src/features/sponsors/SponsorsList.tsx","src/features/discover/index.tsx","src/features/calendar/CreateCustomEvent.tsx","src/features/calendar/CalendarFunctions.ts","src/features/calendar/customEvent.tsx","src/features/calendar/ScheduledItem.tsx","src/components/ModalContainer.tsx","src/features/notifications/constants.tsx","src/components/UserNameSelectionDropDown.tsx","src/features/classPages/SingleClassPage/exportModalClass.tsx","src/constants/map.ts","src/features/classPages/SingleClassPage/InfoPage.tsx","src/constants/classPages.ts","src/features/classPages/SingleClassPage/PostReview.tsx","src/features/classPages/SingleClassPage/index.tsx","src/components/Message.tsx","src/features/classPages/ClassListItemItem.tsx","src/features/classPages/ClassListItem.tsx","src/features/classPages/AddedClasses.tsx","src/features/classPages/FilterClasses.tsx","src/features/classPages/ClassesList.tsx","src/features/calendar/CalendarPage.tsx","src/features/calendar/exportModal.tsx","src/features/classPages/SelectTerm.tsx","src/features/calendar/index.tsx","src/features/settings/EditUser.tsx","src/features/settings/SettingsPage.tsx","src/features/settings/index.tsx","src/features/notifications/notificationSinglePage.tsx","src/features/notifications/Notifications.tsx","src/constants/electiveGenerator.ts","src/features/classPages/ElectiveGenerator/index.tsx","src/features/classPages/index.tsx","src/theme/custom-theme.ts","src/theme/font-awesome-icons.tsx","src/theme/feather-icons.tsx","src/features/adminPanel/adminPanel.tsx","src/features/adminPanel/index.tsx","src/components/WebSplashScreen.tsx","src/features/chats/singleChatPage/SingleChatRoom.native.tsx","src/features/chats/ChatRooms.tsx","App.tsx","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","initialState","userKey","isGuest","isMobile","darkMode","useDeviceColorScheme","appDataSlice","createSlice","name","reducers","reset","userKeyUpdated","state","action","payload","setIsGuest","deviceDarkModeSet","useDeviceColorSchemeSet","deleteAllAppData","mobileSiteSet","extraReducers","selectDarkMode","appData","secure","selectUserKey","selectIsGuest","actions","apiSlice","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getCurrentVersion","query","useLazyGetCurrentVersionQuery","usersApiSlice","injectEndpoints","overrideExisting","getUserInfo","providesTags","url","headers","transformErrorResponse","response","status","error","transformResponse","classes","rest","addedClasses","length","courseCode","courseTerm","school","split","masterCourseCode","slice","join","push","console","warn","login","mutation","userName","password","params","trackLogin","method","responseHandler","text","deleteAccount","editUser","invalidatesTags","body","fields","getCollegeList","signupUser","verifySignup","resetPassword","email","addExpoPushToken","expoPushToken","useTrackLoginMutation","useGetUserInfoQuery","useLazyGetUserInfoQuery","useLoginMutation","useDeleteAccountMutation","useEditUserMutation","useGetCollegeListQuery","useSignupUserMutation","useVerifySignupMutation","useResetPasswordMutation","useAddExpoPushTokenMutation","classPagesApi","getAllClasses","pageNumber","collegeName","getRatingFromReviews","reviews","totalAverage","counter","review","rating","toFixed","getDifficultyFromReviews","difficulty","fromEntries","entries","key","value","sort","getCurrentSection","currentTerm","getAllSections","addClass","classesToAdd","onQueryStarted","dispatch","queryFulfilled","patchResult","util","updateQueryData","draft","undo","removeClass","classesToRemove","filter","classCode","isAllowedToReview","sendReview","useGetCurrentSectionQuery","useGetAllClassesQuery","useAddClassMutation","useRemoveClassMutation","useIsAllowedToReviewQuery","useSendReviewMutation","useLazyGetAllClassesQuery","useLazyGetAllSectionsQuery","filteredClasses","renderedClasses","currentSection","availableSections","selectedClass","searchTerm","page","isHMC","filters","colleges","HM","CM","PO","PZ","SC","hasSelectedElectiveGen","suggestedClasses","classPagesSlice","currentSectionUpdated","availableSectionsListUpdated","endOfListReached","resetClasses","caseReducers","searchResultsFiltered","suggestedClassesUpdated","suggestedClassesDimissed","electiveGeneratorSelected","classSelected","selectedClassCleared","filtersSaved","isHMCUpdated","filtersReset","newResultsArray","collegeAbr","substring","college","isCollegeFiltered","searchTermUpdated","matchDepartmentName","searchCourseCode","findSearchTermShortcuts","searchTerms","courseName","times","filterBySearchTerm","newResultsObject","addMatcher","matchFulfilled","searchPhrase","replace","match","p1","p2","p3","p4","p5","padStart","coursePhrase","professorName","trim","includes","toUpperCase","selectClassesList","classPages","submittedSearchTerm","tag","recentSearches","discoverSlice","searchTermSubmitted","unshift","searchTermChanged","recentSearchTermSelected","tagSelected","recentSearchTermRemoved","term","selectSearchTerm","discover","selectSubmittedSearchTerm","selectTag","selectRecentSearches","isThreeDay","calendarSlice","isThreeDaySet","defaultReplacer","replaceCharacter","SecureStorage","options","replacer","getItem","SecureStore","setItem","removeItem","createSecureStorage","securePersistConfig","storage","Platform","OS","AsyncStorage","cpPersistConfig","ExpoFileSystemStorage","whitelist","discoverPersistConfig","rootReducer","combineReducers","persistReducer","classPagesReducer","appDataReducer","discoverReducer","calendar","calendarReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","immutableCheck","concat","useAppDispatch","useDispatch","useAppSelector","useSelector","EnterCodePage","navigation","style","flex","alignItems","justifyContent","margin","category","onPress","index","routes","EnterEmailPage","useState","setEmail","inputRef","useRef","isLoading","isError","netInfo","useNetInfo","useEffect","current","focus","onSubmit","isConnected","unwrap","navigate","alert","paddingTop","autoCapitalize","placeholder","ref","onChangeText","onSubmitEditing","Keyboard","dismiss","color","disabled","accessoryRight","Stack","createNativeStackNavigator","ForgotPassword","Navigator","screenOptions","headerShown","Screen","component","DarkModeLogo","require","LightModeLogo","Login","setUserName","setPassword","loginError","setLoginError","passwordRef","React","handleLogin","NetInfo","fetch","allSections","availableTerms","then","guestLogin","TouchableWithoutFeedback","KeyboardAvoidingView","styles","container","behavior","Image","source","logo","inputView","autoComplete","TextInput","placeholderTextColor","keyboardType","blurOnSubmit","secureTextEntry","TouchableOpacity","forgot_button","position","backgroundColor","loginBtn","width","borderRadius","height","marginTop","maxWidth","level","signupBtn","StyleSheet","create","title","fontSize","fontWeight","textAlign","image","marginBottom","flexDirection","marginLeft","marginRight","borderColor","borderWidth","guestButton","alignSelf","BackButton","props","HeaderBackButton","goBack","label","labelVisible","base_URL","Signup","Manager","randomizationFactor","addTrailingSlash","autoConnect","realFirstName","setRealFirstName","realLastName","setRealLastName","major","setMajor","IndexPath","selectedIndex","setSelectedIndex","simplifiedSignup","setSimplifiedSignUp","humanReadableCollegeName","userCollege","setUserCollege","collegeList","data","signupLoading","firstNameInputRef","lastNameInputRef","passwordInputRef","majorInputRef","handleSubmitButton","validateInput","log","JSON","stringify","ok","json","message","responseUnwrapped","SectionStyle","labelSection","inputStyle","underlineColorAndroid","defaultValue","returnKeyType","containerDrop","onFocus","onSelect","newObject","row","ScrollView","zIndex","top","left","paddingVertical","paddingHorizontal","checked","onChange","nextChecked","buttonStyle","buttonTextStyle","paddingLeft","paddingRight","errorTextStyle","successTextStyle","padding","input","button","buttonText","minHeight","minWidth","VerifyEmail","verificationCode","setVerificationCode","verifyCode","getUserInfoLoading","handleVerifyCodeButton","description","theme","useTheme","headerStyle","headerLeft","SignupForm","Auth","Header","accessoryLeft","center","Constants","statusBarHeight","tagIndices","adminTagIndices","postOptions","EMOJI_LIST","postsAdapter","createEntityAdapter","selectId","post","_id","tranformComments","comments","comment","numLikes","likes","hasLiked","discoverApiSlice","getDiscoverPosts","keepUnusedDataFor","sponsor","pageLength","_","addMany","getInitialState","hasMorePages","ids","postsSelectors","selectAll","createDiscoverPost","type","content","tags","emoji","postBody","pinned","newPost","addOne","deleteDiscoverPost","searchPatchResult","removeOne","getPostById","postId","updatedPost","updateFunction","updateOne","changes","likePost","postAuthor","selectById","addComment","initiate","likeComment","commentId","deleteComment","getSelectors","useLazyGetDiscoverPostsQuery","useCreateDiscoverPostMutation","useDeleteDiscoverPostMutation","useLikePostMutation","useAddCommentMutation","useLazyGetPostByIdQuery","useLikeCommentMutation","useDeleteCommentMutation","DebounceTouchable","WrappedComponent","time","PreventDoubleClick","debouncedOnPress","debounce","leading","trailing","this","PureComponent","displayName","withPreventDoubleClick","BottomBar","commentIconShown","undefined","searchedTag","userData","useQueryState","selectFromResult","result","onPressLike","flexWrap","FontAwesome","opacity","size","TextCard","pinnedIcon","isUrl","renderTextBody","indexOf","TouchableHighlight","paddingBottom","FontAwesome5","DoubleTap","lastTap","handleDoubleTap","now","Date","delay","onDoubleTap","children","Component","defaultProps","forwardRef","iconStyle","useImperativeHandle","animate","opacityAnim","Animated","Value","scaleAnim","heartRotation","setHeartRotation","Math","floor","random","pickRandomDegree","setValue","parallel","sequence","timing","toValue","duration","useNativeDriver","easing","Easing","bounce","start","View","transform","scale","rotate","getImageUrl","imageId","IMAGE_BUCKET_URL","stringToEmoji","str","dec","i","charCodeAt","showToast","Toast","show","durations","LONG","shadow","FormatTimeRange","end","startDate","endDate","getHours","getMinutes","weekDayNumberToName","0","1","2","3","4","5","6","FormatDate","date","newDate","weekDay","getDay","month","getMonth","day","getDate","windowWidth","Dimensions","get","ImageComponent","apiInfo","likeRef","handlePressLike","uri","maxHeight","resizeMode","DoubleTapHeart","right","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","ImageCard","activeOpacity","SponsorCard","imageLink","setImageLink","hasCoupon","coupons","onError","becomeSponsor","sponsorName","ImageBackground","marginHorizontal","couponDescription","EventBody","link","location","startTime","endTime","contentURL","contentText","contentImage","host","truncated","eventInfo","useMemo","info","EventCard","isAdded","setIsAdded","toggleAdditionOfEvent","isAdd","toTimeString","catch","customEvents","some","customEvent","useIsFocused","PostsList","handleRemoveRecentSearch","handleClickRecentSearch","route","fetchPosts","isFetching","posts","fetchFirstPage","fetchMorePosts","PinIcon","MaterialIcons","renderItem","item","commonProps","isSponsor","sponsorProps","parse","contentUrl","FooterSpinner","keyboardShouldPersistTaps","ListHeaderComponent","fontStyle","Array","from","marginVertical","appearance","pack","LinearGradient","colors","x","y","contentContainerStyle","onRefresh","refreshing","keyExtractor","onEndReachedThreshold","onEndReached","ListFooterComponent","showsVerticalScrollIndicator","ItemSeparatorComponent","Divider","DisabledFieldModal","setShowModal","visible","backdropStyle","myStyles","backdrop","onBackdropPress","Comment","isOwnComment","isExpanded","setIsExpanded","handleLikeComment","handleDeleteComment","onLongPress","Alert","SinglePostBody","handleLikePost","scrollEnabled","multiline","textStyle","RegExp","test","href","FullPageSpinner","SinglePost","showModal","setComment","inputFocused","setInputFocused","refreshPost","refreshPostLoading","addCommentLoading","deletePost","deletePostLoading","handleRefreshPost","handleDeletePost","handleSubmitComment","header","footer","bottom","borderTopWidth","onBlur","CreateImage","discoverPostInputs","setDiscoverPostInputs","TagInput","showTitle","ImagePicker","imagePickerStatus","requestImagePickerPermission","cameraStatus","requestCameraPermission","onPressCamera","granted","mediaTypes","Images","canceled","assets","pickImage","allowsEditing","Title","newText","imagePicker","Feather","WrapItems","childStyle","LayoutProps","Children","child","CreateEvent","setStartTime","setEndTime","setDate","showTimePickerAndroid","setShowTimePickerAndroid","formatDateService","NativeDateService","format","timePickerOptions","setTime","formatAMPM","hours","minutes","ampm","dateService","nextDate","placement","mode","change","AntDesign","OptionalText","CreatePost","permissionLevel","selectedTagIndex","setSelectedTagIndex","selectedPostTypeIndex","setSelectedPostTypeIndex","setError","isEmojiShown","setIsEmojiShown","tagArray","submitEvent","formdata","FormData","append","toISOString","forEach","submitImage","toast","setTimeout","hide","groupedData","multiSelect","SearchBar","inputProps","cancelButtonAction","cancelButtonStatus","alwaysShowCancelButton","selected","setSelected","LayoutAnimation","configureNext","autoCorrect","SearchPage","searchBarBackgroundColor","Menu","menuItems","setMenuItems","showsHorizontalScrollIndicator","horizontal","Text","sponsorsApiSlice","refreshSponsors","sponsors","a","b","textA","textB","find","postSponsorVisit","sponsorId","useLazyRefreshSponsorsQuery","usePostSponsorVisitMutation","SponsorPage","isDarkMode","sponsorPageStyles","address","video","display","subtitle","couponContainer","coupon","imageGallery","imageStyle","headerText","setImageIndex","setIsVisible","canOpenLink","setCanOpenLink","postSponsorVisitQuery","videoLinkArray","videoLink","Linking","canOpenURL","website","funct","phoneNumber","openURL","borderBottomColor","borderBottomWidth","images","img","dayOfTheWeek","buildTimeString","openTime","convertTo12HourTime","closeTime","Number","parseInt","SponsorsList","sponsorFilters","setSponsorFilters","gotSponsors","setGotSponsors","refreshSponsorsQuery","tabNames","temp","findIndex","splice","tempFilters","getFilters","shouldLimitPrint","filterName","sponsorsToSend","getTheSponsors","renderSponsorsBasedOnFilters","listingStyles","cardContainer","final","starredFinal","object","Discover","setSearchTerm","initialParams","onPressIn","headerTitle","animation","CreateCustomEvent","showDots","setShowDots","useNavigation","dateToUse","selectedDate","setSelectedDate","isOneDay","setIsOneDay","allValuesPopulated","setAllValuesPopulated","daysArray","setDaysArray","eventTitle","setEventTitle","skip","daysOfWeek","testID","event","finalArray","littleIndex","finalObject","at","calculateSelectedValues","newSelection","toggleValue","option","renderEachDropItem","CalendarFunctions","string","charIndex","toString","getColor","minuteHeight","allClassData","renderCustomEvent","universalHeight","calendarFun","startHour","startMinute","endHour","endMinute","stringToColour","days","SHORT","removeEvent","cancelable","getMinutesDiff","adjustsFontSizeToFit","numberOfLines","masterClassInfo","meetingTime","handleClassSelected","classLocation","ModalContainer","backDropVisible","setBackDropVisible","backdropOpacity","isVisible","UserNameSelectionDropDown","setHasChosen","setRecipient","names","setNames","users","setUsers","modal","userList","user","realName","userNameContainsString","auser","toLowerCase","firstPar","secondPar","findUserNameFromName","ExportModalClass","classData","showGuestModal","setShowGuestModal","renderModal","recipient","exportClass","recipients","isCourseData","Button","returnValue","locations","removeNumbersAndSpaces","char","withStyles","eva","scrollViewRef","professorReviewsObject","setProfessorReviewsObject","dark","light","isAllowedToReviewRes","getReviewsFromProfessor","lastName","res","courseSchedule","scrollTo","animated","averageGradeMSGModal","schedulePopup","setSchedulePopup","allTheChildren","setAllTheChildren","toggleSchedulePopUp","finalDays","realTime","daysOfTheWeek","addition","daysObject","daysActive","stringArrays","values","generateTable","creditWeightHM","creditWeight","timeSpentOutOfClass","lineHeight","averageGrade","courseDescription","summary","boxed","prerequisites","corequisites","disclaimer","subHeader","section","sectionText","seatsFilled","seatsAvailable","permCount","textDecorationLine","openMap","waypoints","provider","number","zoom","isAllowed","professor","getProfessorReviewsList","courseOpen","courseClosed","details","BodyContainer","borderTopColor","documentStyle","imageLabel","schedule","graphImage","aspectRatio","grade","reviewText","reviewBox","indentedInput","letterSpacing","NEW_REVIEW_FIELDS","mandatory","NewReview","setBody","handleReviewSubmitted","changeValue","theValue","valueToChange","newBody","aspect","inputBig","clearButtonMode","field","hasChosen","renderDropDown","alignContent","renderFilterParameters","renderTheFieldsNecessary","SingleClassPage","bottomSheetRef","InfoPage","PostReview","Message","ClassListItemItem","handleAddClass","handleRemoveClass","added","selectedAnim","dropDownItem","isAvailable","notAvailable","spring","speed","list__container","addedClassesContainer","borderTopRightRadius","borderBottomRightRadius","borderRightWidth","buttonContainer","dropDown","loadingMessage","loadingMessageRefresh","Item","menuOpen","setIsMenuOpen","inItem","property","update","springDamping","UIManager","setLayoutAnimationEnabledExperimental","addClassButton","AddedClasses","FlatList","ListEmptyComponent","Entypo","FilterClasses","setFiltersMenuVisible","initialFilters","setColleges","onChangeIsHMC","onChangeFilterCollege","CurrentTermLabel","ClassesList","setMenuOpen","addedClassesVisible","setAddedClassesVisible","filtersMenuVisible","listRef","setListRef","fetchUserInfo","getClasses","classListLoading","userInfoSuccess","isSuccess","fetchClasses","handleRefresh","snapToIndex","courseInfo","Presets","easeInEaseOut","onScroll","scrollEventThrottle","maxToRenderPerBatch","initialNumToRender","refreshControl","RefreshControl","tintColor","titleColor","scrollToOffset","offset","filteredColleges","c","renderFilteredCollegesList","CalendarPage","isWeb","threeDayWidth","fiveDayWidth","renderCustomEvents","elem","finalRender","eventIsThisDay","showThisWeek","dayString","dayOfWeek","adjustDays","getMs","seconds","dateOfEvent","currentDate","currentDayOfWeek","startOfWeek","valueOf","getSeconds","endOfWeek","renderDashes","renderClasses","getFullClassData","data2","topBar","startingOffset","snapToInterval","contentOffset","bounces","decelerationRate","nativeEvent","onMomentumScrollBegin","LogBox","ignoreAllLogs","exportSchedule","convert","isSchedule","SelectTerm","userDataCache","startIndexValue","selectedSectionIndex","setSelectedSectionIndex","Calendar","leftComponent","MaterialCommunityIcons","rightComponent","trackBar","activeBackgroundColor","inActiveBackgroundColor","thumbButton","activeColor","inActiveColor","bool","gestureDirection","EditProfileHeader","saveChanges","EditUser","inputs","profileDescription","propOptions","linkedin","setFields","changedFields","err","SettingsPage","colorScheme","useColorScheme","logOut","resetClassPages","resetDiscover","resetAppData","resetApiState","handleDeleteAccount","handleUseDeviceSettingToggled","handleDarkModeToggled","manifest2","extra","expoClient","version","Settings","Group","presentation","NotificationHomePage","NotificationsNavigation","notifications","setNotifications","isOpen","setIsOpen","refreshNotifications","bodyTosend","createNotificationButton","newUsers","getDateText","spaceIndex","first","initialRouteName","navigationHeader","setRefreshing","isMoving","setIsMoving","useCallback","newNotifications","not","redirect","notification","disableRightSwipe","onSwipeValueChange","handleOnLeftSwipe","creationDate","listToRemove","jsonSchedule","thereIsAtLeastOne","courseSimpleData","repliable","done","setDone","tempBody","SafeAreaView","renderInputFields","sendNotification","course","timeButton","timeText","actualTimeText","timeStyle","borderLeftColor","departments","containerForNotifications","ElectiveGenerator","departmentQuery","setDepartmentQuery","departmentOptions","setDepartmentOptions","setDescription","getClassesByDepartment","department","onChangeDepartmentText","getWords","wordList","wordListWithSynonyms","word","synonyms","cleanedDescription","classesByDepartment","aWords","bWords","aMatches","matches","SearchClasses","hasSelectedElectiveGenerator","numberOfNotifications","setNumberOfNotifications","setInterval","Foundation","Ionicons","FontAwesomeIconsPack","icons","Proxy","target","IconProvider","toReactElement","flatten","FontAwesomeIcon","FeatherIconsPack","FeatherIcon","AdminHomePage","AdminHomeNavigation","adminCommands","setAdminCommands","getAdminCommands","adminURL","commands","filterObject","currentAdminCommandsStatus","finalCommandList","command","AdminCommand","setInfo","isFileUpload","setIsFileUpload","fileUploads","setFileUploads","setSponsors","setStatus","allFieldsFilled","setAllFieldsFilled","buttonPushed","setButtonPushed","checkForFieldsFilled","imageName","sendApiData","additionToUrl","paramOverride","apiType","newUrl","text2","trueFalseTemplate","boolValues","displayValue","changeEverything","renderStringArray","valuesToSend","tempFinal","miniField","newFieldForBody","changeStringValue","stringArray","eachOne","renderMultiSelectDropDown","isArray","cancelled","fileUploadTemplate","graphData","timeFrame","informationToShow","isDateGraph","dataToShow","labels","getDates","datasets","getData","verticalLabelRotation","fromZero","xLabelsOffset","segments","chartConfig","decimalPlaces","labelColor","propsForDots","r","strokeWidth","stroke","oneElement","renderOneCard","flexShrink","moment","tz","subtract","usersToday","instance","weekStart","weekEnd","usersMonth","monthStart","monthEnd","add","cardInfo","finalText","renderedActions","renderButtonForCard","parameter","showResponseData","imagesContainer","imageContainer","AdminStack","AdminPanel","WebSplashScreen","SingleChatRoom","setFilter","showSearch","setShowSearch","photoSelected","setPhotoSelected","keyboardShown","setKeyboardShown","retryNumber","setRetryNumber","failedConnection","setFailedConnection","hardDisableSend","setHardDisableSend","setMessage","filteredMessageList","setFilteredMessageList","loaded","setLoaded","messageList","setMessageList","socket","io","auth","addMessage","messageToAdd","myMessage","mess","isEqualTo","isUnsent","message1","message2","newMessage","emit","isImage","photo","deletionAlert","messageToDelete","positions","CENTER","deleteTheMessage","ignoreLogs","showListener","addListener","hideListener","remove","setOptions","headerRight","connect","timer","off","disconnect","close","on","clearTimeout","array","msg","windowHeight","messagingScreen","reverse","inverted","messagingInputContainer","messagingInput","editable","messagingButtonContainer","ChatRoomsNavigator","ChatsRoomNavigation","Chats","availableChats","setAvailableChats","generateChatRooms","chats","lastModifiedDate","refreshAvailableChats","persistor","persistStore","Tab","createBottomTabNavigator","prefix","ExpoSplashScreen","Notifications","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","registerForPushNotificationsAsync","token","isDevice","existingStatus","finalStatus","importance","MAX","vibrationPattern","lightColor","App","localCurrentSection","isReady","setIsReady","setNotification","notificationListener","responseListener","linking","prefixes","prepare","fetchedCurrentSection","fetchedUserData","checkForUpdates","currentVersion","currentFrontEndVersion","v1","v2","lexicographical","zeroExtend","v1parts","v2parts","isValidPart","every","NaN","versionCompare","NavigationContainer","documentTitle","formatter","DarkTheme","DefaultTheme","fallback","Theme","StatusBar","TabsPage","tabBarHideOnKeyboard","tabBarIcon","focused","iconName","tabBarStyle","tabBarItemStyle","ClassPages","unmountOnBlur","tabBarLabel","registerRootComponent"],"mappings":"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a,OAAQ,SAKlDC,GAAa,CACxB,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,SACA,qBACA,qBACA,qBACA,qBACA,qBACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,eACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,eACA,eACA,eACA,qEACA,qEACA,qEACA,eACA,mDACA,mDACA,mDACA,eACA,mDACA,mDACA,qEACA,qEACA,qEACA,mDACA,mDACA,qEACA,qEACA,qEACA,mDACA,mDACA,qEACA,qEACA,qEACA,eACA,eACA,eACA,eACA,eACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,SACA,qBACA,qBACA,qBACA,qBACA,qBACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,SACA,qBACA,qBACA,qBACA,qBACA,qBACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,SACA,qBACA,qBACA,qBACA,qBACA,qBACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,SACA,qBACA,qBACA,qBACA,qBACA,qBACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,SACA,qBACA,qBACA,qBACA,qBACA,qBACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,eACA,eACA,iCACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,SACA,eACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,eACA,eACA,eACA,SACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,SACA,SACA,SACA,SACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,SACA,eACA,eACA,SACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,SACA,SACA,eACA,SACA,eACA,eACA,eACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,eACA,eACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,eACA,eACA,eACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,eACA,SACA,eACA,SACA,SACA,SACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,SACA,eACA,eACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,OACA,OACA,SACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,eACA,eACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eqkBCnxDF,IAAMC,GAAeC,8BAAkC,CACrDC,SAAU,SAACC,GAAkB,OAAKA,EAAKC,OAKnCC,GAAmB,SAACC,EAAUrZ,GAAQ,OAC1CqZ,EAASre,KAAI,SAACse,GAAO,gBAChBA,GAAO,IACVC,SAAUD,EAAQE,MAAMra,OACxBsa,SAAUH,EAAQE,MAAMjR,SAASvI,SAGxB0Z,GAAmBlc,EAASa,gBAAgB,CACvDC,kBAAkB,EAClBP,UAAW,SAACC,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","file":"static/js/app.a5f17a26.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/app-logo-transparent.1ede614a.png\";","module.exports = __webpack_public_path__ + \"static/media/coupon.84c88381.png\";","module.exports = __webpack_public_path__ + \"static/media/become-sponsor.513cb6e7.png\";","module.exports = __webpack_public_path__ + \"static/media/owl-white-text.9861cc3f.png\";","module.exports = __webpack_public_path__ + \"static/media/owl-black-text.6f7231df.png\";","var map = {\n\t\"./af\": 390,\n\t\"./af.js\": 390,\n\t\"./ar\": 391,\n\t\"./ar-dz\": 392,\n\t\"./ar-dz.js\": 392,\n\t\"./ar-kw\": 393,\n\t\"./ar-kw.js\": 393,\n\t\"./ar-ly\": 394,\n\t\"./ar-ly.js\": 394,\n\t\"./ar-ma\": 395,\n\t\"./ar-ma.js\": 395,\n\t\"./ar-sa\": 396,\n\t\"./ar-sa.js\": 396,\n\t\"./ar-tn\": 397,\n\t\"./ar-tn.js\": 397,\n\t\"./ar.js\": 391,\n\t\"./az\": 398,\n\t\"./az.js\": 398,\n\t\"./be\": 399,\n\t\"./be.js\": 399,\n\t\"./bg\": 400,\n\t\"./bg.js\": 400,\n\t\"./bm\": 401,\n\t\"./bm.js\": 401,\n\t\"./bn\": 402,\n\t\"./bn-bd\": 403,\n\t\"./bn-bd.js\": 403,\n\t\"./bn.js\": 402,\n\t\"./bo\": 404,\n\t\"./bo.js\": 404,\n\t\"./br\": 405,\n\t\"./br.js\": 405,\n\t\"./bs\": 406,\n\t\"./bs.js\": 406,\n\t\"./ca\": 407,\n\t\"./ca.js\": 407,\n\t\"./cs\": 408,\n\t\"./cs.js\": 408,\n\t\"./cv\": 409,\n\t\"./cv.js\": 409,\n\t\"./cy\": 410,\n\t\"./cy.js\": 410,\n\t\"./da\": 411,\n\t\"./da.js\": 411,\n\t\"./de\": 412,\n\t\"./de-at\": 413,\n\t\"./de-at.js\": 413,\n\t\"./de-ch\": 414,\n\t\"./de-ch.js\": 414,\n\t\"./de.js\": 412,\n\t\"./dv\": 415,\n\t\"./dv.js\": 415,\n\t\"./el\": 416,\n\t\"./el.js\": 416,\n\t\"./en-au\": 417,\n\t\"./en-au.js\": 417,\n\t\"./en-ca\": 418,\n\t\"./en-ca.js\": 418,\n\t\"./en-gb\": 419,\n\t\"./en-gb.js\": 419,\n\t\"./en-ie\": 420,\n\t\"./en-ie.js\": 420,\n\t\"./en-il\": 421,\n\t\"./en-il.js\": 421,\n\t\"./en-in\": 422,\n\t\"./en-in.js\": 422,\n\t\"./en-nz\": 423,\n\t\"./en-nz.js\": 423,\n\t\"./en-sg\": 424,\n\t\"./en-sg.js\": 424,\n\t\"./eo\": 425,\n\t\"./eo.js\": 425,\n\t\"./es\": 426,\n\t\"./es-do\": 427,\n\t\"./es-do.js\": 427,\n\t\"./es-mx\": 428,\n\t\"./es-mx.js\": 428,\n\t\"./es-us\": 429,\n\t\"./es-us.js\": 429,\n\t\"./es.js\": 426,\n\t\"./et\": 430,\n\t\"./et.js\": 430,\n\t\"./eu\": 431,\n\t\"./eu.js\": 431,\n\t\"./fa\": 432,\n\t\"./fa.js\": 432,\n\t\"./fi\": 433,\n\t\"./fi.js\": 433,\n\t\"./fil\": 434,\n\t\"./fil.js\": 434,\n\t\"./fo\": 435,\n\t\"./fo.js\": 435,\n\t\"./fr\": 436,\n\t\"./fr-ca\": 437,\n\t\"./fr-ca.js\": 437,\n\t\"./fr-ch\": 438,\n\t\"./fr-ch.js\": 438,\n\t\"./fr.js\": 436,\n\t\"./fy\": 439,\n\t\"./fy.js\": 439,\n\t\"./ga\": 440,\n\t\"./ga.js\": 440,\n\t\"./gd\": 441,\n\t\"./gd.js\": 441,\n\t\"./gl\": 442,\n\t\"./gl.js\": 442,\n\t\"./gom-deva\": 443,\n\t\"./gom-deva.js\": 443,\n\t\"./gom-latn\": 444,\n\t\"./gom-latn.js\": 444,\n\t\"./gu\": 445,\n\t\"./gu.js\": 445,\n\t\"./he\": 446,\n\t\"./he.js\": 446,\n\t\"./hi\": 447,\n\t\"./hi.js\": 447,\n\t\"./hr\": 448,\n\t\"./hr.js\": 448,\n\t\"./hu\": 449,\n\t\"./hu.js\": 449,\n\t\"./hy-am\": 450,\n\t\"./hy-am.js\": 450,\n\t\"./id\": 451,\n\t\"./id.js\": 451,\n\t\"./is\": 452,\n\t\"./is.js\": 452,\n\t\"./it\": 453,\n\t\"./it-ch\": 454,\n\t\"./it-ch.js\": 454,\n\t\"./it.js\": 453,\n\t\"./ja\": 455,\n\t\"./ja.js\": 455,\n\t\"./jv\": 456,\n\t\"./jv.js\": 456,\n\t\"./ka\": 457,\n\t\"./ka.js\": 457,\n\t\"./kk\": 458,\n\t\"./kk.js\": 458,\n\t\"./km\": 459,\n\t\"./km.js\": 459,\n\t\"./kn\": 460,\n\t\"./kn.js\": 460,\n\t\"./ko\": 461,\n\t\"./ko.js\": 461,\n\t\"./ku\": 462,\n\t\"./ku.js\": 462,\n\t\"./ky\": 463,\n\t\"./ky.js\": 463,\n\t\"./lb\": 464,\n\t\"./lb.js\": 464,\n\t\"./lo\": 465,\n\t\"./lo.js\": 465,\n\t\"./lt\": 466,\n\t\"./lt.js\": 466,\n\t\"./lv\": 467,\n\t\"./lv.js\": 467,\n\t\"./me\": 468,\n\t\"./me.js\": 468,\n\t\"./mi\": 469,\n\t\"./mi.js\": 469,\n\t\"./mk\": 470,\n\t\"./mk.js\": 470,\n\t\"./ml\": 471,\n\t\"./ml.js\": 471,\n\t\"./mn\": 472,\n\t\"./mn.js\": 472,\n\t\"./mr\": 473,\n\t\"./mr.js\": 473,\n\t\"./ms\": 474,\n\t\"./ms-my\": 475,\n\t\"./ms-my.js\": 475,\n\t\"./ms.js\": 474,\n\t\"./mt\": 476,\n\t\"./mt.js\": 476,\n\t\"./my\": 477,\n\t\"./my.js\": 477,\n\t\"./nb\": 478,\n\t\"./nb.js\": 478,\n\t\"./ne\": 479,\n\t\"./ne.js\": 479,\n\t\"./nl\": 480,\n\t\"./nl-be\": 481,\n\t\"./nl-be.js\": 481,\n\t\"./nl.js\": 480,\n\t\"./nn\": 482,\n\t\"./nn.js\": 482,\n\t\"./oc-lnc\": 483,\n\t\"./oc-lnc.js\": 483,\n\t\"./pa-in\": 484,\n\t\"./pa-in.js\": 484,\n\t\"./pl\": 485,\n\t\"./pl.js\": 485,\n\t\"./pt\": 486,\n\t\"./pt-br\": 487,\n\t\"./pt-br.js\": 487,\n\t\"./pt.js\": 486,\n\t\"./ro\": 488,\n\t\"./ro.js\": 488,\n\t\"./ru\": 489,\n\t\"./ru.js\": 489,\n\t\"./sd\": 490,\n\t\"./sd.js\": 490,\n\t\"./se\": 491,\n\t\"./se.js\": 491,\n\t\"./si\": 492,\n\t\"./si.js\": 492,\n\t\"./sk\": 493,\n\t\"./sk.js\": 493,\n\t\"./sl\": 494,\n\t\"./sl.js\": 494,\n\t\"./sq\": 495,\n\t\"./sq.js\": 495,\n\t\"./sr\": 496,\n\t\"./sr-cyrl\": 497,\n\t\"./sr-cyrl.js\": 497,\n\t\"./sr.js\": 496,\n\t\"./ss\": 498,\n\t\"./ss.js\": 498,\n\t\"./sv\": 499,\n\t\"./sv.js\": 499,\n\t\"./sw\": 500,\n\t\"./sw.js\": 500,\n\t\"./ta\": 501,\n\t\"./ta.js\": 501,\n\t\"./te\": 502,\n\t\"./te.js\": 502,\n\t\"./tet\": 503,\n\t\"./tet.js\": 503,\n\t\"./tg\": 504,\n\t\"./tg.js\": 504,\n\t\"./th\": 505,\n\t\"./th.js\": 505,\n\t\"./tk\": 506,\n\t\"./tk.js\": 506,\n\t\"./tl-ph\": 507,\n\t\"./tl-ph.js\": 507,\n\t\"./tlh\": 508,\n\t\"./tlh.js\": 508,\n\t\"./tr\": 509,\n\t\"./tr.js\": 509,\n\t\"./tzl\": 510,\n\t\"./tzl.js\": 510,\n\t\"./tzm\": 511,\n\t\"./tzm-latn\": 512,\n\t\"./tzm-latn.js\": 512,\n\t\"./tzm.js\": 511,\n\t\"./ug-cn\": 513,\n\t\"./ug-cn.js\": 513,\n\t\"./uk\": 514,\n\t\"./uk.js\": 514,\n\t\"./ur\": 515,\n\t\"./ur.js\": 515,\n\t\"./uz\": 516,\n\t\"./uz-latn\": 517,\n\t\"./uz-latn.js\": 517,\n\t\"./uz.js\": 516,\n\t\"./vi\": 518,\n\t\"./vi.js\": 518,\n\t\"./x-pseudo\": 519,\n\t\"./x-pseudo.js\": 519,\n\t\"./yo\": 520,\n\t\"./yo.js\": 520,\n\t\"./zh-cn\": 521,\n\t\"./zh-cn.js\": 521,\n\t\"./zh-hk\": 522,\n\t\"./zh-hk.js\": 522,\n\t\"./zh-mo\": 523,\n\t\"./zh-mo.js\": 523,\n\t\"./zh-tw\": 524,\n\t\"./zh-tw.js\": 524\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 851;","module.exports = __webpack_public_path__ + \"static/media/splash-logo.2b1029f0.png\";","module.exports = __webpack_public_path__ + \"static/media/app-logo.f5ec62f5.png\";","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Appearance } from 'react-native';\n\nimport type { RootState } from './store';\n\n// Define a type for the slice state\ninterface AppDataState {\n  userKey: string;\n  isGuest: boolean;\n  isMobile: boolean;\n  darkMode: boolean;\n  useDeviceColorScheme: boolean;\n}\n\n// Define the initial state using that type\nconst initialState: AppDataState = {\n  userKey: '',\n  isGuest: false,\n  isMobile: false,\n  darkMode: false,\n  useDeviceColorScheme: false,\n};\n\nexport const appDataSlice = createSlice({\n  name: 'appData',\n  initialState,\n  reducers: {\n    reset: () => initialState,\n    userKeyUpdated: (state, action: PayloadAction<string>) => {\n      state.userKey = action.payload;\n    },\n    setIsGuest: (state, action: PayloadAction<boolean>) => {\n      state.isGuest = action.payload;\n    },\n    deviceDarkModeSet: (state, action: PayloadAction<boolean>) => {\n      state.darkMode = action.payload;\n    },\n    useDeviceColorSchemeSet: (state, action: PayloadAction<boolean>) => {\n      state.useDeviceColorScheme = action.payload;\n    },\n    deleteAllAppData: (state) => {\n      state.userKey = '';\n      state.isGuest = false;\n      state.darkMode = true;\n    },\n    mobileSiteSet: (state, action: PayloadAction<boolean>) => {\n      state.isMobile = action.payload;\n    },\n  },\n  extraReducers: () => {},\n});\n\n// Selectors\nexport const selectDarkMode = (state: RootState) =>\n  state.appData.secure.darkMode;\n\nexport const selectUserKey = (state: RootState) => state.appData.secure.userKey;\n\nexport const selectIsGuest = (state: RootState) => state.appData.secure.isGuest;\n\nexport const selectMobile = (state: RootState) => state.appData.secure.isMobile;\n\n// Actions\nexport const {\n  userKeyUpdated,\n  setIsGuest,\n  deleteAllAppData,\n  reset,\n  deviceDarkModeSet,\n  useDeviceColorSchemeSet,\n  mobileSiteSet,\n} = appDataSlice.actions;\n\nexport default appDataSlice.reducer;\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport const apiSlice = createApi({\n  reducerPath: 'api',\n  baseQuery: fetchBaseQuery({\n    baseUrl: __DEV__ ? 'https://api.athenaserver.com:5678/api' : 'https://api.athenaserver.com:5678/api',\n  }),\n  tagTypes: ['User', 'Posts'],\n  endpoints: (builder) => ({\n    getCurrentVersion: builder.query<any, void>({\n      query: () => '/randomShit/getCurrentVersion',\n    }),\n  }),\n});\n\nexport const { useLazyGetCurrentVersionQuery } = apiSlice;\n","import { apiSlice } from './apiSlice';\nimport {\n  AddedClasses,\n  CourseTermAddedClasses,\n  UserData,\n} from '../../app/types';\n\nexport const usersApiSlice = apiSlice.injectEndpoints({\n  overrideExisting: true,\n  endpoints: (builder) => ({\n    getUserInfo: builder.query({\n      providesTags: ['User'],\n      query: (userKey: string) => ({\n        url: '/users/me',\n        headers: {\n          userKey,\n        },\n      }),\n      transformErrorResponse: (response) => {\n        if (response.status === 401) {\n          return { error: 'Unauthorized' };\n        }\n        return response;\n      },\n      transformResponse: ({ classes, ...rest }) => {\n        const addedClasses = {\n          length: 0,\n          classes: {} as { [courseTerm: string]: CourseTermAddedClasses },\n        } as AddedClasses;\n\n        try {\n          for (const { courseCode, courseTerm } of classes) {\n            let school = courseCode.split('-');\n            school = school[school.length - 2].split(' ');\n            school = school[school.length - 1];\n            const masterCourseCode =\n              courseCode.split(' ').slice(0, 2).join(' ') + ' ' + school;\n            if (courseTerm in addedClasses.classes) {\n              if (masterCourseCode in addedClasses.classes[courseTerm]) {\n                addedClasses.classes[courseTerm][masterCourseCode].push(\n                  courseCode\n                );\n              } else {\n                addedClasses.classes[courseTerm][masterCourseCode] = [\n                  courseCode,\n                ];\n              }\n            } else {\n              addedClasses.classes[courseTerm] = {\n                [masterCourseCode]: [courseCode],\n              };\n            }\n\n            addedClasses.length++;\n          }\n        } catch (e) {\n          console.warn('Error Adding Classes To State', e);\n        }\n\n        return { addedClasses: addedClasses, ...rest } as UserData;\n      },\n    }),\n    login: builder.mutation({\n      query: ({ userName, password, isGuest }) => ({\n        url: `/users/login`,\n        params: isGuest\n          ? {\n              userName,\n              password,\n              isGuest,\n            }\n          : {\n              userName,\n              password,\n            },\n      }),\n    }),\n    trackLogin: builder.mutation({\n      query: (userKey) => ({\n        url: `/analytics/login/openedApp`,\n        method: 'POST',\n        headers: {\n          userKey: userKey,\n        },\n        responseHandler: (response) => response.text(),\n      }),\n    }),\n    deleteAccount: builder.mutation({\n      query: ({ userKey, userName }) => ({\n        url: '/users',\n        method: 'DELETE',\n        headers: {\n          userKey,\n        },\n        params: {\n          userName,\n        },\n      }),\n    }),\n    editUser: builder.mutation({\n      invalidatesTags: ['User'],\n      query: ({ userKey, userName, fields }) => ({\n        url: '/users/' + userName,\n        method: 'PATCH',\n        headers: {\n          'content-type': 'application/json',\n          userKey,\n        },\n        body: fields,\n      }),\n    }),\n    getCollegeList: builder.query<any, void>({\n      query: () => '/randomShit/getCollegeList',\n    }),\n    signupUser: builder.mutation({\n      query: (body) => ({\n        url: '/users',\n        method: 'POST',\n        body,\n        responseHandler: (response) => response.text(),\n      }),\n    }),\n    verifySignup: builder.mutation({\n      query: (code) => ({\n        url: '/users/verification',\n        method: 'POST',\n        body: { code },\n      }),\n    }),\n    resetPassword: builder.mutation({\n      query: (email) => ({\n        url: '/users/forgotPassword',\n        params: {\n          email,\n        },\n        responseHandler: (response) => response.text(),\n      }),\n    }),\n    addExpoPushToken: builder.mutation({\n      query: ({ userName, expoPushToken, userKey }) => ({\n        url: '/users/addExpoPushKey/' + userName,\n        method: 'PATCH',\n        headers: {\n          userKey,\n        },\n        body: {\n          expoPushToken,\n        },\n      }),\n    }),\n  }),\n});\n\nexport const {\n  useTrackLoginMutation,\n  useGetUserInfoQuery,\n  useLazyGetUserInfoQuery,\n  useLoginMutation,\n  useDeleteAccountMutation,\n  useEditUserMutation,\n  useGetCollegeListQuery,\n  useSignupUserMutation,\n  useVerifySignupMutation,\n  useResetPasswordMutation,\n  useAddExpoPushTokenMutation,\n} = usersApiSlice;\n","import { apiSlice } from './apiSlice';\n\nimport { AllSectionsResponse, Class } from '../../app/types';\nimport { usersApiSlice } from './usersApi';\n\nexport const classPagesApi = apiSlice.injectEndpoints({\n  overrideExisting: true,\n  endpoints: (builder) => ({\n    getAllClasses: builder.query({\n      query: ({ userKey, pageNumber, courseTerm, collegeName }) => ({\n        url: `/classes/masterClassList/` + collegeName,\n        headers: {\n          userKey,\n        },\n        params: {\n          pageNumber: pageNumber,\n          courseTerm: courseTerm,\n        },\n      }),\n      transformResponse: (response: { [masterCourseCode: string]: Class }) => {\n        const getRatingFromReviews = (reviews) => {\n          if (reviews.length === 0) {\n            return null;\n          } else {\n            let totalAverage = 0;\n            let counter = 0;\n            for (const review of reviews) {\n              if (review.rating) {\n                totalAverage += review.rating;\n                counter++;\n              }\n            }\n            if (counter > 0) {\n              return (totalAverage / counter).toFixed(2);\n            } else {\n              return null;\n            }\n          }\n        };\n\n        const getDifficultyFromReviews = (reviews) => {\n          if (reviews.length === 0) {\n            return null;\n          } else {\n            let totalAverage = 0;\n            let counter = 0;\n            for (const review of reviews) {\n              if (review.difficulty) {\n                totalAverage += review.difficulty;\n                counter++;\n              }\n            }\n            if (counter > 0) {\n              return (totalAverage / counter).toFixed(2);\n            } else {\n              return null;\n            }\n          }\n        };\n\n        return Object.fromEntries(\n          Object.entries(response).map(([key, value]) => {\n            return [\n              key,\n              {\n                ...value,\n                reviews: value.reviews.sort(),\n                rating: getRatingFromReviews(value.reviews),\n                difficulty: getDifficultyFromReviews(value.reviews),\n              },\n            ];\n          })\n        );\n      },\n    }),\n    getCurrentSection: builder.query<any, void>({\n      query: () => '/randomShit/currentTerm',\n      transformResponse: (response: { currentTerm: string }) =>\n        response.currentTerm,\n    }),\n    getAllSections: builder.query<AllSectionsResponse, void>({\n      query: () => '/randomShit/getAllTerms',\n    }),\n    addClass: builder.mutation({\n      query: ({ userKey, courseCode, courseTerm, userName }) => ({\n        url: `/users/` + userName,\n        method: 'PATCH',\n        headers: {\n          userKey,\n        },\n        body: {\n          classesToAdd: [{ courseCode, courseTerm }],\n        },\n      }),\n      async onQueryStarted(\n        { userKey, courseCode, masterCourseCode, courseTerm },\n        { dispatch, queryFulfilled }\n      ) {\n        const patchResult = dispatch(\n          usersApiSlice.util.updateQueryData(\n            'getUserInfo',\n            userKey,\n            (draft) => {\n              if (!(courseTerm in draft.addedClasses.classes)) {\n                draft.addedClasses.classes[courseTerm] = {\n                  [masterCourseCode]: [courseCode],\n                };\n              } else if (\n                !(masterCourseCode in draft.addedClasses.classes[courseTerm])\n              ) {\n                draft.addedClasses.classes[courseTerm][masterCourseCode] = [\n                  courseCode,\n                ];\n              } else {\n                draft.addedClasses.classes[courseTerm][masterCourseCode].push(\n                  courseCode\n                );\n              }\n              draft.addedClasses.length++;\n            }\n          )\n        );\n\n        try {\n          await queryFulfilled;\n        } catch {\n          patchResult.undo();\n        }\n      },\n    }),\n    removeClass: builder.mutation({\n      query: ({ userKey, courseCode, courseTerm, userName }) => ({\n        url: `/users/` + userName,\n        method: 'PATCH',\n        headers: {\n          userKey,\n        },\n        body: {\n          classesToRemove: [{ courseCode, courseTerm }],\n        },\n      }),\n      async onQueryStarted(\n        { userKey, courseCode, masterCourseCode, courseTerm },\n        { dispatch, queryFulfilled }\n      ) {\n        const patchResult = dispatch(\n          usersApiSlice.util.updateQueryData(\n            'getUserInfo',\n            userKey,\n            (draft) => {\n              draft.addedClasses.classes[courseTerm][masterCourseCode] =\n                draft.addedClasses.classes[courseTerm][masterCourseCode].filter(\n                  (classCode) => classCode !== courseCode\n                );\n              draft.addedClasses.length--;\n            }\n          )\n        );\n\n        try {\n          await queryFulfilled;\n        } catch {\n          patchResult.undo();\n        }\n      },\n    }),\n    isAllowedToReview: builder.query({\n      query: ({ masterCourseCode, userKey }) => ({\n        url: '/users/isAllowedToReview',\n        method: 'GET',\n        params: {\n          masterCourseCode,\n        },\n        headers: {\n          userKey,\n        },\n      }),\n    }),\n    sendReview: builder.mutation({\n      query: ({ userKey, body }) => ({\n        url: '/classes/userReview',\n        method: 'PATCH',\n        headers: {\n          userKey,\n        },\n        body,\n        responseHandler: (response) => response.text(),\n      }),\n    }),\n  }),\n});\n\nexport const {\n  useGetAllClassesQuery,\n  useGetCurrentSectionQuery,\n  useAddClassMutation,\n  useRemoveClassMutation,\n  useIsAllowedToReviewQuery,\n  useSendReviewMutation,\n  useLazyGetAllClassesQuery,\n  useLazyGetAllSectionsQuery,\n} = classPagesApi;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport type { RootState } from '../../app/store';\nimport { Class, Filters } from '../../app/types';\nimport { classPagesApi } from '../api/classPagesApi';\n\n// Define a type for the slice state\ninterface ClassPagesState {\n  classes: { [masterCourseCode: string]: Class };\n  filteredClasses: { [masterCourseCode: string]: Class };\n  renderedClasses: { [masterCourseCode: string]: Class };\n  currentSection: string;\n  availableSections: string[];\n  searchTerm: string;\n  selectedClass: any;\n  page: number;\n  filters: Filters;\n  isHMC: boolean;\n  hasSelectedElectiveGen: boolean;\n  suggestedClasses: { [masterCourseCode: string]: Class };\n}\n\n// Define the initial state using that type\nconst initialState: ClassPagesState = {\n  classes: {},\n  filteredClasses: {},\n  renderedClasses: {},\n  currentSection: '',\n  availableSections: [],\n  selectedClass: {},\n  searchTerm: '',\n  page: 1,\n  isHMC: false,\n  filters: {\n    colleges: { HM: true, CM: true, PO: true, PZ: true, SC: true },\n  },\n  hasSelectedElectiveGen: false,\n  suggestedClasses: {},\n};\n\nexport const classPagesSlice = createSlice({\n  name: 'classPages',\n  initialState,\n  reducers: {\n    reset: () => initialState,\n    currentSectionUpdated: (state, action: PayloadAction<string>) => {\n      state.currentSection = action.payload;\n    },\n    availableSectionsListUpdated: (state, action: PayloadAction<string[]>) => {\n      state.availableSections = action.payload;\n    },\n    endOfListReached: (state) => {\n      state.page++;\n    },\n    resetClasses: (state) => {\n      state.page = 1;\n      state.searchTerm = '';\n\n      classPagesSlice.caseReducers.searchResultsFiltered(state);\n    },\n    suggestedClassesUpdated: (\n      state,\n      action: PayloadAction<{ [masterCourseCode: string]: Class }>\n    ) => {\n      state.suggestedClasses = action.payload;\n    },\n    suggestedClassesDimissed: (state) => {\n      state.suggestedClasses = {};\n    },\n    electiveGeneratorSelected: (state) => {\n      state.hasSelectedElectiveGen = true;\n    },\n    classSelected: (state, action: PayloadAction<string>) => {\n      state.selectedClass = state.classes[action.payload];\n    },\n    selectedClassCleared: (state) => {\n      state.selectedClass = {};\n    },\n    filtersSaved: (state, action: PayloadAction<Filters>) => {\n      state.filters = action.payload;\n      classPagesSlice.caseReducers.searchResultsFiltered(state);\n    },\n    isHMCUpdated: (state, action: PayloadAction<boolean>) => {\n      state.isHMC = action.payload;\n    },\n    filtersReset: (state) => {\n      state.filters = initialState.filters;\n\n      classPagesSlice.caseReducers.searchResultsFiltered(state);\n    },\n    searchResultsFiltered: (state) => {\n      // Update the renderedClasses object with the new filters\n      let newResultsArray = Object.entries(state.classes);\n\n      newResultsArray = newResultsArray.filter(([masterCourseCode, _]) => {\n        const collegeAbr = masterCourseCode.substring(\n          masterCourseCode.length - 2,\n          masterCourseCode.length\n        );\n\n        for (const [college, isCollegeFiltered] of Object.entries(\n          state.filters.colleges\n        )) {\n          if (collegeAbr === college) {\n            return isCollegeFiltered;\n          }\n        }\n      });\n\n      state.filteredClasses = Object.fromEntries(newResultsArray);\n      state.renderedClasses = { ...state.filteredClasses };\n    },\n    searchTermUpdated: (state, action: PayloadAction<string>) => {\n      let newResultsArray = Object.entries(state.filteredClasses);\n      state.searchTerm = action.payload;\n      state.page = 1;\n\n      if (state.searchTerm === '') {\n        classPagesSlice.caseReducers.resetClasses(state);\n      } else {\n        const searchTerm = matchDepartmentName(state.searchTerm);\n\n        // Check for courseCode shortcuts\n        const searchCourseCode = findSearchTermShortcuts(searchTerm);\n\n        const searchTerms = searchTerm.split(' ');\n\n        newResultsArray = newResultsArray.filter(\n          ([_, { courseName, times, masterCourseCode }]) =>\n            filterBySearchTerm(\n              courseName,\n              times,\n              masterCourseCode,\n              searchCourseCode,\n              searchCourseCode === state.searchTerm ? searchTerms : []\n            )\n        );\n\n        let newResultsObject = Object.fromEntries(newResultsArray);\n\n        state.renderedClasses = { ...newResultsObject };\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addMatcher(\n      classPagesApi.endpoints.getAllClasses.matchFulfilled,\n      (state, { payload }) => {\n        state.classes = payload;\n        state.renderedClasses = payload;\n      }\n    );\n  },\n});\n\n// Helper functions\n\nconst findSearchTermShortcuts = (searchPhrase: string) => {\n  return searchPhrase\n    .replace(/(cs *)(\\d+)/i, (match, p1, p2) => 'csci ' + p2)\n    .replace(\n      /((e *)|(eng *)|(engr *))(\\d+)/i,\n      (match, p1, p2, p3, p4, p5) => 'engr ' + p5\n    )\n    .replace(/(bio *)(\\d+)/i, (match, p1, p2) => 'biol ' + p2)\n    .replace(\n      // pad 0s for courseCode search\n      /([a-z]+ *)(\\d+)/i,\n      (match, p1, p2) => p1 + p2.padStart(3, '0')\n    );\n};\n\n// convert full department name search phrase to the department code\nconst matchDepartmentName = (searchPhrase: string) => {\n  return searchPhrase\n    .replace(/(computer science)/i, 'csci')\n    .replace(/(engineering)/i, 'engr')\n    .replace(/(biology)/i, 'biol');\n};\n\nconst filterBySearchTerm = (\n  courseName: string,\n  times: any[],\n  masterCourseCode: string,\n  searchCourseCode?: string,\n  searchTerms?: string[]\n) => {\n  const coursePhrase = `${masterCourseCode} ${courseName} ${\n    times[0]?.professorName ? times[0].professorName : ''\n  }`;\n\n  // Return true if any of the searchCourseCodes are found in the masterCourseCode\n  if (\n    masterCourseCode\n      .trim()\n      .replace(/\\s+/g, ' ')\n      .includes(searchCourseCode.toUpperCase().trim().replace(/\\s+/g, ' '))\n  ) {\n    return true;\n  }\n\n  // Return true if all of the searchPhrases are found in the coursePhrase\n  for (const searchTerm of searchTerms) {\n    if (\n      !coursePhrase\n        .toUpperCase()\n        .trim()\n        .replace(/\\s+/g, ' ')\n        .includes(searchTerm.toUpperCase().trim().replace(/\\s+/g, ' '))\n    ) {\n      return false;\n    }\n  }\n\n  return searchTerms.length > 0;\n};\n\nconst filterByCollege = (filters, [className, _]) => {\n  const college = className.split(' ').at(-1);\n  return filters.colleges.includes(college);\n};\n\n// Selectors\nexport const selectClassesList = (state: RootState) =>\n  state.appData.classPages.classes;\n\nexport const selectRenderedClassesList = (state: RootState) =>\n  state.appData.classPages.renderedClasses;\n\n// Actions\nexport const {\n  currentSectionUpdated,\n  endOfListReached,\n  searchTermUpdated,\n  resetClasses,\n  classSelected,\n  selectedClassCleared,\n  reset,\n  filtersSaved,\n  filtersReset,\n  isHMCUpdated,\n  availableSectionsListUpdated,\n  electiveGeneratorSelected,\n  suggestedClassesUpdated,\n  suggestedClassesDimissed,\n} = classPagesSlice.actions;\n\nexport default classPagesSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport type { PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from '../../app/store';\n\ninterface DiscoverState {\n  searchTerm: string;\n  submittedSearchTerm: string;\n  tag: string;\n  recentSearches: string[];\n}\nconst initialState: DiscoverState = {\n  searchTerm: '',\n  submittedSearchTerm: '',\n  tag: '',\n  recentSearches: [],\n};\n\nexport const discoverSlice = createSlice({\n  name: 'discover',\n  initialState,\n  reducers: {\n    reset: () => initialState,\n    searchTermSubmitted: (state, action: PayloadAction<string>) => {\n      state.submittedSearchTerm = action.payload;\n      if (action.payload && !state.recentSearches.includes(action.payload)) {\n        state.recentSearches.unshift(action.payload);\n      }\n    },\n    searchTermChanged: (state, action: PayloadAction<string>) => {\n      state.searchTerm = action.payload;\n      if (action.payload === '') {\n        state.submittedSearchTerm = '';\n      }\n    },\n    recentSearchTermSelected: (state, action: PayloadAction<string>) => {\n      state.searchTerm = action.payload;\n      state.submittedSearchTerm = action.payload;\n    },\n    tagSelected: (state, action: PayloadAction<string>) => {\n      state.tag = action.payload;\n    },\n    recentSearchTermRemoved: (state, action: PayloadAction<string>) => {\n      state.recentSearches = state.recentSearches.filter(\n        (term) => term !== action.payload\n      );\n    },\n  },\n});\n\nexport const {\n  reset,\n  searchTermChanged,\n  searchTermSubmitted,\n  tagSelected,\n  recentSearchTermSelected,\n  recentSearchTermRemoved,\n} = discoverSlice.actions;\n\nexport const selectSearchTerm = (state: RootState) =>\n  state.appData.discover.searchTerm;\nexport const selectSubmittedSearchTerm = (state: RootState) =>\n  state.appData.discover.submittedSearchTerm;\nexport const selectTag = (state: RootState) => state.appData.discover.tag;\nexport const selectRecentSearches = (state: RootState) =>\n  state.appData.discover.recentSearches;\n\nexport default discoverSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport type { PayloadAction } from '@reduxjs/toolkit';\n\ninterface CalendarState {\n  isThreeDay: boolean;\n}\n\nconst initialState: CalendarState = {\n  isThreeDay: false,\n};\n\nexport const calendarSlice = createSlice({\n  name: 'discover',\n  initialState: initialState,\n  reducers: {\n    reset: (state) => (state = initialState),\n    isThreeDaySet: (state, action: PayloadAction<boolean>) => {\n      state.isThreeDay = action.payload;\n    },\n  },\n});\n\nexport const { reset, isThreeDaySet } = calendarSlice.actions;\n\nexport default calendarSlice.reducer;\n","import * as SecureStore from 'expo-secure-store';\n\nexport default function createSecureStorage(options: any = {}) {\n  const replaceCharacter = options.replaceCharacter || '_';\n  const replacer = options.replacer || defaultReplacer;\n\n  return {\n    getItem: (key: string) =>\n      SecureStore.getItemAsync(replacer(key, replaceCharacter), options),\n    setItem: (key: string, value: string) =>\n      SecureStore.setItemAsync(replacer(key, replaceCharacter), value, options),\n    removeItem: (key: string) =>\n      SecureStore.deleteItemAsync(replacer(key, replaceCharacter), options),\n  };\n}\n\nfunction defaultReplacer(key: string, replaceCharacter: string) {\n  return key.replace(/[^a-z0-9.\\-_]/gi, replaceCharacter);\n}\n","// import createSecureStore from \"redux-persist-expo-securestore\"\nimport * as ExpoSecureStorage from 'expo-secure-store';\nimport { Platform } from 'react-native';\nimport { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport ExpoFileSystemStorage from 'redux-persist-expo-filesystem';\n\nimport appDataReducer from '../app/appDataSlice';\nimport classPagesReducer from '../features/classPages/classPagesSlice';\nimport discoverReducer from '../features/discover/discoverSlice';\nimport calendarReducer from '../features/calendar/calendarSlice';\nimport createSecureStorage from './SecureStorage';\n\n// Secure storage\n\n// const SecureStorage = createSecureStore();\nconst SecureStorage = createSecureStorage();\n\nconst securePersistConfig = {\n  key: 'secure',\n  storage: Platform.OS === 'web' ? AsyncStorage : SecureStorage,\n};\n\n// Non-secure (AsyncStorage) storage\nconst cpPersistConfig = {\n  key: 'classPages',\n  storage: Platform.OS === 'android' ? ExpoFileSystemStorage : AsyncStorage,\n  whitelist:\n    Platform.OS === 'web'\n      ? ['currentSection', 'filters', 'hasSelectedElectiveGen']\n      : ['classes', 'currentSection', 'isHMC', 'hasSelectedElectiveGen'],\n};\n\nconst discoverPersistConfig = {\n  key: 'discover',\n  storage: Platform.OS === 'android' ? ExpoFileSystemStorage : AsyncStorage,\n  whitelist: ['recentSearches'],\n};\n\n// Combine them together\nexport const rootReducer = combineReducers({\n  classPages: persistReducer(cpPersistConfig, classPagesReducer),\n  secure: persistReducer(securePersistConfig, appDataReducer),\n  discover: persistReducer(discoverPersistConfig, discoverReducer),\n  calendar: calendarReducer,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nimport { rootReducer } from './storage';\nimport { apiSlice } from '../features/api/apiSlice';\n\nexport const store = configureStore({\n  reducer: {\n    appData: rootReducer,\n    [apiSlice.reducerPath]: apiSlice.reducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: false,\n      immutableCheck: false,\n    }).concat(apiSlice.middleware),\n});\n\n// serializableCheck: {\n//   ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//   ignoredPaths: [\n//     'appData.classPages.classes',\n//     'addData.classPages.renderedClasses',\n//   ],\n// },\n// immutableCheck: {\n//   ignoredPaths: [\n//     'appData.classPages.classes',\n//     'addData.classPages.renderedClasses',\n//   ],\n// },\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch: () => AppDispatch = useDispatch\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n\n","import { Button, Layout, Text } from '@ui-kitten/components';\n\nexport default function EnterCodePage({ navigation }) {\n  return (\n    <Layout style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Text\n        style={{\n          margin: 10,\n        }}\n        category=\"s1\">\n        An email has been sent to you with a temporary password. Login to set\n        your new password.\n      </Text>\n      <Button\n        style={{ margin: 10 }}\n        onPress={() => {\n          navigation.reset({ index: 0, routes: [{ name: 'Login' }] });\n        }}>\n        Back to Login\n      </Button>\n    </Layout>\n  );\n}\n","import { Button, Input, Layout, Spinner, Text } from '@ui-kitten/components';\nimport { useEffect, useRef, useState } from 'react';\nimport { useNetInfo } from '@react-native-community/netinfo';\nimport { Keyboard } from 'react-native';\n\nimport { useResetPasswordMutation } from '../../api/usersApi';\n\nexport default function EnterEmailPage({ navigation }) {\n  const [email, setEmail] = useState('');\n  const inputRef = useRef<Input>(null);\n  const [resetPassword, { isLoading, isError }] = useResetPasswordMutation();\n  const netInfo = useNetInfo();\n\n  useEffect(() => {\n    if (inputRef.current) inputRef.current.focus();\n  }, [inputRef.current]);\n\n  const onSubmit = async () => {\n    if (!netInfo.isConnected) {\n      alert('Connect to the internet to reset your password');\n      return;\n    }\n\n    try {\n      await resetPassword(email).unwrap();\n      navigation.navigate('EnterCodePage');\n    } catch (e) {\n      console.warn('Error submitting forgot password email', e);\n    }\n  };\n\n  return (\n    <Layout style={{ flex: 1, paddingTop: 30, alignItems: 'center' }}>\n      <Text style={{ margin: 10 }} category=\"s1\">\n        Enter your email to get started\n      </Text>\n\n      <Input\n        autoCapitalize=\"none\"\n        placeholder=\"Email\"\n        ref={inputRef}\n        style={{ margin: 10 }}\n        onChangeText={setEmail}\n        value={email}\n        onSubmitEditing={Keyboard.dismiss}\n      />\n      {isError && (\n        <Text style={{ color: 'red' }}>Email is invalid. Try again</Text>\n      )}\n      <Button\n        style={{ margin: 10 }}\n        onPress={onSubmit}\n        disabled={isLoading}\n        accessoryRight={() => (isLoading ? <Spinner status=\"basic\" /> : null)}>\n        Submit\n      </Button>\n    </Layout>\n  );\n}\n","import { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport EnterCodePage from './EnterCodePage';\nimport EnterEmailPage from './EnterEmailPage';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function ForgotPassword() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n      }}>\n      <Stack.Screen name=\"EnterEmailPage\" component={EnterEmailPage} />\n      <Stack.Screen name=\"EnterCodePage\" component={EnterCodePage} />\n    </Stack.Navigator>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  Image,\n  StyleSheet,\n  TouchableOpacity,\n  KeyboardAvoidingView,\n  Keyboard,\n  TouchableWithoutFeedback,\n  Platform,\n  TextInput,\n} from 'react-native';\nimport { Input, Layout, Spinner, Text } from '@ui-kitten/components';\nimport NetInfo from '@react-native-community/netinfo';\nimport {\n  useLazyGetUserInfoQuery,\n  useLoginMutation,\n  useTrackLoginMutation,\n} from '../api/usersApi';\n\nconst DarkModeLogo = require('../../../assets/logos/owl-white-text.png');\nconst LightModeLogo = require('../../../assets/logos/owl-black-text.png');\n\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport {\n  selectDarkMode,\n  setIsGuest,\n  userKeyUpdated,\n} from '../../app/appDataSlice';\nimport { useLazyGetAllSectionsQuery } from '../api/classPagesApi';\nimport {\n  availableSectionsListUpdated,\n  currentSectionUpdated,\n} from '../classPages/classPagesSlice';\n\nexport default function Login({ navigation }) {\n  const [userName, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const [loginError, setLoginError] = useState('');\n\n  const [login, { isLoading }] = useLoginMutation();\n  const [getUserInfo] = useLazyGetUserInfoQuery();\n  const [trackLogin] = useTrackLoginMutation();\n  const [getAllSections] = useLazyGetAllSectionsQuery();\n  const darkMode = useAppSelector(selectDarkMode);\n  // const apiUserKey = useAppSelector((state) => state.appData.secure);\n  const dispatch = useAppDispatch();\n\n  const passwordRef = React.useRef(null);\n\n  const handleLogin = async () => {\n    Keyboard.dismiss();\n\n    // Check for internet connection\n    const netInfo = await NetInfo.fetch();\n    if (!netInfo.isConnected) {\n      setLoginError('No internet connection');\n      return;\n    }\n\n    // Validate input\n    if (!userName) {\n      setLoginError(\"Username can't be empty\");\n    } else if (!password) {\n      setLoginError(\"Password can't be empty\");\n    } else {\n      try {\n        const { userKey } = await login({\n          userName,\n          password,\n        }).unwrap();\n        // Save user key and data to redux store\n        dispatch(userKeyUpdated(userKey));\n        dispatch(setIsGuest(false));\n\n        // Get current section\n        const allSections = await getAllSections().unwrap();\n\n        dispatch(currentSectionUpdated(allSections.currentTerm));\n        dispatch(availableSectionsListUpdated(allSections.availableTerms));\n\n        // Get user info\n        getUserInfo(userKey)\n          .unwrap()\n          .then(async () => {\n            await trackLogin(userKey);\n          });\n\n        // Reset login form\n        setUserName('');\n        setPassword('');\n        setLoginError('');\n      } catch (e) {\n        setLoginError('Invalid username or password');\n        console.error('Failed to Login: ', e);\n      }\n    }\n  };\n\n  const guestLogin = async () => {\n    Keyboard.dismiss();\n\n    // Check for internet connection\n    const netInfo = await NetInfo.fetch();\n    if (!netInfo.isConnected) {\n      setLoginError('No internet connection');\n      return;\n    }\n\n    try {\n      const { userKey } = await login({\n        userName: '',\n        password: '',\n        isGuest: true,\n      }).unwrap();\n      // Save user key and data to redux store\n      dispatch(userKeyUpdated(userKey));\n      dispatch(setIsGuest(true));\n\n      // Get user info\n      getUserInfo(userKey)\n        .unwrap()\n        .then(async () => {\n          await trackLogin(userKey);\n        });\n\n      // Reset login form\n      setUserName('');\n      setPassword('');\n      setLoginError('');\n    } catch (e) {\n      setLoginError('Invalid username or password');\n      console.error('Failed to Login: ', e);\n    }\n  };\n\n  return (\n    <TouchableWithoutFeedback\n      style={{ flex: 1 }}\n      onPress={() => {\n        Keyboard.dismiss();\n      }}>\n      <KeyboardAvoidingView\n        style={styles.container}\n        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}>\n        <Layout\n          style={{\n            flex: 1,\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}>\n          {darkMode ? (\n            <Image source={DarkModeLogo} style={styles.logo} />\n          ) : (\n            <Image source={LightModeLogo} style={styles.logo} />\n          )}\n\n          <Layout style={styles.inputView}>\n            <Input\n              autoCapitalize=\"none\"\n              status=\"control\"\n              autoComplete=\"username\"\n              style={styles.TextInput}\n              placeholder=\"username / email\"\n              placeholderTextColor=\"white\"\n              keyboardType=\"email-address\"\n              onChangeText={(userName) => setUserName(userName)}\n              value={userName}\n              onSubmitEditing={() => passwordRef.current.focus()}\n              blurOnSubmit={false}\n            />\n          </Layout>\n          <Layout style={styles.inputView}>\n            <Input\n              style={styles.TextInput}\n              autoComplete=\"password\"\n              placeholder=\"password\"\n              placeholderTextColor=\"white\"\n              secureTextEntry={true}\n              onChangeText={(password) => setPassword(password)}\n              value={password}\n              ref={passwordRef}\n            />\n          </Layout>\n          <TouchableOpacity\n            onPress={() => {\n              navigation.navigate('ForgotPassword');\n            }}>\n            <Text style={styles.forgot_button}>Forgot Password?</Text>\n          </TouchableOpacity>\n          {isLoading ? (\n            <Layout\n              style={{ position: 'absolute', backgroundColor: 'transparent' }}>\n              <Spinner />\n            </Layout>\n          ) : null}\n\n          <TouchableOpacity\n            style={styles.loginBtn}\n            onPress={() => {\n              handleLogin();\n            }}>\n            <Text style={{ color: '#fff' }}>LOGIN</Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={{\n              width: '50%',\n              borderRadius: 25,\n              height: 40,\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginTop: 20,\n              backgroundColor: darkMode ? '#8b31e3' : 'rgb(98,111,187)',\n              maxWidth: 300,\n            }}\n            onPress={() => {\n              guestLogin();\n            }}>\n            <Text style={{ color: '#fff' }}>Try As Guest</Text>\n          </TouchableOpacity>\n          <Text style={styles.error}>{loginError}</Text>\n          <TouchableOpacity\n            style={{ width: '100%' }}\n            onPress={() => {\n              navigation.navigate('Signup');\n            }}>\n            <Layout level={'2'} style={styles.signupBtn}>\n              <Text>SIGN UP</Text>\n            </Layout>\n          </TouchableOpacity>\n        </Layout>\n      </KeyboardAvoidingView>\n    </TouchableWithoutFeedback>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  image: {\n    marginBottom: 40,\n  },\n\n  inputView: {\n    flexDirection: 'row',\n    height: 40,\n    marginTop: 20,\n    marginLeft: 50,\n    marginRight: 50,\n    margin: 10,\n  },\n\n  TextInput: {\n    backgroundColor: '#b42bba',\n    borderColor: '#b42bba',\n    color: '#fff',\n    borderWidth: 1,\n    borderRadius: 30,\n    width: '100%',\n    maxWidth: 300,\n  },\n\n  forgot_button: {\n    height: 30,\n    marginBottom: 30,\n  },\n\n  loginBtn: {\n    width: '80%',\n    borderRadius: 25,\n    height: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 10,\n    backgroundColor: '#ff3f5e',\n    maxWidth: 300,\n  },\n  guestButton: {\n    width: '60%',\n    borderRadius: 25,\n    height: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 20,\n  },\n  signupBtn: {\n    marginTop: 60,\n    width: '100%',\n    height: 50,\n    alignItems: 'center',\n    alignSelf: 'center',\n    justifyContent: 'center',\n    maxWidth: 800,\n  },\n  error: {\n    color: 'red',\n    fontSize: 15,\n  },\n  logo: {\n    width: 178,\n    height: 197,\n    marginBottom: 20,\n  },\n});\n","import { HeaderBackButton } from '@react-navigation/elements';\nimport { Platform } from 'react-native';\n\nexport default function BackButton({ navigation, ...props }) {\n  return (\n    <HeaderBackButton\n      {...props}\n      onPress={navigation.goBack}\n      label=\"Back\"\n      labelVisible={Platform.OS === 'ios'}\n    />\n  );\n}\n","import {Manager} from \"socket.io-client\";\n\nexport const base_URL = 'https://api.athenaserver.com:5678/api';\n\nexport const manager = new Manager(base_URL, {\n    randomizationFactor: 0.5,\n    addTrailingSlash: false,\n    autoConnect: false\n});","// Import React and Component\nimport React, { useState, useRef } from 'react';\nimport {\n  StyleSheet,\n  KeyboardAvoidingView,\n  Keyboard,\n  TouchableOpacity,\n  ScrollView,\n  Platform,\n} from 'react-native';\n\nimport {\n  CheckBox,\n  IndexPath,\n  Layout,\n  Select,\n  SelectItem,\n  Text,\n  Input,\n  Spinner,\n} from '@ui-kitten/components';\nimport {\n  useGetCollegeListQuery,\n  useSignupUserMutation,\n} from '../../api/usersApi';\nimport {base_URL} from \"../../../constants/admin\";\nimport {userKeyUpdated} from \"../../../app/appDataSlice\";\nimport {useAppDispatch} from \"../../../app/hooks\";\n\nconst Signup = ({ navigation }) => {\n  const [realFirstName, setRealFirstName] = useState('');\n  const [realLastName, setRealLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [major, setMajor] = useState('');\n  const dispatch = useAppDispatch();\n  const [selectedIndex, setSelectedIndex] = useState(new IndexPath(0));\n  const [simplifiedSignup, setSimplifiedSignUp] = useState(false);\n  const [userCollege, setUserCollege] = useState({\n    collegeName: '',\n    humanReadableCollegeName: null,\n  });\n\n  const { data: collegeList } = useGetCollegeListQuery();\n  const [signupUser, { isLoading: signupLoading }] = useSignupUserMutation();\n\n  const firstNameInputRef = useRef<Input>();\n  const lastNameInputRef = useRef<Input>();\n  const passwordInputRef = useRef<Input>();\n  const majorInputRef = useRef<Input>();\n\n  const validateInput = () => {\n    if (!simplifiedSignup) {\n      if (!realFirstName) {\n        alert('Please fill First Name');\n        return false;\n      }\n      if (!realLastName) {\n        alert('Please fill Last Name');\n        return false;\n      }\n\n      if (!userCollege.collegeName) {\n        alert('Please fill College Name');\n        return false;\n      }\n\n      if (!major) {\n        alert('Please fill Major');\n        return false;\n      }\n    }\n\n    if (!email) {\n      alert('Please fill Email');\n      return false;\n    }\n\n    if (!password) {\n      alert('Please fill Password');\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleSubmitButton = async () => {\n    if (validateInput()) {\n      try {\n        const body = {\n          email,\n          password,\n          realFirstName,\n          realLastName,\n          collegeName: userCollege.collegeName,\n          major,\n        };\n\n        console.log(JSON.stringify(body))\n\n        // Uncomment this stuff when we get the email working again\n        // await signupUser(body).unwrap();\n        // navigation.navigate('VerifyEmail');\n        const response = await fetch(base_URL + '/users/noEmailUserCreation', {\n          method: 'POST',\n          headers: {\n            'content-type': 'application/json'\n          },\n          body: JSON.stringify(body)\n        })\n        if (response.ok) {\n          const responseUnwrapped = await response.json();\n          dispatch(userKeyUpdated(responseUnwrapped.password));\n          navigation.goBack();\n        } else {\n          throw `${(await response.json()).message}`\n        }\n      } catch (e) {\n        console.warn('Signup error: ', e.message);\n      }\n    }\n  };\n\n  const renderCollegeDropDown = () => {\n    function handleSelection(index) {\n      setSelectedIndex(index);\n      const newObject = {\n        collegeName: collegeList[index.row].id,\n        humanReadableCollegeName: collegeList[index.row].label,\n      };\n      setUserCollege(newObject);\n    }\n\n    return (\n      <Layout style={styles.containerDrop}>\n        <Select\n          placeholder={'Choose A College'}\n          value={\n            !userCollege.humanReadableCollegeName\n              ? 'Selection'\n              : userCollege.humanReadableCollegeName\n          }\n          onFocus={Keyboard.dismiss}\n          selectedIndex={selectedIndex}\n          onSelect={handleSelection}>\n          {collegeList &&\n            collegeList.map((college, index) => (\n              <SelectItem title={college.label} key={index} />\n            ))}\n        </Select>\n      </Layout>\n    );\n  };\n\n  let fields = [];\n  fields.push(\n    <Layout key={'1'}>\n      <Layout style={styles.SectionStyle}>\n        <Layout style={styles.labelSection}>\n          <Text style={styles.label}>Email</Text>\n        </Layout>\n        <Input\n          style={styles.inputStyle}\n          onChangeText={(email) => setEmail(email)}\n          underlineColorAndroid=\"#f000\"\n          placeholder=\"Enter Email\"\n          placeholderTextColor=\"#8b9cb5\"\n          defaultValue=\"\"\n          autoCapitalize=\"none\"\n          returnKeyType=\"next\"\n          onSubmitEditing={() =>\n            passwordInputRef.current ? passwordInputRef.current.focus() : null\n          }\n          blurOnSubmit={false}\n        />\n      </Layout>\n      <Layout style={styles.SectionStyle}>\n        <Layout style={styles.labelSection}>\n          <Text style={styles.label}>Password</Text>\n        </Layout>\n        <Input\n          style={styles.inputStyle}\n          onChangeText={(password) => setPassword(password)}\n          underlineColorAndroid=\"#f000\"\n          placeholder=\"Enter Password\"\n          placeholderTextColor=\"#8b9cb5\"\n          defaultValue=\"\"\n          ref={passwordInputRef}\n          returnKeyType=\"next\"\n          secureTextEntry={true}\n          onSubmitEditing={() =>\n            firstNameInputRef.current ? firstNameInputRef.current.focus() : null\n          }\n          blurOnSubmit={false}\n        />\n      </Layout>\n    </Layout>\n  );\n\n  if (!simplifiedSignup) {\n    fields.push(\n      <Layout key={'2'}>\n        <Layout style={styles.SectionStyle}>\n          <Layout style={styles.labelSection}>\n            <Text style={styles.label}>First Name</Text>\n          </Layout>\n          <Input\n            style={styles.inputStyle}\n            onChangeText={setRealFirstName}\n            ref={firstNameInputRef}\n            underlineColorAndroid=\"#f000\"\n            placeholder=\"Enter First Name\"\n            placeholderTextColor=\"#8b9cb5\"\n            defaultValue=\"\"\n            autoCapitalize=\"sentences\"\n            returnKeyType=\"next\"\n            onSubmitEditing={() =>\n              lastNameInputRef?.current\n                ? lastNameInputRef.current.focus()\n                : null\n            }\n            blurOnSubmit={false}\n          />\n        </Layout>\n\n        <Layout style={styles.SectionStyle}>\n          <Layout style={styles.labelSection}>\n            <Text style={styles.label}>Last Name</Text>\n          </Layout>\n          <Input\n            style={styles.inputStyle}\n            onChangeText={setRealLastName}\n            underlineColorAndroid=\"#f000\"\n            placeholder=\"Enter Last Name\"\n            placeholderTextColor=\"#8b9cb5\"\n            defaultValue=\"\"\n            ref={lastNameInputRef}\n            autoCapitalize=\"sentences\"\n            returnKeyType=\"next\"\n            onSubmitEditing={() =>\n              majorInputRef.current ? majorInputRef.current.focus() : null\n            }\n            blurOnSubmit={false}\n          />\n        </Layout>\n\n        <Layout style={styles.SectionStyle}>\n          <Layout style={styles.labelSection}>\n            <Text style={styles.label}>Intended Major</Text>\n          </Layout>\n          <Input\n            style={styles.inputStyle}\n            onChangeText={setMajor}\n            underlineColorAndroid=\"#f000\"\n            placeholder=\"Enter Intended Major\"\n            placeholderTextColor=\"#8b9cb5\"\n            defaultValue=\"\"\n            ref={majorInputRef}\n            blurOnSubmit={true}\n          />\n        </Layout>\n\n        <Layout style={styles.SectionStyle}>\n          <Layout style={styles.labelSection}>\n            <Text style={styles.label}>College Name</Text>\n          </Layout>\n          {renderCollegeDropDown()}\n        </Layout>\n      </Layout>\n    );\n  }\n\n  return (\n    // Registration Page\n    <Layout style={{ flex: 1 }}>\n      <ScrollView style={{ flex: 1 }}>\n        {/* Spinner */}\n        {signupLoading && (\n          <Layout\n            style={{\n              flex: 1,\n              position: 'absolute',\n              zIndex: 1,\n              top: '50%',\n              left: '50%',\n              backgroundColor: 'transparent',\n            }}>\n            <Spinner />\n          </Layout>\n        )}\n\n        <Layout style={{ paddingVertical: 30, paddingHorizontal: 40 }}>\n          <CheckBox\n            checked={simplifiedSignup}\n            onChange={(nextChecked) => setSimplifiedSignUp(nextChecked)}>\n            Simplified Signup\n          </CheckBox>\n        </Layout>\n\n        <KeyboardAvoidingView\n          style={{ flex: 1 }}\n          behavior={Platform.OS === 'ios' ? 'padding' : 'height'}>\n          {fields}\n\n          <TouchableOpacity\n            style={styles.buttonStyle}\n            onPress={handleSubmitButton}>\n            <Text style={styles.buttonTextStyle}>Register</Text>\n          </TouchableOpacity>\n        </KeyboardAvoidingView>\n      </ScrollView>\n    </Layout>\n  );\n};\nexport default Signup;\n\nconst styles = StyleSheet.create({\n  SectionStyle: {\n    flexDirection: 'row',\n    height: 40,\n    marginTop: 20,\n    marginLeft: 35,\n    marginRight: 35,\n    margin: 10,\n  },\n  buttonStyle: {\n    backgroundColor: '#b42bba',\n    borderWidth: 0,\n    color: '#FFFFFF',\n    borderColor: '#7DE24E',\n    height: 40,\n    alignItems: 'center',\n    borderRadius: 30,\n    marginLeft: 35,\n    marginRight: 35,\n    marginTop: 20,\n    marginBottom: 20,\n  },\n  buttonTextStyle: {\n    color: '#FFFFFF',\n    paddingVertical: 10,\n    fontSize: 16,\n  },\n  inputStyle: {\n    flex: 1,\n    paddingLeft: 15,\n    paddingRight: 15,\n    borderWidth: 1,\n    borderRadius: 30,\n    borderColor: '#dadae8',\n  },\n  errorTextStyle: {\n    color: 'red',\n    textAlign: 'center',\n    fontSize: 14,\n  },\n  successTextStyle: {\n    color: 'black',\n    textAlign: 'center',\n    fontSize: 18,\n    padding: 30,\n  },\n  label: {\n    textAlign: 'center',\n    fontSize: 15,\n    paddingLeft: 10,\n    paddingRight: 10,\n  },\n  labelSection: {\n    justifyContent: 'center',\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n  },\n\n  text: {\n    fontSize: 20,\n    margin: 20,\n  },\n  input: {\n    width: '80%',\n    margin: 20,\n    borderWidth: 1,\n    borderColor: 'black',\n    borderRadius: 20,\n    height: 40,\n    padding: 10,\n  },\n  button: {\n    width: '80%',\n    margin: 20,\n    alignItems: 'center',\n    backgroundColor: '#b42bba',\n    height: 40,\n    borderRadius: 20,\n    borderColor: '#b42bba',\n    justifyContent: 'center',\n  },\n  buttonText: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: 'white',\n  },\n  containerDrop: {\n    minHeight: 128,\n    minWidth: 200,\n  },\n});\n","import React from 'react';\nimport { Layout, Text, Input, Spinner } from '@ui-kitten/components';\nimport { StyleSheet, TouchableOpacity } from 'react-native';\nimport {\n  useVerifySignupMutation,\n  useLazyGetUserInfoQuery,\n} from '../../api/usersApi';\nimport { useAppDispatch } from '../../../app/hooks';\nimport { userKeyUpdated } from '../../../app/appDataSlice';\n\nexport default function VerifyEmail() {\n  const [verificationCode, setVerificationCode] = React.useState('');\n  const [verifyCode, { isError }] = useVerifySignupMutation();\n  const [getUserInfo, { isLoading: getUserInfoLoading }] =\n    useLazyGetUserInfoQuery();\n  const dispatch = useAppDispatch();\n\n  const handleVerifyCodeButton = async () => {\n    try {\n      const { password } = await verifyCode(verificationCode).unwrap();\n      dispatch(userKeyUpdated(password));\n      await getUserInfo(password).unwrap();\n    } catch (error) {\n      console.warn(\"Couldn't verify code\", error);\n    }\n  };\n\n  return (\n    <Layout style={styles.container}>\n      <Text style={styles.text}>\n        A verification code has been sent to your email. Please check your email\n        and enter the code below.\n      </Text>\n      {getUserInfoLoading && <Spinner />}\n      {isError && <Text>Error verifying code</Text>}\n      <Input\n        style={styles.input}\n        placeholder=\"Verification Code\"\n        keyboardType=\"numeric\"\n        onChangeText={(text) => setVerificationCode(text)}\n      />\n      <TouchableOpacity style={styles.button} onPress={handleVerifyCodeButton}>\n        <Text style={styles.buttonText}>Finish Signup</Text>\n      </TouchableOpacity>\n    </Layout>\n  );\n}\n\nconst styles = StyleSheet.create({\n  SectionStyle: {\n    flexDirection: 'row',\n    height: 40,\n    marginTop: 20,\n    marginLeft: 35,\n    marginRight: 35,\n    margin: 10,\n  },\n  buttonStyle: {\n    backgroundColor: '#b42bba',\n    borderWidth: 0,\n    color: '#FFFFFF',\n    borderColor: '#7DE24E',\n    height: 40,\n    alignItems: 'center',\n    borderRadius: 30,\n    marginLeft: 35,\n    marginRight: 35,\n    marginTop: 20,\n    marginBottom: 20,\n  },\n  buttonTextStyle: {\n    color: '#FFFFFF',\n    paddingVertical: 10,\n    fontSize: 16,\n  },\n  inputStyle: {\n    flex: 1,\n    color: 'black',\n    paddingLeft: 15,\n    paddingRight: 15,\n    borderWidth: 1,\n    borderRadius: 30,\n    borderColor: '#dadae8',\n  },\n  errorTextStyle: {\n    color: 'red',\n    textAlign: 'center',\n    fontSize: 14,\n  },\n  successTextStyle: {\n    color: 'black',\n    textAlign: 'center',\n    fontSize: 18,\n    padding: 30,\n  },\n  description: {\n    color: 'black',\n    textAlign: 'center',\n    fontSize: 18,\n    padding: 30,\n  },\n  label: {\n    color: 'black',\n    textAlign: 'center',\n    fontSize: 15,\n    paddingLeft: 10,\n    paddingRight: 10,\n  },\n  labelSection: {\n    justifyContent: 'center',\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n  },\n\n  text: {\n    fontSize: 20,\n    margin: 20,\n  },\n  input: {\n    width: '80%',\n    margin: 20,\n    borderWidth: 1,\n    borderColor: 'black',\n    borderRadius: 20,\n    height: 40,\n    padding: 10,\n  },\n  button: {\n    width: '80%',\n    margin: 20,\n    alignItems: 'center',\n    backgroundColor: '#b42bba',\n    height: 40,\n    borderRadius: 20,\n    borderColor: '#b42bba',\n    justifyContent: 'center',\n  },\n  buttonText: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: 'white',\n  },\n  containerDrop: {\n    minHeight: 128,\n    minWidth: 200,\n  },\n});\n","import { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { useTheme } from '@ui-kitten/components';\nimport { selectDarkMode } from '../../../app/appDataSlice';\nimport { useAppSelector } from '../../../app/hooks';\nimport BackButton from '../../../components/BackButton';\nimport SignupForm from './SignupForm';\nimport VerifyEmail from './VerifyEmail';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function Signup() {\n  const theme = useTheme();\n  const darkMode = useAppSelector(selectDarkMode);\n\n  return (\n    <Stack.Navigator\n      screenOptions={({ navigation }) => ({\n        headerStyle: {\n          backgroundColor: darkMode ? theme['color-basic-800'] : '#fff',\n        },\n        headerLeft: (props) => (\n          <BackButton {...props} navigation={navigation} />\n        ),\n      })}>\n      <Stack.Screen\n        name=\"SignupForm\"\n        component={SignupForm}\n        options={{ title: 'Signup' }}\n      />\n      <Stack.Screen\n        name=\"VerifyEmail\"\n        component={VerifyEmail}\n        options={{ title: 'Verify Email' }}\n      />\n    </Stack.Navigator>\n  );\n}\n","import { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { useTheme } from '@ui-kitten/components';\nimport { selectDarkMode } from '../../app/appDataSlice';\nimport { useAppSelector } from '../../app/hooks';\nimport BackButton from '../../components/BackButton';\nimport ForgotPassword from './ForgotPassword/index';\nimport Login from './Login';\nimport Signup from './Signup/index';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function Auth() {\n  const theme = useTheme();\n  const darkMode = useAppSelector(selectDarkMode);\n\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerStyle: {\n          backgroundColor: darkMode ? theme['color-basic-800'] : '#fff',\n        },\n      }}>\n      <Stack.Screen\n        name=\"Login\"\n        component={Login}\n        options={{ headerShown: false }}\n      />\n      <Stack.Screen\n        name=\"Signup\"\n        component={Signup}\n        options={{ headerShown: false }}\n      />\n      <Stack.Screen\n        name=\"ForgotPassword\"\n        component={ForgotPassword}\n        options={{ title: 'Reset Password' }}\n      />\n    </Stack.Navigator>\n  );\n}\n","import { Layout, Text } from '@ui-kitten/components';\nimport Constants from 'expo-constants';\n\ntype HeaderProps = {\n  accessoryLeft?: keyof JSX.IntrinsicElements | JSX.Element;\n  accessoryRight?: keyof JSX.IntrinsicElements | JSX.Element;\n  center?: keyof JSX.IntrinsicElements | JSX.Element;\n  title: string;\n  level?: '1' | '2' | '3' | '4';\n};\n\nexport default function Header({\n  accessoryLeft,\n  accessoryRight,\n  title,\n  center,\n  level = '1',\n}: HeaderProps) {\n  return (\n    <Layout\n      level={level}\n      style={{\n        paddingTop: Constants.statusBarHeight + 10,\n        width: '100%',\n        justifyContent: 'space-between',\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingHorizontal: 20,\n      }}>\n      <Layout level={level} style={{ flexDirection: 'row' }}>\n        {accessoryLeft}\n        <Text style={{ marginLeft: 10, fontSize: 20, fontWeight: '500' }}>\n          {title}\n        </Text>\n      </Layout>\n      {center}\n\n      {accessoryRight}\n    </Layout>\n  );\n}\n","export const DISCOVER_LIST_PAGE_SIZE = 5;\n\nexport const tagIndices = [\n  'Clubs',\n  'Events',\n  'College News',\n  'Courses',\n  'HMC',\n  'Pomona',\n  'CMC',\n  'Pitzer',\n  'Scripps',\n];\n\nexport const adminTagIndices = [\n  'Athena Network',\n  'Clubs',\n  'Events',\n  'College News',\n  'Courses',\n  'HMC',\n  'Pomona',\n  'CMC',\n  'Pitzer',\n  'Scripps',\n];\n\nexport const MAX_WIDTH_WEB = 700;\n\nexport const postOptions = ['Image Post', 'Text Post', 'Link', 'Event'];\n\nexport const IMAGE_BUCKET_URL =\n  'https://athena-image-storage.s3.us-west-2.amazonaws.com/imagePostImages';\n\nexport const EMOJI_LIST = [\n  '😀',\n  '😁',\n  '😂',\n  '🤣',\n  '😃',\n  '😄',\n  '😅',\n  '😆',\n  '😉',\n  '😊',\n  '😋',\n  '😎',\n  '😍',\n  '😘',\n  '😗',\n  '😙',\n  '😚',\n  '☺',\n  '🙂',\n  '🤗',\n  '🤔',\n  '😐',\n  '😑',\n  '😶',\n  '🙄',\n  '😏',\n  '😣',\n  '😥',\n  '😮',\n  '🤐',\n  '😯',\n  '😪',\n  '😫',\n  '😴',\n  '😌',\n  '🤓',\n  '😛',\n  '😜',\n  '😝',\n  '🤤',\n  '😒',\n  '😓',\n  '😔',\n  '😕',\n  '🙃',\n  '🤑',\n  '😲',\n  '☹',\n  '🙁',\n  '😖',\n  '😞',\n  '😟',\n  '😤',\n  '😢',\n  '😭',\n  '😦',\n  '😧',\n  '😨',\n  '😩',\n  '😬',\n  '😰',\n  '😱',\n  '😳',\n  '😵',\n  '😡',\n  '😠',\n  '😇',\n  '🤠',\n  '🤡',\n  '🤥',\n  '😷',\n  '🤒',\n  '🤕',\n  '🤢',\n  '🤧',\n  '😈',\n  '👿',\n  '👹',\n  '👺',\n  '💀',\n  '☠',\n  '👻',\n  '👽',\n  '👾',\n  '🤖',\n  '💩',\n  '😺',\n  '😸',\n  '😹',\n  '😻',\n  '😼',\n  '😽',\n  '🙀',\n  '😿',\n  '😾',\n  '🙈',\n  '🙉',\n  '🙊',\n  '👦',\n  '👦🏻',\n  '👦🏼',\n  '👦🏽',\n  '👦🏾',\n  '👦🏿',\n  '👧',\n  '👧🏻',\n  '👧🏼',\n  '👧🏽',\n  '👧🏾',\n  '👧🏿',\n  '👨',\n  '👨🏻',\n  '👨🏼',\n  '👨🏽',\n  '👨🏾',\n  '👨🏿',\n  '👩',\n  '👩🏻',\n  '👩🏼',\n  '👩🏽',\n  '👩🏾',\n  '👩🏿',\n  '👴',\n  '👴🏻',\n  '👴🏼',\n  '👴🏽',\n  '👴🏾',\n  '👴🏿',\n  '👵',\n  '👵🏻',\n  '👵🏼',\n  '👵🏽',\n  '👵🏾',\n  '👵🏿',\n  '👶',\n  '👶🏻',\n  '👶🏼',\n  '👶🏽',\n  '👶🏾',\n  '👶🏿',\n  '👼',\n  '👼🏻',\n  '👼🏼',\n  '👼🏽',\n  '👼🏾',\n  '👼🏿',\n  '👮',\n  '👮🏻',\n  '👮🏼',\n  '👮🏽',\n  '👮🏾',\n  '👮🏿',\n  '🕵',\n  '🕵🏻',\n  '🕵🏼',\n  '🕵🏽',\n  '🕵🏾',\n  '🕵🏿',\n  '💂',\n  '💂🏻',\n  '💂🏼',\n  '💂🏽',\n  '💂🏾',\n  '💂🏿',\n  '👷',\n  '👷🏻',\n  '👷🏼',\n  '👷🏽',\n  '👷🏾',\n  '👷🏿',\n  '👳',\n  '👳🏻',\n  '👳🏼',\n  '👳🏽',\n  '👳🏾',\n  '👳🏿',\n  '👱',\n  '👱🏻',\n  '👱🏼',\n  '👱🏽',\n  '👱🏾',\n  '👱🏿',\n  '🎅',\n  '🎅🏻',\n  '🎅🏼',\n  '🎅🏽',\n  '🎅🏾',\n  '🎅🏿',\n  '🤶',\n  '🤶🏻',\n  '🤶🏼',\n  '🤶🏽',\n  '🤶🏾',\n  '🤶🏿',\n  '👸',\n  '👸🏻',\n  '👸🏼',\n  '👸🏽',\n  '👸🏾',\n  '👸🏿',\n  '🤴',\n  '🤴🏻',\n  '🤴🏼',\n  '🤴🏽',\n  '🤴🏾',\n  '🤴🏿',\n  '👰',\n  '👰🏻',\n  '👰🏼',\n  '👰🏽',\n  '👰🏾',\n  '👰🏿',\n  '🤵',\n  '🤵🏻',\n  '🤵🏼',\n  '🤵🏽',\n  '🤵🏾',\n  '🤵🏿',\n  '🤰',\n  '🤰🏻',\n  '🤰🏼',\n  '🤰🏽',\n  '🤰🏾',\n  '🤰🏿',\n  '👲',\n  '👲🏻',\n  '👲🏼',\n  '👲🏽',\n  '👲🏾',\n  '👲🏿',\n  '🙍',\n  '🙍🏻',\n  '🙍🏼',\n  '🙍🏽',\n  '🙍🏾',\n  '🙍🏿',\n  '🙎',\n  '🙎🏻',\n  '🙎🏼',\n  '🙎🏽',\n  '🙎🏾',\n  '🙎🏿',\n  '🙅',\n  '🙅🏻',\n  '🙅🏼',\n  '🙅🏽',\n  '🙅🏾',\n  '🙅🏿',\n  '🙆',\n  '🙆🏻',\n  '🙆🏼',\n  '🙆🏽',\n  '🙆🏾',\n  '🙆🏿',\n  '💁',\n  '💁🏻',\n  '💁🏼',\n  '💁🏽',\n  '💁🏾',\n  '💁🏿',\n  '🙋',\n  '🙋🏻',\n  '🙋🏼',\n  '🙋🏽',\n  '🙋🏾',\n  '🙋🏿',\n  '🙇',\n  '🙇🏻',\n  '🙇🏼',\n  '🙇🏽',\n  '🙇🏾',\n  '🙇🏿',\n  '🤦',\n  '🤦🏻',\n  '🤦🏼',\n  '🤦🏽',\n  '🤦🏾',\n  '🤦🏿',\n  '🤷',\n  '🤷🏻',\n  '🤷🏼',\n  '🤷🏽',\n  '🤷🏾',\n  '🤷🏿',\n  '💆',\n  '💆🏻',\n  '💆🏼',\n  '💆🏽',\n  '💆🏾',\n  '💆🏿',\n  '💇',\n  '💇🏻',\n  '💇🏼',\n  '💇🏽',\n  '💇🏾',\n  '💇🏿',\n  '🚶',\n  '🚶🏻',\n  '🚶🏼',\n  '🚶🏽',\n  '🚶🏾',\n  '🚶🏿',\n  '🏃',\n  '🏃🏻',\n  '🏃🏼',\n  '🏃🏽',\n  '🏃🏾',\n  '🏃🏿',\n  '💃',\n  '💃🏻',\n  '💃🏼',\n  '💃🏽',\n  '💃🏾',\n  '💃🏿',\n  '🕺',\n  '🕺🏻',\n  '🕺🏼',\n  '🕺🏽',\n  '🕺🏾',\n  '🕺🏿',\n  '👯',\n  '🕴',\n  '🗣',\n  '👤',\n  '👥',\n  '🤺',\n  '🏇',\n  '⛷',\n  '🏂',\n  '🏌',\n  '🏄',\n  '🏄🏻',\n  '🏄🏼',\n  '🏄🏽',\n  '🏄🏾',\n  '🏄🏿',\n  '🚣',\n  '🚣🏻',\n  '🚣🏼',\n  '🚣🏽',\n  '🚣🏾',\n  '🚣🏿',\n  '🏊',\n  '🏊🏻',\n  '🏊🏼',\n  '🏊🏽',\n  '🏊🏾',\n  '🏊🏿',\n  '⛹',\n  '⛹🏻',\n  '⛹🏼',\n  '⛹🏽',\n  '⛹🏾',\n  '⛹🏿',\n  '🏋',\n  '🏋🏻',\n  '🏋🏼',\n  '🏋🏽',\n  '🏋🏾',\n  '🏋🏿',\n  '🚴',\n  '🚴🏻',\n  '🚴🏼',\n  '🚴🏽',\n  '🚴🏾',\n  '🚴🏿',\n  '🚵',\n  '🚵🏻',\n  '🚵🏼',\n  '🚵🏽',\n  '🚵🏾',\n  '🚵🏿',\n  '🏎',\n  '🏍',\n  '🤸',\n  '🤸🏻',\n  '🤸🏼',\n  '🤸🏽',\n  '🤸🏾',\n  '🤸🏿',\n  '🤼',\n  '🤼🏻',\n  '🤼🏼',\n  '🤼🏽',\n  '🤼🏾',\n  '🤼🏿',\n  '🤽',\n  '🤽🏻',\n  '🤽🏼',\n  '🤽🏽',\n  '🤽🏾',\n  '🤽🏿',\n  '🤾',\n  '🤾🏻',\n  '🤾🏼',\n  '🤾🏽',\n  '🤾🏾',\n  '🤾🏿',\n  '🤹',\n  '🤹🏻',\n  '🤹🏼',\n  '🤹🏽',\n  '🤹🏾',\n  '🤹🏿',\n  '👫',\n  '👬',\n  '👭',\n  '💏',\n  '👩‍❤️‍💋‍👨',\n  '👨‍❤️‍💋‍👨',\n  '👩‍❤️‍💋‍👩',\n  '💑',\n  '👩‍❤️‍👨',\n  '👨‍❤️‍👨',\n  '👩‍❤️‍👩',\n  '👪',\n  '👨‍👩‍👦',\n  '👨‍👩‍👧',\n  '👨‍👩‍👧‍👦',\n  '👨‍👩‍👦‍👦',\n  '👨‍👩‍👧‍👧',\n  '👨‍👨‍👦',\n  '👨‍👨‍👧',\n  '👨‍👨‍👧‍👦',\n  '👨‍👨‍👦‍👦',\n  '👨‍👨‍👧‍👧',\n  '👩‍👩‍👦',\n  '👩‍👩‍👧',\n  '👩‍👩‍👧‍👦',\n  '👩‍👩‍👦‍👦',\n  '👩‍👩‍👧‍👧',\n  '🏻',\n  '🏼',\n  '🏽',\n  '🏾',\n  '🏿',\n  '💪',\n  '💪🏻',\n  '💪🏼',\n  '💪🏽',\n  '💪🏾',\n  '💪🏿',\n  '🤳',\n  '🤳🏻',\n  '🤳🏼',\n  '🤳🏽',\n  '🤳🏾',\n  '🤳🏿',\n  '👈',\n  '👈🏻',\n  '👈🏼',\n  '👈🏽',\n  '👈🏾',\n  '👈🏿',\n  '👉',\n  '👉🏻',\n  '👉🏼',\n  '👉🏽',\n  '👉🏾',\n  '👉🏿',\n  '☝',\n  '☝🏻',\n  '☝🏼',\n  '☝🏽',\n  '☝🏾',\n  '☝🏿',\n  '👆',\n  '👆🏻',\n  '👆🏼',\n  '👆🏽',\n  '👆🏾',\n  '👆🏿',\n  '🖕',\n  '🖕🏻',\n  '🖕🏼',\n  '🖕🏽',\n  '🖕🏾',\n  '🖕🏿',\n  '👇',\n  '👇🏻',\n  '👇🏼',\n  '👇🏽',\n  '👇🏾',\n  '👇🏿',\n  '✌',\n  '✌🏻',\n  '✌🏼',\n  '✌🏽',\n  '✌🏾',\n  '✌🏿',\n  '🤞',\n  '🤞🏻',\n  '🤞🏼',\n  '🤞🏽',\n  '🤞🏾',\n  '🤞🏿',\n  '🖖',\n  '🖖🏻',\n  '🖖🏼',\n  '🖖🏽',\n  '🖖🏾',\n  '🖖🏿',\n  '🤘',\n  '🤘🏻',\n  '🤘🏼',\n  '🤘🏽',\n  '🤘🏾',\n  '🤘🏿',\n  '🤙',\n  '🤙🏻',\n  '🤙🏼',\n  '🤙🏽',\n  '🤙🏾',\n  '🤙🏿',\n  '🖐',\n  '🖐🏻',\n  '🖐🏼',\n  '🖐🏽',\n  '🖐🏾',\n  '🖐🏿',\n  '✋',\n  '✋🏻',\n  '✋🏼',\n  '✋🏽',\n  '✋🏾',\n  '✋🏿',\n  '👌',\n  '👌🏻',\n  '👌🏼',\n  '👌🏽',\n  '👌🏾',\n  '👌🏿',\n  '👍',\n  '👍🏻',\n  '👍🏼',\n  '👍🏽',\n  '👍🏾',\n  '👍🏿',\n  '👎',\n  '👎🏻',\n  '👎🏼',\n  '👎🏽',\n  '👎🏾',\n  '👎🏿',\n  '✊',\n  '✊🏻',\n  '✊🏼',\n  '✊🏽',\n  '✊🏾',\n  '✊🏿',\n  '👊',\n  '👊🏻',\n  '👊🏼',\n  '👊🏽',\n  '👊🏾',\n  '👊🏿',\n  '🤛',\n  '🤛🏻',\n  '🤛🏼',\n  '🤛🏽',\n  '🤛🏾',\n  '🤛🏿',\n  '🤜',\n  '🤜🏻',\n  '🤜🏼',\n  '🤜🏽',\n  '🤜🏾',\n  '🤜🏿',\n  '🤚',\n  '🤚🏻',\n  '🤚🏼',\n  '🤚🏽',\n  '🤚🏾',\n  '🤚🏿',\n  '👋',\n  '👋🏻',\n  '👋🏼',\n  '👋🏽',\n  '👋🏾',\n  '👋🏿',\n  '👏',\n  '👏🏻',\n  '👏🏼',\n  '👏🏽',\n  '👏🏾',\n  '👏🏿',\n  '✍',\n  '✍🏻',\n  '✍🏼',\n  '✍🏽',\n  '✍🏾',\n  '✍🏿',\n  '👐',\n  '👐🏻',\n  '👐🏼',\n  '👐🏽',\n  '👐🏾',\n  '👐🏿',\n  '🙌',\n  '🙌🏻',\n  '🙌🏼',\n  '🙌🏽',\n  '🙌🏾',\n  '🙌🏿',\n  '🙏',\n  '🙏🏻',\n  '🙏🏼',\n  '🙏🏽',\n  '🙏🏾',\n  '🙏🏿',\n  '🤝',\n  '🤝🏻',\n  '🤝🏼',\n  '🤝🏽',\n  '🤝🏾',\n  '🤝🏿',\n  '💅',\n  '💅🏻',\n  '💅🏼',\n  '💅🏽',\n  '💅🏾',\n  '💅🏿',\n  '👂',\n  '👂🏻',\n  '👂🏼',\n  '👂🏽',\n  '👂🏾',\n  '👂🏿',\n  '👃',\n  '👃🏻',\n  '👃🏼',\n  '👃🏽',\n  '👃🏾',\n  '👃🏿',\n  '👣',\n  '👀',\n  '👁',\n  '👁‍🗨',\n  '👅',\n  '👄',\n  '💋',\n  '💘',\n  '❤',\n  '💓',\n  '💔',\n  '💕',\n  '💖',\n  '💗',\n  '💙',\n  '💚',\n  '💛',\n  '💜',\n  '🖤',\n  '💝',\n  '💞',\n  '💟',\n  '❣',\n  '💌',\n  '💤',\n  '💢',\n  '💣',\n  '💥',\n  '💦',\n  '💨',\n  '💫',\n  '💬',\n  '🗨',\n  '🗯',\n  '💭',\n  '🕳',\n  '👓',\n  '🕶',\n  '👔',\n  '👕',\n  '👖',\n  '👗',\n  '👘',\n  '👙',\n  '👚',\n  '👛',\n  '👜',\n  '👝',\n  '🛍',\n  '🎒',\n  '👞',\n  '👟',\n  '👠',\n  '👡',\n  '👢',\n  '👑',\n  '👒',\n  '🎩',\n  '🎓',\n  '⛑',\n  '📿',\n  '💄',\n  '💍',\n  '💎',\n  '🐵',\n  '🐒',\n  '🦍',\n  '🐶',\n  '🐕',\n  '🐩',\n  '🐺',\n  '🦊',\n  '🐱',\n  '🐈',\n  '🦁',\n  '🐯',\n  '🐅',\n  '🐆',\n  '🐴',\n  '🐎',\n  '🦌',\n  '🦄',\n  '🐮',\n  '🐂',\n  '🐃',\n  '🐄',\n  '🐷',\n  '🐖',\n  '🐗',\n  '🐽',\n  '🐏',\n  '🐑',\n  '🐐',\n  '🐪',\n  '🐫',\n  '🐘',\n  '🦏',\n  '🐭',\n  '🐁',\n  '🐀',\n  '🐹',\n  '🐰',\n  '🐇',\n  '🐿',\n  '🦇',\n  '🐻',\n  '🐨',\n  '🐼',\n  '🐾',\n  '🦃',\n  '🐔',\n  '🐓',\n  '🐣',\n  '🐤',\n  '🐥',\n  '🐦',\n  '🐧',\n  '🕊',\n  '🦅',\n  '🦆',\n  '🦉',\n  '🐸',\n  '🐊',\n  '🐢',\n  '🦎',\n  '🐍',\n  '🐲',\n  '🐉',\n  '🐳',\n  '🐋',\n  '🐬',\n  '🐟',\n  '🐠',\n  '🐡',\n  '🦈',\n  '🐙',\n  '🐚',\n  '🦀',\n  '🦐',\n  '🦑',\n  '🦋',\n  '🐌',\n  '🐛',\n  '🐜',\n  '🐝',\n  '🐞',\n  '🕷',\n  '🕸',\n  '🦂',\n  '💐',\n  '🌸',\n  '💮',\n  '🏵',\n  '🌹',\n  '🥀',\n  '🌺',\n  '🌻',\n  '🌼',\n  '🌷',\n  '🌱',\n  '🌲',\n  '🌳',\n  '🌴',\n  '🌵',\n  '🌾',\n  '🌿',\n  '☘',\n  '🍀',\n  '🍁',\n  '🍂',\n  '🍃',\n  '🍇',\n  '🍈',\n  '🍉',\n  '🍊',\n  '🍋',\n  '🍌',\n  '🍍',\n  '🍎',\n  '🍏',\n  '🍐',\n  '🍑',\n  '🍒',\n  '🍓',\n  '🥝',\n  '🍅',\n  '🥑',\n  '🍆',\n  '🥔',\n  '🥕',\n  '🌽',\n  '🌶',\n  '🥒',\n  '🍄',\n  '🥜',\n  '🌰',\n  '🍞',\n  '🥐',\n  '🥖',\n  '🥞',\n  '🧀',\n  '🍖',\n  '🍗',\n  '🥓',\n  '🍔',\n  '🍟',\n  '🍕',\n  '🌭',\n  '🌮',\n  '🌯',\n  '🥙',\n  '🥚',\n  '🍳',\n  '🥘',\n  '🍲',\n  '🥗',\n  '🍿',\n  '🍱',\n  '🍘',\n  '🍙',\n  '🍚',\n  '🍛',\n  '🍜',\n  '🍝',\n  '🍠',\n  '🍢',\n  '🍣',\n  '🍤',\n  '🍥',\n  '🍡',\n  '🍦',\n  '🍧',\n  '🍨',\n  '🍩',\n  '🍪',\n  '🎂',\n  '🍰',\n  '🍫',\n  '🍬',\n  '🍭',\n  '🍮',\n  '🍯',\n  '🍼',\n  '🥛',\n  '☕',\n  '🍵',\n  '🍶',\n  '🍾',\n  '🍷',\n  '🍸',\n  '🍹',\n  '🍺',\n  '🍻',\n  '🥂',\n  '🥃',\n  '🍽',\n  '🍴',\n  '🥄',\n  '🔪',\n  '🏺',\n  '🌍',\n  '🌎',\n  '🌏',\n  '🌐',\n  '🗺',\n  '🗾',\n  '🏔',\n  '⛰',\n  '🌋',\n  '🗻',\n  '🏕',\n  '🏖',\n  '🏜',\n  '🏝',\n  '🏞',\n  '🏟',\n  '🏛',\n  '🏗',\n  '🏘',\n  '🏙',\n  '🏚',\n  '🏠',\n  '🏡',\n  '🏢',\n  '🏣',\n  '🏤',\n  '🏥',\n  '🏦',\n  '🏨',\n  '🏩',\n  '🏪',\n  '🏫',\n  '🏬',\n  '🏭',\n  '🏯',\n  '🏰',\n  '💒',\n  '🗼',\n  '🗽',\n  '⛪',\n  '🕌',\n  '🕍',\n  '⛩',\n  '🕋',\n  '⛲',\n  '⛺',\n  '🌁',\n  '🌃',\n  '🌄',\n  '🌅',\n  '🌆',\n  '🌇',\n  '🌉',\n  '♨',\n  '🌌',\n  '🎠',\n  '🎡',\n  '🎢',\n  '💈',\n  '🎪',\n  '🎭',\n  '🖼',\n  '🎨',\n  '🎰',\n  '🚂',\n  '🚃',\n  '🚄',\n  '🚅',\n  '🚆',\n  '🚇',\n  '🚈',\n  '🚉',\n  '🚊',\n  '🚝',\n  '🚞',\n  '🚋',\n  '🚌',\n  '🚍',\n  '🚎',\n  '🚐',\n  '🚑',\n  '🚒',\n  '🚓',\n  '🚔',\n  '🚕',\n  '🚖',\n  '🚗',\n  '🚘',\n  '🚙',\n  '🚚',\n  '🚛',\n  '🚜',\n  '🚲',\n  '🛴',\n  '🛵',\n  '🚏',\n  '🛣',\n  '🛤',\n  '⛽',\n  '🚨',\n  '🚥',\n  '🚦',\n  '🚧',\n  '🛑',\n  '⚓',\n  '⛵',\n  '🛶',\n  '🚤',\n  '🛳',\n  '⛴',\n  '🛥',\n  '🚢',\n  '✈',\n  '🛩',\n  '🛫',\n  '🛬',\n  '💺',\n  '🚁',\n  '🚟',\n  '🚠',\n  '🚡',\n  '🚀',\n  '🛰',\n  '🛎',\n  '🚪',\n  '🛌',\n  '🛏',\n  '🛋',\n  '🚽',\n  '🚿',\n  '🛀',\n  '🛀🏻',\n  '🛀🏼',\n  '🛀🏽',\n  '🛀🏾',\n  '🛀🏿',\n  '🛁',\n  '⌛',\n  '⏳',\n  '⌚',\n  '⏰',\n  '⏱',\n  '⏲',\n  '🕰',\n  '🕛',\n  '🕧',\n  '🕐',\n  '🕜',\n  '🕑',\n  '🕝',\n  '🕒',\n  '🕞',\n  '🕓',\n  '🕟',\n  '🕔',\n  '🕠',\n  '🕕',\n  '🕡',\n  '🕖',\n  '🕢',\n  '🕗',\n  '🕣',\n  '🕘',\n  '🕤',\n  '🕙',\n  '🕥',\n  '🕚',\n  '🕦',\n  '🌑',\n  '🌒',\n  '🌓',\n  '🌔',\n  '🌕',\n  '🌖',\n  '🌗',\n  '🌘',\n  '🌙',\n  '🌚',\n  '🌛',\n  '🌜',\n  '🌡',\n  '☀',\n  '🌝',\n  '🌞',\n  '⭐',\n  '🌟',\n  '🌠',\n  '☁',\n  '⛅',\n  '⛈',\n  '🌤',\n  '🌥',\n  '🌦',\n  '🌧',\n  '🌨',\n  '🌩',\n  '🌪',\n  '🌫',\n  '🌬',\n  '🌀',\n  '🌈',\n  '🌂',\n  '☂',\n  '☔',\n  '⛱',\n  '⚡',\n  '❄',\n  '☃',\n  '⛄',\n  '☄',\n  '🔥',\n  '💧',\n  '🌊',\n  '🎃',\n  '🎄',\n  '🎆',\n  '🎇',\n  '✨',\n  '🎈',\n  '🎉',\n  '🎊',\n  '🎋',\n  '🎍',\n  '🎎',\n  '🎏',\n  '🎐',\n  '🎑',\n  '🎀',\n  '🎁',\n  '🎗',\n  '🎟',\n  '🎫',\n  '🎖',\n  '🏆',\n  '🏅',\n  '🥇',\n  '🥈',\n  '🥉',\n  '⚽',\n  '⚾',\n  '🏀',\n  '🏐',\n  '🏈',\n  '🏉',\n  '🎾',\n  '🎱',\n  '🎳',\n  '🏏',\n  '🏑',\n  '🏒',\n  '🏓',\n  '🏸',\n  '🥊',\n  '🥋',\n  '🥅',\n  '🎯',\n  '⛳',\n  '⛸',\n  '🎣',\n  '🎽',\n  '🎿',\n  '🎮',\n  '🕹',\n  '🎲',\n  '♠',\n  '♥',\n  '♦',\n  '♣',\n  '🃏',\n  '🀄',\n  '🎴',\n  '🔇',\n  '🔈',\n  '🔉',\n  '🔊',\n  '📢',\n  '📣',\n  '📯',\n  '🔔',\n  '🔕',\n  '🎼',\n  '🎵',\n  '🎶',\n  '🎙',\n  '🎚',\n  '🎛',\n  '🎤',\n  '🎧',\n  '📻',\n  '🎷',\n  '🎸',\n  '🎹',\n  '🎺',\n  '🎻',\n  '🥁',\n  '📱',\n  '📲',\n  '☎',\n  '📞',\n  '📟',\n  '📠',\n  '🔋',\n  '🔌',\n  '💻',\n  '🖥',\n  '🖨',\n  '⌨',\n  '🖱',\n  '🖲',\n  '💽',\n  '💾',\n  '💿',\n  '📀',\n  '🎥',\n  '🎞',\n  '📽',\n  '🎬',\n  '📺',\n  '📷',\n  '📸',\n  '📹',\n  '📼',\n  '🔍',\n  '🔎',\n  '🔬',\n  '🔭',\n  '📡',\n  '🕯',\n  '💡',\n  '🔦',\n  '🏮',\n  '📔',\n  '📕',\n  '📖',\n  '📗',\n  '📘',\n  '📙',\n  '📚',\n  '📓',\n  '📒',\n  '📃',\n  '📜',\n  '📄',\n  '📰',\n  '🗞',\n  '📑',\n  '🔖',\n  '🏷',\n  '💰',\n  '💴',\n  '💵',\n  '💶',\n  '💷',\n  '💸',\n  '💳',\n  '💹',\n  '💱',\n  '💲',\n  '✉',\n  '📧',\n  '📨',\n  '📩',\n  '📤',\n  '📥',\n  '📦',\n  '📫',\n  '📪',\n  '📬',\n  '📭',\n  '📮',\n  '🗳',\n  '✏',\n  '✒',\n  '🖋',\n  '🖊',\n  '🖌',\n  '🖍',\n  '📝',\n  '💼',\n  '📁',\n  '📂',\n  '🗂',\n  '📅',\n  '📆',\n  '🗒',\n  '🗓',\n  '📇',\n  '📈',\n  '📉',\n  '📊',\n  '📋',\n  '📌',\n  '📍',\n  '📎',\n  '🖇',\n  '📏',\n  '📐',\n  '✂',\n  '🗃',\n  '🗄',\n  '🗑',\n  '🔒',\n  '🔓',\n  '🔏',\n  '🔐',\n  '🔑',\n  '🗝',\n  '🔨',\n  '⛏',\n  '⚒',\n  '🛠',\n  '🗡',\n  '⚔',\n  '🔫',\n  '🏹',\n  '🛡',\n  '🔧',\n  '🔩',\n  '⚙',\n  '🗜',\n  '⚗',\n  '⚖',\n  '🔗',\n  '⛓',\n  '💉',\n  '💊',\n  '🚬',\n  '⚰',\n  '⚱',\n  '🗿',\n  '🛢',\n  '🔮',\n  '🛒',\n  '🏧',\n  '🚮',\n  '🚰',\n  '♿',\n  '🚹',\n  '🚺',\n  '🚻',\n  '🚼',\n  '🚾',\n  '🛂',\n  '🛃',\n  '🛄',\n  '🛅',\n  '⚠',\n  '🚸',\n  '⛔',\n  '🚫',\n  '🚳',\n  '🚭',\n  '🚯',\n  '🚱',\n  '🚷',\n  '📵',\n  '🔞',\n  '☢',\n  '☣',\n  '⬆',\n  '↗',\n  '➡',\n  '↘',\n  '⬇',\n  '↙',\n  '⬅',\n  '↖',\n  '↕',\n  '↔',\n  '↩',\n  '↪',\n  '⤴',\n  '⤵',\n  '🔃',\n  '🔄',\n  '🔙',\n  '🔚',\n  '🔛',\n  '🔜',\n  '🔝',\n  '🛐',\n  '⚛',\n  '🕉',\n  '✡',\n  '☸',\n  '☯',\n  '✝',\n  '☦',\n  '☪',\n  '☮',\n  '🕎',\n  '🔯',\n  '♈',\n  '♉',\n  '♊',\n  '♋',\n  '♌',\n  '♍',\n  '♎',\n  '♏',\n  '♐',\n  '♑',\n  '♒',\n  '♓',\n  '⛎',\n  '🔀',\n  '🔁',\n  '🔂',\n  '▶',\n  '⏩',\n  '⏭',\n  '⏯',\n  '◀',\n  '⏪',\n  '⏮',\n  '🔼',\n  '⏫',\n  '🔽',\n  '⏬',\n  '⏸',\n  '⏹',\n  '⏺',\n  '⏏',\n  '🎦',\n  '🔅',\n  '🔆',\n  '📶',\n  '📳',\n  '📴',\n  '♻',\n  '📛',\n  '⚜',\n  '🔰',\n  '🔱',\n  '⭕',\n  '✅',\n  '☑',\n  '✔',\n  '✖',\n  '❌',\n  '❎',\n  '➕',\n  '➖',\n  '➗',\n  '➰',\n  '➿',\n  '〽',\n  '✳',\n  '✴',\n  '❇',\n  '‼',\n  '⁉',\n  '❓',\n  '❔',\n  '❕',\n  '❗',\n  '〰',\n  '©',\n  '®',\n  '™',\n  '#️⃣',\n  '*️⃣',\n  '0️⃣',\n  '1️⃣',\n  '2️⃣',\n  '3️⃣',\n  '4️⃣',\n  '5️⃣',\n  '6️⃣',\n  '7️⃣',\n  '8️⃣',\n  '9️⃣',\n  '🔟',\n  '💯',\n  '🔠',\n  '🔡',\n  '🔢',\n  '🔣',\n  '🔤',\n  '🅰',\n  '🆎',\n  '🅱',\n  '🆑',\n  '🆒',\n  '🆓',\n  'ℹ',\n  '🆔',\n  'Ⓜ',\n  '🆕',\n  '🆖',\n  '🅾',\n  '🆗',\n  '🅿',\n  '🆘',\n  '🆙',\n  '🆚',\n  '🈁',\n  '🈂',\n  '🈷',\n  '🈶',\n  '🈯',\n  '🉐',\n  '🈹',\n  '🈚',\n  '🈲',\n  '🉑',\n  '🈸',\n  '🈴',\n  '🈳',\n  '㊗',\n  '㊙',\n  '🈺',\n  '🈵',\n  '▪',\n  '▫',\n  '◻',\n  '◼',\n  '◽',\n  '◾',\n  '⬛',\n  '⬜',\n  '🔶',\n  '🔷',\n  '🔸',\n  '🔹',\n  '🔺',\n  '🔻',\n  '💠',\n  '🔘',\n  '🔲',\n  '🔳',\n  '⚪',\n  '⚫',\n  '🔴',\n  '🔵',\n  '🏁',\n  '🚩',\n  '🎌',\n  '🏴',\n  '🏳',\n  '🇦🇨',\n  '🇦🇩',\n  '🇦🇪',\n  '🇦🇫',\n  '🇦🇬',\n  '🇦🇮',\n  '🇦🇱',\n  '🇦🇲',\n  '🇦🇴',\n  '🇦🇶',\n  '🇦🇷',\n  '🇦🇸',\n  '🇦🇹',\n  '🇦🇺',\n  '🇦🇼',\n  '🇦🇽',\n  '🇦🇿',\n  '🇧🇦',\n  '🇧🇧',\n  '🇧🇩',\n  '🇧🇪',\n  '🇧🇫',\n  '🇧🇬',\n  '🇧🇭',\n  '🇧🇮',\n  '🇧🇯',\n  '🇧🇱',\n  '🇧🇲',\n  '🇧🇳',\n  '🇧🇴',\n  '🇧🇶',\n  '🇧🇷',\n  '🇧🇸',\n  '🇧🇹',\n  '🇧🇻',\n  '🇧🇼',\n  '🇧🇾',\n  '🇧🇿',\n  '🇨🇦',\n  '🇨🇨',\n  '🇨🇩',\n  '🇨🇫',\n  '🇨🇬',\n  '🇨🇭',\n  '🇨🇮',\n  '🇨🇰',\n  '🇨🇱',\n  '🇨🇲',\n  '🇨🇳',\n  '🇨🇴',\n  '🇨🇵',\n  '🇨🇷',\n  '🇨🇺',\n  '🇨🇻',\n  '🇨🇼',\n  '🇨🇽',\n  '🇨🇾',\n  '🇨🇿',\n  '🇩🇪',\n  '🇩🇬',\n  '🇩🇯',\n  '🇩🇰',\n  '🇩🇲',\n  '🇩🇴',\n  '🇩🇿',\n  '🇪🇦',\n  '🇪🇨',\n  '🇪🇪',\n  '🇪🇬',\n  '🇪🇭',\n  '🇪🇷',\n  '🇪🇸',\n  '🇪🇹',\n  '🇪🇺',\n  '🇫🇮',\n  '🇫🇯',\n  '🇫🇰',\n  '🇫🇲',\n  '🇫🇴',\n  '🇫🇷',\n  '🇬🇦',\n  '🇬🇧',\n  '🇬🇩',\n  '🇬🇪',\n  '🇬🇫',\n  '🇬🇬',\n  '🇬🇭',\n  '🇬🇮',\n  '🇬🇱',\n  '🇬🇲',\n  '🇬🇳',\n  '🇬🇵',\n  '🇬🇶',\n  '🇬🇷',\n  '🇬🇸',\n  '🇬🇹',\n  '🇬🇺',\n  '🇬🇼',\n  '🇬🇾',\n  '🇭🇰',\n  '🇭🇲',\n  '🇭🇳',\n  '🇭🇷',\n  '🇭🇹',\n  '🇭🇺',\n  '🇮🇨',\n  '🇮🇩',\n  '🇮🇪',\n  '🇮🇱',\n  '🇮🇲',\n  '🇮🇳',\n  '🇮🇴',\n  '🇮🇶',\n  '🇮🇷',\n  '🇮🇸',\n  '🇮🇹',\n  '🇯🇪',\n  '🇯🇲',\n  '🇯🇴',\n  '🇯🇵',\n  '🇰🇪',\n  '🇰🇬',\n  '🇰🇭',\n  '🇰🇮',\n  '🇰🇲',\n  '🇰🇳',\n  '🇰🇵',\n  '🇰🇷',\n  '🇰🇼',\n  '🇰🇾',\n  '🇰🇿',\n  '🇱🇦',\n  '🇱🇧',\n  '🇱🇨',\n  '🇱🇮',\n  '🇱🇰',\n  '🇱🇷',\n  '🇱🇸',\n  '🇱🇹',\n  '🇱🇺',\n  '🇱🇻',\n  '🇱🇾',\n  '🇲🇦',\n  '🇲🇨',\n  '🇲🇩',\n  '🇲🇪',\n  '🇲🇫',\n  '🇲🇬',\n  '🇲🇭',\n  '🇲🇰',\n  '🇲🇱',\n  '🇲🇲',\n  '🇲🇳',\n  '🇲🇴',\n  '🇲🇵',\n  '🇲🇶',\n  '🇲🇷',\n  '🇲🇸',\n  '🇲🇹',\n  '🇲🇺',\n  '🇲🇻',\n  '🇲🇼',\n  '🇲🇽',\n  '🇲🇾',\n  '🇲🇿',\n  '🇳🇦',\n  '🇳🇨',\n  '🇳🇪',\n  '🇳🇫',\n  '🇳🇬',\n  '🇳🇮',\n  '🇳🇱',\n  '🇳🇴',\n  '🇳🇵',\n  '🇳🇷',\n  '🇳🇺',\n  '🇳🇿',\n  '🇴🇲',\n  '🇵🇦',\n  '🇵🇪',\n  '🇵🇫',\n  '🇵🇬',\n  '🇵🇭',\n  '🇵🇰',\n  '🇵🇱',\n  '🇵🇲',\n  '🇵🇳',\n  '🇵🇷',\n  '🇵🇸',\n  '🇵🇹',\n  '🇵🇼',\n  '🇵🇾',\n  '🇶🇦',\n  '🇷🇪',\n  '🇷🇴',\n  '🇷🇸',\n  '🇷🇺',\n  '🇷🇼',\n  '🇸🇦',\n  '🇸🇧',\n  '🇸🇨',\n  '🇸🇩',\n  '🇸🇪',\n  '🇸🇬',\n  '🇸🇭',\n  '🇸🇮',\n  '🇸🇯',\n  '🇸🇰',\n  '🇸🇱',\n  '🇸🇲',\n  '🇸🇳',\n  '🇸🇴',\n  '🇸🇷',\n  '🇸🇸',\n  '🇸🇹',\n  '🇸🇻',\n  '🇸🇽',\n  '🇸🇾',\n  '🇸🇿',\n  '🇹🇦',\n  '🇹🇨',\n  '🇹🇩',\n  '🇹🇫',\n  '🇹🇬',\n  '🇹🇭',\n  '🇹🇯',\n  '🇹🇰',\n  '🇹🇱',\n  '🇹🇲',\n  '🇹🇳',\n  '🇹🇴',\n  '🇹🇷',\n  '🇹🇹',\n  '🇹🇻',\n  '🇹🇼',\n  '🇹🇿',\n  '🇺🇦',\n  '🇺🇬',\n  '🇺🇲',\n  '🇺🇸',\n  '🇺🇾',\n  '🇺🇿',\n  '🇻🇦',\n  '🇻🇨',\n  '🇻🇪',\n  '🇻🇬',\n  '🇻🇮',\n  '🇻🇳',\n  '🇻🇺',\n  '🇼🇫',\n  '🇼🇸',\n  '🇽🇰',\n  '🇾🇪',\n  '🇾🇹',\n  '🇿🇦',\n  '🇿🇲',\n  '🇿🇼',\n];\n","import { apiSlice } from './apiSlice';\nimport { DiscoverPost } from '../../app/types';\nimport { DISCOVER_LIST_PAGE_SIZE } from '../../constants/discover';\nimport { createEntityAdapter } from '@reduxjs/toolkit';\n\ntype getPostsArgs = {\n  userKey: string;\n  userName: string;\n  pageNumber?: number;\n  tag?: string;\n  searchTerm?: string;\n  sponsor?: boolean;\n};\n\nconst postsAdapter = createEntityAdapter<DiscoverPost>({\n  selectId: (post: DiscoverPost) => post._id,\n});\n\n// Helper Functions\n\nconst tranformComments = (comments, userName) =>\n  comments.map((comment) => ({\n    ...comment,\n    numLikes: comment.likes.length,\n    hasLiked: comment.likes.includes(userName),\n  }));\n\nexport const discoverApiSlice = apiSlice.injectEndpoints({\n  overrideExisting: true,\n  endpoints: (builder) => ({\n    getDiscoverPosts: builder.query<any, getPostsArgs>({\n      keepUnusedDataFor: 6000,\n      query: ({ userKey, pageNumber, tag, searchTerm, sponsor = true }) => ({\n        url: `/discover/getPosts`,\n        headers: {\n          userKey,\n        },\n        params: {\n          tag,\n          searchTerm,\n          pageNumber,\n          sponsor,\n          pageLength: DISCOVER_LIST_PAGE_SIZE,\n        },\n      }),\n      transformResponse: (response: DiscoverPost[], _, { userName }) => {\n        // Return Post To State Using Adapters\n        return postsAdapter.addMany(\n          postsAdapter.getInitialState({\n            hasMorePages: response.length > 0,\n          }),\n          // TODO: Refactoring likes and comments. Should maybe be done in backend\n          response.map((post) => ({\n            ...post,\n            numLikes: post.likes.length,\n            hasLiked: post.likes.includes(userName),\n            comments: tranformComments(post.comments, userName),\n          }))\n        );\n      },\n      async onQueryStarted(\n        { userKey, pageNumber, userName, searchTerm, tag, sponsor },\n        { queryFulfilled, dispatch }\n      ) {\n        if (!pageNumber) {\n          return;\n        }\n        const { data } = await queryFulfilled;\n\n        if (data?.ids?.length > 0) {\n          // Add Posts On Current Request To Page 1\n          dispatch(\n            discoverApiSlice.util.updateQueryData(\n              'getDiscoverPosts',\n              { userKey, pageNumber: 1, userName, searchTerm, tag, sponsor },\n              (draft) => {\n                postsAdapter.addMany(draft, postsSelectors.selectAll(data));\n              }\n            )\n          );\n\n          if (pageNumber > 1) {\n            // Remove Cached Data From State Since We Already Added It To Page 1\n            dispatch(\n              discoverApiSlice.util.updateQueryData(\n                'getDiscoverPosts',\n                { userKey, pageNumber, userName, searchTerm, tag, sponsor },\n                (draft) => {\n                  draft = postsAdapter.getInitialState();\n                }\n              )\n            );\n          }\n        } else {\n          // No More Pages To Load\n          dispatch(\n            discoverApiSlice.util.updateQueryData(\n              'getDiscoverPosts',\n              { userKey, pageNumber: 1, userName, searchTerm, tag, sponsor },\n              (draft) => {\n                draft.hasMorePages = false;\n              }\n            )\n          );\n        }\n      },\n    }),\n\n    createDiscoverPost: builder.mutation({\n      query: ({\n        userKey,\n        title,\n        type,\n        content,\n        tags,\n        status,\n        emoji,\n        postBody,\n        pinned,\n      }) => {\n        if (type === 'contentImage' || type === 'contentEvent') {\n          return {\n            url: '/discover/addPost',\n            method: 'POST',\n            headers: { userKey },\n            body: postBody,\n          };\n        }\n        return {\n          url: '/discover/addPost',\n          method: 'POST',\n          headers: { userKey },\n          body: {\n            title,\n            type,\n            [type]: content,\n            tags,\n            status,\n            emoji,\n            pinned,\n          },\n        };\n      },\n      async onQueryStarted(\n        { userKey, userName },\n        { dispatch, queryFulfilled }\n      ) {\n        try {\n          const { data: newPost } = await queryFulfilled;\n\n          // Add New Post To State\n          dispatch(\n            discoverApiSlice.util.updateQueryData(\n              'getDiscoverPosts',\n              { userKey, userName, pageNumber: 1 },\n              (draft) => {\n                postsAdapter.addOne(draft, {\n                  ...newPost,\n                  numLikes: 0,\n                  hasLiked: false,\n                });\n              }\n            )\n          );\n        } catch (e) {\n          console.warn('Error Adding Post To State', e);\n        }\n      },\n    }),\n    deleteDiscoverPost: builder.mutation({\n      query: ({ userKey, _id, userName, title }) => ({\n        url: '/discover/deletePost',\n        method: 'DELETE',\n        headers: { userKey },\n        body: {\n          _id,\n          userName,\n          title,\n        },\n        responseHandler: (response) => response.text(),\n      }),\n      async onQueryStarted(\n        { userKey, _id, userName, searchTerm, tag },\n        { dispatch, queryFulfilled }\n      ) {\n        if (searchTerm || tag) {\n          var searchPatchResult = dispatch(\n            discoverApiSlice.util.updateQueryData(\n              'getDiscoverPosts',\n              { userKey, userName, pageNumber: 1, searchTerm, tag },\n              (draft) => {\n                postsAdapter.removeOne(draft, _id);\n              }\n            )\n          );\n        }\n\n        var patchResult = dispatch(\n          discoverApiSlice.util.updateQueryData(\n            'getDiscoverPosts',\n            { userKey, userName, pageNumber: 1 },\n            (draft) => {\n              postsAdapter.removeOne(draft, _id);\n            }\n          )\n        );\n\n        try {\n          await queryFulfilled;\n        } catch {\n          patchResult.undo();\n          if (searchPatchResult) {\n            searchPatchResult.undo();\n          }\n        }\n      },\n    }),\n\n    getPostById: builder.query({\n      query: ({ userKey, postId }) => ({\n        url: `/discover/getPostById`,\n        headers: {\n          userKey,\n        },\n        params: {\n          id: postId,\n        },\n      }),\n      async onQueryStarted(\n        { userKey, postId, userName, searchTerm, tag },\n        { dispatch, queryFulfilled }\n      ) {\n        // Replace Post In State With Updated Post\n\n        try {\n          const { data: updatedPost } = await queryFulfilled;\n          const updateFunction = (draft) => {\n            postsAdapter.updateOne(draft, {\n              id: postId,\n              changes: {\n                ...updatedPost,\n                numLikes: updatedPost.likes.length,\n                hasLiked: updatedPost.likes.includes(userName),\n                comments: tranformComments(updatedPost.comments, userName),\n              },\n            });\n          };\n          dispatch(\n            discoverApiSlice.util.updateQueryData(\n              'getDiscoverPosts',\n              {\n                userKey,\n                userName,\n                pageNumber: 1,\n              },\n              updateFunction\n            )\n          );\n          if (searchTerm || tag) {\n            dispatch(\n              discoverApiSlice.util.updateQueryData(\n                'getDiscoverPosts',\n                {\n                  userKey,\n                  userName,\n                  pageNumber: 1,\n                  searchTerm,\n                  tag,\n                },\n                updateFunction\n              )\n            );\n          }\n        } catch (e) {\n          console.warn('Error Updating Post In State', e);\n        }\n      },\n    }),\n\n    likePost: builder.mutation({\n      query: ({ userKey, _id, title, postAuthor }) => ({\n        url: '/discover/like',\n        method: 'PATCH',\n        headers: { userKey },\n        body: {\n          _id,\n          title,\n          userName: postAuthor,\n        },\n        responseHandler: (response) => response.text(),\n      }),\n      async onQueryStarted(\n        { userKey, _id, userName, searchTerm, tag },\n        { dispatch, queryFulfilled }\n      ) {\n        const updateFunction = (draft) => {\n          const post = postsSelectors.selectById(draft, _id);\n          // Use updateOne to update the post with the given ID\n          postsAdapter.updateOne(draft, {\n            id: _id,\n            changes: {\n              numLikes: post.hasLiked ? post.numLikes - 1 : post.numLikes + 1,\n              hasLiked: !post.hasLiked,\n            },\n          });\n        };\n\n        if (searchTerm || tag) {\n          var searchPatchResult = dispatch(\n            discoverApiSlice.util.updateQueryData(\n              'getDiscoverPosts',\n              { userKey, pageNumber: 1, userName, searchTerm, tag },\n              updateFunction\n            )\n          );\n        }\n        var patchResult = dispatch(\n          discoverApiSlice.util.updateQueryData(\n            'getDiscoverPosts',\n            { userKey, pageNumber: 1, userName },\n            updateFunction\n          )\n        );\n\n        try {\n          await queryFulfilled;\n        } catch {\n          if (searchPatchResult) {\n            searchPatchResult.undo();\n          }\n          patchResult.undo();\n        }\n      },\n    }),\n\n    addComment: builder.mutation({\n      query: ({ userKey, _id, text }) => ({\n        url: '/discover/addComment',\n        method: 'POST',\n        headers: { userKey },\n        body: {\n          _id,\n          text,\n        },\n        responseHandler: (response) => response.text(),\n      }),\n\n      async onQueryStarted(\n        { userKey, _id, userName, searchTerm, tag },\n        { dispatch, queryFulfilled }\n      ) {\n        try {\n          await queryFulfilled;\n\n          // Call getPostById to update the post in state\n          dispatch(\n            discoverApiSlice.endpoints.getPostById.initiate({\n              userKey,\n              postId: _id,\n              userName,\n              searchTerm,\n              tag,\n            })\n          );\n        } catch (e) {\n          console.warn('Error Adding Comment To State', e);\n        }\n      },\n    }),\n\n    likeComment: builder.mutation({\n      query: ({ userKey, postId, commentId }) => ({\n        url: '/discover/likeComment',\n        method: 'PATCH',\n        headers: { userKey },\n        body: {\n          postId,\n          commentId,\n        },\n        responseHandler: (response) => response.text(),\n      }),\n      async onQueryStarted(\n        { userKey, postId, commentId, userName, searchTerm, tag },\n        { dispatch, queryFulfilled }\n      ) {\n        const updateFunction = (draft) => {\n          const post = postsSelectors.selectById(draft, postId);\n          // Use updateOne to update the post with the given ID\n          postsAdapter.updateOne(draft, {\n            id: postId,\n            changes: {\n              comments: post.comments.map((comment) => {\n                if (comment._id === commentId) {\n                  return {\n                    ...comment,\n                    numLikes: comment.hasLiked\n                      ? comment.numLikes - 1\n                      : comment.numLikes + 1,\n                    hasLiked: !comment.hasLiked,\n                  };\n                }\n                return comment;\n              }),\n            },\n          });\n        };\n        if (searchTerm || tag) {\n          var searchPatchResult = dispatch(\n            discoverApiSlice.util.updateQueryData(\n              'getDiscoverPosts',\n              { userKey, pageNumber: 1, userName, searchTerm, tag },\n              updateFunction\n            )\n          );\n        }\n\n        const patchResult = dispatch(\n          discoverApiSlice.util.updateQueryData(\n            'getDiscoverPosts',\n            { userKey, userName, pageNumber: 1 },\n            updateFunction\n          )\n        );\n\n        try {\n          await queryFulfilled;\n        } catch {\n          patchResult.undo();\n          if (searchPatchResult) {\n            searchPatchResult.undo();\n          }\n        }\n      },\n    }),\n\n    deleteComment: builder.mutation({\n      query: ({ userKey, postId, commentId }) => ({\n        url: '/discover/deleteComment',\n        method: 'DELETE',\n        headers: { userKey },\n        body: {\n          postId,\n          commentId,\n        },\n        responseHandler: (response) => response.text(),\n      }),\n      async onQueryStarted(\n        { userKey, postId, commentId, userName, searchTerm, tag },\n        { dispatch, queryFulfilled }\n      ) {\n        const updateFunction = (draft) => {\n          const post = postsSelectors.selectById(draft, postId);\n          // Use updateOne to update the post with the given ID\n          postsAdapter.updateOne(draft, {\n            id: postId,\n            changes: {\n              comments: post.comments.filter(\n                (comment) => comment._id !== commentId\n              ),\n            },\n          });\n        };\n        const patchResult = dispatch(\n          discoverApiSlice.util.updateQueryData(\n            'getDiscoverPosts',\n            {\n              userKey,\n              userName,\n              pageNumber: 1,\n            },\n            updateFunction\n          )\n        );\n\n        if (searchTerm || tag) {\n          var searchPatchResult = dispatch(\n            discoverApiSlice.util.updateQueryData(\n              'getDiscoverPosts',\n              {\n                userKey,\n                userName,\n                pageNumber: 1,\n              },\n              updateFunction\n            )\n          );\n        }\n\n        try {\n          await queryFulfilled;\n        } catch {\n          patchResult.undo();\n          if (searchPatchResult) {\n            searchPatchResult.undo();\n          }\n        }\n      },\n    }),\n  }),\n});\n\nconst postsSelectors = postsAdapter.getSelectors();\n\nexport { postsAdapter, postsSelectors };\n\nexport const {\n  useLazyGetDiscoverPostsQuery,\n  useCreateDiscoverPostMutation,\n  useDeleteDiscoverPostMutation,\n  useLikePostMutation,\n  useAddCommentMutation,\n  useLazyGetPostByIdQuery,\n  useLikeCommentMutation,\n  useDeleteCommentMutation,\n} = discoverApiSlice;\n","import { TouchableOpacity, Platform, UIManager } from 'react-native';\nimport React from 'react';\nimport { Layout, Text, useTheme } from '@ui-kitten/components';\nimport { FontAwesome } from '@expo/vector-icons';\nimport {\n  discoverApiSlice,\n  postsAdapter,\n  postsSelectors,\n  useLikePostMutation,\n} from '../api/discoverApi';\nimport { selectDarkMode, selectUserKey } from '../../app/appDataSlice';\nimport { useAppSelector } from '../../app/hooks';\nimport { usersApiSlice } from '../api/usersApi';\nimport withPreventDoubleClick from '../../components/withPreventDoubleClick';\n\nconst DebounceTouchable = withPreventDoubleClick(TouchableOpacity, 600);\n\nexport default function BottomBar({\n  tags,\n  _id,\n  commentIconShown = true,\n  searchTerm = undefined,\n  searchedTag = undefined,\n}) {\n  const userKey = useAppSelector(selectUserKey);\n  const darkMode = useAppSelector(selectDarkMode);\n  const theme = useTheme();\n\n  const { data: userData } =\n    usersApiSlice.endpoints.getUserInfo.useQueryState(userKey);\n  const [likePost] = useLikePostMutation();\n\n  const post = discoverApiSlice.endpoints.getDiscoverPosts.useQueryState(\n    {\n      pageNumber: 1,\n      userKey,\n      userName: userData.userName,\n      searchTerm,\n      tag: searchedTag,\n    },\n    {\n      selectFromResult: (result) =>\n        postsSelectors.selectById(\n          result.data ?? postsAdapter.getInitialState(),\n          _id\n        ),\n    }\n  );\n\n  const onPressLike = async () => {\n    if (!post) return;\n    try {\n      await likePost({\n        userKey,\n        _id,\n        title: post.title,\n        postAuthor: post.userName,\n        userName: userData.userName,\n        searchTerm,\n        tag: searchedTag,\n      }).unwrap();\n    } catch (error) {\n      console.log('Error liking post:', error);\n    }\n  };\n\n  return (\n    <Layout\n      style={{\n        width: '100%',\n        flexDirection: 'row',\n        paddingVertical: 5,\n        paddingHorizontal: 15,\n      }}>\n      <Layout\n        style={{\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          flex: 6,\n        }}>\n        {/* tags */}\n        {tags.map((tag: string, index: number) => (\n          <Layout\n            key={index}\n            level=\"3\"\n            style={{\n              padding: 5,\n              borderRadius: 5,\n              marginRight: 5,\n              marginTop: 2,\n            }}>\n            <Text style={{ fontSize: 12 }}>{tag}</Text>\n          </Layout>\n        ))}\n      </Layout>\n\n      {/* Icons */}\n      <Layout\n        style={{\n          flexDirection: 'row',\n          flex: 2,\n          justifyContent: 'space-evenly',\n          alignItems: 'center',\n        }}>\n        <FontAwesome\n          style={{ flex: 2, opacity: commentIconShown ? 1 : 0 }}\n          name=\"comments-o\"\n          size={20}\n          color={darkMode ? '#fff' : '#000'}\n        />\n        {/* Likes */}\n        {/* @ts-ignore */}\n        <DebounceTouchable\n          style={{\n            flexDirection: 'row',\n            flex: 3,\n            justifyContent: 'space-evenly',\n            alignItems: 'center',\n          }}\n          onPress={onPressLike}>\n          <Text\n            style={{\n              fontSize: 15,\n              paddingTop: 1,\n            }}>\n            {post?.numLikes}\n          </Text>\n          <FontAwesome\n            style={{ alignSelf: 'center' }}\n            size={17}\n            color={\n              post?.hasLiked\n                ? theme['color-primary-500']\n                : darkMode\n                ? '#fff'\n                : '#000'\n            }\n            name={post?.hasLiked ? 'heart' : 'heart-o'}\n          />\n        </DebounceTouchable>\n      </Layout>\n      {/* @ts-ignore */}\n    </Layout>\n  );\n}\n","import { debounce } from 'lodash';\nimport React from 'react';\n\nexport default function withPreventDoubleClick(WrappedComponent, time = 300) {\n  class PreventDoubleClick extends React.PureComponent {\n    debouncedOnPress = () => {\n      this.props.onPress && this.props.onPress();\n    };\n\n    onPress = debounce(this.debouncedOnPress, time, {\n      leading: true,\n      trailing: false,\n    });\n\n    render() {\n      return <WrappedComponent {...this.props} onPress={this.onPress} />;\n    }\n  }\n\n  PreventDoubleClick.displayName = `withPreventDoubleClick(${\n    WrappedComponent.displayName || WrappedComponent.name\n  })`;\n  return PreventDoubleClick;\n}\n","import {  Layout, ListItem, Text } from '@ui-kitten/components';\nimport { TouchableHighlight } from 'react-native';\nimport {  FontAwesome5 } from '@expo/vector-icons';\nimport BottomBar from '../BottomBar';\n\nexport default function TextCard({\n  navigation,\n  tags,\n  title,\n  body,\n  emoji,\n  _id,\n  searchTerm,\n  searchedTag,\n  pinnedIcon,\n  isUrl = false,\n}) {\n\n  const renderTextBody = () => {\n    let text = body;\n\n    if (text.indexOf('\\n') > 10 && text.indexOf('\\n') < 50) {\n      return text.split('\\n')[0] + '...';\n    } else if (text.length > 50) {\n      return text.substring(0, 50) + '...';\n    } else {\n      return text;\n    }\n  };\n\n  const renderUrl = () => {\n    return (\n      <Text style={{ color: 'grey' }}>\n        <FontAwesome5 name=\"link\" />\n        {` `}\n        {body.length > 30 ? body.slice(0, 30) + '...' : body}\n      </Text>\n    );\n  };\n\n\n  return (\n    <TouchableHighlight\n      onPress={() => {\n        navigation.navigate('SinglePost', { _id, searchTerm, searchedTag });\n      }}>\n      <Layout>\n        {pinnedIcon}\n\n        <ListItem\n          disabled\n          accessoryLeft={() => (\n            <Text style={{ fontSize: 35, marginRight: 15 }}>{emoji}</Text>\n          )}\n          style={{\n            paddingLeft: 15,\n            paddingTop: 25,\n            paddingBottom: 0,\n          }}\n          title={() => (\n            <Text style={{ fontSize: 20, paddingBottom: 5 }}>{title}</Text>\n          )}\n          description={() => (\n            <Text style={{ color: 'grey' }}>\n              {isUrl ? renderUrl() : renderTextBody()}\n            </Text>\n          )}\n        />\n\n        <BottomBar\n          tags={tags}\n          _id={_id}\n          searchTerm={searchTerm}\n          searchedTag={searchedTag}\n        />\n      </Layout>\n    </TouchableHighlight>\n  );\n}\n","import React from 'react';\nimport { TouchableWithoutFeedback } from 'react-native';\n\nexport default class DoubleTap extends React.Component {\n  static defaultProps = {\n    delay: 300,\n    onDoubleTap: () => {},\n    children: null,\n  };\n\n  lastTap = null;\n\n  // https://gist.github.com/brunotavares/3c9a373ba5cd1b4ff28b\n  handleDoubleTap = () => {\n    const now = Date.now();\n    if (this.lastTap && (now - this.lastTap) < this.props.delay) {\n      this.props.onDoubleTap();\n    } else {\n      this.lastTap = now;\n    }\n  }\n\n  render() {\n    return (\n      <TouchableWithoutFeedback onPress={this.handleDoubleTap}>\n        {this.props.children}\n      </TouchableWithoutFeedback>\n    );\n  }\n}","import { FontAwesome } from '@expo/vector-icons';\nimport { useTheme } from '@ui-kitten/components';\nimport { forwardRef, useImperativeHandle, useRef, useState } from 'react';\nimport { Animated, Easing } from 'react-native';\n\nexport default forwardRef(\n  ({ style, iconStyle }: { style: {}; iconStyle?: {} }, ref) => {\n    useImperativeHandle(ref, () => ({\n      animate,\n    }));\n\n    const opacityAnim = useRef(new Animated.Value(0)).current;\n    const scaleAnim = useRef(new Animated.Value(1)).current;\n    const [heartRotation, setHeartRotation] = useState('0deg');\n\n    const pickRandomDegree = () => {\n      const options = ['0deg', '15deg', '-15deg'];\n      return options[Math.floor(Math.random() * options.length)];\n    };\n\n    const animate = () => {\n      // animation: shrink quickly with bounce, opacity 0 - 1. Stop for a moment. Increase in size. Opacity 1-0\n      setHeartRotation(pickRandomDegree());\n\n      scaleAnim.setValue(1);\n      opacityAnim.setValue(0);\n\n      Animated.parallel([\n        Animated.sequence([\n          Animated.timing(opacityAnim, {\n            toValue: 1,\n            duration: 200,\n            useNativeDriver: true,\n          }),\n          Animated.timing(opacityAnim, {\n            toValue: 1,\n            duration: 300,\n            useNativeDriver: true,\n          }),\n          Animated.timing(opacityAnim, {\n            toValue: 0,\n            duration: 100,\n            useNativeDriver: true,\n          }),\n        ]),\n        ,\n        Animated.sequence([\n          Animated.timing(scaleAnim, {\n            toValue: 0.8,\n            easing: Easing.bounce,\n            duration: 200,\n            useNativeDriver: true,\n          }),\n          Animated.timing(scaleAnim, {\n            toValue: 0.8,\n            duration: 300,\n            useNativeDriver: true,\n          }),\n          Animated.timing(scaleAnim, {\n            toValue: 1.2,\n            duration: 100,\n            useNativeDriver: true,\n          }),\n        ]),\n      ]).start();\n    };\n\n    return (\n      <Animated.View\n        style={{\n          ...style,\n          opacity: opacityAnim,\n          transform: [{ scale: scaleAnim }],\n        }}>\n        <FontAwesome\n          name=\"heart\"\n          size={110}\n          style={{ transform: [{ rotate: heartRotation }], ...iconStyle }}\n        />\n      </Animated.View>\n    );\n  }\n);\n","import { EMOJI_LIST, IMAGE_BUCKET_URL } from './constants/discover';\nimport Toast from 'react-native-root-toast';\n\nexport function getRndInteger(min: number, max: number) {\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nexport function getImageUrl(imageId: string) {\n  return `${IMAGE_BUCKET_URL}/${imageId}.jpg`;\n}\n\nexport function nFormatter(num: number, digits: number) {\n  const lookup = [\n    { value: 1, symbol: '' },\n    { value: 1e3, symbol: 'k' },\n    { value: 1e6, symbol: 'M' },\n    { value: 1e9, symbol: 'G' },\n    { value: 1e12, symbol: 'T' },\n    { value: 1e15, symbol: 'P' },\n    { value: 1e18, symbol: 'E' },\n  ];\n  const rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\n  var item = lookup\n    .slice()\n    .reverse()\n    .find(function (item) {\n      return num >= item.value;\n    });\n  return item\n    ? (num / item.value).toFixed(digits).replace(rx, '$1') + item.symbol\n    : '0';\n}\n\nexport function versionCompare(v1: string, v2: string, options?: any) {\n  var lexicographical = options && options.lexicographical,\n    zeroExtend = options && options.zeroExtend,\n    v1parts = v1.split('.') as any[],\n    v2parts = v2.split('.') as any[];\n\n  function isValidPart(x) {\n    return (lexicographical ? /^\\d+[A-Za-z]*$/ : /^\\d+$/).test(x);\n  }\n\n  if (!v1parts.every(isValidPart) || !v2parts.every(isValidPart)) {\n    return NaN;\n  }\n\n  if (zeroExtend) {\n    while (v1parts.length < v2parts.length) v1parts.push('0');\n    while (v2parts.length < v1parts.length) v2parts.push('0');\n  }\n\n  if (!lexicographical) {\n    v1parts = v1parts.map(Number);\n    v2parts = v2parts.map(Number);\n  }\n\n  for (var i = 0; i < v1parts.length; ++i) {\n    if (v2parts.length == i) {\n      return 1;\n    }\n\n    if (v1parts[i] == v2parts[i]) {\n      continue;\n    } else if (v1parts[i] > v2parts[i]) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n\n  if (v1parts.length != v2parts.length) {\n    return -1;\n  }\n\n  return 0;\n}\n\nexport const stringToEmoji = (str: string) => {\n  if (!str) {\n    return '';\n  }\n  let dec = 0;\n  for (let i = 0; i < str.length; ++i) {\n    dec += str.charCodeAt(i) << i;\n  }\n  const emoji = EMOJI_LIST[dec % EMOJI_LIST.length];\n  return emoji;\n};\n\nexport function validURL(str: string) {\n  var pattern = new RegExp(\n    '^(https?:\\\\/\\\\/)?' + // protocol\n      '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n      '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n      '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n      '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n      '(\\\\#[-a-z\\\\d_]*)?$',\n    'i'\n  ); // fragment locator\n  return !!pattern.test(str);\n}\n\nexport function showToast(message: string, backgroundColor: string = '#000') {\n  Toast.show(message, {\n    duration: Toast.durations.LONG,\n    opacity: 1,\n    position: -100,\n    backgroundColor,\n    shadow: false,\n  });\n}\n\n// Format range with 12 hour time\nexport const FormatTimeRange = (start: string, end: string) => {\n  const startDate = new Date(start);\n  const endDate = new Date(end);\n\n  const startHours = startDate.getHours() % 12 || 12;\n  const startMinutes = startDate.getMinutes();\n  const startAmPm = startDate.getHours() >= 12 ? 'pm' : 'am';\n  const endHours = endDate.getHours() % 12 || 12;\n  const endMinutes = endDate.getMinutes();\n  const endAmPm = endDate.getHours() >= 12 ? 'pm' : 'am';\n  return `${startHours}:${startMinutes}${startAmPm} - ${endHours}:${endMinutes}${endAmPm}`;\n};\n\nconst weekDayNumberToName = {\n  0: 'Sunday',\n  1: 'Monday',\n  2: 'Tuesday',\n  3: 'Wednesday',\n  4: 'Thursday',\n  5: 'Friday',\n  6: 'Saturday',\n};\n\nexport const FormatDate = (date: string) => {\n  const newDate = new Date(date);\n\n  const weekDay = newDate.getDay();\n  const month = newDate.getMonth() + 1;\n  const day = newDate.getDate();\n  return `${weekDayNumberToName[weekDay]}, ${month}/${day}`;\n};\n","import { Layout, useTheme } from '@ui-kitten/components';\nimport { useRef } from 'react';\nimport { Dimensions, Image } from 'react-native';\nimport { selectUserKey } from '../../app/appDataSlice';\nimport { useAppSelector } from '../../app/hooks';\nimport DoubleTap from '../../components/DoubleTap';\nimport DoubleTapHeart from '../../components/DoubleTapHeart';\nimport { MAX_WIDTH_WEB } from '../../constants/discover';\nimport { getImageUrl } from '../../functions';\nimport { useLikePostMutation } from '../api/discoverApi';\n\nconst windowWidth = Dimensions.get('window').width;\n\nexport default function ImageComponent({ imageId, hasLiked, apiInfo }) {\n  const theme = useTheme();\n  const [likePost] = useLikePostMutation();\n  const userKey = useAppSelector(selectUserKey);\n  const likeRef = useRef(null);\n\n  const handlePressLike = async () => {\n    likeRef.current?.animate();\n\n    if (hasLiked) {\n      return;\n    }\n    try {\n      await likePost({\n        userKey,\n        tag: apiInfo.searchedTag,\n        ...apiInfo,\n      }).unwrap();\n    } catch (error) {\n      console.log('Error liking post:', error);\n    }\n  };\n\n  return (\n    <DoubleTap delay={1200} onDoubleTap={handlePressLike}>\n      <Layout style={{ flex: 1, alignItems: 'center' }}>\n        <Image\n          source={{\n            uri: getImageUrl(imageId),\n          }}\n          style={{\n            borderRadius: 5,\n            width: windowWidth * 0.9,\n            height: windowWidth * 0.9,\n            maxHeight: MAX_WIDTH_WEB,\n            maxWidth: MAX_WIDTH_WEB,\n            marginBottom: 10,\n            resizeMode: 'contain',\n          }}\n        />\n        <DoubleTapHeart\n          style={{\n            position: 'absolute',\n            top: '35%',\n            right: '30%',\n            shadowColor: '#000',\n            shadowOffset: {\n              width: 0,\n              height: 3,\n            },\n            shadowOpacity: 0.29,\n            shadowRadius: 4.65,\n\n            elevation: 7,\n          }}\n          ref={likeRef}\n          iconStyle={{ color: theme['color-primary-500'] }}\n        />\n      </Layout>\n    </DoubleTap>\n  );\n}\n","import { Layout, Text } from '@ui-kitten/components';\nimport { useEffect, useRef } from 'react';\nimport { TouchableOpacity, Image, Dimensions } from 'react-native';\nimport { selectUserKey } from '../../../app/appDataSlice';\nimport { useAppSelector } from '../../../app/hooks';\nimport DoubleTap from '../../../components/DoubleTap';\nimport DoubleTapHeart from '../../../components/DoubleTapHeart';\nimport { MAX_WIDTH_WEB } from '../../../constants/discover';\nimport { getImageUrl } from '../../../functions';\nimport { useLikePostMutation } from '../../api/discoverApi';\nimport BottomBar from '../BottomBar';\nimport ImageComponent from '../ImageComponent';\n\nconst windowWidth = Dimensions.get('window').width;\n\nexport default function ImageCard({\n  title,\n  _id,\n  navigation,\n  imageId,\n  tags,\n  postAuthor,\n  userName,\n  searchTerm,\n  searchedTag,\n  pinnedIcon,\n  hasLiked,\n}) {\n  return (\n    <Layout>\n      {pinnedIcon}\n      <Layout style={{ flex: 1, alignItems: 'center' }}>\n        <TouchableOpacity\n          onPress={() => {\n            navigation.navigate('SinglePost', { _id, searchTerm, searchedTag });\n          }}\n          activeOpacity={0.9}\n          style={{\n            flex: 1,\n            alignItems: 'center',\n            paddingVertical: 10,\n          }}>\n          <Layout\n            style={{\n              width: windowWidth * 0.9,\n              maxWidth: MAX_WIDTH_WEB,\n              paddingVertical: 10,\n            }}>\n            <Text style={{ fontSize: 20 }}>{title}</Text>\n          </Layout>\n          <ImageComponent\n            apiInfo={{\n              _id,\n              title,\n              postAuthor,\n              userName,\n              searchTerm,\n              searchedTag,\n            }}\n            imageId={imageId}\n            hasLiked={hasLiked}\n          />\n\n          <BottomBar\n            tags={tags}\n            _id={_id}\n            searchTerm={searchTerm}\n            searchedTag={searchedTag}\n          />\n        </TouchableOpacity>\n      </Layout>\n    </Layout>\n  );\n}\n","import { Layout, Text } from '@ui-kitten/components';\nimport { useEffect, useState } from 'react';\nimport {\n  Dimensions,\n  Image,\n  ImageBackground,\n  Platform,\n  StyleSheet,\n  TouchableHighlight,\n} from 'react-native';\nimport { selectDarkMode } from '../../../app/appDataSlice';\nimport { useAppSelector } from '../../../app/hooks';\n\nconst windowWidth = Dimensions.get('window').width;\n\nimport becomeSponsor from '../../../../assets/sponsorPage/become-sponsor.png';\n\nexport default function SponsorCard({ data, navigation }) {\n  const [imageLink, setImageLink] = useState({ uri: data.logo });\n  const webWidth = Dimensions.get('window').width * 0.3;\n  const hasCoupon = !!data.coupons[0];\n\n  return (\n    <TouchableHighlight\n      style={{ flex: 1 }}\n      onPress={() => {\n        if (hasCoupon) {\n          navigation.navigate('SponsorPageDiscover', { data });\n        }\n      }}>\n      <Layout style={{ flex: 1 }}>\n        <Text category=\"label\" style={{ marginLeft: 20 }}>\n          Ad\n        </Text>\n\n        <Layout\n          style={{\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n          }}>\n          <Layout\n            style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n            <Image\n              source={imageLink}\n              onError={() => {\n                setImageLink(becomeSponsor);\n              }}\n              style={{\n                height: hasCoupon\n                  ? Platform.OS === 'web'\n                    ? 200\n                    : windowWidth / 2 - 20\n                  : Platform.OS === 'web'\n                  ? 200\n                  : windowWidth * 0.8,\n                width: hasCoupon\n                  ? Platform.OS === 'web'\n                    ? '20%'\n                    : windowWidth / 2 - 20\n                  : Platform.OS === 'web'\n                  ? '20%'\n                  : windowWidth * 0.8,\n                resizeMode: 'contain',\n              }}\n            />\n            {imageLink?.uri && <Text>{data.sponsorName}</Text>}\n          </Layout>\n\n          {data.coupons[0] && imageLink?.uri && (\n            <Layout style={{ flex: 1, alignItems: 'center' }}>\n              <ImageBackground\n                resizeMode=\"contain\"\n                source={require('../../../../assets/sponsorPage/coupon.png')}\n                style={{\n                  width: windowWidth / 2 - 20,\n                  height: 200,\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}>\n                <Text\n                  style={{\n                    fontSize: 13,\n                    paddingBottom: 7,\n                    paddingRight: 7,\n                    marginHorizontal: 25,\n                  }}>\n                  {data.coupons[0].couponDescription}\n                </Text>\n              </ImageBackground>\n            </Layout>\n          )}\n        </Layout>\n      </Layout>\n    </TouchableHighlight>\n  );\n}\n","import { Divider, Layout, Text } from '@ui-kitten/components';\nimport { useMemo } from 'react';\nimport { TouchableOpacity, Dimensions } from 'react-native';\nimport { FontAwesome5 } from '@expo/vector-icons';\n\nimport { MAX_WIDTH_WEB } from '../../constants/discover';\nimport { FormatDate, FormatTimeRange } from '../../functions';\nimport BottomBar from './BottomBar';\nimport ImageComponent from './ImageComponent';\nimport { A } from '@expo/html-elements';\n\nconst windowWidth = Dimensions.get('window').width;\n\ninterface EventCardProps {\n  title: string;\n  location: string;\n  date: string;\n  startTime: string;\n  endTime: string;\n  _id: string;\n  postAuthor: string;\n  userName: string;\n  hasLiked: boolean;\n  searchTerm?: string;\n  searchedTag?: string;\n  tags?: string[];\n  contentURL?: string;\n  contentText?: string;\n  contentImage?: string;\n  host?: string;\n  truncated?: boolean;\n}\n\nexport default function EventBody({\n  title,\n  location,\n  date,\n  startTime,\n  endTime,\n  contentURL,\n  contentText,\n  contentImage,\n  host,\n  hasLiked,\n  _id,\n  searchTerm,\n  searchedTag,\n  postAuthor,\n  userName,\n  truncated = true,\n}: EventCardProps) {\n  const eventInfo = useMemo(\n    () => [\n      {\n        title: 'Location',\n        value: location,\n      },\n      {\n        title: 'Date',\n        value: FormatDate(date),\n      },\n      {\n        title: 'Time',\n        value: FormatTimeRange(startTime, endTime),\n      },\n      {\n        title: 'Host',\n        value: host,\n      },\n      {\n        title: 'Description',\n        value: contentText,\n      },\n    ],\n    [location, date, startTime, endTime, host, contentURL, contentText]\n  );\n\n  const renderUrl = (link: string) => {\n    return (\n      <Layout\n        style={{\n          flexDirection: 'row',\n          width: windowWidth * 0.9,\n          maxWidth: MAX_WIDTH_WEB,\n          paddingVertical: 5,\n        }}>\n        <Text category=\"s1\">Link: </Text>\n        {truncated ? (\n          <Text category=\"p1\">\n            {link.length > 30 ? link.slice(0, 30) + '...' : link}\n          </Text>\n        ) : (\n          <A>\n            <Text>{link}</Text>\n          </A>\n        )}\n      </Layout>\n    );\n  };\n\n  return (\n    <Layout style={{ flex: 1, alignItems: 'center' }}>\n      {contentImage ? (\n        <ImageComponent\n          apiInfo={{\n            _id,\n            title,\n            postAuthor,\n            userName,\n            searchTerm,\n            searchedTag,\n          }}\n          imageId={contentImage}\n          hasLiked={hasLiked}\n        />\n      ) : (\n        <Divider />\n      )}\n\n      {/* Event Info  */}\n      {eventInfo.map((info, index) => {\n        if (info.value)\n          return (\n            <Layout\n              key={index}\n              style={{\n                flexDirection: 'row',\n                width: windowWidth * 0.9,\n                maxWidth: MAX_WIDTH_WEB,\n                paddingVertical: 5,\n              }}>\n              <Text category=\"s1\">\n                {info.title}\n                {`: `}\n                <Text category=\"p1\">\n                  {truncated\n                    ? info.value.length > 30\n                      ? info.value.slice(0, 30) + '...'\n                      : info.value\n                    : info.value}\n                </Text>\n              </Text>\n            </Layout>\n          );\n      })}\n\n      {contentURL ? renderUrl(contentURL) : null}\n    </Layout>\n  );\n}\n","import { Divider, Layout, Text } from '@ui-kitten/components';\nimport React, {useEffect, useMemo, useState} from 'react';\nimport { TouchableOpacity, Dimensions } from 'react-native';\nimport { FontAwesome5 } from '@expo/vector-icons';\n\nimport EventBody from '../EventBody';\nimport { MAX_WIDTH_WEB } from '../../../constants/discover';\nimport { FormatDate, FormatTimeRange } from '../../../functions';\nimport BottomBar from '../BottomBar';\nimport ImageComponent from '../ImageComponent';\nimport {useAppSelector} from \"../../../app/hooks\";\nimport {selectDarkMode, selectUserKey} from \"../../../app/appDataSlice\";\nimport ModalContainer from \"../../../components/ModalContainer\";\nimport {useEditUserMutation, useGetUserInfoQuery} from \"../../api/usersApi\";\nimport Toast from \"react-native-root-toast\";\nimport {useFocusEffect, useIsFocused} from \"@react-navigation/native\";\n\nconst windowWidth = Dimensions.get('window').width;\n\ninterface EventCardProps {\n  title: string;\n  location: string;\n  date: string;\n  startTime: string;\n  endTime: string;\n  pinnedIcon: JSX.Element;\n  _id: string;\n  postAuthor: string;\n  userName: string;\n  hasLiked: boolean;\n  navigation: any;\n  searchTerm?: string;\n  searchedTag?: string;\n  tags?: string[];\n  contentURL?: string;\n  contentText?: string;\n  contentImage?: string;\n  host?: string;\n}\n\nexport default function EventCard({\n  title,\n  location,\n  date,\n  startTime,\n  endTime,\n  pinnedIcon,\n  tags,\n  contentURL,\n  contentText,\n  contentImage,\n  host,\n  hasLiked,\n  _id,\n  searchTerm,\n  searchedTag,\n  postAuthor,\n  userName,\n  navigation,\n}: EventCardProps) {\n  const darkMode = useAppSelector(selectDarkMode)\n  const userKey = useAppSelector(selectUserKey)\n  const {data: userData} = useGetUserInfoQuery(useAppSelector(selectUserKey));\n  const [ eventPopUp, setEventPopUp ] = useState(false)\n  const [ isAdded, setIsAdded ] = useState(false)\n  const [editUser] = useEditUserMutation();\n\n  useEffect(() => {\n    setIsAdded(userData.customEvents.some(customEvent => {\n      return (\n          customEvent.name === title &&\n          customEvent.startTime == startTime &&\n          customEvent.endTime == endTime &&\n          customEvent.date == date\n      )\n    }))\n  }, [useIsFocused()]) // this forces just the button component to re-render when the focus changes\n\n  function handleEventSyncWithServer(isAdd: boolean) {\n    editUser({\n      userKey,\n      userName: userData.userName,\n      fields: JSON.stringify(isAdd ? {\n        \"addCustomEvent\": {\n          \"name\": title,\n          \"startTime\": new Date(startTime).toTimeString().slice(0, 5),\n          \"endTime\": new Date(endTime).toTimeString().slice(0, 5),\n          \"days\": [],\n          \"date\": date\n        },\n      } : {\n        \"removeCustomEvent\": {\n          \"name\": title,\n          \"startTime\": new Date(startTime).toTimeString().slice(0, 5),\n          \"endTime\": new Date(endTime).toTimeString().slice(0, 5),\n          \"days\": [],\n          \"date\": date\n        },\n      })\n    }).unwrap().then(async () => {\n      setIsAdded(isAdd)\n    }).catch(() => {\n      Toast.show(\n          \"Failed to add event.\\nPlease try again later\",\n          {\n            duration: Toast.durations.LONG,\n            opacity: 1,\n            position: -100,\n            backgroundColor: 'grey',\n            shadow: false,\n          }\n      );\n    })\n  }\n\n  function toggleAdditionOfEvent() {\n    handleEventSyncWithServer(!isAdded)\n  }\n\n  return (\n    <Layout>\n      {pinnedIcon}\n      <Layout style={{ flex: 1, alignItems: 'center' }}>\n        <TouchableOpacity\n          onPress={() => {\n            navigation.navigate('SinglePost', { _id, searchTerm, searchedTag });\n          }}\n          activeOpacity={0.9}\n          style={{\n            flex: 1,\n            alignItems: 'center',\n            paddingVertical: 10,\n          }}>\n          <Layout\n            style={{\n              width: windowWidth * 0.9,\n              maxWidth: MAX_WIDTH_WEB,\n              paddingVertical: 10,\n              flexDirection: 'row'\n            }}>\n            <Text style={{ fontSize: 20 }}>{title}</Text>\n            <TouchableOpacity style={{alignSelf: 'flex-end', marginLeft: 'auto'}} onPress={ () => {\n                toggleAdditionOfEvent()\n              }\n            }>\n              <FontAwesome5\n                  name={isAdded ? 'times' : 'plus'}\n                  size={23}\n                  color={darkMode ? 'white' : 'black'}\n              />\n            </TouchableOpacity>\n          </Layout>\n\n          <EventBody\n            contentURL={contentURL}\n            contentText={contentText}\n            contentImage={contentImage}\n            host={host}\n            title={title}\n            location={location}\n            date={date}\n            startTime={startTime}\n            endTime={endTime}\n            _id={_id}\n            postAuthor={postAuthor}\n            userName={userName}\n            hasLiked={hasLiked}\n          />\n\n          <BottomBar\n            tags={tags}\n            _id={_id}\n            searchTerm={searchTerm}\n            searchedTag={searchedTag}\n          />\n        </TouchableOpacity>\n      </Layout>\n    </Layout>\n  );\n}\n","import {\n  Button,\n  Divider,\n  Icon,\n  Layout,\n  List,\n  ListItem,\n  Spinner,\n  Text,\n  useTheme,\n} from '@ui-kitten/components';\nimport { useEffect, useRef, useState } from 'react';\nimport { FontAwesome5, MaterialIcons } from '@expo/vector-icons';\nimport Modal from 'react-native-modal';\n\nimport { useAppSelector } from '../../app/hooks';\nimport Header from '../../components/Header';\nimport {\n  discoverApiSlice,\n  postsAdapter,\n  postsSelectors,\n  useLazyGetDiscoverPostsQuery,\n} from '../api/discoverApi';\nimport { Keyboard, Platform, TouchableOpacity } from 'react-native';\nimport { selectDarkMode, selectUserKey } from '../../app/appDataSlice';\nimport TextCard from './Cards/TextCard';\nimport { DiscoverPost } from '../../app/types';\nimport ImageCard from './Cards/ImageCard';\nimport { usersApiSlice } from '../api/usersApi';\nimport SponsorCard from './Cards/SponsorCard';\nimport EventCard from './Cards/EventCard';\nimport {LinearGradient} from \"expo-linear-gradient\";\n\nexport default function PostsList({\n  navigation,\n  tag,\n  searchTerm,\n  recentSearches,\n  handleRemoveRecentSearch,\n  handleClickRecentSearch,\n  route\n}: {\n  navigation: any;\n  tag?: string;\n  searchTerm?: string;\n  recentSearches?: string[];\n  sponsor?: boolean;\n  handleRemoveRecentSearch?: (searchTerm: string) => void;\n  handleClickRecentSearch?: (searchTerm: string) => void;\n  route?: { params: { sponsor: boolean } };\n}) {\n\n  const theme = useTheme();\n  const userKey = useAppSelector(selectUserKey);\n  const darkMode = useAppSelector(selectDarkMode);\n\n  const {\n    data: { userName },\n  } = usersApiSlice.endpoints.getUserInfo.useQueryState(userKey);\n\n  const pageNumber = useRef(0);\n  const [fetchPosts, { isFetching, isLoading, isError }] =\n    useLazyGetDiscoverPostsQuery();\n\n  const { posts, hasMorePages } =\n    discoverApiSlice.endpoints.getDiscoverPosts.useQueryState(\n      { pageNumber: 1, userKey, userName, tag, searchTerm, },\n      {\n        selectFromResult: (result) => {\n          return {\n            hasMorePages: result.data?.hasMorePages,\n            posts: postsSelectors.selectAll(\n              result.data ?? postsAdapter.getInitialState()\n            ),\n          };\n        },\n      }\n    );\n\n  const fetchFirstPage = async () => {\n    pageNumber.current = 1;\n    await fetchPosts({\n      userKey,\n      pageNumber: pageNumber.current,\n      userName,\n      tag,\n      searchTerm,\n      // sponsor,\n    });\n  };\n\n  const fetchMorePosts = async () => {\n    if (!hasMorePages || isFetching) return;\n    pageNumber.current++;\n    await fetchPosts({\n      userKey,\n      pageNumber: pageNumber.current,\n      userName,\n      tag,\n      searchTerm,\n      // sponsor,\n    });\n  };\n\n  useEffect(() => {\n    fetchFirstPage();\n  }, [searchTerm, tag]);\n\n  const PinIcon = (\n    <Layout\n      style={{\n        flexDirection: 'row',\n        marginBottom: 0,\n        marginTop: 10,\n        marginLeft: 10,\n      }}>\n      <MaterialIcons\n        name=\"push-pin\"\n        size={20}\n        color={theme['color-primary-500']}\n      />\n      <Text style={{ color: theme['color-primary-500'] }}>pinned</Text>\n    </Layout>\n  );\n\n  // Render Content\n\n  const renderItem = ({ item }: { item: DiscoverPost }) => {\n    const commonProps = {\n      title: item.title,\n      tags: item.tags,\n      _id: item._id,\n      postAuthor: item.userName,\n      navigation,\n      key: item._id,\n      searchTerm,\n      searchedTag: tag,\n      pinnedIcon: item.pinned ? PinIcon : null,\n    };\n\n    if (item.isSponsor) {\n      const sponsorProps = JSON.parse(item.contentText);\n      return <SponsorCard data={sponsorProps} navigation={navigation} />;\n    }\n\n    switch (item.type) {\n      case 'contentText':\n        return (\n          <TextCard\n            {...commonProps}\n            body={item.contentText}\n            emoji={item.emoji}\n            isUrl={false}\n          />\n        );\n      case 'contentUrl':\n        return (\n          <TextCard\n            {...commonProps}\n            body={item.contentUrl}\n            emoji={item.emoji}\n            isUrl={true}\n          />\n        );\n      case 'contentImage':\n        return (\n          <ImageCard\n            {...commonProps}\n            hasLiked={item.hasLiked}\n            imageId={item.contentImage}\n            postAuthor={item.userName}\n            userName={userName}\n          />\n        );\n        case 'contentEvent':\n          return (\n            <EventCard\n              location={item.location}\n              date={item.date}\n              startTime={item.startTime}\n              postAuthor={item.userName}\n              userName={userName}\n              contentURL={item.contentUrl}\n              contentText={item.contentText}\n              contentImage={item.contentImage}\n              endTime={item.endTime}\n              hasLiked={item.hasLiked}\n              host={item.host}\n              {...commonProps}\n              />)\n\n      default:\n        console.log('Tried to load an unknown post type:', item?.type);\n        return null;\n    }\n  };\n\n  const renderRecentSearch = ({ item }: { item: string }) => {\n    return (\n      <ListItem\n        onPress={() => {\n          handleClickRecentSearch(item);\n          Keyboard.dismiss();\n        }}\n        style={{\n          paddingVertical: 10,\n          marginVertical: 0,\n          backgroundColor: 'transparent',\n        }}\n        title={item}\n        accessoryLeft={() => (\n          <Icon\n            name=\"clock\"\n            style={{\n              height: 20,\n              color: theme['color-basic-400'],\n              marginHorizontal: 10,\n            }}\n          />\n        )}\n        accessoryRight={(props) => (\n          <Button\n            appearance=\"ghost\"\n            onPress={() => handleRemoveRecentSearch(item)}\n            accessoryLeft={<Icon {...props} name=\"x\" pack=\"feather\" />}\n          />\n        )}\n      />\n    );\n  };\n\n  const FooterSpinner = () => {\n    if (isFetching) {\n      return (\n        <Layout style={{ alignItems: 'center', paddingVertical: 10 }}>\n          <Spinner />\n        </Layout>\n      );\n    }\n  };\n\n  let content = <></>;\n  if (isLoading) {\n    content = (\n      <Layout style={{ marginTop: 20, alignItems: 'center' }}>\n        <Spinner />\n      </Layout>\n    );\n  } else if (isError) {\n    content = (\n      <Layout style={{ alignItems: 'center', marginTop: 20 }}>\n        <FontAwesome5\n          name=\"exclamation\"\n          size={50}\n          color={theme['color-danger-500']}\n        />\n        <Text style={{ textAlign: 'center', fontSize: 20 }}>\n          Error loading posts\n        </Text>\n      </Layout>\n    );\n  } else if (posts.length === 0) {\n    content = (\n      <Layout style={{ alignItems: 'center', marginTop: 20 }}>\n        <FontAwesome5\n          name=\"sad-tear\"\n          size={50}\n          color={theme['color-danger-500']}\n        />\n        <Text style={{ textAlign: 'center', fontSize: 20 }}>\n          No posts found\n        </Text>\n      </Layout>\n    );\n  } else if (searchTerm === '' && tag === '') {\n    if (recentSearches?.length > 0) {\n      content = (\n        <Layout style={{ flex: 1 }}>\n          <List\n            keyboardShouldPersistTaps=\"handled\"\n            ListHeaderComponent={() => (\n              <Text\n                status=\"success\"\n                style={{ fontStyle: 'italic', marginLeft: 20 }}>\n                Recent Searches\n              </Text>\n            )}\n            data={Array.from(recentSearches)}\n            renderItem={renderRecentSearch}\n          />\n        </Layout>\n      );\n    } else {\n      content = (\n        <Layout style={{ flex: 1 }}>\n          <Layout style={{ marginTop: 30, justifyContent: 'center' }}>\n            <Text style={{ textAlign: 'center', fontSize: 20 }}>\n              Search for posts\n            </Text>\n            <Text\n              style={{\n                textAlign: 'center',\n                fontSize: 16,\n                color: theme['color-basic-500'],\n              }}>\n              Search by title, tag, or college\n            </Text>\n          </Layout>\n        </Layout>\n      );\n    }\n  } else {\n    content = (\n        Platform.OS === 'web' ?\n            <LinearGradient\n                colors={\n                    darkMode\n                        ? [theme['color-basic-1100'], theme['color-basic-1100']]\n                        : [theme['color-primary-500'], theme['color-success-500']]\n                }\n                style={{ width: '100%', margin: 0, alignItems: 'center', flex: 1 }}\n                start={{ x: 0, y: 0 }}\n                end={{ x: 1, y: 0.4 }}>\n                <List\n                    contentContainerStyle={{ width: '100%', alignSelf: 'center', paddingHorizontal: 10}}\n                    onRefresh={fetchFirstPage}\n                    refreshing={isLoading}\n                    data={posts}\n                    keyExtractor={(item) => item._id}\n                    renderItem={renderItem}\n                    onEndReachedThreshold={0.5}\n                    onEndReached={fetchMorePosts}\n                    ListFooterComponent={FooterSpinner}\n                    showsVerticalScrollIndicator={false}\n                    ItemSeparatorComponent={null}\n                />\n            </LinearGradient> :\n          <Layout style={{ flex: 1 }}>\n            <List\n              contentContainerStyle={{ width: '100%' }}\n              onRefresh={fetchFirstPage}\n              refreshing={isLoading}\n              data={posts}\n              keyExtractor={(item) => item._id}\n              renderItem={renderItem}\n              onEndReachedThreshold={0.5}\n              onEndReached={fetchMorePosts}\n              ListFooterComponent={FooterSpinner}\n              showsVerticalScrollIndicator={false}\n              ItemSeparatorComponent={Divider}\n            />\n          </Layout>\n    );\n  }\n\n  return <Layout style={{ flex: 1 }}>{content}</Layout>;\n}\n","import { Card, Modal, Text, Button } from '@ui-kitten/components';\nimport { StyleSheet } from 'react-native';\n\nexport default function DisabledFieldModal({setShowModal}) {\n  return (\n    <Modal\n      visible={true}\n      backdropStyle={myStyles.backdrop}\n      style={{ width: '75%' }}\n      onBackdropPress={() => setShowModal(false)}>\n      <Card disabled={true}>\n        <Text style={{ fontSize: 15, paddingTop: 5, paddingBottom: 10 }}>\n          Sorry, we are experiencing technical difficulties and this\n          functionality is currently undergoing maintenance. Please try again\n          later.\n        </Text>\n        <Button\n          onPress={() => {\n            setShowModal(false);\n          }}>\n          Dismiss\n        </Button>\n      </Card>\n    </Modal>\n  );\n}\n\nconst myStyles = StyleSheet.create({\n  backdrop: {\n    backgroundColor: 'rgba(0, 0, 0, 0.65)',\n  },\n});\n","import { TouchableOpacity, Alert } from 'react-native';\nimport { Layout, Text, useTheme } from '@ui-kitten/components';\nimport { useState } from 'react';\n\nimport { FontAwesome } from '@expo/vector-icons';\nimport { stringToEmoji } from '../../../functions';\nimport { useAppSelector } from '../../../app/hooks';\nimport { selectDarkMode, selectUserKey } from '../../../app/appDataSlice';\nimport {\n  useDeleteCommentMutation,\n  useLikeCommentMutation,\n} from '../../api/discoverApi';\n\nexport default function Comment({\n  body,\n  postId,\n  commentId,\n  isOwnComment,\n  userName,\n  numLikes,\n  hasLiked,\n  searchTerm,\n  searchedTag,\n}) {\n  const theme = useTheme();\n  const userKey = useAppSelector(selectUserKey);\n  const darkMode = useAppSelector(selectDarkMode);\n  const [isExpanded, setIsExpanded] = useState(true);\n  const [likeComment] = useLikeCommentMutation();\n  const [deleteComment, deleteCommentLoading] = useDeleteCommentMutation();\n\n  const handleLikeComment = async () => {\n    try {\n      await likeComment({\n        commentId,\n        postId,\n        userKey,\n        userName,\n        searchTerm,\n        tag: searchedTag,\n      }).unwrap();\n    } catch (error) {\n      console.warn(\"Couldn't like comment\", error);\n    }\n  };\n\n  const handleDeleteComment = () => {\n    try {\n      deleteComment({\n        commentId,\n        postId,\n        userKey,\n        userName,\n        searchTerm,\n        tag: searchedTag,\n      }).unwrap();\n    } catch (error) {\n      console.warn(\"Couldn't delete comment\", error);\n    }\n  };\n\n  return (\n    <TouchableOpacity\n      style={{ flexDirection: 'row', marginVertical: 10, marginHorizontal: 15 }}\n      onPress={() => setIsExpanded(!isExpanded)}\n      onLongPress={() => {\n        if (isOwnComment) {\n          Alert.alert('', body, [\n            {\n              text: 'Cancel',\n              style: 'cancel',\n            },\n            {\n              text: 'Delete',\n              onPress: handleDeleteComment,\n            },\n          ]);\n        }\n      }}>\n      <Layout\n        style={{\n          height: '100%',\n          flexDirection: 'row',\n          flex: 11,\n        }}>\n        <Layout\n          style={{\n            borderRadius: 100,\n            width: 35,\n            height: 35,\n            marginRight: 10,\n            backgroundColor: darkMode\n              ? theme['color-basic-600']\n              : theme['color-basic-300'],\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}>\n          <Text style={{ fontSize: 15 }}>{stringToEmoji(body)}</Text>\n        </Layout>\n\n        <Text style={{ fontWeight: 'normal', flex: 1, paddingTop: 7 }}>\n          {`  `}\n          {isExpanded || body.length <= 50 ? body : `${body.slice(0, 50)}...`}\n        </Text>\n      </Layout>\n\n      <TouchableOpacity\n        style={{\n          flexDirection: 'row',\n          alignSelf: 'center',\n          alignItems: 'center',\n        }}\n        onPress={handleLikeComment}>\n        <Text style={{ padding: 5, fontSize: 15 }}>{numLikes}</Text>\n        <FontAwesome\n          size={15}\n          color={\n            hasLiked ? theme['color-primary-500'] : theme['color-basic-400']\n          }\n          name=\"heart\"\n        />\n      </TouchableOpacity>\n    </TouchableOpacity>\n  );\n}\n","import { A } from '@expo/html-elements';\nimport { Input, Text } from '@ui-kitten/components';\nimport { Dimensions } from 'react-native';\nimport { selectDarkMode } from '../../../app/appDataSlice';\nimport { useAppSelector } from '../../../app/hooks';\nimport { validURL } from '../../../functions';\n\nconst windowWidth = Dimensions.get('window').width;\n\nexport default function SinglePostBody({ type, body, handleLikePost }) {\n  const darkMode = useAppSelector(selectDarkMode);\n\n  if (type === 'contentText') {\n    return (\n      <Input\n        scrollEnabled={false}\n        multiline\n        disabled\n        value={body}\n        style={{\n          backgroundColor: 'transparent',\n          borderWidth: 0,\n        }}\n        textStyle={{ color: darkMode ? 'white' : 'black' }}\n      />\n    );\n  } else if (type === 'contentUrl') {\n    if (validURL(body)) {\n      return (\n        <A style={{ color: 'blue' }} href={body}>\n          {body}\n        </A>\n      );\n    } else {\n      return <Text>{body}</Text>;\n    }\n  }\n  return <></>;\n}\n","import { Layout, Spinner } from '@ui-kitten/components';\n\nexport default function FullPageSpinner({opacity = 0.4}) {\n  return (\n    <Layout\n      style={{\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        height: '100%',\n        position: 'absolute',\n        backgroundColor: 'black',\n        flex: 1,\n        opacity,\n        zIndex: 100,\n      }}>\n      <Spinner size=\"large\" />\n    </Layout>\n  );\n}\n","import {\n  Layout,\n  Text,\n  Card,\n  Button,\n  List,\n  Input,\n  useTheme,\n  Spinner,\n  Divider,\n} from '@ui-kitten/components';\nimport { useEffect, useState } from 'react';\nimport {\n  Keyboard,\n  TouchableWithoutFeedback,\n  ScrollView,\n  TouchableOpacity,\n  RefreshControl,\n} from 'react-native';\nimport { FontAwesome5 } from '@expo/vector-icons';\n\nimport { selectDarkMode, selectUserKey } from '../../../app/appDataSlice';\nimport { useAppSelector } from '../../../app/hooks';\nimport DisabledFieldModal from '../../../components/DisabledOptionModal';\nimport {\n  discoverApiSlice,\n  postsAdapter,\n  postsSelectors,\n  useAddCommentMutation,\n  useDeleteDiscoverPostMutation,\n  useLazyGetPostByIdQuery,\n  useLikePostMutation,\n} from '../../api/discoverApi';\nimport { usersApiSlice } from '../../api/usersApi';\nimport BottomBar from '../BottomBar';\nimport Comment from './Comment';\nimport SinglePostBody from './SinglePostBody';\nimport { stringToEmoji } from '../../../functions';\nimport FullPageSpinner from '../../../components/FullPageSpinner';\nimport { useAddClassMutation } from '../../api/classPagesApi';\nimport { MAX_WIDTH_WEB } from '../../../constants/discover';\nimport ImageComponent from '../ImageComponent';\nimport {LinearGradient} from \"expo-linear-gradient\";\n\nexport default function SinglePost({\n  route: {\n    params: { _id, searchTerm, searchedTag },\n  },\n  navigation,\n}) {\n  const theme = useTheme();\n  const darkMode = useAppSelector(selectDarkMode);\n  const userKey = useAppSelector(selectUserKey);\n  const [showModal, setShowModal] = useState(false);\n  const [comment, setComment] = useState('');\n  const [inputFocused, setInputFocused] = useState(false);\n\n  const [likePost] = useLikePostMutation();\n  const [refreshPost, { isLoading: refreshPostLoading }] =\n    useLazyGetPostByIdQuery();\n  const [addComment, { isLoading: addCommentLoading }] =\n    useAddCommentMutation();\n  const [deletePost, { isLoading: deletePostLoading }] =\n    useDeleteDiscoverPostMutation();\n  const { data: userData } =\n    usersApiSlice.endpoints.getUserInfo.useQueryState(userKey);\n  const post = discoverApiSlice.endpoints.getDiscoverPosts.useQueryState(\n    { pageNumber: 1, userKey, userName: userData.userName },\n    {\n      selectFromResult: (result) =>\n        postsSelectors.selectById(\n          result.data ?? postsAdapter.getInitialState(),\n          _id\n        ),\n    }\n  );\n\n  useEffect(() => {\n    if (!post) navigation.goBack();\n  }, [post]);\n\n  const handleRefreshPost = async () => {\n    try {\n      await refreshPost({\n        postId: _id,\n        userKey,\n        userName: userData.userName,\n        searchTerm,\n        tag: searchedTag,\n      }).unwrap();\n    } catch (error) {\n      console.warn(\"Couldn't refresh post\", error);\n    }\n  };\n\n  const handleDeletePost = async () => {\n    try {\n      await deletePost({\n        _id,\n        userKey,\n        userName: userData.userName,\n        title: post.title,\n        searchTerm,\n        tag: searchedTag,\n      }).unwrap();\n    } catch (error) {\n      console.warn(\"Couldn't delete post\", error);\n    }\n  };\n\n  const handleSubmitComment = async () => {\n    try {\n      await addComment({\n        _id,\n        userKey,\n        userName: userData.userName,\n        text: comment,\n        searchTerm,\n        tag: searchedTag,\n      }).unwrap();\n      setComment('');\n      setInputFocused(false);\n      Keyboard.dismiss();\n    } catch (e) {\n      console.warn('Error submitting comment', e);\n    }\n  };\n\n  const handlePressLike = async () => {\n    try {\n      await likePost({\n        userKey,\n        _id,\n        title: post.title,\n        postAuthor: post.userName,\n        userName: userData.userName,\n        searchTerm,\n        tag: searchedTag,\n      }).unwrap();\n    } catch (error) {\n      console.log('Error liking post:', error);\n    }\n  };\n\n  let body = <></>;\n  if (post?.type === 'contentImage') {\n    body = (\n      <ImageComponent\n        apiInfo={{\n          userKey,\n          _id,\n          title: post.title,\n          postAuthor: post.userName,\n          userName: userData.userName,\n          searchTerm,\n          searchedTag,\n        }}\n        hasLiked={post.hasLiked}\n        imageId={post.contentImage}\n      />\n    );\n  } else if (post?.type === 'contentText' || post?.type === 'contentUrl') {\n    body = (\n      <SinglePostBody\n        handleLikePost={handlePressLike}\n        type={post.type}\n        body={post.contentText || post.contentUrl}\n      />\n    );\n  }\n\n  const TopContent = () => {\n    return (\n      <Layout style={{ maxWidth: MAX_WIDTH_WEB, alignSelf: 'center' }}>\n        <Card\n          disabled\n          style={{ margin: 8, borderWidth: 0 }}\n          header={\n            <Layout>\n              <Text style={{ fontWeight: 'bold', fontSize: 20 }}>\n                {post.title}\n              </Text>\n            </Layout>\n          }\n          footer={\n            <Layout style={{ margin: 0, padding: 0 }}>\n              <BottomBar\n                commentIconShown={false}\n                tags={post.tags}\n                _id={post._id}\n              />\n            </Layout>\n          }>\n          {body}\n        </Card>\n        {post.userName === userData.userName ? (\n          <Layout style={{ flexDirection: 'row', width: '100%' }}>\n            <Button\n              status=\"danger\"\n              style={{ margin: 8, flex: 1 }}\n              onPress={handleDeletePost}>\n              Delete Post\n            </Button>\n            {/* <Button style={{ margin: 8, flex: 1 }} disabled>\n              Edit Post\n            </Button> */}\n          </Layout>\n        ) : null}\n\n        <Card disabled style={{ borderWidth: 0 }}>\n          <Text\n            style={{\n              fontWeight: '600',\n            }}>{`Comments (${post.comments.length})`}</Text>\n        </Card>\n      </Layout>\n    );\n  };\n\n  if (!post) {\n    return null;\n  }\n\n  return (\n      <LinearGradient\n          colors={\n              darkMode\n                  ? [theme['color-basic-1100'], theme['color-basic-1100']]\n                  : [theme['color-primary-500'], theme['color-success-500']]\n          }\n          style={{ width: '100%', margin: 0, alignItems: 'center', flex: 1 }}\n          start={{ x: 0, y: 0 }}\n          end={{ x: 1, y: 0.4 }}>\n    <Layout style={{ flex: 1 }}>\n      {showModal && <DisabledFieldModal setShowModal={setShowModal} />}\n      {/* Render Comments */}\n      <List\n        onRefresh={handleRefreshPost}\n        showsVerticalScrollIndicator={false}\n        refreshing={refreshPostLoading}\n        ListHeaderComponent={TopContent}\n        contentContainerStyle={{\n          marginHorizontal: 10,\n          maxWidth: 700,\n          alignSelf: 'center',\n        }}\n        style={{ backgroundColor: 'transparent' }}\n        data={post.comments}\n        ItemSeparatorComponent={Divider}\n        renderItem={({ item }) => (\n          <Comment\n            body={item.text}\n            postId={post._id}\n            commentId={item._id}\n            numLikes={item.numLikes}\n            hasLiked={item.hasLiked}\n            userName={userData.userName}\n            isOwnComment={item.userName === userData.userName}\n            searchTerm={searchTerm}\n            searchedTag={searchedTag}\n          />\n        )}\n        keyExtractor={(comment) => {\n          return comment._id;\n        }}\n      />\n      <Layout\n        style={{\n          flexDirection: 'row',\n          alignItems: 'center',\n          height: 55,\n          bottom: 0,\n          width: '100%',\n          paddingVertical: 10,\n          paddingRight: 10,\n          borderColor: darkMode\n            ? theme['color-basic-500']\n            : theme['color-basic-300'],\n          borderTopWidth: 1,\n        }}>\n        <Layout\n          style={{\n            flex: 1,\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}>\n          <Layout\n            style={{\n              borderRadius: 100,\n              width: 35,\n              height: 35,\n              backgroundColor: darkMode\n                ? theme['color-basic-600']\n                : theme['color-basic-300'],\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}>\n            <Text style={{ fontSize: 15 }}>\n              {stringToEmoji(userData.userName)}\n            </Text>\n          </Layout>\n        </Layout>\n\n        <Input\n          accessoryRight={\n            inputFocused ? (\n              <TouchableOpacity onPress={handleSubmitComment}>\n                <FontAwesome5\n                  name=\"arrow-alt-circle-right\"\n                  size={22}\n                  color={theme['color-primary-500']}\n                />\n              </TouchableOpacity>\n            ) : null\n          }\n          style={{ flex: 7 }}\n          placeholder=\"Add a comment...\"\n          onFocus={() => setInputFocused(true)}\n          onBlur={() => setInputFocused(false)}\n          value={comment}\n          onChangeText={(text) => setComment(text)}\n          onSubmitEditing={handleSubmitComment}\n        />\n      </Layout>\n      {(deletePostLoading || addCommentLoading) && <FullPageSpinner />}\n    </Layout>\n      </LinearGradient>\n  );\n}\n","import {\n  Alert,\n  Image,\n  TouchableOpacity,\n  Dimensions,\n  Platform,\n} from 'react-native';\nimport React from 'react';\nimport { Layout, Text, Input } from '@ui-kitten/components';\nimport * as ImagePicker from 'expo-image-picker';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { Feather } from '@expo/vector-icons';\nimport Toast from 'react-native-root-toast';\n\nconst windowWidth = Dimensions.get('window').width;\n\nexport default function CreateImage({\n  discoverPostInputs,\n  setDiscoverPostInputs,\n  TagInput,\n  showTitle = true,\n}) {\n  const [imagePickerStatus, requestImagePickerPermission] =\n    ImagePicker.useMediaLibraryPermissions();\n  const [cameraStatus, requestCameraPermission] =\n    ImagePicker.useCameraPermissions();\n\n  const onPressCamera = async () => {\n    const response = await requestCameraPermission();\n    if (response.granted || cameraStatus.granted) {\n      let result = await ImagePicker.launchCameraAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      });\n      if (!result.canceled) {\n        setDiscoverPostInputs({\n          ...discoverPostInputs,\n          contentImage: result.assets[0],\n        });\n      }\n    } else {\n      Alert.alert(\n        \"Permission to access camera is required. Please enable it in your phone's settings.\"\n      );\n    }\n  };\n\n  const pickImage = async () => {\n    const response = await requestImagePickerPermission();\n    if (response.granted || imagePickerStatus.granted) {\n      let result = await ImagePicker.launchImageLibraryAsync({\n        allowsEditing: false,\n      });\n      if (!result.canceled) {\n        setDiscoverPostInputs({\n          ...discoverPostInputs,\n          contentImage: result.assets[0],\n        });\n\n        if (Platform.OS === 'android') {\n          Toast.show(\n            \"Don't worry if the image seems blurry on the sides.\",\n            {\n              duration: Toast.durations.LONG,\n              opacity: 1,\n              position: -100,\n              backgroundColor: 'grey',\n              shadow: false,\n            }\n          );\n        }\n      }\n    } else {\n      Alert.alert(\n        \"Permission to access camera roll is required. Please enable it in your phone's settings.\"\n      );\n    }\n  };\n\n  const Title = (\n    <Layout\n      style={{\n        flexDirection: 'row',\n        justifyContent: 'space-evenly',\n        alignItems: 'center',\n        marginTop: 15,\n      }}>\n      <Input\n        label=\"Title\"\n        placeholder=\"Post Title\"\n        value={discoverPostInputs?.title ? discoverPostInputs.title : ''}\n        style={{ flex: 5 }}\n        onChangeText={(newText) => {\n          setDiscoverPostInputs({\n            ...discoverPostInputs,\n            title: newText,\n          });\n        }}\n      />\n    </Layout>\n  );\n\n  let imagePicker = <></>;\n\n  if (discoverPostInputs?.contentImage) {\n    // Image Preview\n    imagePicker = (\n      <Layout\n        level=\"2\"\n        style={{\n          height: 300,\n          marginVertical: 10,\n          borderRadius: 10,\n          shadowColor: '#000',\n          shadowOffset: {\n            width: 0,\n            height: 5,\n          },\n          shadowOpacity: 0.34,\n          shadowRadius: 6.27,\n\n          elevation: 10,\n        }}>\n        <TouchableOpacity\n          onPress={() => {\n            setDiscoverPostInputs(null);\n          }}\n          style={{ position: 'absolute', right: 10, top: 5, zIndex: 1 }}>\n          <Feather name=\"x-circle\" size={30} color={'grey'} />\n        </TouchableOpacity>\n\n        <Image\n          source={{\n            uri: discoverPostInputs.contentImage.uri,\n          }}\n          style={{\n            borderRadius: 5,\n            width: '100%',\n            height: '100%',\n            resizeMode: 'contain',\n          }}\n        />\n      </Layout>\n    );\n  } else {\n    // Image Picker\n    imagePicker = (\n      <Layout style={{ flexDirection: 'row' }}>\n        <TouchableOpacity\n          onPress={() => {\n            pickImage();\n          }}\n          style={{\n            height: 80,\n            justifyContent: 'center',\n            alignItems: 'center',\n            flex: 1,\n            paddingVertical: 8,\n            flexDirection: 'row',\n          }}>\n          <Layout\n            level=\"2\"\n            style={{\n              flex: 1,\n              flexDirection: 'row',\n              height: '100%',\n              marginHorizontal: 10,\n              paddingVertical: 15,\n              paddingHorizontal: 5,\n              borderRadius: 8,\n              alignItems: 'center',\n              justifyContent: 'space-around',\n            }}>\n            <FontAwesome name=\"image\" size={25} color={'grey'} />\n            <Text>Select Image</Text>\n          </Layout>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={onPressCamera}\n          style={{\n            height: 80,\n            justifyContent: 'center',\n            alignItems: 'center',\n            flex: 1,\n            paddingVertical: 8,\n            flexDirection: 'row',\n          }}>\n          <Layout\n            level=\"2\"\n            style={{\n              flex: 1,\n              flexDirection: 'row',\n              height: '100%',\n              marginHorizontal: 10,\n              paddingVertical: 15,\n              paddingHorizontal: 5,\n              borderRadius: 8,\n              alignItems: 'center',\n              justifyContent: 'space-around',\n            }}>\n            <FontAwesome name=\"camera\" size={25} color={'grey'} />\n            <Text>Use Camera</Text>\n          </Layout>\n        </TouchableOpacity>\n      </Layout>\n    );\n  }\n\n  return (\n    <>\n      {showTitle && Title}\n      {TagInput()}\n      {imagePicker}\n    </>\n  );\n}\n","import { Layout } from '@ui-kitten/components';\nimport React from 'react';\n\nexport default function WrapItems({ childStyle, children, ...LayoutProps }) {\n  return (\n    <Layout {...LayoutProps}>\n      {React.Children.map(children, (child) => (\n        <Layout style={childStyle}>{child}</Layout>\n      ))}\n    </Layout>\n  );\n}\n","import {\n  Button,\n  CheckBox,\n  Datepicker,\n  Divider,\n  Input,\n  Layout,\n  NativeDateService,\n  Text,\n} from '@ui-kitten/components';\nimport { useMemo, useState } from 'react';\nimport { Platform } from 'react-native';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { AntDesign } from '@expo/vector-icons';\n\nimport CreateImage from './CreateImagePost';\nimport { OptionalText } from './CreatePost';\nimport WrapItems from '../../../components/WrapItems';\n\nexport default function CreateEvent({\n  discoverPostInputs,\n  setDiscoverPostInputs,\n  TagInput,\n  startTime,\n  setStartTime,\n  endTime,\n  setEndTime,\n  date,\n  setDate,\n}) {\n  // Needed because Android date picker uses a modal\n  const [showTimePickerAndroid, setShowTimePickerAndroid] = useState(false);\n\n  const formatDateService = new NativeDateService('en', {\n    format: 'MM/DD/YYYY',\n  });\n  const timePickerOptions = useMemo(\n    () => ({\n      'Start Time': { time: startTime, setTime: setStartTime },\n      'End Time': { time: endTime, setTime: setEndTime },\n    }),\n    [startTime, setStartTime, endTime, setEndTime]\n  );\n\n  const formatAMPM = (date: Date) => {\n    let hours = date.getHours();\n    let minutes = date.getMinutes() as any;\n    const ampm = hours >= 12 ? 'pm' : 'am';\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n    minutes = minutes < 10 ? '0' + minutes : minutes;\n    let strTime = hours + ':' + minutes + ' ' + ampm;\n    return strTime;\n  };\n\n  const Title = (\n    <Layout\n      style={{\n        flexDirection: 'row',\n        justifyContent: 'space-evenly',\n        alignItems: 'center',\n        marginTop: 15,\n      }}>\n      <Input\n        label=\"Title\"\n        placeholder=\"Post Title\"\n        value={discoverPostInputs?.title ? discoverPostInputs.title : ''}\n        style={{ flex: 5 }}\n        onChangeText={(newText) => {\n          setDiscoverPostInputs({\n            ...discoverPostInputs,\n            title: newText,\n          });\n        }}\n      />\n    </Layout>\n  );\n\n  const TimePicker = () => {\n    if (Platform.OS === 'android') {\n      return (\n        <Layout\n          style={{\n            flexDirection: 'row',\n            justifyContent: 'space-around',\n          }}>\n          {Object.entries(timePickerOptions).map(\n            ([label, { time, setTime }], i) => (\n              <Layout key={i} style={{ alignItems: 'center' }}>\n                <Text category=\"label\" style={{ marginBottom: 5 }}>\n                  {label}\n                </Text>\n                <Button\n                  onPress={() => {\n                    setShowTimePickerAndroid(true);\n                  }}>\n                  {formatAMPM(time)}\n                </Button>\n                {showTimePickerAndroid && (\n                  <DateTimePicker\n                    mode=\"time\"\n                    onChange={(change, date) => {\n                      setTime(date);\n                      setShowTimePickerAndroid(false);\n                    }}\n                    value={time}\n                  />\n                )}\n              </Layout>\n            )\n          )}\n        </Layout>\n      );\n    }\n    if (Platform.OS === 'ios') {\n      return (\n        <Layout\n          style={{\n            flexDirection: 'row',\n            justifyContent: 'space-around',\n          }}>\n          {Object.entries(timePickerOptions).map(\n            ([label, { time, setTime }], i) => (\n              <Layout key={i} style={{ alignItems: 'center' }}>\n                <Text category=\"label\" style={{ marginBottom: 5 }}>\n                  {label}\n                </Text>\n\n                <DateTimePicker\n                  mode=\"time\"\n                  onChange={(change, date) => {\n                    setTime(date);\n                  }}\n                  value={time}\n                />\n              </Layout>\n            )\n          )}\n        </Layout>\n      );\n    }\n  };\n\n  if (Platform.OS === 'web') {\n    return (\n      <Text>\n        Creating Event Posts is not supported on the web. Download the app on\n        the App Store or Play Store to make an Event Post.\n      </Text>\n    );\n  }\n\n  return (\n    <Layout>\n      <WrapItems childStyle={{ marginVertical: 10 }}>\n        {Title}\n        <Input\n          label={'Location'}\n          placeholder={'Ex: North Dorm, HMC'}\n          value={discoverPostInputs?.location}\n          onChangeText={(newText) => {\n            setDiscoverPostInputs({\n              ...discoverPostInputs,\n              location: newText,\n            });\n          }}\n        />\n        <Datepicker\n          label={'Date'}\n          dateService={formatDateService}\n          onSelect={(nextDate) => setDate(nextDate)}\n          date={date}\n          placement=\"top\"\n        />\n        <TimePicker />\n        <Layout style={{ padding: 6 }}>\n          <Divider />\n          <AntDesign name=\"caretdown\" style={{ position: 'absolute' }} />\n          <AntDesign\n            name=\"caretdown\"\n            style={{ position: 'absolute', right: 0 }}\n          />\n          <Layout\n            style={{ position: 'absolute', right: '44%', marginBottom: 6 }}>\n            <Text appearance=\"hint\">Optional</Text>\n          </Layout>\n        </Layout>\n\n        <Layout>\n          <Input\n            label=\"Link\"\n            placeholder=\"www.example.com\"\n            style={{ marginBottom: 10 }}\n            value={\n              discoverPostInputs?.contentUrl\n                ? discoverPostInputs.contentUrl\n                : ''\n            }\n            onChangeText={(newText) => {\n              setDiscoverPostInputs({\n                ...discoverPostInputs,\n                contentUrl: newText,\n              });\n            }}\n          />\n          <Input\n            label={'Host'}\n            placeholder={'Ex: John Doe'}\n            style={{ marginBottom: 5 }}\n            value={discoverPostInputs?.host}\n            onChangeText={(newText) => {\n              setDiscoverPostInputs({\n                ...discoverPostInputs,\n                host: newText,\n              });\n            }}\n          />\n\n          <Input\n            label={'Description'}\n            multiline\n            placeholder={'Describe the event...'}\n            style={{ marginVertical: 10 }}\n            value={discoverPostInputs?.description}\n            onChangeText={(newText) => {\n              setDiscoverPostInputs({\n                ...discoverPostInputs,\n                description: newText,\n              });\n            }}\n          />\n\n          <CreateImage\n            showTitle={false}\n            {...{ discoverPostInputs, setDiscoverPostInputs, TagInput }}\n          />\n        </Layout>\n      </WrapItems>\n    </Layout>\n  );\n}\n","import {\n  StyleSheet,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  Keyboard,\n  ScrollView,\n  KeyboardAvoidingView,\n  Platform,\n} from 'react-native';\nimport React, { useState } from 'react';\nimport {\n  Text,\n  Input,\n  Select,\n  SelectItem,\n  IndexPath,\n  Layout,\n  Button,\n  Spinner,\n  useTheme,\n  CheckBox,\n  Divider,\n} from '@ui-kitten/components';\nimport { FontAwesome5 } from '@expo/vector-icons';\n\nimport CreateImage from './CreateImagePost';\nimport {\n  tagIndices,\n  adminTagIndices,\n  postOptions,\n} from '../../../constants/discover';\nimport { useCreateDiscoverPostMutation } from '../../api/discoverApi';\nimport { useAppSelector } from '../../../app/hooks';\nimport { usersApiSlice } from '../../api/usersApi';\nimport Toast from 'react-native-root-toast';\nimport { selectDarkMode } from '../../../app/appDataSlice';\nimport CreateEventPost from './CreateEventPost';\nimport { showToast } from '../../../functions';\n\nexport const OptionalText = () => (\n  <Text\n    style={{\n      alignSelf: 'flex-end',\n      marginRight: 5,\n      color: 'grey',\n      fontSize: 11,\n    }}>\n    Optional\n  </Text>\n);\n\nexport default function CreatePost() {\n  const theme = useTheme();\n  const darkMode = useAppSelector(selectDarkMode);\n  const userKey = useAppSelector((state) => state.appData.secure.userKey);\n  const {\n    data: { userName, permissionLevel },\n  } = usersApiSlice.endpoints.getUserInfo.useQueryState(userKey);\n  const [discoverPostInputs, setDiscoverPostInputs] = useState(null);\n  const [startTime, setStartTime] = useState(new Date());\n  const [endTime, setEndTime] = useState(new Date());\n  const [date, setDate] = useState(new Date());\n  const [selectedTagIndex, setSelectedTagIndex] = useState<IndexPath[]>([]);\n  const [selectedPostTypeIndex, setSelectedPostTypeIndex] = useState(\n    new IndexPath(0)\n  );\n  const [error, setError] = useState(null);\n  const [isEmojiShown, setIsEmojiShown] = useState(false);\n\n  const [createDiscoverPost, { isLoading }] = useCreateDiscoverPostMutation();\n\n  const tagArray = permissionLevel === 'admin' ? adminTagIndices : tagIndices;\n\n  const submitEvent = async (tags: string[]) => {\n    // Validate date and time\n    if (date < new Date()) {\n      setError('Date must be in the future');\n      return;\n    }\n\n    if (startTime > endTime) {\n      setError('Start time must be before end time');\n      return;\n    }\n    \n\n    let formdata = new FormData();\n    formdata.append('type', 'contentEvent');\n    formdata.append('title', discoverPostInputs.title);\n    formdata.append('location', discoverPostInputs.location);\n    formdata.append('date', date.toISOString());\n    formdata.append('startTime', startTime.toISOString());\n    formdata.append('endTime', endTime.toISOString());\n\n    // Optional fields\n    if (discoverPostInputs.contentUrl)\n      formdata.append('contentUrl', discoverPostInputs.contentUrl);\n    if (discoverPostInputs.host)\n      formdata.append('host', discoverPostInputs.host);\n    if (discoverPostInputs.description)\n      formdata.append('contentText', discoverPostInputs.description);\n    if (discoverPostInputs.contentImage)\n      formdata.append('picture', {\n        uri: discoverPostInputs.contentImage.uri,\n        name: 'discoverImage',\n        type: 'image/jpg',\n      } as any);\n\n    tags.forEach((tag) => {\n      formdata.append('tags', tag);\n    });\n\n    try {\n      await createDiscoverPost({\n        type: 'contentEvent',\n        userKey,\n        userName,\n        postBody: formdata,\n      }).unwrap();\n\n      showToast('Posted Successfully!', theme['color-success-500']);\n\n      setDiscoverPostInputs(null);\n      setSelectedTagIndex([]);\n      setError(null);\n    } catch (e) {\n      console.warn(\"Couldn't post image\", e);\n      showToast('Post failed to send.', theme['color-warning-500']);\n    }\n  };\n\n  const submitImage = async (tags: string[]) => {\n    let formdata = new FormData();\n    formdata.append('title', discoverPostInputs.title);\n    formdata.append('type', 'contentImage');\n    formdata.append('picture', {\n      uri: discoverPostInputs.contentImage.uri,\n      name: 'discoverImage',\n      type: 'image/jpg',\n    } as any);\n    tags.forEach((tag) => {\n      formdata.append('tags', tag);\n    });\n\n    try {\n      await createDiscoverPost({\n        type: 'contentImage',\n        userKey,\n        userName,\n        postBody: formdata,\n      }).unwrap();\n\n      showToast('Posted Successfully!', theme['color-success-500']);\n\n      setDiscoverPostInputs(null);\n      setSelectedTagIndex([]);\n      setError(null);\n    } catch (e) {\n      console.warn(\"Couldn't post image\", e);\n      showToast('Post failed to send.', theme['color-warning-500']);\n    }\n  };\n\n  const onSubmit = async () => {\n    //\n    // Validate Input\n    //\n    if (\n      (selectedPostTypeIndex.row === 1 &&\n        (!discoverPostInputs ||\n          !discoverPostInputs.title ||\n          !discoverPostInputs.contentText)) ||\n      (selectedPostTypeIndex.row === 2 &&\n        (!discoverPostInputs ||\n          !discoverPostInputs.title ||\n          !discoverPostInputs.contentUrl)) ||\n      (selectedPostTypeIndex.row === 0 &&\n        (!discoverPostInputs ||\n          !discoverPostInputs.title ||\n          !discoverPostInputs.contentImage)) ||\n      (selectedPostTypeIndex.row === 3 &&\n        (!discoverPostInputs ||\n          !discoverPostInputs.title ||\n          !discoverPostInputs.location ||\n          !date ||\n          !startTime ||\n          !endTime))\n    ) {\n      console.log('onsubmit error', discoverPostInputs);\n      setError('Please Fill in All Fields');\n      return;\n    }\n\n    //\n    // Submit Post\n    //\n\n    const tags = selectedTagIndex.map((index) => tagArray[index.row]);\n\n    // Special Case for Image Post\n    if (selectedPostTypeIndex.row === 0) {\n      submitImage(tags);\n      return;\n    }\n\n    // Special Case for Event Post\n    if (selectedPostTypeIndex.row === 3) {\n      submitEvent(tags);\n      return;\n    }\n\n    let type = '';\n    if (selectedPostTypeIndex.row === 1) {\n      type = 'contentText';\n    } else if (selectedPostTypeIndex.row === 2) {\n      type = 'contentUrl';\n    }\n    try {\n      await createDiscoverPost({\n        type,\n        userKey,\n        userName,\n        tags,\n        content: discoverPostInputs[type],\n        title: discoverPostInputs.title,\n        emoji: discoverPostInputs.emoji,\n      }).unwrap();\n\n      let toast = Toast.show('Posted Successfully!', {\n        duration: Toast.durations.LONG,\n        opacity: 1,\n        position: -100,\n        backgroundColor: theme['color-success-500'],\n        shadow: false,\n      });\n\n      setTimeout(function hideToast() {\n        Toast.hide(toast);\n      }, 7000);\n\n      setDiscoverPostInputs(null);\n      setSelectedTagIndex([]);\n      setError(null);\n    } catch (e) {\n      let toast = Toast.show('Post failed to send.', {\n        duration: Toast.durations.LONG,\n        opacity: 1,\n        position: -100,\n        backgroundColor: theme['color-warning-500'],\n        shadow: false,\n      });\n\n      setTimeout(function hideToast() {\n        Toast.hide(toast);\n      }, 4000);\n    }\n  };\n\n  const TagInput = () => {\n    const groupedData = selectedTagIndex.map((index) => {\n      return tagArray[index.row];\n    });\n    return (\n      <Layout>\n        <Select\n          label={'Tags'}\n          multiSelect\n          value={groupedData.join(', ')}\n          placeholder=\"Select Tags\"\n          selectedIndex={selectedTagIndex}\n          onSelect={(index: IndexPath[]) => {\n            setSelectedTagIndex(index);\n          }}\n          style={styles.input}>\n          {tagArray.map((title, i) => (\n            <SelectItem title={title} key={i} />\n          ))}\n        </Select>\n        <OptionalText />\n      </Layout>\n    );\n  };\n\n  const renderPostOptions = () => {\n    // Text\n    if (selectedPostTypeIndex.row === 1) {\n      return (\n        <>\n          <Layout\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'space-evenly',\n              alignItems: 'center',\n              marginTop: 15,\n            }}>\n            {/* <EmojiToggle /> */}\n\n            <Input\n              placeholder=\"Post Title\"\n              onFocus={() => {\n                setIsEmojiShown(false);\n              }}\n              value={discoverPostInputs?.title ? discoverPostInputs.title : ''}\n              style={{ ...styles.input, flex: 5 }}\n              onChangeText={(newText) => {\n                setDiscoverPostInputs({\n                  ...discoverPostInputs,\n                  title: newText,\n                });\n              }}\n            />\n          </Layout>\n          {TagInput()}\n          <Input\n            multiline\n            placeholder=\"Post Body\"\n            onFocus={() => {\n              setIsEmojiShown(false);\n            }}\n            textStyle={{ minHeight: 100 }}\n            style={{ ...styles.input, alignSelf: 'center', width: '100%' }}\n            value={\n              discoverPostInputs?.contentText\n                ? discoverPostInputs.contentText\n                : ''\n            }\n            onChangeText={(newText) => {\n              setDiscoverPostInputs({\n                ...discoverPostInputs,\n                contentText: newText,\n              });\n            }}\n          />\n        </>\n      );\n    } else if (selectedPostTypeIndex.row === 2) {\n      // LINK\n      return (\n        <>\n          <Layout\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'space-evenly',\n              alignItems: 'center',\n              marginTop: 15,\n            }}>\n            {/* <EmojiToggle /> */}\n            <Input\n              placeholder=\"Post Title\"\n              onFocus={() => {\n                setIsEmojiShown(false);\n              }}\n              value={discoverPostInputs?.title ? discoverPostInputs.title : ''}\n              style={{ ...styles.input, flex: 5 }}\n              onChangeText={(newText) => {\n                setDiscoverPostInputs({\n                  ...discoverPostInputs,\n                  title: newText,\n                });\n              }}\n            />\n          </Layout>\n\n          <Input\n            placeholder=\"Post Link\"\n            style={styles.input}\n            onFocus={() => {\n              setIsEmojiShown(false);\n            }}\n            value={\n              discoverPostInputs?.contentUrl\n                ? discoverPostInputs.contentUrl\n                : ''\n            }\n            onChangeText={(newText) => {\n              setDiscoverPostInputs({\n                ...discoverPostInputs,\n                contentUrl: newText,\n              });\n            }}\n          />\n          {/* {PostTypeInput} */}\n          {TagInput()}\n        </>\n      );\n    } else if (selectedPostTypeIndex.row === 0) {\n      // IMAGE\n      return (\n        <CreateImage\n          discoverPostInputs={discoverPostInputs}\n          setDiscoverPostInputs={setDiscoverPostInputs}\n          TagInput={TagInput}\n        />\n      );\n    } else if (selectedPostTypeIndex.row === 3) {\n      // EVENT\n      return (\n        <CreateEventPost\n          discoverPostInputs={discoverPostInputs}\n          setDiscoverPostInputs={setDiscoverPostInputs}\n          TagInput={TagInput}\n          startTime={startTime}\n          setStartTime={setStartTime}\n          endTime={endTime}\n          setEndTime={setEndTime}\n          date={date}\n          setDate={setDate}\n        />\n      );\n    }\n  };\n\n  return (\n    <Layout style={{ flex: 1 }}>\n      <KeyboardAvoidingView\n        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n        style={{ flex: 1 }}>\n        <ScrollView style={{ flex: 1 }}>\n          <TouchableWithoutFeedback\n            style={{ flex: 1 }}\n            onPress={() => {\n              Keyboard.dismiss();\n            }}>\n            <Layout\n              style={{ flex: 1, marginBottom: 100, marginHorizontal: 16 }}>\n              <Select\n                status=\"success\"\n                label=\"Select Post Type\"\n                value={postOptions[selectedPostTypeIndex.row]}\n                selectedIndex={selectedPostTypeIndex}\n                onSelect={(index: IndexPath) => {\n                  setSelectedPostTypeIndex(index);\n                  setSelectedTagIndex([]);\n                  setDiscoverPostInputs(null);\n                  setError(null);\n                  setIsEmojiShown(false);\n                }}\n                style={styles.input}>\n                <SelectItem\n                  title=\"Image Post\"\n                  accessoryLeft={\n                    <FontAwesome5\n                      name=\"image\"\n                      size={17}\n                      color={darkMode ? '#fff' : '#000'}\n                    />\n                  }\n                />\n                <SelectItem\n                  title=\"Text Post\"\n                  accessoryLeft={\n                    <FontAwesome5\n                      name=\"file-alt\"\n                      size={17}\n                      color={darkMode ? '#fff' : '#000'}\n                    />\n                  }\n                />\n                <SelectItem\n                  title=\"Link\"\n                  accessoryLeft={\n                    <FontAwesome5\n                      name=\"link\"\n                      size={17}\n                      color={darkMode ? '#fff' : '#000'}\n                    />\n                  }\n                />\n                <SelectItem\n                  title=\"Event\"\n                  accessoryLeft={\n                    <FontAwesome5\n                      name=\"calendar-alt\"\n                      size={17}\n                      color={darkMode ? '#fff' : '#000'}\n                    />\n                  }\n                />\n              </Select>\n\n              <Divider />\n              {renderPostOptions()}\n              {error && (\n                <Layout>\n                  <Text\n                    style={{\n                      textAlign: 'center',\n                      color: 'red',\n                      fontStyle: 'italic',\n                    }}>\n                    {error}\n                  </Text>\n                </Layout>\n              )}\n              {!isEmojiShown && (\n                <Button\n                  style={styles.input}\n                  onPress={onSubmit}\n                  disabled={isLoading}>\n                  Submit\n                </Button>\n              )}\n            </Layout>\n          </TouchableWithoutFeedback>\n        </ScrollView>\n      </KeyboardAvoidingView>\n      {isLoading && (\n        <Layout\n          style={{\n            justifyContent: 'center',\n            alignItems: 'center',\n            width: '100%',\n            height: '100%',\n            position: 'absolute',\n            backgroundColor: 'black',\n            flex: 1,\n            opacity: 0.3,\n          }}>\n          <Spinner size=\"medium\" />\n        </Layout>\n      )}\n    </Layout>\n  );\n}\n\nconst styles = StyleSheet.create({\n  input: {\n    marginVertical: 5,\n  },\n});\n","import { Layout, Input, Button } from '@ui-kitten/components';\nimport { Icon } from '@ui-kitten/components';\nimport { useState } from 'react';\nimport {\n  Keyboard,\n  TouchableOpacity,\n  LayoutAnimation,\n  TouchableWithoutFeedback,\n} from 'react-native';\nimport { useTheme } from '@ui-kitten/components';\n\nimport { useAppSelector } from '../app/hooks';\nimport { selectDarkMode } from '../app/appDataSlice';\n\ntype SearchBarProps = {\n  onChangeText: (text: string) => void;\n  searchTerm: string;\n  placeholder?: string;\n  accessoryLeft?: any;\n  inputProps?: any;\n  inputStyle?: any;\n  inputRef?: any;\n  cancelButtonAction?: () => void;\n  onSubmitEditing?: () => void;\n  alwaysShowCancelButton?: boolean;\n  cancelButtonStatus?:\n    | 'basic'\n    | 'primary'\n    | 'success'\n    | 'info'\n    | 'warning'\n    | 'danger';\n};\n\nexport default function SearchBar({\n  onChangeText,\n  searchTerm,\n  accessoryLeft,\n  placeholder,\n  inputRef,\n  inputStyle,\n  inputProps,\n  cancelButtonAction = () => {},\n  onSubmitEditing = () => {},\n  cancelButtonStatus = 'warning',\n  alwaysShowCancelButton = false,\n}: SearchBarProps) {\n  const [selected, setSelected] = useState(false);\n\n  const darkMode = useAppSelector(selectDarkMode);\n  const theme = useTheme();\n\n  const select = () => {  \n    setSelected(true);\n    if (!alwaysShowCancelButton) {\n      LayoutAnimation.configureNext(\n        LayoutAnimation.create(100, 'linear', 'scaleX')\n      );\n    }\n  };\n\n  const deselect = () => {\n    setSelected(false);\n    if (!alwaysShowCancelButton) {\n      LayoutAnimation.configureNext(\n        LayoutAnimation.create(100, 'linear', 'opacity')\n      );\n    }\n  };\n\n  return (\n    <Layout\n      style={{\n        backgroundColor: 'transparent',\n        flexDirection: 'row',\n      }}>\n      {accessoryLeft}\n\n      <Input\n        style={{\n          ...inputStyle,\n          borderRadius: 20,\n          flex: 1,\n          borderWidth: 1,\n          borderColor: darkMode\n            ? theme['color-basic-500']\n            : theme['color-basic-100'],\n        }}\n        placeholderTextColor={theme['color-basic-500']}\n        accessoryRight={\n          selected && searchTerm.length > 0\n            ? (props) => (\n                <TouchableOpacity onPress={() => onChangeText('')}>\n                  <Icon {...props} name=\"times\" pack=\"fontAwesome\" />\n                </TouchableOpacity>\n              )\n            : null\n        }\n        onFocus={select}\n        onBlur={deselect}\n        placeholder={placeholder}\n        value={searchTerm}\n        onChangeText={(text) => {\n          onChangeText(text);\n        }}\n        onSubmitEditing={onSubmitEditing}\n        ref={inputRef}\n        autoCorrect={false}\n        {...inputProps}\n      />\n\n      {alwaysShowCancelButton || selected ? (\n        <Button\n          size=\"small\"\n          status={cancelButtonStatus}\n          appearance=\"ghost\"\n          onPress={() => {\n            Keyboard.dismiss();\n            cancelButtonAction();\n          }}>\n          Cancel\n        </Button>\n      ) : null}\n    </Layout>\n  );\n}\n","import { Input, Layout, useTheme } from '@ui-kitten/components';\nimport { useEffect, useRef, useState } from 'react';\nimport { selectDarkMode } from '../../app/appDataSlice';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport Header from '../../components/Header';\nimport SearchBar from '../../components/SearchBar';\nimport {\n  selectSearchTerm,\n  selectSubmittedSearchTerm,\n  searchTermChanged,\n  searchTermSubmitted,\n  selectTag,\n  selectRecentSearches,\n  recentSearchTermRemoved,\n  recentSearchTermSelected,\n} from './discoverSlice';\nimport PostsList from './PostsList';\nimport {LinearGradient} from \"expo-linear-gradient\";\nimport {CurrentTermLabel} from \"../classPages/ClassesList\";\n\nexport default function SearchPage({ navigation }) {\n  const dispatch = useAppDispatch();\n\n  const searchTerm = useAppSelector(selectSearchTerm);\n  const tag = useAppSelector(selectTag);\n  const submittedSearchTerm = useAppSelector(selectSubmittedSearchTerm);\n  const recentSearches = useAppSelector(selectRecentSearches);\n\n  const inputRef = useRef<Input>(null);\n\n  const darkMode = useAppSelector(selectDarkMode);\n  const theme = useTheme();\n\n  useEffect(() => {\n    inputRef.current?.focus();\n  }, []);\n\n  const onSubmitEditing = async () => {\n    dispatch(searchTermSubmitted(searchTerm));\n  };\n\n  const onChangeText = (text: string) => {\n    dispatch(searchTermChanged(text));\n  };\n\n  const handleRemoveRecentSearch = (searchTerm: string) => {\n    dispatch(recentSearchTermRemoved(searchTerm));\n  };\n\n  const handleClickRecentSearch = (searchTerm: string) => {\n    dispatch(recentSearchTermSelected(searchTerm));\n  };\n\n  let searchBarBackgroundColor = '';\n  if (darkMode) {\n    searchBarBackgroundColor = theme['color-basic-800'];\n  } else {\n    searchBarBackgroundColor = theme['color-basic-100'];\n  }\n\n  return (\n    <Layout style={{ flex: 1 }}>\n      <Layout level=\"2\" style={{ paddingBottom: 15 }}>\n        <Header\n          level=\"2\"\n          center={\n            <Layout\n              level=\"2\"\n              style={{ flex: 1, backgroundColor: 'transparent' }}>\n              <SearchBar\n                inputRef={inputRef}\n                inputStyle={{\n                  opacity: 1,\n                  backgroundColor: searchBarBackgroundColor,\n                }}\n                searchTerm={searchTerm}\n                onChangeText={onChangeText}\n                onSubmitEditing={onSubmitEditing}\n                placeholder=\"Search Posts...\"\n                cancelButtonAction={() => navigation.goBack()}\n                cancelButtonStatus=\"basic\"\n                alwaysShowCancelButton\n              />\n            </Layout>\n          }\n          title=\"\"\n        />\n      </Layout>\n      <PostsList\n        navigation={navigation}\n        tag={tag}\n        searchTerm={submittedSearchTerm}\n        recentSearches={recentSearches}\n        handleRemoveRecentSearch={handleRemoveRecentSearch}\n        handleClickRecentSearch={handleClickRecentSearch}\n        sponsor={true}\n      />\n    </Layout>\n  );\n}\n","import { ScrollView, View, Text } from 'react-native';\nimport React from 'react';\nimport { Button, useTheme } from '@ui-kitten/components';\nimport { Feather } from '@expo/vector-icons';\nimport { FontAwesome5 } from '@expo/vector-icons';\n\nexport default function Menu({ menuItems, setMenuItems }) {\n  const theme = useTheme();\n\n  return (\n    <View style={{ marginVertical: 10 }}>\n      <ScrollView\n        showsHorizontalScrollIndicator={false}\n        horizontal={true}\n        style={{ flexDirection: 'row' }}>\n        {Object.entries(menuItems).map(([name, value]: any[], index) => {\n          if (!value.selected) {\n            return (\n              <Button\n                onPress={() => {\n                  setMenuItems({\n                    ...menuItems,\n                    [name]: { selected: !value.selected },\n                  });\n                }}\n                status={value.selected ? 'info' : 'primary'}\n                style={{\n                  height: 45,\n                  marginHorizontal: 10,\n                  borderRadius: 20,\n                  backgroundColor: `rgba(${theme['color-success-500']}, ${1 - 0.03 * index})`,\n                  borderColor: `rgba(${theme['color-success-500']}, ${1 - 0.03 * index})`,\n                }}\n                key={index}>\n                <View\n                  style={{ alignItems: 'center', justifyContent: 'center' }}>\n                  <Text style={{ color: 'white' }}>\n                    {name}\n                    {value.selected && (\n                      <Text>\n                        {`    `}\n                        <Feather name=\"x\" size={15} />\n                      </Text>\n                    )}\n                  </Text>\n                </View>\n              </Button>\n            );\n          }\n        })}\n      </ScrollView>\n      <ScrollView\n        showsHorizontalScrollIndicator={false}\n        horizontal={true}\n        style={{ flexDirection: 'row', marginTop: 3, marginLeft: 8 }}>\n        {Object.entries(menuItems).map(([name, value] : any[], index) => {\n          if (value.selected) {\n            return (\n              <Button\n                accessoryRight={\n                  <FontAwesome5 name=\"times\" size={14} color=\"white\" />\n                }\n                onPress={() => {\n                  setMenuItems({\n                    ...menuItems,\n                    [name]: { selected: !value.selected },\n                  });\n                }}\n                style={{\n                  height: 45,\n                  marginHorizontal: 2,\n                  borderRadius: 20,\n                  backgroundColor: theme['color-success-500'],\n                  borderColor: theme['color-success-500'],\n                }}\n                key={index}>\n                <View\n                  style={{ alignItems: 'center', justifyContent: 'center' }}>\n                  <Text style={{ color: 'white' }}>{name}</Text>\n                </View>\n              </Button>\n            );\n          }\n        })}\n      </ScrollView>\n    </View>\n  );\n}\n","import { apiSlice } from './apiSlice';\n\nexport const sponsorsApiSlice = apiSlice.injectEndpoints({\n  overrideExisting: true,\n  endpoints: (builder) => ({\n    refreshSponsors: builder.query({\n      query: (userKey) => ({\n        url: '/sponsors',\n        headers: {\n          userKey,\n        },\n      }),\n      transformResponse: (sponsors: any[]) => {\n        sponsors = sponsors.sort(function (a, b) {\n          const textA = a.sponsorName.toUpperCase();\n          const textB = b.sponsorName.toUpperCase();\n          return textA < textB ? 1 : textA > textB ? -1 : 0;\n        });\n\n        return [\n          sponsors.find((sponsor) => sponsor.sponsorName === \"Big Mo's\"),\n          ...sponsors.filter((sponsor) => sponsor.sponsorName !== \"Big Mo's\"),\n        ];\n      },\n    }),\n    postSponsorVisit: builder.mutation({\n      query: ({ userKey, sponsorId }) => ({\n        url: '/analytics/sponsor/ping',\n        method: 'POST',\n        headers: {\n          userKey,\n        },\n        body: {\n          sponsorId,\n        },\n        responseHandler: (response) => response.text(),\n      }),\n    }),\n  }),\n});\n\nexport const { useLazyRefreshSponsorsQuery, usePostSponsorVisitMutation } =\n  sponsorsApiSlice;\n","import React, { useEffect, useState } from 'react';\nimport {\n  StyleSheet,\n  Image,\n  TouchableOpacity,\n  SafeAreaView,\n  ScrollView,\n  Linking,\n  View,\n  Text,\n  Platform,\n  Dimensions,\n} from 'react-native';\nimport { FontAwesome5 } from '@expo/vector-icons';\n\nimport _ from 'lodash';\nimport { useAppSelector } from '../../app/hooks';\nimport { selectDarkMode, selectUserKey } from '../../app/appDataSlice';\nimport Menu from '../../components/Menu';\nimport {\n  useLazyRefreshSponsorsQuery,\n  usePostSponsorVisitMutation,\n} from '../api/sponsorsApi';\nimport {Layout, useTheme} from '@ui-kitten/components';\nimport {LinearGradient} from \"expo-linear-gradient\";\n\nconst windowWidth = Dimensions.get('window').width;\n\nexport const SponsorPage = ({\n  route: {\n    params: { data },\n  },\n}) => {\n  const isDarkMode = useAppSelector(selectDarkMode);\n  const sponsorPageStyles = StyleSheet.create({\n    container: {\n      flex: 1,\n    },\n    header: {\n      marginTop: 20,\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '100%',\n    },\n    address: {\n      color: isDarkMode ? 'white' : 'black',\n      alignItems: 'center',\n      margin: 10,\n      borderColor: 'black',\n      borderWidth: 1,\n      padding: 10,\n    },\n    video: {\n      marginTop: 20,\n      display: 'flex',\n      justifyContent: 'flex-start',\n    },\n    title: {\n      color: isDarkMode ? 'white' : 'black',\n      fontSize: 26,\n      marginLeft: 10,\n    },\n    subtitle: {\n      color: isDarkMode ? 'white' : 'black',\n      fontSize: 14,\n      justifyContent: 'center',\n    },\n    logo: {\n      width: '100%',\n      height: 100,\n    },\n    description: {\n      borderWidth: 1,\n      margin: 10,\n      borderColor: '#F1E4B5',\n      borderRadius: 5,\n      width: '95%',\n      padding: 10,\n      //backgroundColor: '#F9F9F9',\n    },\n    couponContainer: {\n      width: '100%',\n      justifyContent: 'center',\n      alignItems: 'center',\n      marginTop: 20,\n      marginBottom: 20,\n    },\n    coupon: {\n      width: 400,\n      height: 267,\n    },\n    imageGallery: {\n      justifyContent: 'center',\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      margin: 10,\n      marginBottom: 0,\n    },\n    imageStyle: {\n      width: 150,\n      height: 150,\n      paddingTop: 100,\n      margin: 5,\n    },\n    headerText: {\n      color: isDarkMode ? 'white' : 'black',\n      fontSize: 20,\n      fontWeight: 'bold',\n    },\n  });\n  const [imageIndex, setImageIndex] = useState(0);\n  const [visible, setIsVisible] = useState(false);\n  const [canOpenLink, setCanOpenLink] = useState(false);\n\n  const [postSponsorVisitQuery] = usePostSponsorVisitMutation();\n\n  const userKey = useAppSelector(selectUserKey);\n\n  const videoLinkArray = data.videoLink && data.videoLink.split('/');\n  const videoLink = data.videoLink && videoLinkArray[videoLinkArray.length - 1];\n\n  function getSubtitle() {\n    if (data.phoneNumber && data.email) {\n      return data.phoneNumber + ' \\u2022 ' + data.email;\n    } else if (data.phoneNumber) {\n      return data.phoneNumber;\n    } else if (data.email) {\n      return data.email;\n    } else {\n      return null;\n    }\n  }\n\n  const postSponsorVisit = async () => {\n    try {\n      await postSponsorVisitQuery({ userKey, sponsorId: data._id }).unwrap();\n    } catch (e) {\n      console.warn('Error posting sponsor visit: ', e);\n    }\n  };\n\n  useEffect(() => {\n    const funct = async () => {\n      setCanOpenLink(await Linking.canOpenURL(data.website));\n      postSponsorVisit();\n    };\n    funct();\n  }, []);\n\n  function renderWebsiteLink() {\n    if (canOpenLink) {\n      return (\n        <View>\n          <TouchableOpacity\n            onPress={() => {\n              Linking.openURL(data.website);\n            }}\n            style={{\n              display: 'flex',\n              flexDirection: 'row',\n              alignItems: 'center',\n            }}>\n            <Text\n              style={{\n                fontSize: 15,\n                color: isDarkMode ? '#6b7ee5' : '#4b5dc7',\n                paddingRight: 5,\n              }}>\n              Check Out Our Website!\n            </Text>\n            <FontAwesome5 name=\"link\" size={15} color=\"#4b5dc7\" />\n          </TouchableOpacity>\n        </View>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  return (\n    <Layout style={{ flex: 1 }}>\n      <ScrollView>\n        <Layout style={sponsorPageStyles.container}>\n          <View style={sponsorPageStyles.header}>\n            <Image\n              resizeMode=\"contain\"\n              style={sponsorPageStyles.logo}\n              source={{ uri: data.logo }}\n            />\n          </View>\n          <View\n            style={{ width: '100%', display: 'flex', alignItems: 'center' }}>\n            <Text style={sponsorPageStyles.title}>{data.sponsorName}</Text>\n            <Text style={sponsorPageStyles.subtitle}>{getSubtitle()}</Text>\n          </View>\n\n          {data.location && (\n            <View style={sponsorPageStyles.address}>\n              <Text\n                style={{ fontSize: 18, color: isDarkMode ? 'white' : 'black' }}>\n                {data.location}\n              </Text>\n            </View>\n          )}\n\n          <View\n            style={{ width: '100%', display: 'flex', alignItems: 'center' }}>\n            {renderWebsiteLink()}\n          </View>\n\n          <Layout style={sponsorPageStyles.description}>\n            <Text\n              style={{ fontSize: 17, color: isDarkMode ? 'white' : 'black' }}>\n              {data.description}\n            </Text>\n          </Layout>\n          <View\n            style={{\n              width: '100%',\n              alignSelf: 'flex-start',\n              marginLeft: 20,\n              borderBottomColor: '#F1E4B5',\n              borderBottomWidth: 2,\n              paddingBottom: 5,\n            }}>\n            <Text style={sponsorPageStyles.headerText}>Image Gallery</Text>\n          </View>\n\n          <View style={sponsorPageStyles.imageGallery}>\n            {data.images.map((img, index) => {\n              return (\n                <TouchableOpacity\n                  onPress={() => {\n                    setImageIndex(index);\n                    setIsVisible(true);\n                  }}>\n                  <Image\n                    style={sponsorPageStyles.imageStyle}\n                    source={{ uri: img }}\n                  />\n                </TouchableOpacity>\n              );\n            })}\n          </View>\n\n          {data.coupons[0] && (\n            <Layout style={sponsorPageStyles.couponContainer}>\n              <Image\n                resizeMode={'contain'}\n                source={require('../../../assets/sponsorPage/coupon.png')}\n                style={sponsorPageStyles.coupon}\n              />\n              <Text\n                style={{\n                  position: 'absolute',\n                  fontSize: 30,\n                  textAlign: 'center',\n                  justifyContent: 'center',\n                  width: '75%',\n                  paddingBottom: 20,\n                  paddingRight: 7,\n                }}>\n                {data.coupons[0].couponDescription}\n              </Text>\n              <Text\n                style={{ fontSize: 15, color: isDarkMode ? 'white' : 'black' }}>\n                Show this coupon at the store to redeem.\n              </Text>\n            </Layout>\n          )}\n\n          <View\n            style={{\n              width: '100%',\n              alignSelf: 'flex-start',\n              marginLeft: 20,\n              borderBottomColor: '#F1E4B5',\n              borderBottomWidth: 2,\n              paddingBottom: 5,\n            }}>\n            <Text style={sponsorPageStyles.headerText}>Hours</Text>\n          </View>\n          <View\n            style={{\n              justifyContent: 'center',\n              alignSelf: 'center',\n              marginLeft: 25,\n              marginBottom: 50,\n            }}>\n            {data.hours.map((day, i) => {\n              return (\n                <Layout\n                  key={i}\n                  style={{\n                    justifyContent: 'space-between',\n                    flexDirection: 'row',\n                    width: '100%',\n                  }}>\n                  <Text\n                    style={{\n                      marginTop: 10,\n                      color: isDarkMode ? 'white' : 'black',\n                    }}>\n                    {day.dayOfTheWeek}:\n                  </Text>\n                  <Text\n                    style={{\n                      alignSelf: 'flex-end',\n                      paddingRight: 30,\n                      marginTop: 10,\n                      color: isDarkMode ? 'white' : 'black',\n                    }}>\n                    {buildTimeString(day)}\n                  </Text>\n                </Layout>\n              );\n            })}\n          </View>\n        </Layout>\n      </ScrollView>\n    </Layout>\n  );\n};\n\nfunction buildTimeString(time) {\n  if (!time.openTime || time.openTime === '' || time.openTime === null) {\n    return 'closed';\n  }\n  return (\n    convertTo12HourTime(time.openTime) +\n    ' - ' +\n    convertTo12HourTime(time.closeTime)\n  );\n}\n\nfunction convertTo12HourTime(time) {\n  if (time.length !== 5) {\n    time = '0' + time;\n  }\n  let hours = time.slice(0, 2);\n  let minutes = time.slice(3, 5);\n  let ampm = Number.parseInt(hours) > 12 ? 'pm' : 'am';\n  hours = hours % 12;\n  if (hours === 0) {\n    hours = 12;\n    ampm = 'pm';\n  }\n  return hours + ':' + minutes + ampm;\n}\n\nexport function SponsorsList({ navigation }) {\n  const theme = useTheme();\n  const isDarkMode = useAppSelector(selectDarkMode);\n  const [sponsorFilters, setSponsorFilters] = useState({});\n  const [gotSponsors, setGotSponsors] = useState(false);\n  const userKey = useAppSelector(selectUserKey);\n  const [refreshSponsorsQuery, { data: sponsors }] =\n    useLazyRefreshSponsorsQuery();\n\n  if (!gotSponsors) {\n    setGotSponsors(true);\n    refreshSponsors();\n  }\n\n  useEffect(() => {\n    if (sponsors?.length > 0) {\n      getFilters();\n    }\n  }, [sponsors]);\n\n  async function refreshSponsors() {\n    try {\n      await refreshSponsorsQuery(userKey).unwrap();\n    } catch (e) {\n      console.warn('Error refreshing sponsors: ', e);\n    }\n  }\n\n  function getFilters() {\n    let tabNames = [];\n    let final = [];\n    for (const sponsor of sponsors) {\n      if (sponsor.tags !== undefined) {\n        for (const name of sponsor.tags) {\n          if (!tabNames.includes(name)) {\n            tabNames.push(name);\n          }\n        }\n      }\n    }\n    tabNames = tabNames.sort();\n\n    // Puts 'Other' at the end\n    const temp = tabNames.includes('Other')\n      ? tabNames.findIndex((item) => item === 'Other')\n      : -1;\n    if (temp !== -1) {\n      tabNames.splice(temp, 1);\n    }\n    tabNames.push('Other');\n\n    let tempFilters = {};\n    for (const name of tabNames) {\n      tempFilters[name] = {\n        selected: false,\n      };\n    }\n    setSponsorFilters(tempFilters);\n  }\n\n  function renderSponsorsBasedOnFilters() {\n    let shouldLimitPrint = false;\n    for (const filterName in sponsorFilters) {\n      if (sponsorFilters[filterName].selected) {\n        shouldLimitPrint = true;\n        break;\n      }\n    }\n    if (!shouldLimitPrint) {\n      return getTheSponsors(sponsors || [], navigation);\n    } else {\n      let sponsorsToSend = [];\n      for (const filterName in sponsorFilters) {\n        if (sponsorFilters[filterName].selected) {\n          for (const sponsor of sponsors) {\n            if (sponsor.tags.includes(filterName)) {\n              sponsorsToSend.push(sponsor);\n            }\n          }\n        }\n      }\n      return getTheSponsors(sponsorsToSend || [], navigation);\n    }\n  }\n\n  return (\n      <LinearGradient\n          colors={\n            isDarkMode\n                ? [theme['color-basic-1100'], theme['color-basic-1100']]\n                : [theme['color-primary-500'], theme['color-success-500']]\n          }\n          style={{ width: '100%', margin: 0, alignItems: 'center', flex: 1 }}\n          start={{ x: 0, y: 0 }}\n          end={{ x: 1, y: 0.4 }}>\n    <Layout style={{ flex: 1 }}>\n      <Menu\n        setMenuItems={setSponsorFilters}\n        menuItems={Object.keys(sponsorFilters).length > 0}\n      />\n      <ScrollView\n        showsVerticalScrollIndicator={false}\n        contentContainerStyle={{ alignItems: 'center' }}>\n        {sponsors?.length === 0 ? (\n          <Text>Nothing to see here</Text>\n        ) : (\n          renderSponsorsBasedOnFilters()\n        )}\n      </ScrollView>\n    </Layout>\n      </LinearGradient>\n  );\n}\n\nfunction getTheSponsors(sponsors, navigation) {\n  const isDarkMode = useAppSelector(selectDarkMode);\n  const listingStyles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n    },\n    cardContainer: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      width: '100%',\n      maxWidth: windowWidth / 2,\n      height: 130,\n      backgroundColor: isDarkMode ? '#464646' : '#fff',\n      borderRadius: 10,\n      borderWidth: 1,\n      borderColor: isDarkMode ? '#818181' : '#ddd',\n      borderBottomWidth: isDarkMode ? 1 : 0,\n      shadowColor: '#000',\n      shadowOffset: { width: 0, height: 2 },\n      shadowOpacity: 0.2,\n      shadowRadius: 2,\n      elevation: 1,\n      marginLeft: 5,\n      marginRight: 5,\n      marginTop: 10,\n    },\n    text: {\n      flex: 1,\n      color: isDarkMode ? 'white' : 'black',\n      fontSize: 20,\n      textAlign: 'center',\n      marginTop: 5,\n      marginBottom: 5,\n    },\n    image: {\n      width: 120,\n      height: 120,\n      marginLeft: 10,\n      borderRadius: 10,\n    },\n  });\n  if (sponsors.length === 0) {\n    return;\n  }\n  let final = [];\n  let starredFinal = [];\n  for (const sponsor of sponsors) {\n    if (sponsor.coupons && sponsor.coupons.length > 0) {\n      starredFinal.push(\n        <TouchableOpacity\n          onPress={() => {\n            navigation.navigate('SponsorPage', { data: sponsor });\n          }}\n          style={listingStyles.cardContainer}\n          key={sponsor._id}>\n          {sponsor.coupons?.length ? (\n            <FontAwesome5\n              name=\"star\"\n              color={'gold'}\n              style={{\n                alignSelf: 'flex-start',\n                top: 5,\n                left: 5,\n              }}\n            />\n          ) : null}\n\n          <View style={{ flex: 1 }}>\n            <Image\n              resizeMode={'contain'}\n              style={listingStyles.image}\n              source={{ uri: sponsor.logo }}\n            />\n          </View>\n\n          <Text style={listingStyles.text}>{sponsor.sponsorName}</Text>\n        </TouchableOpacity>\n      );\n    } else {\n      final.push(\n        <TouchableOpacity\n          onPress={() => {\n            navigation.navigate('SponsorPage', { data: sponsor });\n          }}\n          style={listingStyles.cardContainer}\n          key={sponsor._id}>\n          {sponsor.coupons?.length ? (\n            <FontAwesome5\n              name=\"star\"\n              color={'gold'}\n              style={{\n                position: 'absolute',\n                alignSelf: 'flex-start',\n                top: 5,\n                left: 5,\n              }}\n            />\n          ) : null}\n\n          <View style={{ flex: 1 }}>\n            <Image\n              resizeMode={'contain'}\n              style={listingStyles.image}\n              source={{ uri: sponsor.logo }}\n            />\n          </View>\n\n          <Text style={listingStyles.text}>{sponsor.sponsorName}</Text>\n        </TouchableOpacity>\n      );\n    }\n  }\n  for (const object of final) {\n    starredFinal.push(object);\n  }\n  return starredFinal;\n}\n","import { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport {\n    Image,\n    Platform,\n    TouchableOpacity,\n    TouchableWithoutFeedback,\n} from 'react-native';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport Header from '../../components/Header';\nimport PostsList from './PostsList';\nimport SinglePost from './SinglePost/SinglePostPage';\nimport { Divider, Layout, Text, useTheme } from '@ui-kitten/components';\nimport CreatePost from './CreatePost/CreatePost';\nimport SearchBar from '../../components/SearchBar';\nimport React, { useState } from 'react';\nimport { selectDarkMode } from '../../app/appDataSlice';\nimport { useAppSelector } from '../../app/hooks';\nimport SearchPage from './SearchPage';\nimport { SponsorPage } from '../sponsors/SponsorsList';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function Discover({ navigation }) {\n  const theme = useTheme();\n  const darkMode = useAppSelector(selectDarkMode);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const accessoryRight = (\n    <TouchableOpacity onPress={() => navigation.navigate('CreatePost')}>\n      <FontAwesome5 name=\"plus\" size={23} color={theme['color-primary-500']} />\n    </TouchableOpacity>\n  );\n\n  const accessoryLeft = (\n      <Image\n          style={{\n              height: 28,\n              width: 28,\n          }}\n          source={require('../../../assets/logos/app-logo-transparent.png')}\n      />\n  )\n\n  let searchBarBackgroundColor = '';\n  if (darkMode) {\n    searchBarBackgroundColor = theme['color-basic-800'];\n  } else {\n    searchBarBackgroundColor = theme['color-basic-100'];\n  }\n\n  return (\n    <Stack.Navigator>\n      <Stack.Screen\n        name=\"PostsList\"\n        initialParams={{ sponsor: true }}\n        component={PostsList}\n        options={{\n          title: 'Discover',\n          header: () => (\n            <Layout level=\"2\" style={{ paddingBottom: 15 }}>\n              <Header\n                level=\"2\"\n                title=\"Discover\"\n                accessoryLeft={accessoryLeft}\n                accessoryRight={accessoryRight}\n                center={\n                  <Layout level=\"2\" style={{ flex: 1, marginHorizontal: 10 }}>\n                    {Platform.OS === 'ios' ? (\n                      <SearchBar\n                        inputStyle={{\n                          opacity: 0.8,\n                          backgroundColor: searchBarBackgroundColor,\n                        }}\n                        searchTerm={searchTerm}\n                        onChangeText={setSearchTerm}\n                        placeholder=\"Search Posts...\"\n                        inputProps={{\n                          disabled: true,\n                          onPressIn: () => {\n                            navigation.navigate('SearchPage');\n                          },\n\n                          onBlur: () => {\n                            navigation.goBack();\n                          },\n                        }}\n                      />\n                    ) : (\n                      <Layout\n                        style={{\n                          minHeight: 35,\n                          paddingLeft: 15,\n                          borderRadius: 20,\n                          flex: 1,\n                          borderWidth: 1,\n                          borderColor: darkMode\n                            ? theme['color-basic-500']\n                            : theme['color-basic-100'],\n                          justifyContent: 'center',\n                        }}>\n                        <TouchableWithoutFeedback\n                          onPress={() => {\n                            navigation.navigate('SearchPage');\n                          }}>\n                          <Text\n                            style={{\n                              color: theme['color-basic-400'],\n                              fontSize: 14,\n                            }}>\n                            Search Posts...\n                          </Text>\n                        </TouchableWithoutFeedback>\n                      </Layout>\n                    )}\n                  </Layout>\n                }\n              />\n            </Layout>\n          ),\n        }}\n      />\n      <Stack.Screen\n        name=\"CreatePost\"\n        component={CreatePost}\n        options={{ headerTitle: 'Create a Post' }}\n      />\n      <Stack.Screen\n        name=\"SinglePost\"\n        component={SinglePost}\n        options={{\n          headerTitle: '',\n          title: 'Discover',\n        }}\n      />\n      <Stack.Screen\n        name=\"SearchPage\"\n        component={SearchPage}\n        options={{ headerShown: false, animation: 'fade', title: 'Discover' }}\n      />\n      <Stack.Screen\n        name=\"SponsorPageDiscover\"\n        component={SponsorPage}\n        options={{ headerTitle: '', title: 'Discover' }}\n      />\n    </Stack.Navigator>\n  );\n}\n","import {\n    Keyboard,\n    KeyboardAvoidingView,\n    Platform,\n    Text,\n    TouchableOpacity,\n    TouchableWithoutFeedback,\n    View\n} from 'react-native'\nimport React, {useEffect, useMemo, useState} from 'react'\nimport {\n    Button,\n    CheckBox,\n    Divider,\n    Input,\n    Layout,\n    NativeDateService,\n    Select,\n    SelectItem\n} from \"@ui-kitten/components\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport WrapItems from \"../../components/WrapItems\";\nimport {AntDesign} from \"@expo/vector-icons\";\nimport CreateImage from \"../discover/CreatePost/CreateImagePost\";\nimport {base_URL} from \"../notifications/constants\";\nimport {useEditUserMutation, useGetUserInfoQuery} from \"../api/usersApi\";\nimport {useAppSelector} from \"../../app/hooks\";\nimport {selectUserKey} from \"../../app/appDataSlice\";\nimport {useNavigation} from \"@react-navigation/native\";\nimport Toast from \"react-native-root-toast\";\nimport {SafeAreaView} from \"react-native-safe-area-context\";\nimport {KeyboardAwareView} from \"react-native-keyboard-aware-view\";\nimport {useAddClassMutation} from \"../api/classPagesApi\";\nimport Loader from \"react-native-three-dots-loader\";\n\nexport default function CreateCustomEvent() {\n    const [editUser] = useEditUserMutation();\n    const [ showDots, setShowDots ] = useState(false)\n    const navigation = useNavigation()\n    const dateToUse = new Date()\n    const [selectedDate, setSelectedDate] = useState(dateToUse)\n    const [ isOneDay, setIsOneDay ] = useState(false)\n    const [ allValuesPopulated, setAllValuesPopulated ] = useState(false)\n    const [ selectedIndex, setSelectedIndex ] = useState([]);\n    const [daysArray, setDaysArray] = useState([])\n    const [startTime, setStartTime] = useState(new Date())\n    const [endTime, setEndTime] = useState(new Date())\n    const [eventTitle, setEventTitle] = useState('')\n    const userKey = useAppSelector(selectUserKey)\n    const {data: userData} = useGetUserInfoQuery(userKey, {\n        skip: !userKey,\n    });\n\n    const daysOfWeek = [\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday',\n        'Sunday'\n    ]\n\n    useEffect(() => {\n        setAllValuesPopulated(\n            (isOneDay ? selectedDate.toISOString() !== (dateToUse).toISOString() : daysArray.length >= 1) &&\n            eventTitle !== '' &&\n            startTime < endTime\n        )\n    }, [daysArray, eventTitle, startTime, endTime, selectedDate, isOneDay])\n\n    function addEvent() {\n        setShowDots(true)\n        editUser({\n            userKey,\n            userName: userData.userName,\n            fields: JSON.stringify({\n                \"addCustomEvent\": {\n                    \"name\": eventTitle,\n                    \"startTime\": startTime.toTimeString().slice(0, 5),\n                    \"endTime\": endTime.toTimeString().slice(0, 5),\n                    \"days\": daysArray,\n                    \"date\": selectedDate.toISOString() !== dateToUse.toISOString() ? selectedDate.toISOString() : null\n                },\n            })\n        }).unwrap().then(async () => {\n            setTimeout(() => {\n                setShowDots(false)\n                navigation.goBack()\n            }, 2000)\n        }).catch(() => {\n            setShowDots(false)\n            Toast.show(\n                \"Failed to add event.\\nPlease try again later\",\n                {\n                    duration: Toast.durations.LONG,\n                    opacity: 1,\n                    position: -100,\n                    backgroundColor: 'grey',\n                    shadow: false,\n                }\n            );\n        })\n        /*\n        fetch(base_URL + '/users/' + userData.userName, {\n            method: 'PATCH',\n            body: JSON.stringify({\n                \"addCustomEvent\": {\n                    \"name\": eventTitle,\n                    \"startTime\": startTime.toTimeString().slice(0, 5),\n                    \"endTime\": endTime.toTimeString().slice(0, 5),\n                    \"days\": daysArray\n                },\n            }),\n            headers: {\n                'content-type': 'application/json',\n                userKey: userKey\n            }\n        }).then((res) => {\n            if (res.ok) {\n                navigation.goBack()\n            } else {\n                Toast.show(\n                    \"Failed to add event\\nStatus: \" + res.status,\n                    {\n                        duration: Toast.durations.LONG,\n                        opacity: 1,\n                        position: -100,\n                        backgroundColor: 'grey',\n                        shadow: false,\n                    }\n                );\n            }\n        })*/\n    }\n\n    // Needed because Android date picker uses a modal\n    const [showTimePickerAndroid, setShowTimePickerAndroid] = useState(false);\n\n    const timePickerOptions = useMemo(\n        () => ({\n            'Start Time': { time: startTime, setTime: setStartTime },\n            'End Time': { time: endTime, setTime: setEndTime },\n        }),\n        [startTime, setStartTime, endTime, setEndTime]\n    );\n\n    const formatAMPM = (date: Date) => {\n        let hours = date.getHours()\n        let minutes: string | number = date.getMinutes()\n        const ampm = hours >= 12 ? 'pm' : 'am';\n        hours = hours % 12;\n        hours = hours ? hours : 12;\n        minutes = minutes < 10 ? '0' + minutes : minutes;\n        return hours + ':' + minutes + ' ' + ampm;\n    };\n\n    const Title = (\n        <Layout\n            style={{\n                flexDirection: 'row',\n                justifyContent: 'space-evenly',\n                alignItems: 'center',\n                marginTop: 15,\n            }}>\n            <Input\n                label=\"Title\"\n                disabled={showDots}\n                placeholder=\"Title of Event\"\n                value={eventTitle}\n                style={{ flex: 5 }}\n                onChangeText={(title) => {\n                    setEventTitle(title)\n                }}\n            />\n        </Layout>\n    );\n\n    const TimePicker = () => {\n        if (Platform.OS === 'android') {\n            return (\n                <Layout\n                    style={{\n                        flexDirection: 'row',\n                        justifyContent: 'space-around',\n                    }}>\n                    {Object.entries(timePickerOptions).map(\n                        ([label, { time, setTime }], i) => (\n                            <Layout key={i} style={{ alignItems: 'center' }}>\n                                <Text category=\"label\" style={{ marginBottom: 5 }}>\n                                    {label}\n                                </Text>\n                                <Button\n                                    onPress={() => {\n                                        setShowTimePickerAndroid(true);\n                                    }}>\n                                    {formatAMPM(time)}\n                                </Button>\n                                {showTimePickerAndroid && (\n                                    <DateTimePicker\n                                        mode=\"time\"\n                                        onChange={(change, date) => {\n                                            setTime(date);\n                                            setShowTimePickerAndroid(false);\n                                        }}\n                                        value={time}\n                                    />\n                                )}\n                            </Layout>\n                        )\n                    )}\n                </Layout>\n            );\n        }\n        if (Platform.OS === 'ios') {\n            return (\n                <Layout\n                    style={{\n                        flexDirection: 'row',\n                        justifyContent: 'space-around',\n                    }}>\n                    {Object.entries(timePickerOptions).map(\n                        ([label, { time, setTime }], i) => (\n                            <Layout key={i} style={{ alignItems: 'center' }}>\n                                <Text category=\"label\" style={{ marginBottom: 5 }}>\n                                    {label}\n                                </Text>\n\n                                <DateTimePicker\n                                    mode=\"time\"\n                                    onChange={(change, date) => {\n                                        setTime(date);\n                                    }}\n                                    value={time}\n                                />\n                            </Layout>\n                        )\n                    )}\n                </Layout>\n            );\n        }\n    };\n\n    if (Platform.OS === 'web') {\n        return (\n            <Text>\n                Creating Events is not supported on the web. Download the app on\n                the App Store or Play Store to make a new Event.\n            </Text>\n        );\n    }\n\n    const renderMultiSelectDropDown = () => {\n        function renderEachDropItem() {\n            const final = []\n            for (const option of daysOfWeek) {\n                final.push(\n                    <SelectItem title={option}/>\n                )\n            }\n            return final\n        }\n        function toggleValue(index) {\n            setSelectedIndex(index)\n            const newSelection = index.map((littleIndex) => {\n                return daysOfWeek[littleIndex - 1]\n            })\n            setDaysArray(newSelection)\n        }\n        function calculateSelectedValues() {\n            let finalArray = selectedIndex.map((littleIndex) => {\n                return daysOfWeek[littleIndex - 1] + ', '\n            })\n            if (finalArray.length > 0){\n                let finalObject = finalArray.at(-1)\n                finalObject = finalObject.replace(', ', '')\n                finalArray.splice(-1, 1)\n                finalArray.push(finalObject)\n                return finalArray\n            }\n        }\n        return (\n            <Layout style={{\n                flexDirection: 'row',\n                justifyContent: 'space-evenly',\n                alignItems: 'center',\n                marginTop: 15,\n            }} level='1'>\n                <Select\n                    style={{flex: 5}}\n                    multiSelect={true}\n                    label={'Days'}\n                    disabled={showDots}\n                    value={daysArray.length > 0 ? calculateSelectedValues() : null}\n                    selectedIndex={selectedIndex}\n                    onSelect={index => toggleValue(index)}>\n                    {renderEachDropItem()}\n                </Select>\n            </Layout>\n        );\n    }\n\n    return (\n        <Layout style={{flex: 1}}>\n            <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n                <WrapItems childStyle={{ marginVertical: 10, marginHorizontal: 15 }}>\n                    {Title}\n                    <TimePicker />\n                    <CheckBox\n                        style={{alignSelf: 'center', marginTop: 20}}\n                        checked={isOneDay}\n                        onChange={(nextChecked) => {\n                            setDaysArray([])\n                            setSelectedIndex([])\n                            setSelectedDate(dateToUse)\n                            setIsOneDay(nextChecked)\n                        }}>\n                        One Time Event\n                    </CheckBox>\n                    {isOneDay ?\n                        <DateTimePicker\n                            testID=\"datePicker\"\n                            value={selectedDate}\n                            mode={'date'}\n                            style={{alignSelf: 'center', marginVertical: 15}}\n                            onChange={(event, date) => setSelectedDate(date)}\n                        /> : renderMultiSelectDropDown()}\n                    <TouchableOpacity\n                        style={{backgroundColor: allValuesPopulated ? \"#a245ee\" : \"rgba(162,69,238,0.34)\",\n                            width: \"35%\",\n                            alignSelf: 'center',\n                            height: 45,\n                            borderRadius: 3,\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                        }}\n                        onPress={addEvent}\n                        disabled={!allValuesPopulated || showDots}\n                    >\n                        <View>\n                            <Text style={{ color: \"#f2f0f1\", fontSize: 15 }}>Create Event</Text>\n                        </View>\n                    </TouchableOpacity>\n                    {\n                        showDots && (\n                            <Loader style={{position: 'absolute', marginTop: '30%', marginHorizontal: 'auto'}}/>\n                        )\n                    }\n                </WrapItems>\n            </TouchableWithoutFeedback>\n        </Layout>\n    );\n}","import {useAppSelector} from \"../../app/hooks\";\nimport {selectClassesList} from \"../classPages/classPagesSlice\";\nimport {Class} from \"../../app/types\";\n\nexport default class CalendarFunctions{\n    convertTo12HourTime(time) {\n        if (time.length !== 5) {\n            time = '0' + time;\n        }\n        let hours = time.slice(0, 2);\n        let minutes = time.slice(3, 5);\n        let ampm = Number.parseInt(hours) > 12 ? 'pm' : 'am';\n        hours = hours % 12;\n        if (hours === 0) {\n            hours = 12;\n            ampm = 'pm';\n        }\n        return hours + ':' + minutes + ampm;\n    }\n\n    getColor(string: String) {\n        let final = 0\n        for (let charIndex = 0; charIndex < string.length; charIndex++) {\n            final += string.charCodeAt(charIndex)\n        }\n        final -= Number(final.toString()[0]) * (10 ** (final.toString().length - 1))\n        final = final / (10 ** final.toString().length)\n        return \"hsl(\" + (180 * final + 90) + ',' +\n            (30 + 65 * final) + '%,' +\n            (50 + 15 * final) + '%)'\n    }\n\n    stringToColour(str: String) {\n        return this.getColor(str)\n    };\n\n    getMinutesDiff(startTime, endTime, minuteHeight) {\n        if (endTime > startTime) {\n            return (endTime - startTime) * minuteHeight;\n        } else if (startTime === endTime) {\n            return 0;\n        } else {\n            return (startTime - endTime) * -minuteHeight;\n        }\n    }\n\n    getFullClassData(courseCode: String, allClassData: any): Class {\n        const APIdata = allClassData\n        const generalCourseCode = courseCode.split('-').slice(0, -1).join('-');\n        return APIdata[generalCourseCode];\n    };\n\n}","import {Alert, Dimensions, Text, TouchableOpacity, View} from \"react-native\";\nimport React from \"react\";\nimport CalendarFunctions from \"./CalendarFunctions\";\nimport {useAppSelector} from \"../../app/hooks\";\nimport {useRemoveClassMutation} from \"../api/classPagesApi\";\nimport Toast from \"react-native-root-toast\";\nimport {useEditUserMutation} from \"../api/usersApi\";\nimport {selectUserKey} from \"../../app/appDataSlice\";\n\n\nexport default function renderCustomEvent(event, userData, userKey, editUser) {\n    const universalHeight = (Dimensions.get('window').height - 50) / 12\n    const minuteHeight = universalHeight / 60\n    const calendarFun = new CalendarFunctions()\n    const [startHour, startMinute] = event.startTime.split(':');\n    const [endHour, endMinute] = event.endTime.split(':');\n    let color = calendarFun.stringToColour(event.name);\n\n    function removeEvent(event: any) {\n        editUser({\n            userKey,\n            userName: userData.userName,\n            fields: JSON.stringify({\n                \"removeCustomEvent\": {\n                    \"name\": event.name,\n                    \"startTime\": event.startTime,\n                    \"endTime\": event.endTime,\n                    \"days\": event.days\n                },\n            })\n        }).unwrap().catch(() => {\n            Toast.show(\n                \"Failed to remove event.\\nPlease try again later\",\n                {\n                    duration: Toast.durations.SHORT,\n                    opacity: 1,\n                    position: -100,\n                    backgroundColor: 'grey',\n                    shadow: false,\n                }\n            );\n        })\n    }\n\n\n    return (\n        <TouchableOpacity onLongPress={() => {\n                Alert.alert(\n                    event.name,\n                    calendarFun.convertTo12HourTime(event.startTime) +\n                    ' - ' +\n                    calendarFun.convertTo12HourTime(event.endTime),\n                    [\n                        {\n                            text: 'Remove',\n                            onPress: () => {\n                                removeEvent(event);\n                            },\n                        },\n                        {\n                            text: 'Back',\n                            onPress: () => {},\n                            style: 'cancel',\n                        },\n                    ],\n                    { cancelable: true }\n                )\n            }}\n            key={event.name + event.days}\n            style={{\n                backgroundColor: color,\n                top: (universalHeight * startHour) + (startMinute * minuteHeight),\n                height:\n                    universalHeight * (endHour - startHour) + calendarFun.getMinutesDiff(startMinute, endMinute, minuteHeight),\n                width: '100%',\n                position: 'absolute',\n                justifyContent: 'center',\n            }}>\n            <Text\n                adjustsFontSizeToFit={true}\n                numberOfLines={endHour - startHour + 2}\n                style={{ color: 'white', textAlign: 'center' }}>\n                {event.name}\n            </Text>\n        </TouchableOpacity>\n    );\n};","import { useNavigation } from '@react-navigation/native';\nimport {Alert, Dimensions, Text, TouchableOpacity, View} from 'react-native';\nimport React from 'react';\nimport { useAppSelector } from '../../app/hooks';\nimport CalendarFunctions from './CalendarFunctions';\nimport {\n  useGetCurrentSectionQuery,\n  useRemoveClassMutation,\n} from '../api/classPagesApi';\n\nexport default function renderItem(\n  masterClassInfo,\n  meetingTime,\n  courseCode,\n  handleClassSelected = (string: string) => {}\n) {\n  const calendarFun = new CalendarFunctions();\n    const universalHeight = (Dimensions.get('window').height - 50) / 12\n    const minuteHeight = universalHeight / 60\n\n  const [startHour, startMinute] = meetingTime.startTime.split(':');\n  const [endHour, endMinute] = meetingTime.endTime.split(':');\n  let color = calendarFun.stringToColour(masterClassInfo.masterCourseCode);\n  let code = courseCode.split(' ');\n  return (\n    <View\n      key={Math.random()}\n      style={{\n        backgroundColor: color,\n        top: universalHeight * startHour + startMinute * minuteHeight,\n        height:\n          universalHeight * (endHour - startHour) +\n          calendarFun.getMinutesDiff(startMinute, endMinute, minuteHeight),\n        width: '100%',\n        position: 'absolute',\n        margin: 0,\n        justifyContent: 'center',\n      }}>\n      <TouchableOpacity\n        onPress={() => {\n          handleClassSelected(masterClassInfo.masterCourseCode);\n        }}\n        onLongPress={\n          () => {} /*{\n                    Alert.alert(\n                        courseCode,\n                        null,\n                        [\n                            {\n                                text: 'Delete',\n                                onPress: () => {\n\n                                },\n                            },\n                            {\n                                text: 'Cancel',\n                                onPress: () => console.log('Cancel Pressed'),\n                                style: 'cancel',\n                            },\n                        ],\n                        { cancelable: true }\n                    );\n                }*/\n        }>\n        <Text\n          adjustsFontSizeToFit\n          numberOfLines={5}\n          style={{\n            color: parseInt(color.slice(1), 16) > 9079434 ? 'black' : 'white',\n            fontSize: 11,\n            marginHorizontal: 3,\n            textAlign: 'center',\n          }}>\n          {code[0]} {code[1]}\n          {'\\n'}\n          {code[2]}\n          {meetingTime.classLocation ? '\\n(' + meetingTime.classLocation + ')' : null}\n        </Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n","import { Button, Icon, Layout, Text, useTheme } from '@ui-kitten/components';\nimport Modal from 'react-native-modal';\nimport { selectDarkMode } from '../app/appDataSlice';\nimport { useAppSelector } from '../app/hooks';\n\ntype ModalContainerProps = {\n  children: React.ReactNode;\n  backDropVisible: boolean;\n  setBackDropVisible: React.Dispatch<React.SetStateAction<boolean>>;\n  title: string;\n};\n\nexport default function ModalContainer({\n  children,\n  backDropVisible,\n  setBackDropVisible,\n  title,\n}: ModalContainerProps) {\n  const theme = useTheme();\n  const darkMode = useAppSelector(selectDarkMode);\n\n  return (\n    <Modal\n      backdropOpacity={0}\n      onBackdropPress={() => setBackDropVisible(false)}\n      isVisible={backDropVisible}\n      style={{\n        backgroundColor: darkMode\n          ? theme['color-basic-900']\n          : theme['color-basic-50'],\n        borderRadius: 20,\n        flex: 1,\n        marginTop: 300,\n        marginBottom: 50,\n        shadowColor: '#000',\n        shadowOffset: {\n          width: 0,\n          height: 12,\n        },\n        shadowOpacity: 0.58,\n        shadowRadius: 16.0,\n\n        elevation: 11,\n      }}>\n      <Layout\n        style={{\n          flex: 1,\n          alignItems: 'center',\n          borderRadius: 20,\n          backgroundColor: darkMode\n            ? theme['color-basic-900']\n            : theme['color-basic-100'],\n        }}>\n        <Button\n          appearance=\"ghost\"\n          style={{\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            flex: 1,\n            borderRadius: 20,\n          }}\n          accessoryRight={(props) => (\n            <Icon pack=\"fontAwesome\" name=\"angle-down\" {...props} />\n          )}\n          onPress={() => setBackDropVisible(false)}\n        />\n        <Text category=\"h5\" style={{ marginVertical: 15 }}>\n          {title}\n        </Text>\n        {children}\n      </Layout>\n    </Modal>\n  );\n}\n","import {apiSlice} from \"../api/apiSlice\";\n\nexport const base_URL = \"https://api.athenaserver.com:5678/api\"","import {useEffect, useState} from \"react\";\nimport {base_URL} from \"../features/notifications/constants\";\nimport {useAppSelector} from \"../app/hooks\";\nimport {selectDarkMode, selectUserKey} from \"../app/appDataSlice\";\nimport {Autocomplete, AutocompleteItem} from \"@ui-kitten/components\";\n\n/**\n * Renders a dropdown with the names filtered as user types\n * @param setHasChosen set function of a useState which contains a boolean determining whether a user has been chosen\n * @param setRecipient set function of a useState which contains is either: 1. a string containing the userName of the user when one has been chosen, 2. null when a user has not been chosen\n * @constructor\n */\nexport default function UserNameSelectionDropDown({setHasChosen, setRecipient, placeholder}) {\n    const userKey = useAppSelector(selectUserKey)\n    const darkMode = useAppSelector(selectDarkMode)\n    const [names, setNames] = useState([]) // filtered list of names\n    const [users, setUsers] = useState([]) // clean list of users\n    const [ value, setValue ] = useState('') // typed name\n    const myStyles = {\n        modal: {\n            fontSize: 18, paddingBottom: 20, fontWeight: 'bold',\n            textAlign: 'center', width: '100%', color: darkMode ? 'rgb(255,255,255)' : 'rgb(0,0,0)'\n        },\n        backdrop: {\n            backgroundColor: darkMode ? 'rgba(141,141,141,0.5)' : 'rgba(0, 0, 0, 0.5)',\n        },\n        containerDrop: {\n            minWidth: 200,\n            paddingBottom: 15\n        },\n    }\n\n    useEffect(() => {\n        fetch(base_URL + '/users/userNamesAndNames', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'userKey': userKey\n            }\n        }).then(async (data) => {\n            if (data.ok) {\n                const userList = await data.json();\n                setNames(userList.map(user => {\n                    if (user) {\n                        return user.realName + ' (' + user.userName + ')'\n                    }\n                }))\n                setUsers(userList)\n            }\n        })\n    }, [])\n\n    function renderEachDropItem() {\n        let final = []\n        for (const option in names) {\n            final.push(\n                <AutocompleteItem\n                    title={names[option]}\n                    key={option}\n                />\n            )\n        }\n        return final\n    }\n\n    const onChangeText = (query) => {\n        setNames(\n            freshNames().filter(name =>\n                name?.toLowerCase().includes(query.toLowerCase())\n                || userNameContainsString(name, query))\n        );\n        setValue(query);\n    };\n\n    function freshNames() {\n        return users.map(user => {\n            if (user) {\n                return user.realName + ' (' + user.userName + ')'\n            }\n        })\n    }\n\n    const userNameContainsString = (name, query) => {\n        const user = users.find(auser => auser?.userName.toLowerCase().includes(query.toLowerCase()) && auser?.realName === name);\n        return user !== undefined;\n    }\n\n    function handleSelection(index) {\n        if (index === 0) {\n            setHasChosen(false)\n            setRecipient(null)\n            // @ts-ignore\n            setValue('')\n        } else {\n            setHasChosen(true)\n            setValue(names[index - 1])\n            setRecipient(findUserNameFromName(names[index - 1]))\n        }\n    }\n\n    function findUserNameFromName(name) {\n        const firstPar = name.indexOf('(')\n        const secondPar = name.indexOf(')')\n        return name.slice(firstPar + 1, secondPar)\n    }\n\n    return (\n        <Autocomplete\n            style={myStyles.containerDrop}\n            value={value}\n            placeholder={placeholder ? 'Recipient' : null}\n            onChangeText={onChangeText}\n            onSelect={handleSelection}>\n            <AutocompleteItem title={' '}/>\n            {renderEachDropItem()}\n        </Autocomplete>\n    );\n}","import {Alert, Button, TouchableOpacity, View} from \"react-native\";\nimport {FontAwesome5} from \"@expo/vector-icons\";\nimport {Card, Modal, Text} from \"@ui-kitten/components\";\nimport ModalContainer from \"../../../components/ModalContainer\";\nimport React, {useEffect, useState} from \"react\";\nimport {useAppSelector} from \"../../../app/hooks\";\nimport {selectDarkMode, selectIsGuest, selectUserKey} from \"../../../app/appDataSlice\";\nimport {useGetUserInfoQuery} from \"../../api/usersApi\";\nimport {useGetCurrentSectionQuery} from \"../../api/classPagesApi\";\nimport {base_URL} from \"../../notifications/constants\";\nimport UserNameSelectionDropDown from \"../../../components/UserNameSelectionDropDown\";\n\nexport default function ExportModalClass({classData}) {\n    const isGuest = useAppSelector(selectIsGuest)\n    const [ showGuestModal, setShowGuestModal ] = useState(false)\n    const [ showModal, setShowModal ] = useState(false)\n    const darkMode = useAppSelector(selectDarkMode)\n\n    return (\n        <View style={{alignSelf: 'flex-end', marginRight: '7%',  flexDirection: 'column-reverse', marginTop: -10, paddingBottom: 10}}>\n            <TouchableOpacity\n                onPress={() => {\n                    if (isGuest) {\n                        setShowGuestModal(true)\n                    } else {\n                        setShowModal(true);\n                    }\n                }}\n                style={{\n                    alignItems: 'center',\n                }}>\n                <View style={{ height: 45, flexDirection: 'column', justifyContent: 'center', paddingLeft: 5}}>\n                    <FontAwesome5\n                        name={'file-export'}\n                        size={20}\n                        color={darkMode ? 'white' : 'black'}\n                    />\n                </View>\n                <Text style={{marginTop: -10, fontSize: 10}}>\n                    Share Class\n                </Text>\n            </TouchableOpacity>\n            {\n                showGuestModal &&\n                <ModalContainer\n                    title=\"Wait!\"\n                    children={<Text style={{paddingHorizontal: 30}}>This feature is locked to our Guest Users. Please create a free account with us to take advantage this feature.</Text>}\n                    backDropVisible={showGuestModal}\n                    setBackDropVisible={setShowGuestModal}\n                />\n            }\n            {renderModal(setShowModal, showModal, classData)}\n        </View>\n    )\n}\n\nfunction renderModal(setShowModal, showModal, classData: any) {\n    const {data: userData} = useGetUserInfoQuery(useAppSelector(selectUserKey));\n\n    const [ value, setValue ] = useState('')\n    const darkMode = useAppSelector(selectDarkMode)\n    const userKey = useAppSelector(selectUserKey)\n    const [ recipient, setRecipient ] = useState(null)\n    const [ hasChosen, setHasChosen ] = useState(false)\n\n    const myStyles = {\n        modal: {\n            fontSize: 18, paddingBottom: 20, fontWeight: 'bold',\n            textAlign: 'center', width: '100%', color: darkMode ? 'rgb(255,255,255)' : 'rgb(0,0,0)'\n        },\n        backdrop: {\n            backgroundColor: darkMode ? 'rgba(141,141,141,0.5)' : 'rgba(0, 0, 0, 0.5)',\n        },\n        containerDrop: {\n            minWidth: 200,\n            paddingBottom: 15\n        },\n    }\n\n    const exportClass = async (recipient) => {\n        try {\n            let status = await fetch(base_URL + '/users/sendNotification', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'userKey': userKey\n                },\n                body: JSON.stringify({\n                    recipients: [recipient],\n                    text: JSON.stringify({masterCourseCode: classData.masterCourseCode, courseTerm: classData.courseTerm}),\n                    title: userData.realFirstName + \" shared a course\",\n                    isCourseData: true\n                })\n            })\n            return status.ok\n        } catch (e) {\n            console.log(e)\n            return false\n        }\n    }\n    return (\n        <Modal\n            visible={showModal}\n            backdropStyle={myStyles.backdrop}\n            style={{ width: '80%', height: '70%' }}\n            onBackdropPress={() => setShowModal(false)}>\n            <Card disabled={true}>\n                <Text style={myStyles.modal}>\n                    Share This Course\n                </Text>\n                {UserNameSelectionDropDown({setHasChosen, setRecipient, placeholder: true})}\n                <View>\n                    <Button disabled={recipient === null} title={'Send'} onPress={() => {\n                        exportClass(recipient).then((returnValue) => {\n                            setShowModal(false)\n                            returnValue ? Alert.alert('Message Sent') :\n                                Alert.alert('Error Sending Message', 'Please Try Again Later')\n                        })\n                    }} />\n                    <Button title={'Dismiss'} onPress={() => {\n                        setShowModal(false)\n                        setHasChosen(false)\n                        setValue('')\n                        setRecipient(null)\n                    }} />\n                </View>\n            </Card>\n        </Modal>\n    );\n}","// This is going to take forever...\nimport {Region} from \"react-native-maps\";\n\nexport const locations = {\n    'ClaremontColleges': [34.10042611094802, -117.71002008183225],\n    'Steele Hall': [34.10484995720829, -117.71210324868221],\n    'Adams Hall': [32.76290904884907, -117.0662288298868],\n    'Andrew Building': null,\n    'Avery Hall': [34.10402559390241, -117.7059215470358],\n    'Bauer Center': [34.10625935916369, -117.70861091635064],\n    'Broad Center': [34.10494505589454, -117.70672332698616],\n    'Bernard Hall': null,\n    'Broad Hall': [34.10462192392436, -117.7058712693149],\n    'Beckman Hall': null,\n    'Balch Hall' : null,\n    'Brackett': [34.09834700926052, -117.71012299276501],\n    'Brackett Observatory': [34.09834700926052, -117.71012299276501],\n    'Baxter Hall': null,\n    'Biszantz Tennis Center': [34.10095490591795, -117.70630717402211],\n    'Carnegie Building': null,\n    'Richardson Dance Studio': [34.10315111680064, -117.7099604470359],\n    'Edmunds': null,\n    'Fletcher Hall': [34.104073077554126, -117.70639700470716],\n    'Galileo Hall': [34.10625489220558, -117.71180151450122],\n    'Honnold/Mudd Library': [34.10217613878248, -117.71228898240652],\n    'Honnold': [34.10217613878248, -117.71228898240652],\n    'Claremont Colleges Library': [34.10217613878248, -117.71228898240652],\n    'Mudd Library': [34.10217613878248, -117.71228898240652],\n    'Humanities Building': [34.103735329211226, -117.71001297587144],\n    'Jacobs Science Center': [34.105831090704534, -117.7117513875151],\n    'Keck Laboratories': [34.09325008938014, -117.72347845495186],\n    'Keck Graduate Institute': [34.09325008938014, -117.72347845495186],\n    'Kravis Center': [34.10187820435941, -117.71108730125341],\n    'The Kravis Center': [34.10187820435941, -117.71108730125341],\n    'Keck Science Center': [34.10308083314274, -117.70782900285776],\n    'Bridges Hall of Music': [34.09741077681766, -117.71380091635093],\n    'Lebus Court': [34.097133818486924, -117.7138019163509],\n    'LeBus Court': [34.097133818486924, -117.7138019163509],\n    'Lincoln': [34.09436321343312, -117.71791431635106],\n    'McGregor CompSci Center': [34.105735661459065, -117.71277261820012],\n    'Mudd Science Library': [34.10235157034289, -117.71228630285779],\n    'Oldenborg Center': [34.0972862770658, -117.71197834518651],\n    'Online': null,\n    'Parsons Engineering Building': [34.106763408455166, -117.71201133169328],\n    'Performing Arts Center': [34.103841861577266, -117.71263855867934],\n    'PAC': [34.103841861577266, -117.71263855867934],\n    'Pearsons': [34.09909136806275, -117.71531797402218],\n    'Pearsons Hall': [34.09909136806275, -117.71531797402218],\n    'Rains Center': [34.09962247726175, -117.7116976875152],\n    'Rembrandt Hall': [34.09714703734707, -117.71436354518652],\n    'Roberts North': [34.10243304031955, -117.71058173613733],\n    'Roberts South': [34.1018600288952, -117.7105736895106],\n    'Roberts Pavilion': [34.100334255091674, -117.70640981635093],\n    'Robert Redford Conservcy': [34.11077818412942, -117.71047418566549],\n    'Robert Redford Conservancy': [34.11077818412942, -117.71047418566549],\n    'Smith Campus Center': [34.09962026169959, -117.71350964518648],\n    'Seaver South Laboratory': [34.100042028976105, -117.71531142101722],\n    'Seaver North Laboratory': [34.100042028976105, -117.71531142101722],\n    'Seaman Hall': [34.10199315160771, -117.71010893169331],\n    'Shanahan Center': [34.10656042476094, -117.71087576052881],\n    'Drinkward Recital Hall': [34.10656042476094, -117.71087576052881],\n    'Stauffer': [34.102953598099226, -117.71334231635072],\n    'Stauffer Hall': [34.102953598099226, -117.71334231635072],\n    'RC Seaver Biology Bldg': [34.10023161864675, -117.71627928465743],\n    'Seaver Biology Building': [34.10023161864675, -117.71627928465743],\n    'Seaver Theater': [34.096747978139696, -117.7104344010084],\n    'Seaver Theatre': [34.096747978139696, -117.7104344010084],\n    'Thatcher Music Bldg': [34.09754703461027, -117.71440025414981],\n    'KSPC': [34.09754703461027, -117.71440025414981],\n    'Thatcher Music Building': [34.09754703461027, -117.71440025414981],\n    'Vita Nova Hall': [34.10300376863079, -117.70952371635069],\n    'TBD': null\n}\n\nexport const claremontRegion: Region = {\n    latitude: 34.1,\n    longitude: -117.71,\n    latitudeDelta: 0.015,\n    longitudeDelta: 0.015\n}\n\nexport const americaRegion: Region = {\n    latitude: 30.116386,\n    longitude: -97.299591,\n    latitudeDelta: 80,\n    longitudeDelta: 80\n}\n\nexport function removeNumbersAndSpaces(name: string): string {\n    let final = ''\n    for (const char of name) {\n        if (char.match(/[a-z]/i) || char === ' ') {\n            final += char\n        }\n    }\n    return final.trim()\n}","import {\n  Button,\n  Card,\n  Layout,\n  Modal,\n  Text, useTheme,\n  withStyles,\n} from '@ui-kitten/components';\nimport { useEffect, useRef, useState } from 'react';\nimport {StyleSheet, ScrollView, TouchableOpacity, Platform} from 'react-native';\n\nimport { useAppSelector } from '../../../app/hooks';\nimport { useIsAllowedToReviewQuery } from '../../api/classPagesApi';\nimport { selectDarkMode, selectUserKey } from '../../../app/appDataSlice';\nimport ExportModalClass from \"./exportModalClass\";\nimport {LinearGradient} from \"expo-linear-gradient\";\nimport {base_URL} from \"../../../constants/admin\";\nimport {useGetUserInfoQuery} from \"../../api/usersApi\";\nimport ModalContainer from \"../../../components/ModalContainer\";\nimport {locations, removeNumbersAndSpaces} from \"../../../constants/map\";\nimport openMap from 'react-native-open-maps'\n\nfunction SingleClassPage({ eva, navigation, selectedClass = null }) {\n  const [showModal, setShowModal] = useState(false);\n  const scrollViewRef = useRef(null);\n  const theme = useTheme();\n  const userKey = useAppSelector(selectUserKey);\n  const {data: userData} = useGetUserInfoQuery(userKey, {\n    skip: !userKey,\n  });\n  const darkMode = useAppSelector(selectDarkMode);\n  const [ professorReviewsObject, setProfessorReviewsObject ] = useState({})\n  const filters = useAppSelector((state) => state.appData.classPages.filters);\n  const isHMC = useAppSelector((state) => state.appData.classPages.isHMC);\n  if (!selectedClass) {\n    selectedClass = useAppSelector(\n        (state) => state.appData.classPages.selectedClass\n    );\n  }\n  const daysOfWeek = [\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n    'Sunday'\n  ]\n\n\n  const backgroundColor = darkMode ? eva.style.dark : eva.style.light;\n\n  const { data: isAllowedToReviewRes } = useIsAllowedToReviewQuery({\n    userKey,\n    masterCourseCode: selectedClass.masterCourseCode,\n  });\n\n  useEffect(() => {\n    if (scrollViewRef?.current) {\n      scrollViewRef.current.scrollTo({\n        y: 0,\n        animated: false,\n      });\n    }\n    if (selectedClass) {\n      for (const time of selectedClass.times) {\n        getReviewsFromProfessor(time)\n      }\n    }\n  }, [selectedClass]);\n\n  async function getReviewsFromProfessor(time) {\n    const name = time.professorName\n    let lastName\n    try {\n      lastName = time.professorName.split(' ')[1]\n    } catch (e) {\n      console.log('no last name')\n      lastName = time.professorName\n    }\n    let res = await fetch(base_URL + '/classes/reviews/getReviewsByProfessor' + '?professorName=' + lastName + '&collegeName=' + userData.collegeName, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        userKey: userKey,\n      },\n    })\n    if (res.ok) {\n      const reviews = await res.json()\n      if (reviews.length > 0) {\n        let newObject = {\n          ...professorReviewsObject\n        }\n        newObject[name] = reviews\n        setProfessorReviewsObject(newObject)\n      }\n    }\n  }\n\n  function buildTimeString(time) {\n    // Compatibility with new course data layout for multiple times per day\n    if (time.courseSchedule && time.courseSchedule.length > 0) {\n      time = time.courseSchedule[0]\n    }\n\n    if (!time.startTime || time.startTime === '' || time.startTime === null) {\n      return 'closed';\n    }\n    return (\n      convertTo12HourTime(time.startTime) +\n      ' - ' +\n      convertTo12HourTime(time.endTime) +\n      '\\n'\n    );\n  }\n\n  function convertTo12HourTime(time) {\n    if (time.length !== 5) {\n      time = '0' + time;\n    }\n    let hours = time.slice(0, 2);\n    let minutes = time.slice(3, 5);\n    let ampm = Number.parseInt(hours) > 12 ? 'pm' : 'am';\n    hours = hours % 12;\n    if (hours === 0) {\n      hours = 12;\n      ampm = 'pm';\n    }\n    return hours + ':' + minutes + ampm;\n  }\n\n  function getProfessorReviewsList() {\n    const final = []\n    for (const professor of Object.keys(professorReviewsObject)) {\n      const reviews = professorReviewsObject[professor]\n      final.push(\n        <>\n          <Text style={styles.subHeader}>All Reviews: {professor}</Text>\n          {reviews.length === 0 ? (\n              <Text style={{ alignSelf: 'center', textAlign: 'center', marginBottom: 10 }}>\n                Something went wrong...\n              </Text>\n          ) : (\n              reviews.map((review, index) => (\n                  <Card key={index} disabled={true}>\n                    <Text>{review.text + '\\n\\nPosted: ' + review.date}</Text>\n                  </Card>\n              ))\n          )}\n        </>\n      )\n    }\n    return final\n  }\n\n  const averageGradeMSGModal = (\n    <Modal\n      visible={showModal}\n      backdropStyle={styles.backdrop}\n      style={{ width: '75%' }}\n      onBackdropPress={() => setShowModal(false)}>\n      <Card disabled={true}>\n        <Text style={{ fontSize: 15, paddingTop: 5, paddingBottom: 10 }}>\n          The Athena Network collects and aggregates the data anonymously\n          submitted by the Course Review process and calculates what the average\n          student's experience in this course will look like. Given that it is\n          based on voluntarily submitted data, this information is to be used as\n          a reference only. Please consult your advisor before making any\n          impactful decisions.\n        </Text>\n        <Button onPress={() => setShowModal(false)}>Dismiss</Button>\n      </Card>\n    </Modal>\n  );\n\n  if (!selectedClass.times) {\n    return null;\n  }\n\n  const [ schedulePopup, setSchedulePopup ] = useState(false)\n  const [ allTheChildren, setAllTheChildren ] = useState([])\n\n  function toggleSchedulePopUp(time: any) {\n    let finalDays = {}\n    for (const realTime of time.courseSchedule) {\n      for (const day of daysOfWeek) {\n        if (realTime.daysOfTheWeek.includes(day)) {\n          const addition = convertTo12HourTime(realTime.startTime) + ' - '\n              + convertTo12HourTime(realTime.endTime)\n          if (finalDays[day]?.length > 0) {\n            finalDays[day].push(addition)\n          } else {\n            finalDays[day] = [addition]\n          }\n        }\n      }\n    }\n\n    setAllTheChildren(generateTable(finalDays))\n    setSchedulePopup(true)\n  }\n\n  function generateTable(daysObject: any): any {\n    const daysActive = Object.keys(daysObject)\n    const stringArrays = Object.values(daysObject)\n    return (\n        <Layout style={{flexDirection: 'row'}}>\n          <Layout>\n            {\n              daysActive.map((value) => {\n                return (\n                    <Layout>\n                      <Text style={{height: 75, borderWidth: 1, borderColor: 'black', padding: 10}}>\n                        {value}\n                      </Text>\n                    </Layout>\n                )\n              })\n            }\n          </Layout>\n          <Layout>\n            {\n              stringArrays.map((value: string[]) => {\n                return (\n                    <Layout>\n                      <Text style={{height: 75, borderWidth: 1, borderColor: 'black', padding: 10}}>\n                        {value.join('\\n')}\n                      </Text>\n                    </Layout>\n                )\n              })\n            }\n          </Layout>\n        </Layout>\n    )\n  }\n\n  return (\n      <LinearGradient\n          colors={\n            darkMode\n                ? [theme['color-basic-1100'], theme['color-basic-1100']]\n                : [theme['color-primary-500'], theme['color-success-500']]\n          }\n          style={{ width: '100%', margin: 0, alignItems: 'center', flex: 1 }}\n          start={{ x: 0, y: 0 }}\n          end={{ x: 1, y: 0.4 }}>\n    <ScrollView\n      contentContainerStyle={{ alignSelf: 'center', maxWidth: 700 }}\n      style={backgroundColor}\n      showsVerticalScrollIndicator={false}\n      ref={scrollViewRef}>\n      <Layout style={[{ alignItems: 'center' }, backgroundColor]}>\n        <ExportModalClass classData={selectedClass}/>\n        <Text style={styles.title}>{selectedClass.courseName}</Text>\n        <Text style={{ paddingTop: 30 }}>{selectedClass.masterCourseCode}</Text>\n\n        <Text style={styles.subtitle}>\n          {`${selectedClass.courseTerm} \\u2022 credits: ${\n            isHMC\n              ? selectedClass.creditWeightHM\n              : selectedClass.creditWeight\n          }`}\n        </Text>\n        {selectedClass.timeSpentOutOfClass && (\n          <Layout\n            style={[\n              {\n                flexDirection: 'row',\n                alignItems: 'flex-start',\n                paddingRight: 5,\n              },\n              backgroundColor,\n            ]}>\n            <Text style={styles.subtitle}>Time Spent Per Week</Text>\n            <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\n            <Text style={styles.subtitle}>\n              : {selectedClass.timeSpentOutOfClass} hours\n            </Text>\n          </Layout>\n        )}\n        {selectedClass.averageGrade && (\n          <Layout\n            style={[\n              {\n                flexDirection: 'row',\n                alignItems: 'flex-start',\n                paddingRight: 5,\n              },\n              backgroundColor,\n            ]}>\n            <Text style={styles.subtitle}>Average Grade</Text>\n            <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\n            <Text style={styles.subtitle}>: {selectedClass.averageGrade}</Text>\n          </Layout>\n        )}\n        {selectedClass.difficulty && (\n          <Layout\n            style={[\n              {\n                flexDirection: 'row',\n                alignItems: 'flex-start',\n                paddingRight: 5,\n              },\n              backgroundColor,\n            ]}>\n            <Text style={styles.subtitle}>Estimated Difficulty</Text>\n            <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\n            <Text style={styles.subtitle}>\n              : {selectedClass.difficulty} / 5\n            </Text>\n          </Layout>\n        )}\n        {selectedClass.rating && (\n          <Layout\n            style={[\n              {\n                flexDirection: 'row',\n                alignItems: 'flex-start',\n                paddingRight: 5,\n              },\n              backgroundColor,\n            ]}>\n            <Text style={styles.subtitle}>Average Rating</Text>\n            <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\n            <Text style={styles.subtitle}>: {selectedClass.rating} / 5</Text>\n          </Layout>\n        )}\n      </Layout>\n      <Layout style={backgroundColor}>\n        <Text style={styles.courseDescription}>{selectedClass.summary}</Text>\n      </Layout>\n      <Layout style={{ ...backgroundColor, ...styles.boxed }}>\n        <Text style={{ fontSize: 15, fontWeight: 'bold' }}>\n          Stated Prerequisites:\n        </Text>\n        <Text style={{ fontSize: 15 }}>\n          {selectedClass.prerequisites !== ''\n            ? selectedClass.prerequisites\n            : 'none'}\n        </Text>\n\n        <Text style={{ fontSize: 15, fontWeight: 'bold' }}>\n          Stated Corequisites:\n        </Text>\n        <Text style={{ fontSize: 15 }}>\n          {selectedClass.corequisites !== ''\n            ? selectedClass.corequisites\n            : 'none'}\n        </Text>\n      </Layout>\n      <Layout style={[{ alignItems: 'flex-end' }, backgroundColor]}>\n        {(selectedClass.timeSpentOutOfClass ||\n          selectedClass.averageGrade ||\n          selectedClass.difficulty ||\n          selectedClass.rating) && (\n          <TouchableOpacity onPress={() => setShowModal(!showModal)}>\n            <Layout\n              style={[\n                {\n                  flexDirection: 'row',\n                  alignItems: 'flex-start',\n                  paddingRight: 5,\n                },\n                backgroundColor,\n              ]}>\n              <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\n              <Text style={styles.disclaimer}>How Do We Estimate This?</Text>\n            </Layout>\n          </TouchableOpacity>\n        )}\n      </Layout>\n      <Layout style={backgroundColor}>\n        {selectedClass.times.length > 0 && (\n          <Layout style={backgroundColor}>\n            <Text style={styles.subHeader}>Sections</Text>\n            <Layout style={[styles.section, backgroundColor]}>\n              <Text style={styles.headerText}>Course Code</Text>\n              <Text style={styles.headerText}>SA/ST/PERM</Text>\n              <Text style={styles.headerText}>Professor</Text>\n              <Text style={styles.headerText}>Time</Text>\n              <Text style={styles.headerText}>Location</Text>\n            </Layout>\n          </Layout>\n        )}\n        {selectedClass.times.map((time) => {\n          return (\n            <Layout\n              key={time.courseCode}\n              style={{ backgroundColor, ...styles.section }}>\n              <Text style={styles.sectionText}>{time.courseCode}</Text>\n              <Text style={styles.sectionText}>\n                {time.seatsFilled} / {time.seatsFilled + time.seatsAvailable} / {time.permCount ? time.permCount : 0}\n              </Text>\n              <Text style={styles.sectionText}>{time.professorName}</Text>\n              <Layout style={styles.sectionText}>\n                {\n                  time?.courseSchedule?.length > 1 ?\n                      <TouchableOpacity onPress={() => toggleSchedulePopUp(time)} disabled={!(time?.courseSchedule?.length > 1)}>\n                        <Text style={{...styles.sectionText, color: 'rgba(55,81,211,0.84)', textDecorationLine: 'underline'}}>\n                          {Platform.OS === 'web' ? 'Click' : 'Press'} for{'\\n'}schedule\n                        </Text>\n                      </TouchableOpacity> :\n                      <Text style={styles.sectionText}>\n                        {buildTimeString(time)}\n                        {time?.courseSchedule?.length > 0 ? time.courseSchedule[0].daysOfTheWeek.join(', ') : time.daysOfTheWeek.join(', ')}\n                      </Text>\n                }\n              </Layout>\n              <TouchableOpacity disabled={!locations[removeNumbersAndSpaces(time.courseSchedule[0].classLocation)]} style={{flex: 1}} onPress={() => {\n                openMap({\n                  waypoints: [],\n                  provider: \"google\",\n                  query: locations[removeNumbersAndSpaces(time.courseSchedule[0].classLocation)].map(number => number.toString()).join(', '),\n                  zoom: 18\n                });\n              }}>\n                <Text style={locations[removeNumbersAndSpaces(time.courseSchedule[0].classLocation)] ? {...styles.sectionText, color: 'rgba(55,81,211,0.84)', textDecorationLine: 'underline'} : {flex: 1}}>\n                  {time.courseSchedule[0].classLocation ? time.courseSchedule[0].classLocation : 'TBD'}\n                </Text>\n              </TouchableOpacity>\n            </Layout>\n          );\n        })}\n        {averageGradeMSGModal}\n        <ModalContainer children={allTheChildren} backDropVisible={schedulePopup} setBackDropVisible={setSchedulePopup} title={'Course Time Schedule'}/>\n      </Layout>\n      {isAllowedToReviewRes?.isAllowed ? (\n        <Button\n          style={{ margin: 10 }}\n          onPress={() => {\n            navigation.navigate('PostReview');\n          }}>\n          Post Review\n        </Button>\n      ) : null}\n      <Text style={styles.subHeader}>Class Reviews</Text>\n      {selectedClass.reviews.length === 0 ? (\n        <Text style={{ alignSelf: 'center', textAlign: 'center', marginBottom: 10 }}>\n          No Class Reviews yet\n        </Text>\n      ) : (\n        selectedClass.reviews.map((review, index) => (\n          <Card key={index} disabled={true}>\n            <Text>{review.text + '\\n\\nPosted: ' + review.date}</Text>\n            {review.professor && (\n              <Text>{'Taught By: ' + review.professor}</Text>\n            )}\n          </Card>\n        ))\n      )}\n      {\n        Object.keys(professorReviewsObject).length !== 0 ? getProfessorReviewsList() : null\n      }\n    </ScrollView>\n      </LinearGradient>\n  );\n}\n\nexport default withStyles(SingleClassPage, (theme) => ({\n  dark: {\n    backgroundColor: theme['color-basic-900'],\n  },\n  light: {\n    backgroundColor: theme['color-basic-200'],\n  },\n}));\n\nconst styles = StyleSheet.create({\n  title: {\n    fontSize: 20,\n    marginTop: 20,\n    fontWeight: 'bold',\n  },\n  subtitle: {\n    fontSize: 16,\n  },\n  courseOpen: {\n    backgroundColor: 'green',\n    color: '#fff',\n    padding: 5,\n    marginRight: 10,\n  },\n  courseClosed: {\n    backgroundColor: 'red',\n    color: '#fff',\n    padding: 5,\n    borderRadius: 5,\n  },\n  header: {\n    alignItems: 'center',\n  },\n  details: {\n    flexDirection: 'row',\n    padding: 10,\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n  },\n  courseDescription: {\n    paddingRight: 20,\n    paddingLeft: 20,\n    paddingTop: 10,\n    paddingBottom: 5,\n    fontSize: 17,\n  },\n  BodyContainer: {\n    borderTopWidth: 1,\n    borderTopColor: 'black',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-evenly',\n    padding: 10,\n    paddingTop: 20,\n    paddingBottom: 20,\n  },\n  boxed: {\n    alignItems: 'center',\n    margin: 8,\n    borderColor: 'black',\n    borderWidth: 1,\n    padding: 7,\n  },\n  documentStyle: {\n    width: 150,\n    height: 190,\n    paddingTop: 100,\n  },\n  imageLabel: {\n    fontSize: 12,\n    color: 'black',\n    padding: 10,\n    textAlign: 'center',\n  },\n  schedule: {\n    paddingLeft: 20,\n    paddingTop: 10,\n  },\n  graphImage: {\n    width: '100%',\n    aspectRatio: 1,\n    resizeMode: 'contain',\n  },\n  grade: {\n    fontSize: 50,\n    fontWeight: 'bold',\n    color: 'green',\n  },\n  reviewText: {\n    fontSize: 16,\n    fontStyle: 'italic',\n  },\n  reviewBox: {\n    width: '95%',\n    padding: 10,\n    borderWidth: 1,\n    borderColor: 'black',\n    borderRadius: 5,\n    marginBottom: 10,\n  },\n  section: {\n    flexDirection: 'row',\n    paddingLeft: 5,\n    borderBottomWidth: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  headerText: {\n    fontWeight: 'bold',\n    fontSize: 13,\n    flex: 1,\n  },\n  sectionText: {\n    flex: 1,\n  },\n  disclaimer: {\n    fontSize: 14,\n    fontStyle: 'italic',\n  },\n  backdrop: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  input: {\n    height: 50,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n  },\n  containerDrop: {\n    height: 42,\n    margin: 12,\n    borderWidth: 1,\n  },\n  indentedInput: {\n    height: 50,\n    marginVertical: 12,\n    borderWidth: 1,\n    padding: 10,\n    marginRight: 12,\n    marginLeft: 30,\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white',\n  },\n  subHeader: {\n    fontSize: 20,\n    paddingLeft: 20,\n    paddingBottom: 20,\n    paddingTop: 20,\n    fontWeight: 'bold',\n  },\n});\n","export const RENDERED_RESULTS_LIMIT = 10;\nexport const NEW_REVIEW_FIELDS = [\n  {\n    label: 'Professor',\n    id: 'professor',\n    mandatory: false,\n    type: 'String',\n  },\n  {\n    label: 'Grade',\n    id: 'grade',\n    type: 'DropDown',\n    mandatory: false,\n    options: [\n      {\n        label: 'A+',\n        id: 'A',\n      },\n      {\n        label: 'A',\n        id: 'A',\n      },\n      {\n        label: 'A-',\n        id: 'A',\n      },\n      {\n        label: 'B+',\n        id: 'B',\n      },\n      {\n        label: 'B',\n        id: 'B',\n      },\n      {\n        label: 'B-',\n        id: 'B',\n      },\n      {\n        label: 'C+',\n        id: 'C',\n      },\n      {\n        label: 'C',\n        id: 'C',\n      },\n      {\n        label: 'C-',\n        id: 'C',\n      },\n      {\n        label: 'D+',\n        id: 'D',\n      },\n      {\n        label: 'D',\n        id: 'D',\n      },\n      {\n        label: 'D-',\n        id: 'D',\n      },\n      {\n        label: 'F+',\n        id: 'F',\n      },\n      {\n        label: 'F',\n        id: 'F',\n      },\n      {\n        label: 'F-',\n        id: 'F',\n      },\n    ],\n  },\n  {\n    label: 'Time Spent in Hours (ie: 7)',\n    id: 'timeSpent',\n    mandatory: false,\n    type: 'String',\n  },\n];\n","import {\n  IndexPath,\n  Layout,\n  Select,\n  SelectItem,\n  Text,\n  useTheme,\n  Button,\n  Spinner,\n  Input,\n} from '@ui-kitten/components';\nimport { useState } from 'react';\nimport { Alert, StyleSheet, ScrollView } from 'react-native';\nimport { selectUserKey } from '../../../app/appDataSlice';\nimport { useAppSelector } from '../../../app/hooks';\nimport { NEW_REVIEW_FIELDS as fields } from '../../../constants/classPages';\nimport { useSendReviewMutation } from '../../api/classPagesApi';\n\nexport default function NewReview({ navigation }) {\n  const [body, setBody] = useState({});\n  const userKey = useAppSelector(selectUserKey);\n  const darkMode = useAppSelector((state) => state.appData.secure.darkMode);\n  const selectedClass = useAppSelector(\n    (state) => state.appData.classPages.selectedClass\n  );\n  const [sendReview, { isLoading }] = useSendReviewMutation();\n\n  const theme = useTheme();\n\n  const backgroundColor = darkMode\n    ? theme['color-basic-900']\n    : theme['color-basic-200'];\n\n  const color = darkMode ? theme['color-basic-200'] : theme['color-basic-900'];\n\n  const handleReviewSubmitted = async () => {\n    try {\n      await sendReview({\n        body: {\n          ...body,\n          masterCourseCode: selectedClass.masterCourseCode,\n        },\n        userKey,\n      }).unwrap();\n      Alert.alert(\n        'Review Submitted',\n        `Your review of \"${selectedClass.courseName}\" has been submitted and is now pending approval.\\n\\nThank You!`,\n        [\n          {\n            text: 'OK',\n            onPress: () => {\n              navigation.goBack();\n            },\n          },\n        ]\n      );\n    } catch (error) {\n      Alert.alert(\n        'Error',\n        `There was an error submitting your review. Please try again later.`\n      );\n      console.warn('Error submitting review: ', error);\n    }\n  };\n\n  function renderTheFieldsNecessary(fields) {\n    const changeValue = (theValue, valueToChange) => {\n      let newBody = body;\n      for (const aspect in newBody) {\n        if (\n          newBody[aspect] === null ||\n          newBody[aspect] === undefined ||\n          newBody[aspect] === ''\n        ) {\n          delete newBody[aspect];\n        }\n      }\n      if (theValue !== undefined) {\n        newBody[valueToChange] = theValue;\n      } else {\n        if (newBody[valueToChange]) {\n          delete newBody[valueToChange];\n        }\n      }\n      setBody(newBody);\n    };\n    const renderFilterParameters = (fields) => {\n      if (fields.length === 0) {\n        return null;\n      }\n      return (\n        <Layout style={{ flexDirection: 'row', backgroundColor }}>\n          <Text\n            style={{\n              fontSize: 15,\n              paddingLeft: 12,\n              paddingBottom: 5,\n              paddingTop: 5,\n              alignContent: 'center',\n              fontWeight: 'bold',\n            }}>\n            Review Details\n          </Text>\n        </Layout>\n      );\n    };\n    let final = [];\n\n    const renderDropDown = (field) => {\n      const [selectedIndex, setSelectedIndex] = useState(new IndexPath(0));\n      const [hasChosen, setHasChosen] = useState(false);\n\n      function currentValue() {\n        return (\n          <Text key={'gal;fkdjsl;f'}>\n            {!hasChosen\n              ? 'Choose ' +\n                field.label +\n                (field.mandatory ? ' (mandatory)' : '')\n              : field.options[selectedIndex.row - 1].label}{' '}\n          </Text>\n        );\n      }\n\n      function handleSelection(index) {\n        setSelectedIndex(index);\n        changeValue(\n          index.row === 0 ? undefined : field.options[index.row - 1].id,\n          field.id\n        );\n        if (index.row === 0) {\n          setHasChosen(false);\n        } else {\n          setHasChosen(true);\n        }\n      }\n\n      return (\n        <Select\n          style={{ ...styles.containerDrop, backgroundColor }}\n          value={currentValue}\n          selectedIndex={selectedIndex}\n          onSelect={handleSelection}>\n          <SelectItem title={' '} />\n          {field.options.map(({ label }, index) => (\n            <SelectItem title={label} key={index} />\n          ))}\n        </Select>\n      );\n    };\n    final.push(\n      <Input\n        key={'lfjdsa;lfaj'}\n        autoCapitalize={'sentences'}\n        onChangeText={(theValue) => changeValue(theValue, 'text')}\n        style={{ ...styles.inputBig, backgroundColor, color }}\n        multiline={true}\n        placeholderTextColor={darkMode ? theme['color-basic-500'] : 'gray'}\n        placeholder={'Review Text (mandatory)'}\n      />\n    );\n    for (let i = 0; i < fields.length; i++) {\n      const type = fields[i].type;\n      if (type === 'String') {\n        final.push(\n          <Input\n            key={i}\n            autoCapitalize={'words'}\n            clearButtonMode={'always'}\n            onChangeText={(theValue) => changeValue(theValue, fields[i].id)}\n            style={{ ...styles.input, backgroundColor, color }}\n            placeholderTextColor={darkMode ? theme['color-basic-500'] : 'gray'}\n            placeholder={\n              fields[i].mandatory\n                ? fields[i].label + ' (mandatory)'\n                : fields[i].label\n            }\n          />\n        );\n      } else if (type === 'DropDown') {\n        final.push(renderDropDown(fields[i]));\n      }\n    }\n\n    return (\n      <Layout style={{ backgroundColor }}>\n        {renderFilterParameters(fields)}\n        <Layout style={{ backgroundColor }}>{final}</Layout>\n      </Layout>\n    );\n  }\n\n  return (\n    <ScrollView style={{ backgroundColor }}>\n      <Layout style={{ backgroundColor, ...styles.container }}>\n        <Layout style={{ backgroundColor }}>\n          {renderTheFieldsNecessary(fields)}\n        </Layout>\n        <Button style={{ margin: 12 }} onPress={handleReviewSubmitted}>\n          Post Review\n        </Button>\n      </Layout>\n      {isLoading ? (\n        <Layout\n          style={{\n            backgroundColor: 'transparent',\n            position: 'absolute',\n            right: '50%',\n            top: '50%',\n          }}>\n          <Spinner />\n        </Layout>\n      ) : null}\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  input: {\n    height: 50,\n    margin: 12,\n    padding: 10,\n    borderColor: '#B3B3B3',\n    borderRadius: 5,\n    borderWidth: 1,\n  },\n  inputBig: {\n    height: 200,\n    margin: 12,\n    padding: 10,\n    borderColor: '#B3B3B3',\n    borderRadius: 5,\n    borderWidth: 1,\n  },\n  containerDrop: {\n    height: 42,\n    margin: 12,\n  },\n  indentedInput: {\n    height: 50,\n    marginVertical: 12,\n    padding: 10,\n    marginRight: 12,\n    marginLeft: 30,\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n  },\n  container: {\n    flex: 1,\n    // alignItems: 'center',\n  },\n  header: {\n    marginTop: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n  },\n  address: {\n    alignItems: 'center',\n    margin: 10,\n    padding: 10,\n  },\n  video: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-start',\n  },\n  title: {\n    fontSize: 26,\n    marginLeft: 10,\n  },\n  logo: {\n    width: '100%',\n    height: 100,\n  },\n  couponContainer: {\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 20,\n    marginBottom: 20,\n  },\n  coupon: {\n    width: 400,\n    height: 267,\n  },\n  imageGallery: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    margin: 10,\n    marginBottom: 0,\n  },\n  imageStyle: {\n    width: 150,\n    height: 150,\n    paddingTop: 100,\n    margin: 5,\n  },\n  headerText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n});\n","import { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport InfoPage from './InfoPage';\nimport PostReview from './PostReview';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function SingleClassPage({ bottomSheetRef }) {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen\n        name=\"InfoPage\"\n        component={InfoPage}\n        options={{ title: 'ClassPages' }}\n      />\n      <Stack.Screen\n          name=\"PostReview\"\n          component={PostReview}\n          options={{ title: 'Post Review' }}\n        />\n    </Stack.Navigator>\n  );\n}\n","import { Layout, Text } from '@ui-kitten/components';\n\nexport default function Message({ title, item }) {\n  return (\n    <Layout\n      style={{\n        flex: 1,\n        marginTop: 10,\n        alignItems: 'center',\n        backgroundColor: 'transparent',\n      }}>\n      <Text style={{ margin: 20, color: '#fff' }}>{title}</Text>\n      {item}\n    </Layout>\n  );\n}\n","import { Layout, Text } from '@ui-kitten/components';\nimport {\n  StyleSheet,\n  Animated,\n  TouchableOpacity,\n} from 'react-native';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { useRef } from 'react';\n\nexport default function ClassListItemItem({\n  courseCode,\n  seatsAvailable,\n  seatsFilled,\n  handleAddClass,\n  handleRemoveClass,\n  darkMode,\n  added,\n  masterCourseCode,\n}) {\n  const selectedAnim = useRef(new Animated.Value(1)).current;\n\n  return (\n    <Layout style={styles.dropDownItem}>\n      <Text>{`\\u2022 ${courseCode}`}</Text>\n      <Text\n        style={seatsAvailable > 0 ? styles.isAvailable : styles.notAvailable}>\n        {seatsFilled} / {seatsFilled + seatsAvailable}\n      </Text>\n      {/* Add / Remove Class */}\n      <TouchableOpacity\n        activeOpacity={1}\n        onPress={() => {\n          if (added) {\n            handleRemoveClass(courseCode, masterCourseCode);\n          } else {\n            handleAddClass(courseCode, masterCourseCode);\n          }\n          Animated.sequence([\n            Animated.spring(selectedAnim, {\n              toValue: 0.0,\n              speed: 16,\n              useNativeDriver: true,\n            }),\n          ]).start(() => {\n            Animated.spring(selectedAnim, {\n              toValue: 1,\n              speed: 16,\n              useNativeDriver: true,\n            }).start();\n          });\n        }}>\n        <Animated.View\n          style={{\n            width: 50,\n            alignItems: 'center',\n            transform: [\n              {\n                scale: selectedAnim,\n              },\n            ],\n          }}>\n          <FontAwesome5\n            style={{ padding: 5 }}\n            size={24}\n            name={added ? 'times' : 'plus'}\n            color={darkMode ? 'white' : 'black'}\n          />\n        </Animated.View>\n      </TouchableOpacity>\n    </Layout>\n  );\n}\n\nconst styles = StyleSheet.create({\n  list__container: {\n    margin: 10,\n    marginLeft: 0,\n    height: '90%',\n    width: '100%',\n  },\n  addedClassesContainer: {\n    position: 'absolute',\n    zIndex: 1,\n    width: '60%',\n    borderTopRightRadius: 20,\n    borderBottomRightRadius: 20,\n    borderColor: '#c2c2c2',\n    backgroundColor: '#f7f7f7',\n    paddingTop: 5,\n    borderTopWidth: 1.5,\n    borderBottomWidth: 1.5,\n    borderRightWidth: 1.5,\n  },\n  addedClasses: {\n    position: 'absolute',\n    right: 3,\n    top: 3,\n    padding: 7,\n    margin: 5,\n    backgroundColor: '#c9c9c9',\n    borderRadius: 100,\n  },\n  item: {\n    marginBottom: 10,\n    marginTop: 10,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 5,\n  },\n  buttonContainer: {\n    right: 0,\n    position: 'absolute',\n    width: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n  },\n  button: {\n    padding: 5,\n    borderColor: 'grey',\n  },\n  dropDown: {\n    backgroundColor: '#f7f7f7',\n    paddingLeft: 30,\n    paddingBottom: 10,\n    paddingTop: 10,\n  },\n  dropDownItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    height: 54,\n  },\n  isAvailable: {\n    color: 'green',\n  },\n  notAvailable: {\n    color: 'red',\n  },\n  loadingMessage: {\n    fontSize: 20,\n    color: 'white',\n    alignSelf: 'center',\n    fontStyle: 'italic',\n  },\n  loadingMessageRefresh: {\n    fontSize: 15,\n    paddingTop: 20,\n    color: 'white',\n    alignSelf: 'center',\n    fontWeight: 'bold',\n  },\n  filters: {\n    backgroundColor: 'white',\n    alignItems: 'center',\n    padding: 10,\n  },\n});\n","import { Layout, Text } from '@ui-kitten/components';\nimport {\n  StyleSheet,\n  TouchableOpacity,\n  LayoutAnimation,\n  UIManager,\n  Platform,\n  Animated,\n} from 'react-native';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { useEffect, useMemo, useRef, useState } from 'react';\nimport useTraceUpdate from '../../hooks/useTraceUpdate';\nimport ClassListItemItem from './ClassListItemItem';\n\nif (\n  Platform.OS === 'android' &&\n  UIManager.setLayoutAnimationEnabledExperimental\n) {\n  UIManager.setLayoutAnimationEnabledExperimental(true);\n}\n\nexport default function Item({\n  courseName,\n  masterCourseCode,\n  schedule,\n  menuOpen,\n  setIsMenuOpen,\n  darkMode,\n  handleClassSelected,\n  handleAddClass,\n  handleRemoveClass,\n  inItem,\n}) {\n  const memoizedItem = useMemo(() => {\n    return (\n      <Layout\n        style={{\n          borderRadius: 20,\n          opacity: 1,\n          marginTop: 7,\n          marginRight: 9,\n          marginLeft: 9,\n        }}>\n        {/* Name and master coursecode */}\n        <Layout style={{ marginHorizontal: 20 }}>\n          <Layout>\n            <TouchableOpacity\n              onPress={() => {\n                handleClassSelected(masterCourseCode);\n              }}>\n              <Layout style={styles.item}>\n                <Text style={styles.title}>{courseName}</Text>\n                <Text>{masterCourseCode}</Text>\n              </Layout>\n            </TouchableOpacity>\n\n            {/* Dropdown Menu Toggle */}\n            <TouchableOpacity\n              style={styles.buttonContainer}\n              onPress={() => {\n                if (menuOpen === masterCourseCode) {\n                  setIsMenuOpen('');\n                  LayoutAnimation.configureNext({\n                    duration: 730,\n                    create: { type: 'easeInEaseOut', property: 'opacity' },\n                    update: { type: 'spring', springDamping: 0.8 },\n                  });\n                } else {\n                  setIsMenuOpen(masterCourseCode);\n                  LayoutAnimation.configureNext({\n                    duration: Platform.OS === 'android' ? 500 : 730,\n                    create: { type: 'easeInEaseOut', property: 'opacity' },\n                    update: { type: 'spring', springDamping: 0.8 },\n                  });\n                }\n              }}>\n              <Layout style={styles.button}>\n                <FontAwesome5\n                  name={\n                    menuOpen === masterCourseCode\n                      ? 'chevron-up'\n                      : 'chevron-down'\n                  }\n                  size={20}\n                  color={darkMode ? 'white' : 'black'}\n                />\n              </Layout>\n            </TouchableOpacity>\n          </Layout>\n\n          {/* Dropdown Menu */}\n          {menuOpen === masterCourseCode && (\n            <Layout>\n              {schedule.map(\n                ({ _id, courseCode, seatsAvailable, seatsFilled, added }) => (\n                  <ClassListItemItem\n                    key={_id}\n                    courseCode={courseCode}\n                    seatsAvailable={seatsAvailable}\n                    seatsFilled={seatsFilled}\n                    handleAddClass={handleAddClass}\n                    handleRemoveClass={handleRemoveClass}\n                    darkMode={darkMode}\n                    added={added}\n                    masterCourseCode={masterCourseCode}\n                  />\n                )\n              )}\n            </Layout>\n          )}\n        </Layout>\n      </Layout>\n    );\n  }, [menuOpen, inItem, darkMode]);\n\n  // useTraceUpdate(memoizedItem);\n  return memoizedItem;\n}\n\nconst styles = StyleSheet.create({\n  list__container: {\n    margin: 10,\n    marginLeft: 0,\n    height: '90%',\n    width: '100%',\n  },\n  addedClassesContainer: {\n    position: 'absolute',\n    zIndex: 1,\n    width: '60%',\n    borderTopRightRadius: 20,\n    borderBottomRightRadius: 20,\n    borderColor: '#c2c2c2',\n    backgroundColor: '#f7f7f7',\n    paddingTop: 5,\n    borderTopWidth: 1.5,\n    borderBottomWidth: 1.5,\n    borderRightWidth: 1.5,\n  },\n  addedClasses: {\n    position: 'absolute',\n    right: 3,\n    top: 3,\n    padding: 7,\n    margin: 5,\n    backgroundColor: '#c9c9c9',\n    borderRadius: 100,\n  },\n  item: {\n    marginBottom: 10,\n    marginTop: 10,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 5,\n    marginRight: 30,\n  },\n  buttonContainer: {\n    right: 0,\n    position: 'absolute',\n    width: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n  },\n  button: {\n    padding: 5,\n    borderColor: 'grey',\n  },\n  dropDown: {\n    backgroundColor: '#f7f7f7',\n    paddingLeft: 30,\n    paddingBottom: 10,\n    paddingTop: 10,\n  },\n  dropDownItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    height: 54,\n  },\n  isAvailable: {\n    color: 'green',\n  },\n  notAvailable: {\n    color: 'red',\n  },\n  loadingMessage: {\n    fontSize: 20,\n    color: 'white',\n    alignSelf: 'center',\n    fontStyle: 'italic',\n  },\n  loadingMessageRefresh: {\n    fontSize: 15,\n    paddingTop: 20,\n    color: 'white',\n    alignSelf: 'center',\n    fontWeight: 'bold',\n  },\n  addClassButton: {\n    padding: 15,\n  },\n  filters: {\n    backgroundColor: 'white',\n    alignItems: 'center',\n    padding: 10,\n  },\n});\n","import { Divider, Layout, Text, useTheme } from '@ui-kitten/components';\nimport { Entypo } from '@expo/vector-icons';\nimport { FlatList, TouchableOpacity } from 'react-native';\n\ntype AddedClassesProps = {\n  setAddedClassesVisible: (visible: boolean) => void;\n  addedClasses: { [masterCourseCode: string]: string[] };\n  handleRemoveClass: (courseCode: string, masterCourseCode: string) => void;\n  darkMode: boolean;\n};\n\nexport default function AddedClasses({\n  addedClasses,\n  handleRemoveClass,\n  darkMode,\n}: AddedClassesProps) {\n  const theme = useTheme();\n\n  let classes = [];\n  Object.entries(addedClasses).forEach(([masterCourseCode, courseCodes]) => {\n    courseCodes.forEach((courseCode) => {\n      classes.push([masterCourseCode, courseCode]);\n    });\n  });\n\n  const renderItem = ({ item }) => {\n    const [masterCourseCode, courseCode] = item;\n    return (\n      <Layout\n        style={{\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          paddingVertical: 7,\n          backgroundColor: darkMode\n            ? theme['color-basic-900']\n            : theme['color-basic-100'],\n        }}>\n        <Text style={{ fontSize: 18 }}>{courseCode}</Text>\n\n        <TouchableOpacity\n          onPress={() => handleRemoveClass(courseCode, masterCourseCode)}>\n          <Entypo name=\"cross\" size={28} color={'red'} />\n        </TouchableOpacity>\n      </Layout>\n    );\n  };\n\n  return (\n    <Layout\n      style={{\n        flex: 1,\n        paddingBottom: 10,\n        backgroundColor: darkMode\n          ? theme['color-basic-900']\n          : theme['color-basic-100'],\n      }}>\n      <FlatList\n        contentContainerStyle={{ width: 300 }}\n        ListEmptyComponent={\n          <Text>\n            No classes yet... Click the{' '}\n            <Text style={{ fontWeight: 'bold' }}>+</Text> next to a class to see\n            it here\n          </Text>\n        }\n        ItemSeparatorComponent={() => <Divider />}\n        data={classes}\n        renderItem={renderItem}\n      />\n    </Layout>\n  );\n}\n","import {\n  Button,\n  CheckBox,\n  Divider,\n  Layout,\n  Text,\n  Toggle,\n  useTheme,\n} from '@ui-kitten/components';\nimport { useState } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport {\n  classPagesSlice,\n  filtersReset,\n  filtersSaved,\n  isHMCUpdated,\n} from './classPagesSlice';\n\nexport default function FilterClasses({ darkMode, setFiltersMenuVisible }) {\n  const theme = useTheme();\n  const initialFilters = classPagesSlice.getInitialState().filters;\n  const filters = useAppSelector((state) => state.appData.classPages.filters);\n  const isHMC = useAppSelector((state) => state.appData.classPages.isHMC);\n\n  const [colleges, setColleges] = useState(filters.colleges);\n\n  const dispatch = useAppDispatch();\n\n  const onChangeIsHMC = (change: boolean) => {\n    dispatch(isHMCUpdated(change));\n  };\n\n  const onChangeFilterCollege = (college: string, change: boolean) => {\n    setColleges({ ...colleges, [college]: change });\n  };\n\n  const resetFilters = () => {\n    setColleges(initialFilters.colleges);\n    dispatch(filtersReset());\n  };\n\n  const saveFilters = () => {\n    dispatch(filtersSaved({ colleges }));\n    setFiltersMenuVisible(false);\n  };\n\n  return (\n    <Layout\n      style={{\n        backgroundColor: darkMode\n          ? theme['color-basic-900']\n          : theme['color-basic-100'],\n        alignItems: 'center',\n        padding: 10,\n      }}>\n      <Layout\n        style={{\n          flexDirection: 'row',\n          justifyContent: 'center',\n          alignItems: 'center',\n          marginBottom: 10,\n          backgroundColor: darkMode\n            ? theme['color-basic-900']\n            : theme['color-basic-100'],\n        }}>\n        <Text>4C Credits </Text>\n        <Toggle\n          checked={isHMC}\n          onChange={(change) => {\n            onChangeIsHMC(change);\n          }}\n        />\n        <Text> HMC Credits</Text>\n      </Layout>\n      <Divider />\n      <Text style={{ marginVertical: 5 }}>Colleges</Text>\n      <Layout\n        style={{\n          flexDirection: 'row',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}>\n        {Object.keys(colleges).map((college) => (\n          <CheckBox\n            style={{\n              backgroundColor: darkMode\n                ? theme['color-basic-900']\n                : theme['color-basic-100'],\n            }}\n            key={college}\n            checked={colleges[college]}\n            onChange={(change) => {\n              onChangeFilterCollege(college, change);\n            }}>\n            {college}\n          </CheckBox>\n        ))}\n      </Layout>\n      {/* <Layout style={{ width: '100%' }}>\n        <Text style={{ marginVertical: 5 }}>Semester</Text>\n        <Select\n          placeholder=\"Semester\"\n          value={Object.keys(semesterSelectVals)[semsesterSelectIndex.row]}\n          selectedIndex={semsesterSelectIndex}\n          onSelect={(index) => setSemesterSelectedIndex(index)}>\n          {Object.keys(semesterSelectVals).map((option, i) => (\n            <SelectItem\n              key={i}\n              disabled={semesterSelectVals[option].disabled}\n              title={option}\n            />\n          ))}\n        </Select>\n      </Layout> */}\n      <Button style={{ marginTop: 20 }} onPress={saveFilters}>\n        Update Results\n      </Button>\n      <Button\n        size=\"small\"\n        style={{ marginTop: 20 }}\n        status=\"info\"\n        onPress={resetFilters}>\n        Reset Filters\n      </Button>\n    </Layout>\n  );\n}\n","import {\n  Button,\n  Layout,\n  List,\n  Spinner,\n  Text,\n  useTheme,\n} from '@ui-kitten/components';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { useEffect, useRef, useState } from 'react';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport BottomSheet from '@gorhom/bottom-sheet/lib/typescript/components/bottomSheet/BottomSheet';\nimport {\n  Keyboard,\n  LayoutAnimation,\n  Platform,\n  RefreshControl,\n  TouchableOpacity,\n} from 'react-native';\nimport { selectDarkMode, selectUserKey } from '../../app/appDataSlice';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport Message from '../../components/Message';\nimport SearchBar from '../../components/SearchBar';\nimport {\n  useAddClassMutation,\n  useRemoveClassMutation,\n  useLazyGetAllClassesQuery,\n} from '../api/classPagesApi';\nimport { useGetUserInfoQuery, useLazyGetUserInfoQuery } from '../api/usersApi';\nimport {\n  classSelected,\n  endOfListReached,\n  resetClasses,\n  searchTermUpdated,\n  selectClassesList,\n  suggestedClassesDimissed,\n  suggestedClassesUpdated,\n} from './classPagesSlice';\nimport Item from './ClassListItem';\nimport { RENDERED_RESULTS_LIMIT } from '../../constants/classPages';\nimport SingleClassPage from './SingleClassPage';\nimport AddedClasses from './AddedClasses';\nimport FilterClasses from './FilterClasses';\nimport ModalContainer from '../../components/ModalContainer';\n\nexport const CurrentTermLabel = ({\n  navigation,\n  currentSection,\n  style = {},\n  textStyle = {},\n}) => {\n  return (\n    <TouchableOpacity\n      style={style}\n      onPress={() => navigation.navigate('SelectTerm')}>\n      <Text category=\"label\" style={textStyle}>\n        {`Term: ${currentSection}`}\n      </Text>\n    </TouchableOpacity>\n  );\n};\n\nexport default function ClassesList({ navigation }) {\n  const [menuOpen, setMenuOpen] = useState(null);\n  const [addedClassesVisible, setAddedClassesVisible] = useState(false);\n  const [filtersMenuVisible, setFiltersMenuVisible] = useState(false);\n  const [listRef, setListRef] = useState(null);\n\n  const [addClass] = useAddClassMutation();\n  const [removeClass] = useRemoveClassMutation();\n  const [fetchUserInfo] = useLazyGetUserInfoQuery();\n  const [getClasses, { isLoading: classListLoading, isError }] =\n    useLazyGetAllClassesQuery();\n  const currentSection = useAppSelector(\n    (state) => state.appData.classPages.currentSection\n  );\n\n  // Selectors\n  const filters = useAppSelector((state) => state.appData.classPages.filters);\n  const classes = useAppSelector(selectClassesList);\n  const userKey = useAppSelector(selectUserKey);\n  const page = useAppSelector((state) => state.appData.classPages.page);\n  const darkMode = useAppSelector(selectDarkMode);\n  const searchTerm = useAppSelector(\n    (state) => state.appData.classPages.searchTerm\n  );\n  const renderedClasses = useAppSelector(\n    (state) => state.appData.classPages.renderedClasses\n  );\n  const suggestedClasses = useAppSelector(\n    (state) => state.appData.classPages.suggestedClasses\n  );\n\n  const { data: userData, isSuccess: userInfoSuccess } = useGetUserInfoQuery(\n    userKey,\n    { skip: !userKey }\n  );\n  const collegeName = userData?.collegeName || 'claremontColleges';\n\n  const userName = userData?.userName;\n  const addedClasses = userData?.addedClasses?.classes;\n  const length = userData?.addedClasses?.classes?.[currentSection]\n    ? Object.keys(userData.addedClasses.classes?.[currentSection]).length\n    : 0;\n\n  // Other Hooks\n  const theme = useTheme();\n  const dispatch = useAppDispatch();\n  const bottomSheetRef = useRef<BottomSheet>(null);\n\n  useEffect(() => {\n    fetchClasses();\n  }, []);\n\n  const fetchClasses = () => {\n    if (Object.keys(classes).length === 0) {\n      try {\n        getClasses({\n          userKey,\n          collegeName,\n          courseTerm: currentSection,\n        }).unwrap();\n      } catch (e) {\n        console.warn('Error getting classes: ', e);\n      }\n    } else {\n      dispatch(resetClasses());\n    }\n  };\n\n  const handleRefresh = () => {\n    fetchUserInfo(userKey);\n    fetchClasses();\n  };\n\n  const handleSearch = (searchPhrase: string) => {\n    if (listRef) {\n      listRef.scrollToOffset({ animated: true, offset: 0 });\n    }\n    dispatch(searchTermUpdated(searchPhrase));\n  };\n\n  const handleClassSelected = (courseCode: string) => {\n    dispatch(classSelected(courseCode));\n    if (Platform.OS === 'web') {\n      navigation.navigate('SingleClassPage');\n    } else {\n      bottomSheetRef.current?.snapToIndex(0);\n    }\n  };\n\n  const handleAddClass = (courseCode: string, masterCourseCode: string) => {\n    try {\n      addClass({\n        userKey,\n        courseCode,\n        courseTerm: currentSection,\n        userName,\n        masterCourseCode,\n      }).unwrap();\n    } catch (e) {\n      console.warn('Add class error: ', e);\n    }\n  };\n\n  const handleRemoveClass = (courseCode: string, masterCourseCode: string) => {\n    try {\n      removeClass({\n        userKey,\n        courseCode,\n        courseTerm: currentSection,\n        userName,\n        masterCourseCode,\n      }).unwrap();\n    } catch (e) {\n      console.warn('Add class error: ', e);\n    }\n  };\n\n  const renderItem = ({ item: [masterCourseCode, courseInfo] }) => {\n    // check if course is in addedClasses set and set to true if it is\n    let inItem = [];\n    const schedule = courseInfo.times.map((time) => {\n      if (\n        currentSection in addedClasses &&\n        masterCourseCode in addedClasses[currentSection] &&\n        addedClasses[currentSection][masterCourseCode].includes(time.courseCode)\n      ) {\n        inItem.push(time.courseCode);\n        return { ...time, added: true };\n      } else {\n        inItem.push(time.courseCode);\n        return { ...time, added: false };\n      }\n    });\n\n    return (\n      <Item\n        courseName={courseInfo.courseName}\n        masterCourseCode={masterCourseCode}\n        schedule={schedule}\n        menuOpen={menuOpen}\n        setIsMenuOpen={setMenuOpen}\n        darkMode={darkMode}\n        handleClassSelected={handleClassSelected}\n        handleAddClass={handleAddClass}\n        handleRemoveClass={handleRemoveClass}\n        inItem={inItem}\n      />\n    );\n  };\n\n  const accessoryLeft = (\n    <Layout style={{ flexDirection: 'row', backgroundColor: 'transparent' }}>\n      <TouchableOpacity\n        onPress={() => setAddedClassesVisible(!addedClassesVisible)}\n        style={{ justifyContent: 'center', marginRight: 10 }}>\n        <FontAwesome5\n          name=\"list-ul\"\n          size={24}\n          color={darkMode ? theme['color-basic-500'] : theme['color-basic-200']}\n        />\n        {length > 0 ? (\n          <Layout\n            style={{\n              position: 'absolute',\n              backgroundColor: darkMode ? 'red' : '#fff',\n              borderRadius: 10,\n              paddingHorizontal: 3,\n              right: -7,\n              top: -3,\n            }}>\n            <Text>{length}</Text>\n          </Layout>\n        ) : null}\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={{ justifyContent: 'center', marginRight: 10 }}\n        onPress={() => setFiltersMenuVisible(!filtersMenuVisible)}>\n        <FontAwesome5\n          name={filtersMenuVisible ? 'chevron-up' : 'chevron-down'}\n          size={24}\n          color={darkMode ? theme['color-basic-500'] : theme['color-basic-200']}\n        />\n      </TouchableOpacity>\n    </Layout>\n  );\n\n  const renderFilteredCollegesList = () => {\n    const filteredColleges = Object.keys(filters.colleges).filter(\n      (c) => filters.colleges[c]\n    );\n\n    if (filteredColleges.length < 5) {\n      return (\n        <Text\n          category=\"label\"\n          style={{ fontStyle: 'italic', marginTop: 5, color: '#fff' }}>\n          {`Colleges: ${filteredColleges.join(', ')}`}\n        </Text>\n      );\n    } else {\n      return (\n        <Layout style={{ backgroundColor: 'transparent', marginTop: 20 }} />\n      );\n    }\n  };\n\n  const dismissSuggestions = () => {\n    LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);\n    dispatch(suggestedClassesDimissed());\n  };\n\n  // Decide what content to render\n  let content: keyof JSX.IntrinsicElements | JSX.Element;\n\n  let coursesToRender = Object.entries(renderedClasses).slice(\n    0,\n    RENDERED_RESULTS_LIMIT * page\n  );\n\n  if (classListLoading || !userInfoSuccess) {\n    content = <Message title=\"Loading Classes\" item={<Spinner />} />;\n  } else if (isError) {\n    content = (\n      <Message\n        title=\"Error Loading Classes\"\n        item={<Button onPress={fetchClasses}>Refresh</Button>}\n      />\n    );\n  } else {\n    content = (\n      <>\n        <List\n          style={{ backgroundColor: 'transparent' }}\n          contentContainerStyle={{ paddingBottom: 20 }}\n          ListHeaderComponent={\n            Object.entries(suggestedClasses).length > 0 &&\n            searchTerm.length === 0 && (\n              <List\n                ListHeaderComponent={\n                  <Layout\n                    style={{\n                      marginLeft: 20,\n                      marginRight: 25,\n                      backgroundColor: 'transparent',\n                      flexDirection: 'row',\n                      justifyContent: 'space-between',\n                      alignItems: 'center',\n                    }}>\n                    <Text category=\"label\" style={{ color: '#fff' }}>\n                      Suggested Electives\n                    </Text>\n                    <TouchableOpacity onPress={dismissSuggestions}>\n                      <FontAwesome5 name=\"times\" size={24} color=\"#fff\" />\n                    </TouchableOpacity>\n                  </Layout>\n                }\n                style={{\n                  backgroundColor: 'rgba(0,0,0,.2)',\n                  borderRadius: 20,\n                  margin: 10,\n                  paddingBottom: 10,\n                  paddingTop: 3,\n                }}\n                contentContainerStyle={{ paddingBottom: 100 }}\n                data={Object.entries(suggestedClasses)}\n                renderItem={renderItem}\n                keyExtractor={([courseCode, _]) => courseCode}\n                onScroll={Keyboard.dismiss}\n                scrollEventThrottle={16}\n              />\n            )\n          }\n          data={Object.entries(renderedClasses).slice(\n            0,\n            RENDERED_RESULTS_LIMIT * page\n          )}\n          renderItem={renderItem}\n          keyExtractor={([courseCode, _]) => courseCode}\n          maxToRenderPerBatch={10}\n          ListEmptyComponent={\n            <Message\n              title=\"No Classes Found\"\n              item={<Button onPress={fetchClasses}>Refresh</Button>}\n            />\n          }\n          initialNumToRender={10}\n          showsVerticalScrollIndicator={false}\n          // ListHeaderComponent={() => <Layout style={{minHeight: 67, opacity: 0}}/>}\n          onEndReachedThreshold={0.5}\n          onEndReached={() => dispatch(endOfListReached())}\n          refreshControl={\n            <RefreshControl\n              refreshing={classListLoading}\n              onRefresh={handleRefresh}\n              title=\"Pull to refresh\"\n              tintColor={theme['color-basic-100']}\n              titleColor={theme['color-basic-100']}\n            />\n          }\n          ref={(ref) => {\n            setListRef(ref);\n          }}\n          onScroll={Keyboard.dismiss}\n          scrollEventThrottle={16}\n        />\n      </>\n    );\n  }\n\n  return (\n    <Layout style={{ flex: 1 }}>\n      <LinearGradient\n        colors={\n          darkMode\n            ? [theme['color-basic-1100'], theme['color-basic-1100']]\n            : [theme['color-primary-500'], theme['color-success-500']]\n        }\n        style={{ width: '100%', margin: 0, flex: 1 }}\n        start={{ x: 0, y: 0 }}\n        end={{ x: 1, y: 0.4 }}>\n        <LinearGradient\n          colors={[\n            // 'rgba(219,76,113,1)',\n            // 'rgba(219,76,113,00)',\n\n            'rgba(225,78,106,0)',\n            'rgba(225,78,106,0)',\n            // 'rgba(225,78,106,.6)',\n            // 'rgba(225,78,106,0)',\n          ]}\n          locations={[0, 1]}\n          style={{\n            zIndex: 1,\n            width: '100%',\n            paddingHorizontal: 20,\n            paddingTop: 7,\n          }}>\n          <CurrentTermLabel\n            navigation={navigation}\n            currentSection={currentSection}\n            textStyle={{ color: '#fff', paddingBottom: 5, marginLeft: 80 }}\n          />\n          <SearchBar\n            accessoryLeft={accessoryLeft}\n            searchTerm={searchTerm}\n            onChangeText={handleSearch}\n            inputProps={{ autoCorrect: false }}\n            placeholder=\"Search classes...\"\n            alwaysShowCancelButton={Platform.OS === 'web'}\n            cancelButtonAction={\n              Platform.OS === 'web' ? handleRefresh : () => {}\n            }\n          />\n          {renderFilteredCollegesList()}\n        </LinearGradient>\n\n        {content}\n      </LinearGradient>\n\n      <ModalContainer\n        setBackDropVisible={setAddedClassesVisible}\n        backDropVisible={addedClassesVisible}\n        title=\"Added Classes\">\n        {addedClasses && currentSection ? (\n          <AddedClasses\n            setAddedClassesVisible={setAddedClassesVisible}\n            addedClasses={addedClasses[currentSection] || {}}\n            handleRemoveClass={handleRemoveClass}\n            darkMode={darkMode}\n          />\n        ) : (\n          <Layout\n            style={{\n              flex: 1,\n              alignItems: 'center',\n              borderRadius: 20,\n              paddingTop: 50,\n            }}>\n            <Text>Loading</Text>\n            <Spinner />\n          </Layout>\n        )}\n      </ModalContainer>\n\n      <ModalContainer\n        setBackDropVisible={setFiltersMenuVisible}\n        backDropVisible={filtersMenuVisible}\n        title=\"Filters\">\n        <FilterClasses\n          setFiltersMenuVisible={setFiltersMenuVisible}\n          darkMode={darkMode}\n        />\n      </ModalContainer>\n      {Platform.OS !== 'web' && (\n        <SingleClassPage bottomSheetRef={bottomSheetRef} />\n      )}\n    </Layout>\n  );\n}\n","import {\n  Alert,\n  Animated,\n  Dimensions,\n  LogBox,\n  Platform,\n  SafeAreaView,\n  ScrollView,\n  Text,\n  TouchableOpacity,\n  View,\n} from 'react-native';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport {\n  classSelected,\n  selectClassesList,\n} from '../classPages/classPagesSlice';\nimport {\n  appDataSlice,\n  selectDarkMode,\n  selectUserKey,\n} from '../../app/appDataSlice';\nimport { useNavigation } from '@react-navigation/native';\nimport renderCustomEvent from './customEvent';\nimport { useGetCurrentSectionQuery } from '../api/classPagesApi';\nimport renderItem from './ScheduledItem';\nimport CalendarFunctions from './CalendarFunctions';\nimport {\n  useEditUserMutation,\n  useGetUserInfoQuery,\n  usersApiSlice,\n} from '../api/usersApi';\nimport { Button, Layout, useTheme } from '@ui-kitten/components';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport BottomSheet from '@gorhom/bottom-sheet/lib/typescript/components/bottomSheet/BottomSheet';\nimport SingleClassPage from '../classPages/SingleClassPage';\nimport Toast from 'react-native-root-toast';\nimport { CurrentTermLabel } from '../classPages/ClassesList';\nimport moment from \"moment-timezone\";\n\nLogBox.ignoreAllLogs();\n\nexport default function CalendarPage({ navigation }) {\n  const isWeb = Platform.OS === 'web';\n  const [editUser] = useEditUserMutation();\n  const userKey = useAppSelector(selectUserKey);\n  const isThreeDay = useAppSelector(\n    (state) => state.appData.calendar.isThreeDay\n  );\n  const dispatch = useAppDispatch();\n  const bottomSheetRef = useRef<BottomSheet>(null);\n  const darkMode: Boolean = useAppSelector(selectDarkMode);\n  const calendarFun = new CalendarFunctions();\n  const universalHeight = (Dimensions.get('window').height - 50) / 12;\n  const threeDayWidth = (Dimensions.get('window').width - 75) / 3;\n  const fiveDayWidth = (Dimensions.get('window').width - 75) / 5;\n  const days = [\n    { day: 'Mon', id: 'Monday' },\n    { day: 'Tues', id: 'Tuesday' },\n    { day: 'Wed', id: 'Wednesday' },\n    { day: 'Thurs', id: 'Thursday' },\n    { day: 'Fri', id: 'Friday' },\n    { day: 'Sat', id: 'Saturday' },\n    { day: 'Sun', id: 'Sunday' },\n  ];\n  const times = [\n    '12:00 AM',\n    '1:00 AM',\n    '2:00 AM',\n    '3:00 AM',\n    '4:00 AM',\n    '5:00 AM',\n    '6:00 AM',\n    '7:00 AM',\n    '8:00 AM',\n    '9:00 AM',\n    '10:00 AM',\n    '11:00 AM',\n    '12:00 PM',\n    '1:00 PM',\n    '2:00 PM',\n    '3:00 PM',\n    '4:00 PM',\n    '5:00 PM',\n    '6:00 PM',\n    '7:00 PM',\n    '8:00 PM',\n    '9:00 PM',\n    '10:00 PM',\n    '11:00 PM',\n  ];\n\n  const { data: userData } = useGetUserInfoQuery(userKey);\n  let addedClasses = userData?.addedClasses?.classes;\n  const allClassData = useAppSelector(selectClassesList);\n  const currentSection = useAppSelector(\n    (state) => state.appData.classPages.currentSection\n  );\n\n  const renderCustomEvents = (elem) => {\n    let finalRender = [];\n    if (!userData.customEvents) {\n      return null;\n    }\n    for (const event of userData.customEvents) {\n      if (event.days.includes(elem.id)) {\n        finalRender.push(renderCustomEvent(event, userData, userKey, editUser));\n      } else if (event.date && eventIsThisDay(elem.id, new Date(event.date)) && showThisWeek(new Date(event.date))) {\n        finalRender.push(renderCustomEvent(event, userData, userKey, editUser));\n      }\n    }\n    return finalRender;\n  };\n\n  function eventIsThisDay(dayString: String, date: Date) {\n    let dayOfWeek = adjustDays(date.getDay())\n    return dayString === days[dayOfWeek].id\n  }\n\n  function adjustDays(dayOfWeek) {\n    if (dayOfWeek === 0) {\n      dayOfWeek = 6\n    } else {\n      dayOfWeek -= 1\n    }\n    return dayOfWeek\n  }\n\n  function getMs(hours, minutes, seconds) {\n    let final = 0\n    final += hours * 3600000\n    final += minutes * 60000\n    final += seconds * 1000\n    return final\n  }\n\n\n  function showThisWeek(dateOfEvent: Date) {\n    const currentDate = new Date()\n    const currentDayOfWeek = adjustDays(currentDate.getDay())\n    const startOfWeek = new Date(currentDate.valueOf() - (currentDayOfWeek * 86400000) - getMs(currentDate.getHours(), currentDate.getMinutes(), currentDate.getSeconds()))\n    const endOfWeek = new Date(currentDate.valueOf() + ((6 - currentDayOfWeek) * 86400000) + getMs(23 - currentDate.getHours(), 59 - currentDate.getMinutes(), 59 - currentDate.getSeconds()))\n    return !(\n        dateOfEvent.valueOf() > endOfWeek.valueOf()\n          || dateOfEvent.valueOf() < startOfWeek.valueOf()\n    )\n  }\n\n  const handleClassSelected = (courseCode: string) => {\n    dispatch(classSelected(courseCode));\n    if (Platform.OS === 'web') {\n      navigation.navigate('SingleClassPage');\n    } else {\n      bottomSheetRef.current?.snapToIndex(0);\n    }\n  };\n\n  function renderDashes() {\n    let final = [];\n    for (let i = 0; i < 24; i++) {\n      final.push(\n        <View\n          style={{\n            width: (isThreeDay ? threeDayWidth : fiveDayWidth) * 0.73016,\n            marginLeft: (isThreeDay ? threeDayWidth : fiveDayWidth) * 0.14286,\n            top: universalHeight * i,\n            position: 'absolute',\n            height: universalHeight,\n            borderBottomWidth: Platform.OS === 'web' ? 1.2 : 0.7,\n            borderBottomColor: darkMode ? 'rgb(68,68,68)' : 'rgb(204,204,204)',\n          }}\n        />\n      );\n    }\n    return final;\n  }\n\n  const renderClasses = (elem) => {\n    let classes = [];\n    Object.keys(addedClasses).map((term) => {\n      if (term === currentSection) {\n        Object.keys(addedClasses[term]).map((masterCourseCode) => {\n          for (const courseCode of addedClasses[term][masterCourseCode]) {\n            try {\n              let data = calendarFun.getFullClassData(courseCode, allClassData);\n              let data2 = data.times.find(\n                (time) => time.courseCode === courseCode\n              );\n              for (const meetingTime of data2.courseSchedule) {\n                for (const day in meetingTime['daysOfTheWeek']) {\n                  if (meetingTime['daysOfTheWeek'][day] === elem.id) {\n                    classes.push(\n                        renderItem(data, meetingTime,courseCode, handleClassSelected)\n                    );\n                  }\n                }\n              }\n            } catch (e) {\n              console.log(e);\n            }\n          }\n        });\n      }\n    });\n    return classes;\n  };\n\n  const topBar = useRef(null);\n  const [startingOffset, setStartingOffset] = useState({ x: 0, y: 292 });\n\n  return (\n    <View style={{ flex: 1, backgroundColor: darkMode ? null : 'white' }}>\n      {/* Times */}\n      <CurrentTermLabel navigation={navigation} currentSection={currentSection} style={{margin: 10}}/>\n      <ScrollView\n        horizontal={true}\n        snapToInterval={isThreeDay ? threeDayWidth : fiveDayWidth}\n        showsHorizontalScrollIndicator={false}\n        style={{ marginLeft: 75, height: isWeb ? 50 : undefined }}\n        ref={topBar}>\n        <View style={{ flexDirection: 'row' }}>\n          {days.map((elem) => {\n            return (\n              <View>\n                <View\n                  style={{\n                    borderColor: darkMode ? '#7a7a7a' : '#525252',\n                    borderBottomWidth: 1,\n                    width: '100%',\n                  }}>\n                  <Text\n                    style={{\n                      textAlign: 'center',\n                      color: darkMode ? '#7a7a7a' : '#525252',\n                      width: isThreeDay ? threeDayWidth : fiveDayWidth,\n                    }}>\n                    {elem.day}\n                  </Text>\n                </View>\n              </View>\n            );\n          })}\n        </View>\n      </ScrollView>\n      <ScrollView\n        contentOffset={startingOffset}\n        showsVerticalScrollIndicator={false}\n        bounces={false}>\n        <View style={{ flexDirection: 'row' }}>\n          <View\n            style={{\n              justifyContent: 'space-around',\n              //height: 1000,\n            }}>\n            {times.map((time) => {\n              return (\n                <Text\n                  style={{\n                    height: universalHeight,\n                    width: 75,\n                    borderWidth: 1,\n                    borderColor: darkMode ? '#7a7a7a' : '#525252',\n                    textAlign: 'center',\n                    color: darkMode ? '#7a7a7a' : '#525252',\n                  }}>\n                  {time}\n                </Text>\n              );\n            })}\n          </View>\n          {/* Classes */}\n          <ScrollView\n            horizontal={true}\n            snapToInterval={isThreeDay ? threeDayWidth : fiveDayWidth}\n            decelerationRate={'normal'}\n            showsHorizontalScrollIndicator={false}\n            bounces={false}\n            scrollEventThrottle={1}\n            onScroll={(e) =>\n              topBar.current.scrollTo({\n                x: e.nativeEvent.contentOffset.x,\n                animated: false,\n                useNativeDriver: true,\n              })\n            }\n            onMomentumScrollBegin={(e) =>\n              topBar.current.scrollTo({\n                x: e.nativeEvent.contentOffset.x,\n                animated: false,\n                useNativeDriver: true,\n              })\n            }>\n            <View style={{ flexDirection: 'row' }}>\n              {days.map((elem) => {\n                return (\n                  <View>\n                    {renderDashes()}\n                    <View\n                      key={elem.day}\n                      style={{\n                        width: isThreeDay ? threeDayWidth : fiveDayWidth,\n                      }}>\n                      {userData?.addedClasses && renderClasses(elem)}\n                      {userData?.addedClasses && renderCustomEvents(elem)}\n                    </View>\n                    <View\n                      style={{\n                        height: '100%',\n                        width: 1,\n                        backgroundColor: darkMode ? '#7a7a7a' : '#525252',\n                      }}\n                    />\n                  </View>\n                );\n              })}\n            </View>\n          </ScrollView>\n        </View>\n      </ScrollView>\n\n      {Platform.OS !== 'web' && (\n        <SingleClassPage bottomSheetRef={bottomSheetRef} />\n      )}\n    </View>\n  );\n}\n\nconst myStyles = {\n  input: {\n    height: 50,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n  },\n  indentedInput: {\n    height: 50,\n    marginVertical: 12,\n    borderWidth: 1,\n    padding: 10,\n    marginRight: 12,\n    marginLeft: 30,\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white',\n  },\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 12,\n    paddingHorizontal: 32,\n    borderRadius: 4,\n    elevation: 3,\n    backgroundColor: 'black',\n  },\n  timeButton: {\n    width: 100,\n    height: 50,\n    marginHorizontal: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 4,\n    backgroundColor: '#c45269',\n  },\n  timeText: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white',\n  },\n  actualTimeText: {\n    fontSize: 13,\n    lineHeight: 18,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white',\n  },\n};\n\nconst sponsorPageStyles = {\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    // alignItems: 'center',\n  },\n  header: {\n    marginTop: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n  },\n  address: {\n    alignItems: 'center',\n    margin: 10,\n    borderColor: 'black',\n    borderWidth: 1,\n    padding: 10,\n  },\n  video: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-start',\n  },\n  title: {\n    fontSize: 26,\n    marginLeft: 10,\n  },\n  logo: {\n    width: '100%',\n    height: 100,\n  },\n  description: {\n    borderWidth: 1,\n    margin: 10,\n    borderColor: '#5d5c5c',\n    borderRadius: 5,\n    width: '95%',\n    padding: 10,\n    backgroundColor: 'rgba(178,166,166,0.22)',\n  },\n  couponContainer: {\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 20,\n    marginBottom: 20,\n  },\n  coupon: {\n    width: 400,\n    height: 267,\n  },\n  imageGallery: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    margin: 10,\n    marginBottom: 0,\n  },\n  imageStyle: {\n    width: 150,\n    height: 150,\n    paddingTop: 100,\n    margin: 5,\n  },\n  headerText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n};\n","import {JSXElementConstructor, ReactElement, useEffect, useState} from \"react\";\nimport {base_URL} from \"../notifications/constants\";\nimport {useAppSelector} from \"../../app/hooks\";\nimport {selectDarkMode, selectUserKey} from \"../../app/appDataSlice\";\nimport {Autocomplete, AutocompleteItem, Card, Modal} from \"@ui-kitten/components\";\nimport {Alert, Button, View, Text} from \"react-native\";\nimport {useGetUserInfoQuery} from \"../api/usersApi\";\nimport {useGetCurrentSectionQuery} from \"../api/classPagesApi\";\nimport renderItem from \"./ScheduledItem\";\nimport UserNameSelectionDropDown from \"../../components/UserNameSelectionDropDown\";\n\nexport default function renderModal(setShowModal, showModal) {\n    const {data: userData} = useGetUserInfoQuery(useAppSelector(selectUserKey));\n    const {data: currentSection} = useGetCurrentSectionQuery();\n    const darkMode = useAppSelector(selectDarkMode)\n    const userKey = useAppSelector(selectUserKey)\n    const [ names, setNames ] = useState([])\n    const [ users, setUsers ] = useState([])\n    const [ value, setValue ] = useState('')\n    const [ hasChosen, setHasChosen ] = useState(false)\n    const [ recipient, setRecipient ] = useState(null)\n\n    const myStyles = {\n        modal: {\n            fontSize: 18, paddingBottom: 20, fontWeight: 'bold',\n            textAlign: 'center', width: '100%', color: darkMode ? 'rgb(255,255,255)' : 'rgb(0,0,0)'\n        },\n        backdrop: {\n            backgroundColor: darkMode ? 'rgba(141,141,141,0.5)' : 'rgba(0, 0, 0, 0.5)',\n        },\n        containerDrop: {\n            minWidth: 200,\n            paddingBottom: 15\n        },\n    }\n\n    useEffect(() => {\n        fetch(base_URL + '/users/userNamesAndNames', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'userKey': userKey\n            }\n        }).then(async (data) => {\n            if (data.ok) {\n                const userList = await data.json();\n                setNames(userList.map(user => {\n                    if (user) {\n                        return user.realName + ' (' + user.userName + ')'\n                    }\n                }))\n                setUsers(userList)\n            }\n        })\n    }, [])\n\n    const exportSchedule = async (recipient) => {\n        function convert(addedClasses) {\n            let final = []\n            Object.keys(addedClasses).map((term) => {\n                if (term === currentSection) {\n                    Object.keys(addedClasses[term]).map((masterCourseCode) => {\n                        for (const courseCode of addedClasses[term][masterCourseCode]) {\n                            final.push({\n                                courseCode,\n                                courseTerm: currentSection\n                            })\n                        }\n                    });\n                }\n            });\n            return final\n        }\n        let status = await fetch(base_URL + '/users/sendNotification', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'userKey': userKey\n            },\n            body: JSON.stringify({\n                recipients: [recipient],\n                text: JSON.stringify(convert(userData.addedClasses?.classes)),\n                title: userData.realFirstName + \"'s Schedule\",\n                isSchedule: true\n            })\n        })\n        return status.ok\n    }\n    return (\n        <Modal\n            visible={showModal}\n            backdropStyle={myStyles.backdrop}\n            style={{ width: '80%', height: '70%' }}\n            onBackdropPress={() => setShowModal(false)}>\n            <Card disabled={true}>\n                <Text style={myStyles.modal}>\n                    Share Your Schedule\n                </Text>\n                {UserNameSelectionDropDown({setHasChosen, setRecipient, placeholder: false})}\n                <View>\n                    <Button disabled={recipient === null} title={'Send'} onPress={() => {\n                        exportSchedule(recipient).then((returnValue) => {\n                            setShowModal(false)\n                            returnValue ? Alert.alert('Message Sent') :\n                                Alert.alert('Error Sending Message', 'Please Try Again Later')\n                        })\n                    }} />\n                    <Button title={'Dismiss'} onPress={() => {\n                        setShowModal(false)\n                    }} />\n                </View>\n            </Card>\n        </Modal>\n    );\n}","import { View } from 'react-native';\nimport React, { useState } from 'react';\nimport {\n  Button,\n  IndexPath,\n  Layout,\n  Select,\n  SelectItem,\n  Text,\n} from '@ui-kitten/components';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { TouchableOpacity } from 'react-native';\nimport { useLazyGetAllClassesQuery } from '../api/classPagesApi';\nimport { usersApiSlice } from '../api/usersApi';\nimport { currentSectionUpdated } from './classPagesSlice';\n\nexport default function SelectTerm({ navigation }) {\n  const dispatch = useAppDispatch();\n\n  const availableSections = useAppSelector(\n    (state) => state.appData.classPages.availableSections\n  );\n  const userKey = useAppSelector((state) => state.appData.secure.userKey);\n  const currentSection = useAppSelector(\n    (state) => state.appData.classPages.currentSection\n  );\n\n  const { data: userDataCache } =\n    usersApiSlice.endpoints.getUserInfo.useQueryState(userKey, {\n      skip: !userKey,\n    });\n  const [getAllClasses] = useLazyGetAllClassesQuery();\n\n  let startIndexValue =\n    availableSections.findIndex((term) => term == currentSection) || 0;\n\n  const [selectedSectionIndex, setSelectedSectionIndex] = useState<IndexPath>(\n    new IndexPath(startIndexValue)\n  );\n\n  const saveChanges = () => {\n    if (availableSections[selectedSectionIndex.row] !== currentSection) {\n      try {\n        getAllClasses({\n          userKey,\n          collegeName: userDataCache.collegeName,\n          courseTerm: availableSections[selectedSectionIndex.row],\n        }).unwrap();\n\n        dispatch(\n          currentSectionUpdated(availableSections[selectedSectionIndex.row])\n        );\n      } catch (e) {\n        console.log('Changing section: could not fetch classes', e);\n      }\n    }\n\n    navigation.goBack();\n  };\n\n  return (\n    <Layout style={{ flex: 1 }}>\n      <Layout\n        style={{\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          margin: 20,\n          marginTop: 60,\n        }}>\n        <TouchableOpacity\n          onPress={() => {\n            navigation.goBack();\n          }}>\n          <Text>Cancel</Text>\n        </TouchableOpacity>\n\n        <Text category=\"s1\">Select Term</Text>\n\n        <TouchableOpacity onPress={saveChanges}>\n          <Text>Save</Text>\n        </TouchableOpacity>\n      </Layout>\n\n      <Select\n        style={{ margin: 20 }}\n        label=\"Term\"\n        value={availableSections[selectedSectionIndex.row]}\n        selectedIndex={selectedSectionIndex}\n        onSelect={(index: IndexPath) => {\n          setSelectedSectionIndex(index);\n        }}>\n        {availableSections.map((term, index) => (\n          <SelectItem key={index} title={term} />\n        ))}\n      </Select>\n    </Layout>\n  );\n}\n","import React, { useState } from 'react';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Button, Layout, Text, useTheme } from '@ui-kitten/components';\nimport Toggle from 'react-native-toggle-element';\nimport CreateCustomEvent from './CreateCustomEvent';\nimport CalendarPage from './CalendarPage';\nimport Header from '../../components/Header';\nimport {\n  Dimensions,\n  Image,\n  Platform,\n  TouchableOpacity,\n  View,\n} from 'react-native';\nimport { FontAwesome5, MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport {\n  selectDarkMode,\n  selectIsGuest,\n  selectUserKey,\n} from '../../app/appDataSlice';\nimport { base_URL } from '../notifications/constants';\nimport renderModal from './exportModal';\nimport { isThreeDaySet } from './calendarSlice';\nimport ModalContainer from '../../components/ModalContainer';\nimport SingleClassPage from '../classPages/SingleClassPage';\nimport SelectTerm from '../classPages/SelectTerm';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function Calendar() {\n    const navigation = useNavigation()\n  const isThreeDay = useAppSelector(\n    (state) => state.appData.calendar.isThreeDay\n  );\n  const theme = useTheme();\n  const dispatch = useAppDispatch();\n  const isGuest = useAppSelector(selectIsGuest);\n  const darkMode = useAppSelector(selectDarkMode);\n  const userKey = useAppSelector(selectUserKey);\n  const [showModal, setShowModal] = useState(false);\n  const [showGuestModal, setShowGuestModal] = useState(false);\n  async function sendNotification(bodyTosend) {\n    await fetch(base_URL + '/users/sendNotification', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        userKey: userKey,\n      },\n      body: JSON.stringify(bodyTosend),\n    });\n  }\n  const accessoryLeft = (\n    <Image\n      style={{\n        height: 28,\n        width: 28,\n        alignItems: 'center',\n      }}\n      source={require('../../../assets/logos/app-logo-transparent.png')}\n    />\n  );\n\n  const title = (\n      <View\n          style={{\n              alignItems: 'center',\n              paddingRight: 20,\n          }}>\n          {Dimensions.get('window').width < 525 && (\n              <Toggle\n                  leftComponent={\n                      <MaterialCommunityIcons name=\"numeric-5\" size={25} color=\"#fff\" />\n                  }\n                  rightComponent={\n                      <MaterialCommunityIcons name=\"numeric-3\" size={25} color=\"#fff\" />\n                  }\n                  trackBar={{\n                      activeBackgroundColor: theme['color-primary-500'],\n                      inActiveBackgroundColor: theme['color-primary-500'],\n                      width: 60,\n                      height: 23,\n                  }}\n                  thumbButton={{\n                      width: 30,\n                      height: 30,\n                      activeBackgroundColor: theme['color-primary-800'],\n                      inActiveBackgroundColor: theme['color-primary-300'],\n                      activeColor: theme['color-primary-100'],\n                      inActiveColor: '#fff',\n                      borderWidth: 5,\n                  }}\n                  value={isThreeDay}\n                  onPress={(bool) => dispatch(isThreeDaySet(!bool))}\n              />\n          )}\n      </View>\n  )\n  const accessoryRight = (\n    <View\n      style={{\n        paddingHorizontal: 0,\n        alignItems: 'center',\n        flexDirection: 'row',\n      }}>\n        <TouchableOpacity\n            onPress={() => {\n                if (isGuest) {\n                    setShowGuestModal(true);\n                } else {\n                    // @ts-ignore\n                    navigation.navigate('CreateCustomEvent');\n                }\n            }}\n            style={{\n                marginRight: 10,\n                alignItems: 'center',\n            }}>\n            <View\n                style={{\n                    height: 45,\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    justifyContent: 'flex-end',\n                }}>\n                <FontAwesome5\n                    name={'plus'}\n                    size={20}\n                    color={darkMode ? 'white' : 'black'}\n                />\n                <Text style={{ paddingTop: 5, fontSize: 10 }}>Add Event</Text>\n            </View>\n        </TouchableOpacity>\n        { Platform.OS !== 'web' && <TouchableOpacity\n            onPress={() => {\n                if (isGuest) {\n                    setShowGuestModal(true);\n                } else {\n                    setShowModal(true);\n                }\n            }}\n            style={{\n                alignItems: 'center',\n            }}>\n            <View\n                style={{\n                    height: 45,\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    justifyContent: 'flex-end',\n                }}>\n                <FontAwesome5\n                    name={'file-export'}\n                    size={20}\n                    color={darkMode ? 'white' : 'black'}\n                />\n                <Text style={{paddingTop: 5, fontSize: 10}}>Share Schedule</Text>\n            </View>\n        </TouchableOpacity>}\n      {showGuestModal && (\n        <ModalContainer\n          title=\"Wait!\"\n          children={\n            <Text style={{ paddingHorizontal: 30 }}>\n              This feature is locked to our Guest Users. Please create a free\n              account with us to take advantage this feature.\n            </Text>\n          }\n          backDropVisible={showGuestModal}\n          setBackDropVisible={setShowGuestModal}\n        />\n      )}\n      {renderModal(setShowModal, showModal)}\n    </View>\n  );\n  return (\n    <Stack.Navigator>\n      <Stack.Screen\n        name=\"CalendarPage\"\n        component={CalendarPage}\n        options={{\n          header: () => {\n            return (\n              <Layout style={{ paddingBottom: 10 }}>\n                <Header center={title} accessoryRight={accessoryRight} accessoryLeft={accessoryLeft} title=\"Calendar\" />\n              </Layout>\n            );\n          },\n        }}\n      />\n      <Stack.Screen\n        name=\"CreateCustomEvent\"\n        component={CreateCustomEvent}\n        options={{ headerTitle: 'Add Event' }}\n      />\n      {Platform.OS === 'web' && (\n        <Stack.Screen\n          name=\"SingleClassPage\"\n          component={SingleClassPage}\n          options={{ headerShown: false, headerTitle: 'Class Pages' }}\n        />\n      )}\n       <Stack.Screen\n          name=\"SelectTerm\"\n          component={SelectTerm}\n          options={{\n            title: 'Select Term',\n            headerShown: false,\n            animation: 'slide_from_bottom',\n            gestureDirection: 'vertical',\n          }}\n        />\n    </Stack.Navigator>\n  );\n}\n","import { Input, Layout, Spinner, Text } from '@ui-kitten/components';\nimport { TouchableWithoutFeedback } from '@ui-kitten/components/devsupport';\nimport { useState } from 'react';\nimport {\n  Keyboard,\n  KeyboardAvoidingView,\n  Platform,\n  TouchableOpacity,\n} from 'react-native';\nimport { selectUserKey } from '../../app/appDataSlice';\nimport { useAppSelector } from '../../app/hooks';\nimport WrapItems from '../../components/WrapItems';\nimport { useEditUserMutation, useGetUserInfoQuery } from '../api/usersApi';\n\nconst EditProfileHeader = ({ navigation, saveChanges }) => {\n  return (\n    <Layout\n      style={{\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        margin: 20,\n        marginTop: Platform.OS !== 'ios' ? 40 : 20,\n      }}>\n      <TouchableOpacity\n        onPress={() => {\n          navigation.goBack();\n        }}>\n        <Text>Cancel</Text>\n      </TouchableOpacity>\n      <Text category=\"s1\">Edit Profile</Text>\n      <TouchableOpacity onPress={saveChanges}>\n        <Text>Save</Text>\n      </TouchableOpacity>\n    </Layout>\n  );\n};\n\nexport default function EditUser({ navigation }) {\n  const userKey = useAppSelector(selectUserKey);\n  const { data: userData } = useGetUserInfoQuery(userKey, {\n    skip: !userKey,\n  });\n\n  const inputs = [\n    {\n      placeholder: '*******',\n      label: 'password',\n      name: 'password',\n    },\n    {\n      placeholder: userData.realFirstName,\n      label: 'First Name',\n      name: 'realFirstName',\n    },\n    {\n      placeholder: userData.realLastName,\n      label: 'Last Name',\n      name: 'realLastName',\n    },\n    {\n      placeholder: userData.profileDescription,\n      label: 'Profile Description',\n      name: 'profileDescription',\n      propOptions: { multiline: true, textStyle: { minHeight: 64 } },\n    },\n    {\n      placeholder: userData.linkedin,\n      label: 'LinkedIn',\n      name: 'linkedin',\n    },\n    {\n      placeholder: userData.major,\n      label: 'Major',\n      name: 'major',\n    },\n  ];\n\n  const [fields, setFields] = useState(\n    Object.fromEntries(inputs.map((input) => [input.name, '']))\n  );\n  const [editUser, { isLoading }] = useEditUserMutation();\n\n  const saveChanges = async () => {\n    const changedFields = Object.entries(fields).filter(\n      ([_, value]) => value !== ''\n    );\n\n    try {\n      if (changedFields.length > 0) {\n        await editUser({\n          userKey,\n          userName: userData.userName,\n          fields: Object.fromEntries(changedFields),\n        }).unwrap();\n      }\n\n      navigation.goBack();\n    } catch (err) {\n      console.log('Error editing user', err);\n    }\n  };\n\n  return (\n    <Layout style={{ flex: 1 }}>\n      {isLoading ? (\n        <Layout\n          style={{\n            flex: 1,\n            backgroundColor: 'transparent',\n            position: 'absolute',\n            top: '30%',\n            right: '50%',\n            zIndex: 1,\n          }}>\n          <Spinner size=\"medium\" />\n        </Layout>\n      ) : null}\n\n      <EditProfileHeader navigation={navigation} saveChanges={saveChanges} />\n      <KeyboardAvoidingView\n        style={{ flex: 1 }}\n        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}>\n        <TouchableWithoutFeedback\n          style={{ flex: 1 }}\n          onPress={Keyboard.dismiss}>\n          <WrapItems\n            style={{ marginVertical: 20 }}\n            childStyle={{ marginHorizontal: 40, marginVertical: 10 }}>\n            {inputs.map(({ placeholder, label, name, propOptions }) => (\n              <Input\n                key={name}\n                placeholder={placeholder}\n                label={label}\n                onChangeText={(text) => setFields({ ...fields, [name]: text })}\n                {...propOptions}\n              />\n            ))}\n          </WrapItems>\n        </TouchableWithoutFeedback>\n      </KeyboardAvoidingView>\n    </Layout>\n  );\n}\n","import { Button, Divider, Layout, Text, Toggle } from '@ui-kitten/components';\nimport React, { useState } from 'react';\nimport Constants from 'expo-constants';\n\nimport {\n  deviceDarkModeSet,\n  selectDarkMode,\n  selectIsGuest,\n  selectUserKey,\n} from '../../app/appDataSlice';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { reset as resetClassPages } from '../classPages/classPagesSlice';\nimport { reset as resetDiscover } from '../discover/discoverSlice';\nimport {\n  reset as resetAppData,\n  useDeviceColorSchemeSet,\n} from '../../app/appDataSlice';\nimport { apiSlice } from '../api/apiSlice';\nimport { useDeleteAccountMutation, useGetUserInfoQuery } from '../api/usersApi';\nimport WrapItems from '../../components/WrapItems';\nimport { useColorScheme } from 'react-native';\nimport ModalContainer from '../../components/ModalContainer';\n\nexport default function SettingsPage({ navigation }) {\n  const darkMode = useAppSelector(selectDarkMode);\n  const useDeviceColorScheme = useAppSelector(\n    (state) => state.appData.secure.useDeviceColorScheme\n  );\n  const userKey = useAppSelector(selectUserKey);\n  const isGuest = useAppSelector(selectIsGuest);\n  const colorScheme = useColorScheme();\n  const { data: userData } = useGetUserInfoQuery(userKey, {\n    skip: !userKey,\n  });\n  const dispatch = useAppDispatch();\n  const [showGuestModal, setShowGuestModal] = useState(false);\n  const [deleteAccount, { isLoading }] = useDeleteAccountMutation();\n\n  const logOut = () => {\n    dispatch(resetClassPages());\n    dispatch(resetDiscover());\n    dispatch(resetAppData());\n    dispatch(apiSlice.util.resetApiState());\n  };\n\n  const handleDeleteAccount = async () => {\n    try {\n      await deleteAccount({ userKey, userName: userData.userName }).unwrap();\n      logOut();\n    } catch (e) {\n      console.warn('Error deleting account: ', e);\n    }\n  };\n\n  const handleUseDeviceSettingToggled = (checked: boolean) => {\n    dispatch(useDeviceColorSchemeSet(checked));\n    if (checked) {\n      dispatch(deviceDarkModeSet(colorScheme === 'dark'));\n    }\n  };\n\n  const handleDarkModeToggled = (checked: boolean) => {\n    dispatch(useDeviceColorSchemeSet(false));\n    dispatch(deviceDarkModeSet(checked));\n  };\n\n  return (\n    <Layout style={{ flex: 1 }}>\n      <Layout\n        style={{\n          flexDirection: 'row',\n          marginHorizontal: 20,\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          flex: 1,\n        }}>\n        <Layout>\n          <Text category=\"h2\">\n            {userData?.realFirstName} {userData?.realLastName}\n          </Text>\n          <Text category=\"h6\" status=\"success\">\n            @{userData?.userName}\n          </Text>\n        </Layout>\n        <Layout>\n          <Button\n            onPress={() => {\n              if (isGuest) {\n                setShowGuestModal(true);\n              } else {\n                navigation.navigate('EditUser');\n              }\n            }}>\n            Edit\n          </Button>\n        </Layout>\n      </Layout>\n      {showGuestModal && (\n        <ModalContainer\n          title=\"Wait!\"\n          children={\n            <Text style={{ paddingHorizontal: 30 }}>\n              This feature is locked to our Guest Users. Please create a free\n              account with us to take advantage this feature.\n            </Text>\n          }\n          backDropVisible={showGuestModal}\n          setBackDropVisible={setShowGuestModal}\n        />\n      )}\n\n      <Divider />\n\n      <Layout\n        style={{\n          flex: 5,\n          justifyContent: 'space-between',\n          marginHorizontal: 20,\n        }}>\n        <Layout>\n          <Text category=\"h6\" style={{ textAlign: 'center', marginTop: 20 }}>\n            Dark Mode\n          </Text>\n          <Layout\n            style={{\n              marginTop: 20,\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n            }}>\n            <Text>Use Device Setting</Text>\n            <Toggle\n              onChange={(checked) => handleUseDeviceSettingToggled(checked)}\n              checked={useDeviceColorScheme}\n            />\n          </Layout>\n          <Layout\n            style={{\n              marginTop: 20,\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              opacity: useDeviceColorScheme ? 0.4 : 1,\n            }}>\n            <Text>Dark Mode</Text>\n            <Toggle\n              onChange={(checked) => handleDarkModeToggled(checked)}\n              checked={darkMode}\n            />\n          </Layout>\n        </Layout>\n\n        <WrapItems\n          childStyle={{ marginVertical: 3 }}\n          style={{ alignItems: 'center', marginBottom: 10 }}>\n          <Button onPress={logOut} status=\"warning\" appearance=\"outline\">\n            Log Out\n          </Button>\n          <Button\n            onPress={handleDeleteAccount}\n            status=\"danger\"\n            appearance=\"ghost\">\n            Delete Account\n          </Button>\n          <Text>\n            {Constants?.manifest2?.extra?.expoClient?.version\n              ? `Version ${Constants.manifest2.extra.expoClient.version}`\n              : ''}\n          </Text>\n        </WrapItems>\n      </Layout>\n    </Layout>\n  );\n}\n","import { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { HeaderBackButton } from '@react-navigation/elements';\n\nimport { Platform, TouchableOpacity } from 'react-native';\nimport { Text, useTheme } from '@ui-kitten/components';\nimport { selectDarkMode } from '../../app/appDataSlice';\nimport { useAppSelector } from '../../app/hooks';\nimport EditUser from './EditUser';\nimport SettingsPage from './SettingsPage';\nimport BackButton from '../../components/BackButton';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function Settings() {\n  const theme = useTheme();\n  const darkMode = useAppSelector(selectDarkMode);\n\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerStyle: {\n          backgroundColor: darkMode ? theme['color-basic-800'] : '#fff',\n        },\n      }}>\n      <Stack.Screen\n        name=\"SettingsPage\"\n        component={SettingsPage}\n        options={({ navigation }) => ({\n          title: 'Settings',\n          headerLeft: (props) => (\n            <BackButton navigation={navigation} {...props} />\n          ),\n        })}\n      />\n      <Stack.Group screenOptions={{ presentation: 'modal' }}>\n        <Stack.Screen\n          name=\"EditUser\"\n          component={EditUser}\n          options={{ headerShown: false }}\n        />\n      </Stack.Group>\n    </Stack.Navigator>\n  );\n}\n","import {useEffect, useRef, useState} from \"react\";\nimport {useAppSelector} from \"../../app/hooks\";\nimport {selectDarkMode, selectUserKey} from \"../../app/appDataSlice\";\nimport {useIsAllowedToReviewQuery} from \"../api/classPagesApi\";\nimport {Button, Card, Layout, Modal, Text} from \"@ui-kitten/components\";\nimport {BottomSheetScrollView, TouchableOpacity} from \"@gorhom/bottom-sheet\";\nimport ExportModalClass from \"../classPages/SingleClassPage/exportModalClass\";\nimport {ScrollView, StyleSheet, View} from \"react-native\";\nimport {useNavigation} from \"@react-navigation/native\";\n\n\nexport default function SingleClassPage({ selectedClass }) {\n    const [showModal, setShowModal] = useState(false);\n    const darkMode = useAppSelector(selectDarkMode);\n    const filters = useAppSelector((state) => state.appData.classPages.filters);\n    const backgroundColor = darkMode ? {backgroundColor: '#1F1F1F'} : {backgroundColor: '#F5F5F5'};\n\n    useEffect(() => {\n        console.log('THE CLASS IS HERE: ' + selectedClass)\n    }, [])\n\n\n    function buildTimeString(time) {\n        if (!time.startTime || time.startTime === '' || time.startTime === null) {\n            return 'closed';\n        }\n        return (\n            convertTo12HourTime(time.startTime) +\n            ' - ' +\n            convertTo12HourTime(time.endTime) +\n            '\\n'\n        );\n    }\n\n    function convertTo12HourTime(time) {\n        if (time.length !== 5) {\n            time = '0' + time;\n        }\n        let hours = time.slice(0, 2);\n        let minutes = time.slice(3, 5);\n        let ampm = Number.parseInt(hours) > 12 ? 'pm' : 'am';\n        hours = hours % 12;\n        if (hours === 0) {\n            hours = 12;\n            ampm = 'pm';\n        }\n        return hours + ':' + minutes + ampm;\n    }\n\n    const averageGradeMSGModal = (\n        <Modal\n            visible={showModal}\n            backdropStyle={styles.backdrop}\n            style={{ width: '75%' }}\n            onBackdropPress={() => setShowModal(false)}>\n            <Card disabled={true}>\n                <Text style={{ fontSize: 15, paddingTop: 5, paddingBottom: 10 }}>\n                    The Athena Network collects and aggregates the data anonymously\n                    submitted by the Course Review process and calculates what the average\n                    student's experience in this course will look like. Given that it is\n                    based on voluntarily submitted data, this information is to be used as\n                    a reference only. Please consult your advisor before making any\n                    impactful decisions.\n                </Text>\n                <Button onPress={() => setShowModal(false)}>Dismiss</Button>\n            </Card>\n        </Modal>\n    );\n\n    if (!selectedClass?.times) {\n        return null;\n    }\n\n    return (\n        <ScrollView style={backgroundColor}>\n            <Layout style={[{ alignItems: 'center' }, backgroundColor]}>\n                <ExportModalClass classData={selectedClass}/>\n                <Text style={styles.title}>{selectedClass.courseName}</Text>\n                <Text style={{ paddingTop: 30 }}>{selectedClass.masterCourseCode}</Text>\n\n                <Text style={styles.subtitle}>\n                    {`${selectedClass.courseTerm} \\u2022 credits: ${\n                        filters.isHMC\n                            ? selectedClass.creditWeightHM\n                            : selectedClass.creditWeight\n                    }`}\n                </Text>\n                {selectedClass.timeSpentOutOfClass && (\n                    <Layout\n                        style={[\n                            {\n                                flexDirection: 'row',\n                                alignItems: 'flex-start',\n                                paddingRight: 5,\n                            },\n                            backgroundColor,\n                        ]}>\n                        <Text style={styles.subtitle}>Time Spent Per Week</Text>\n                        <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\n                        <Text style={styles.subtitle}>\n                            : {selectedClass.timeSpentOutOfClass} hours\n                        </Text>\n                    </Layout>\n                )}\n                {selectedClass.averageGrade && (\n                    <Layout\n                        style={[\n                            {\n                                flexDirection: 'row',\n                                alignItems: 'flex-start',\n                                paddingRight: 5,\n                            },\n                            backgroundColor,\n                        ]}>\n                        <Text style={styles.subtitle}>Average Grade</Text>\n                        <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\n                        <Text style={styles.subtitle}>: {selectedClass.averageGrade}</Text>\n                    </Layout>\n                )}\n                {selectedClass.difficulty && (\n                    <Layout\n                        style={[\n                            {\n                                flexDirection: 'row',\n                                alignItems: 'flex-start',\n                                paddingRight: 5,\n                            },\n                            backgroundColor,\n                        ]}>\n                        <Text style={styles.subtitle}>Estimated Difficulty</Text>\n                        <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\n                        <Text style={styles.subtitle}>\n                            : {selectedClass.difficulty} / 5\n                        </Text>\n                    </Layout>\n                )}\n                {selectedClass.rating && (\n                    <Layout\n                        style={[\n                            {\n                                flexDirection: 'row',\n                                alignItems: 'flex-start',\n                                paddingRight: 5,\n                            },\n                            backgroundColor,\n                        ]}>\n                        <Text style={styles.subtitle}>Average Rating</Text>\n                        <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\n                        <Text style={styles.subtitle}>: {selectedClass.rating} / 5</Text>\n                    </Layout>\n                )}\n            </Layout>\n            <Layout style={backgroundColor}>\n                <Text style={styles.courseDescription}>{selectedClass.summary}</Text>\n            </Layout>\n            <Layout style={{ ...backgroundColor, ...styles.boxed }}>\n                <Text style={{ fontSize: 15, fontWeight: 'bold' }}>\n                    Stated Prerequisites:\n                </Text>\n                <Text style={{ fontSize: 15 }}>\n                    {selectedClass.prerequisites !== ''\n                        ? selectedClass.prerequisites\n                        : 'none'}\n                </Text>\n\n                <Text style={{ fontSize: 15, fontWeight: 'bold' }}>\n                    Stated Corequisites:\n                </Text>\n                <Text style={{ fontSize: 15 }}>\n                    {selectedClass.corequisites !== ''\n                        ? selectedClass.corequisites\n                        : 'none'}\n                </Text>\n\n                <Text style={{ fontSize: 15, fontWeight: 'bold' }}>\n                    Number of PERMs:\n                </Text>\n                <Text style={{ fontSize: 15 }}>\n                    {selectedClass.permCount\n                        ? selectedClass.permCount.toString()\n                        : '0'}\n                </Text>\n            </Layout>\n            <Layout\n                style={[\n                    { alignItems: 'flex-end' },\n                    backgroundColor,\n                ]}>\n                {(selectedClass.timeSpentOutOfClass ||\n                    selectedClass.averageGrade ||\n                    selectedClass.difficulty ||\n                    selectedClass.rating) && (\n                    <TouchableOpacity onPress={() => setShowModal(!showModal)}>\n                        <Layout\n                            style={[\n                                {\n                                    flexDirection: 'row',\n                                    alignItems: 'flex-start',\n                                    paddingRight: 5,\n                                },\n                                backgroundColor,\n                            ]}>\n                            <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\n                            <Text style={styles.disclaimer}>How Do We Estimate This?</Text>\n                        </Layout>\n                    </TouchableOpacity>\n                )}\n            </Layout>\n            <Layout style={backgroundColor}>\n                {selectedClass.times.length > 0 && (\n                    <Layout style={backgroundColor}>\n                        <Text style={styles.subHeader}>Sections</Text>\n                        <Layout style={[styles.section, backgroundColor]}>\n                            <Text style={styles.headerText}>Course Code</Text>\n                            <Text style={styles.headerText}>Seats</Text>\n                            <Text style={styles.headerText}>Professor</Text>\n                            <Text style={styles.headerText}>Time</Text>\n                            <Text style={styles.headerText}>Location</Text>\n                        </Layout>\n                    </Layout>\n                )}\n                {selectedClass.times.map((time) => {\n                    return (\n                        <Layout\n                            key={time.courseCode}\n                            style={{ backgroundColor, ...styles.section }}>\n                            <Text style={styles.sectionText}>{time.courseCode}</Text>\n                            <Text style={styles.sectionText}>\n                                {time.seatsFilled} / {time.seatsFilled + time.seatsAvailable}\n                            </Text>\n                            <Text style={styles.sectionText}>{time.professorName}</Text>\n                            <Text style={styles.sectionText}>\n                                {buildTimeString(time)}\n                                {time.daysOfTheWeek.join(', ')}\n                            </Text>\n                            <Text style={styles.sectionText}>\n                                {time.classLocation ? time.classLocation : 'TBD'}\n                            </Text>\n                        </Layout>\n                    );\n                })}\n                {averageGradeMSGModal}\n            </Layout>\n            <Text style={styles.subHeader}>Reviews</Text>\n            {selectedClass.reviews.length === 0 ? (\n                <Text style={{ alignSelf: 'center', marginBottom: 10 }}>\n                    No Reviews yet\n                </Text>\n            ) : (\n                selectedClass.reviews.map((review, index) => (\n                    <Card key={index} disabled={true}>\n                        <Text>{review.text + '\\n\\nPosted: ' + review.date}</Text>\n                        {review.professor && (\n                            <Text>{'Taught By: ' + review.professor}</Text>\n                        )}\n                    </Card>\n                ))\n            )}\n        </ScrollView>\n    );\n}\n\nconst styles = StyleSheet.create({\n    title: {\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    subtitle: {\n        fontSize: 16,\n    },\n    courseOpen: {\n        backgroundColor: 'green',\n        color: '#fff',\n        padding: 5,\n        marginRight: 10,\n    },\n    courseClosed: {\n        backgroundColor: 'red',\n        color: '#fff',\n        padding: 5,\n        borderRadius: 5,\n    },\n    header: {\n        alignItems: 'center',\n    },\n    details: {\n        flexDirection: 'row',\n        padding: 10,\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n    },\n    courseDescription: {\n        paddingRight: 20,\n        paddingLeft: 20,\n        paddingTop: 10,\n        paddingBottom: 5,\n        fontSize: 17,\n    },\n    BodyContainer: {\n        borderTopWidth: 1,\n        borderTopColor: 'black',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'space-evenly',\n        padding: 10,\n        paddingTop: 20,\n        paddingBottom: 20,\n    },\n    boxed: {\n        alignItems: 'center',\n        margin: 8,\n        borderColor: 'black',\n        borderWidth: 1,\n        padding: 7,\n    },\n    documentStyle: {\n        width: 150,\n        height: 190,\n        paddingTop: 100,\n    },\n    imageLabel: {\n        fontSize: 12,\n        color: 'black',\n        padding: 10,\n        textAlign: 'center',\n    },\n    schedule: {\n        paddingLeft: 20,\n        paddingTop: 10,\n    },\n    graphImage: {\n        width: '100%',\n        aspectRatio: 1,\n        resizeMode: 'contain',\n    },\n    grade: {\n        fontSize: 50,\n        fontWeight: 'bold',\n        color: 'green',\n    },\n    reviewText: {\n        fontSize: 16,\n        fontStyle: 'italic',\n    },\n    reviewBox: {\n        width: '95%',\n        padding: 10,\n        borderWidth: 1,\n        borderColor: 'black',\n        borderRadius: 5,\n        marginBottom: 10,\n    },\n    section: {\n        flexDirection: 'row',\n        paddingLeft: 5,\n        borderBottomWidth: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    headerText: {\n        fontWeight: 'bold',\n        fontSize: 13,\n        flex: 1,\n    },\n    sectionText: {\n        flex: 1,\n    },\n    disclaimer: {\n        fontSize: 14,\n        fontStyle: 'italic',\n    },\n    backdrop: {\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    },\n    input: {\n        height: 50,\n        margin: 12,\n        borderWidth: 1,\n        padding: 10,\n    },\n    containerDrop: {\n        height: 42,\n        margin: 12,\n        borderWidth: 1,\n    },\n    indentedInput: {\n        height: 50,\n        marginVertical: 12,\n        borderWidth: 1,\n        padding: 10,\n        marginRight: 12,\n        marginLeft: 30,\n    },\n    text: {\n        fontSize: 16,\n        lineHeight: 21,\n        fontWeight: 'bold',\n        letterSpacing: 0.25,\n        color: 'white',\n    },\n    subHeader: {\n        fontSize: 20,\n        paddingLeft: 20,\n        paddingBottom: 20,\n        paddingTop: 20,\n        fontWeight: 'bold',\n    },\n});","import React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  Alert,\n  Animated,\n  Dimensions,\n  Image,\n  KeyboardAvoidingView,\n  Platform,\n  RefreshControl,\n  SafeAreaView,\n  ScrollView,\n  StyleSheet,\n  TextInput,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  View,\n} from 'react-native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport BackButton from '../../components/BackButton';\nimport {\n  IndexPath,\n  Select,\n  SelectItem,\n  Layout,\n  Text,\n  Button,\n  Input,\n  List,\n} from '@ui-kitten/components';\nimport { base_URL } from './constants';\nimport { useNavigation } from '@react-navigation/native';\nimport { FontAwesome5, FontAwesome } from '@expo/vector-icons';\nimport {useAppDispatch, useAppSelector} from '../../app/hooks';\nimport {selectDarkMode, selectIsGuest, selectUserKey} from '../../app/appDataSlice';\nimport { useGetCurrentSectionQuery } from '../api/classPagesApi';\nimport CalendarFunctions from '../calendar/CalendarFunctions';\nimport { useGetUserInfoQuery } from '../api/usersApi';\nimport {classSelected, selectClassesList} from '../classPages/classPagesSlice';\nimport renderCustomEvent from '../calendar/customEvent';\nimport renderItem from '../calendar/ScheduledItem';\nimport GestureRecognizer from 'react-native-swipe-gestures';\nimport { SwipeRow } from 'react-native-swipe-list-view';\nimport BottomSheet from \"@gorhom/bottom-sheet/lib/typescript/components/bottomSheet/BottomSheet\";\nimport ModalContainer from \"../../components/ModalContainer\";\nimport UserNameSelectionDropDown from \"../../components/UserNameSelectionDropDown\";\nimport {Class} from \"../../app/types\";\nimport SingleClassPage from \"./notificationSinglePage\";\n\nconst NotificationHomePage = createNativeStackNavigator();\n\nexport default function NotificationsNavigation({ navigation }) {\n  const [notifications, setNotifications] = useState([]);\n  const [selectedIndex, setSelectedIndex] = React.useState([]);\n  const [hasChosen, setHasChosen] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [showGuestModal, setShowGuestModal] = useState(false)\n  const [isOpen, setIsOpen] = useState(false);\n  const userKey = useAppSelector(selectUserKey);\n  const darkMode = useAppSelector(selectDarkMode);\n  const isGuest = useAppSelector(selectIsGuest)\n\n  useEffect(() => {\n    refreshNotifications();\n    fetch(base_URL + '/users/getUserNameList', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        userKey: userKey,\n      },\n    }).then(async (data) => {\n      if (data.ok) {\n        let newUsers = (await data.json()).map((userName) => {\n          return {\n            label: userName,\n            id: userName,\n          };\n        });\n        setUsers(newUsers);\n      }\n    });\n  }, []);\n  async function refreshNotifications() {\n    fetch(base_URL + '/users/getNotifications', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        userKey: userKey,\n      },\n    }).then((res) => {\n      res.text().then((notifications) => {\n        notifications = JSON.parse(notifications);\n        // @ts-ignore\n        setNotifications(notifications);\n      });\n    });\n  }\n  async function sendNotification(bodyTosend) {\n    await fetch(base_URL + '/users/sendNotification', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        userKey: userKey,\n      },\n      body: JSON.stringify(bodyTosend),\n    });\n  }\n  function createNotificationButton() {\n    navigation.navigate('CreateNotification');\n  }\n  function clearNotifications() {\n    fetch(base_URL + '/users/clearNotifications', {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        userKey: userKey,\n      },\n    }).then(() => {\n      refreshNotifications();\n    });\n  }\n  const navigationHeader = (navigation) => (\n    <Layout\n      style={{\n        width: '100%',\n        justifyContent: 'space-between',\n        flexDirection: 'row',\n        alignItems: 'center',\n        flex: 1,\n        backgroundColor: 'transparent',\n      }}>\n      {Platform.OS === 'ios' && <BackButton navigation={navigation} />}\n\n      <Layout\n        style={{\n          paddingBottom: 5,\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'center',\n          flex: 1,\n          backgroundColor: 'transparent',\n        }}>\n        {/* <Image\n          style={{\n            height: 28,\n            width: 28,\n          }}\n          source={require('../../../assets/logos/app-logo.png')}\n        /> */}\n        <Text\n          style={{\n            paddingTop: 3,\n            fontSize: 20,\n            fontWeight: '500',\n            color: darkMode ? '#fff' : '#000',\n          }}>\n          Notifications\n        </Text>\n      </Layout>\n      <Layout\n        style={{\n          alignSelf: 'flex-end',\n          paddingRight: 40,\n          paddingBottom: 10,\n          flexDirection: 'row',\n          backgroundColor: 'transparent',\n        }}>\n        <TouchableOpacity\n          style={{\n            paddingLeft: 20,\n            marginRight: Platform.OS == 'android' ? 50 : 0,\n          }}\n          onPress={() => {\n            if (isGuest) {\n              setShowGuestModal(true)\n            } else {\n              createNotificationButton();\n            }\n          }}>\n          <FontAwesome5 size={25} color={'#1E90FF'} name=\"plus\" />\n        </TouchableOpacity>\n        {\n            showGuestModal &&\n            <ModalContainer\n                title=\"Wait!\"\n                children={<Text style={{paddingHorizontal: 30}}>This feature is locked to our Guest Users. Please create a free account with us to take advantage this feature.</Text>}\n                backDropVisible={showGuestModal}\n                setBackDropVisible={setShowGuestModal}\n            />\n        }\n        {/*<TouchableOpacity\n\n          onPress={() => {\n            Alert.alert(\n              'Caution',\n              'Are you sure you want to clear your notifications?\\nThis action cannot be undone.',\n              [\n                {\n                  text: 'No',\n                  style: 'cancel',\n                },\n                {\n                  text: 'Yes',\n                  onPress: async () => {\n                    clearNotifications();\n                  },\n                },\n              ]\n            );\n          }}>\n          <FontAwesome5 size={25} color={'#d71717'} name=\"times\" />\n        </TouchableOpacity>\n        /* <TouchableOpacity\n          style={{ paddingLeft: 20 }}\n          onPress={() => {\n            refreshNotifications();\n          }}>\n          <FontAwesome size={25} color={'#1E90FF'} name=\"rotate-right\" />\n        </TouchableOpacity> */}\n      </Layout>\n    </Layout>\n  );\n  const Notifications = ({ navigation }) => {\n    const [refreshing, setRefreshing] = useState(false);\n    const [isMoving, setIsMoving] = useState(false);\n\n    const onRefresh = useCallback(() => {\n      setRefreshing(true);\n      refreshNotifications().then(() => {\n        setRefreshing(false);\n      });\n    }, []);\n    async function handleOnLeftSwipe(postId) {\n      const newNotifications = notifications.map((not) => {\n        if (not._id !== postId) {\n          return not;\n        }\n      });\n      console.log(newNotifications);\n      setNotifications(newNotifications);\n      let res = await fetch(base_URL + '/users/removeNotification', {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          userKey: userKey,\n        },\n        body: JSON.stringify({\n          id: postId,\n        }),\n        redirect: 'follow',\n      });\n      if (res.ok) {\n        refreshNotifications();\n      } else {\n        console.log(await res.json());\n      }\n      setIsOpen(false);\n      setIsMoving(false);\n    }\n\n    const renderItem = ({ item: notification }) => {\n      return (\n        <Layout>\n          {notification && (\n            // @ts-ignore\n            <SwipeRow\n              disableRightSwipe={true}\n              onSwipeValueChange={(status) => {\n                if (status.value < -Dimensions.get('window').width * (1/3)) {\n                  if (!isOpen) {\n                    setIsOpen(true);\n                    handleOnLeftSwipe(notification._id);\n                  }\n                } else if (status.value < -5) {\n                  setIsMoving(true);\n                } else {\n                  setIsMoving(false);\n                }\n              }}\n              useNativeDriver={true}>\n              <Layout\n                style={{\n                  alignItems: 'flex-end',\n                  justifyContent: 'center',\n                  alignSelf: 'center',\n                  width: '95%',\n                  height: 75,\n                  borderRadius: 11,\n                  backgroundColor: '#ce0f0f',\n                  marginLeft: 5,\n                  paddingRight: 20,\n                  marginRight: 5,\n                  marginTop: 10,\n                }}>\n                <Text style={{ color: '#fff' }}>Delete</Text>\n              </Layout>\n              <TouchableWithoutFeedback\n                style={{\n                  alignItems: 'center',\n                  alignSelf: 'center',\n                  width: '95%',\n                  height: 75,\n                  borderRadius: 10,\n                  marginLeft: 5,\n                  marginRight: 5,\n                  marginTop: 10,\n                }}\n                onPress={() => {\n                  navigation.navigate('SingleNotification', {\n                    data: notification,\n                  });\n                }}\n                key={notification?._id}>\n                <Layout\n                  style={{\n                    alignItems: 'center',\n                    alignSelf: 'center',\n                    width: '95%',\n                    height: 75,\n                    borderRadius: 10,\n                    backgroundColor: darkMode ? '#333333' : '#ebebeb',\n                    shadowColor: '#000',\n                    shadowOffset: { width: 0, height: 1 },\n                    shadowOpacity: 0.2,\n                    shadowRadius: 2,\n                    elevation: 1,\n                    marginLeft: 5,\n                    marginRight: 5,\n                    marginTop: 10,\n                  }}>\n                  <Text\n                    style={{\n                      paddingTop: 5,\n                      fontWeight: 'bold',\n                      fontSize: 20,\n                    }}>\n                    {notification?.title}\n                  </Text>\n                  <Text style={{}}>From: {notification?.from}</Text>\n                  {notification?.creationDate ? (\n                    <Text style={{ fontStyle: 'italic', fontSize: 12 }}>\n                      {notification?.creationDate}\n                    </Text>\n                  ) : null}\n                </Layout>\n              </TouchableWithoutFeedback>\n            </SwipeRow>\n          )}\n        </Layout>\n      );\n    };\n\n    return (\n      <Layout style={{ flex: 1 }}>\n        {notifications.length === 0 ? (\n          <Layout style={{ alignItems: 'center' }}>\n            <Text\n              style={{\n                paddingTop: '25%',\n                paddingBottom: 10,\n                textAlign: 'center',\n              }}>\n              No New Notifications\n            </Text>\n            <TouchableOpacity\n              onPress={() => {\n                refreshNotifications();\n              }}>\n              <FontAwesome size={25} color={'#1E90FF'} name=\"rotate-right\" />\n            </TouchableOpacity>\n          </Layout>\n        ) : null}\n        <List\n          style={{ backgroundColor: 'transparent' }}\n          contentContainerStyle={{ flex: 1 }}\n          data={notifications}\n          scrollEnabled={!isMoving}\n          renderItem={renderItem}\n          onRefresh={refreshNotifications}\n          refreshing={refreshing}\n        />\n      </Layout>\n    );\n  };\n\n  function getDateText(text) {\n    let spaceIndex = text.indexOf(' ');\n    let first = text.substring(0, spaceIndex);\n    let second = text.substring(spaceIndex + 1);\n    return second + ' |  ' + first;\n  }\n\n  const SingleNotification = ({\n    route: {\n      params: { data },\n    },\n  }) => {\n    navigation = useNavigation();\n    const { data: currentSection } = useGetCurrentSectionQuery();\n\n    let listToRemove = [];\n    if (data.isSchedule) {\n      let jsonSchedule = JSON.parse(data.message);\n      let thereIsAtLeastOne = false;\n      for (const index in jsonSchedule) {\n        if (jsonSchedule[index].courseTerm === currentSection) {\n          thereIsAtLeastOne = true;\n        } else {\n          listToRemove.push(index);\n        }\n      }\n      for (const index of listToRemove) {\n        jsonSchedule.splice(index, 1);\n      }\n      if (!thereIsAtLeastOne) {\n        Alert.alert(\n          'This schedule is either empty or contains outdated class information'\n        );\n        navigation.goBack();\n      }\n      return thereIsAtLeastOne ? (\n        <Layout>{Calendar(jsonSchedule)}</Layout>\n      ) : null;\n    } else if (data.isCourseData) {\n      const allClassData = useAppSelector(selectClassesList);\n      const courseSimpleData = JSON.parse(data.message);\n      if (courseSimpleData.courseTerm === currentSection) {\n        return <SingleClassPage\n            selectedClass={allClassData[courseSimpleData.masterCourseCode]}/>\n      } else {\n        Alert.alert(\n            'This course contains outdated information'\n        );\n        navigation.goBack();\n        return null\n      }\n    }\n    return (\n      <KeyboardAvoidingView\n        style={{ flex: 1 }}\n        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}>\n        <ScrollView contentContainerStyle={{ flex: 1 }}>\n          <Layout style={sponsorPageStyles.container}>\n            <Layout\n              style={{ width: '100%', alignItems: 'center', marginTop: 20 }}>\n              <Text style={sponsorPageStyles.title}>{data.title}</Text>\n            </Layout>\n\n            {data.from && (\n              <Layout style={sponsorPageStyles.address}>\n                <Layout style={{ flexDirection: 'row' }}>\n                  <Text style={{ fontSize: 15, fontWeight: 'bold' }}>\n                    From:{' '}\n                  </Text>\n                  <Text style={{ fontSize: 15 }}>{data.from}</Text>\n                </Layout>\n                <Layout style={{ flexDirection: 'row' }}>\n                  <Text style={{ fontSize: 15 }}>\n                    {getDateText(data.creationDate)}\n                  </Text>\n                </Layout>\n              </Layout>\n            )}\n            <Layout style={sponsorPageStyles.description}>\n              <Text>{data.message}</Text>\n            </Layout>\n            {data.repliable && (\n              <TouchableOpacity\n                onPress={() => {\n                  // TODO: reply\n                }}\n                style={myStyles.button}>\n                <Text style={myStyles.text}>Reply</Text>\n              </TouchableOpacity>\n            )}\n          </Layout>\n        </ScrollView>\n      </KeyboardAvoidingView>\n    );\n  };\n  const CreateNotification = ({ navigation }) => {\n    const [body, setBody] = useState({});\n    const [done, setDone] = useState(false);\n    const [recipient, setRecipient] = useState(null)\n    const [hasChosen, setHasChosen] = useState(false);\n\n    useEffect(() => {\n      changeValue(hasChosen ? [recipient] : null, 'recipients')\n    }, [recipient, hasChosen])\n\n    function checkForDone(tempBody) {\n      if (tempBody.recipients && tempBody.title && tempBody.text) {\n        setDone(true);\n      } else {\n        setDone(false);\n      }\n    }\n\n    const changeValue = (theValue, valueToChange) => {\n      let newBody = body;\n      for (const aspect in newBody) {\n        if (\n            newBody[aspect] === null ||\n            newBody[aspect] === undefined ||\n            newBody[aspect] === ''\n        ) {\n          delete newBody[aspect];\n        }\n      }\n      if (theValue !== undefined) {\n        newBody[valueToChange] = theValue;\n      } else {\n        if (newBody[valueToChange]) {\n          delete newBody[valueToChange];\n        }\n      }\n      console.log(JSON.stringify(newBody));\n      checkForDone(newBody);\n      setBody(newBody);\n    };\n\n    function renderInputFields() {\n      const renderHeader = () => {\n        return (\n          <Layout style={{ flexDirection: 'row' }}>\n            <Text\n              style={{\n                fontSize: 15,\n                paddingLeft: 12,\n                paddingBottom: 5,\n                paddingTop: 5,\n                alignContent: 'center',\n                fontWeight: 'bold',\n              }}>\n              Send Message\n            </Text>\n          </Layout>\n        );\n      };\n      let final = [];\n      final.push(\n          <View style={{\n            height: 50,\n            margin: 12,\n            padding: 10,\n          }}>\n            {UserNameSelectionDropDown({setHasChosen, setRecipient, placeholder: true})}\n          </View>\n      );\n      final.push(\n        <Input\n          autoCapitalize={'words'}\n          onChangeText={(theValue) => changeValue(theValue, 'title')}\n          style={myStyles.input}\n          placeholderTextColor={'gray'}\n          placeholder={'Title'}\n        />\n      );\n      final.push(\n        <Input\n          autoCapitalize={'sentences'}\n          onChangeText={(theValue) => changeValue(theValue, 'text')}\n          style={myStyles.inputBig}\n          multiline={true}\n          textStyle={{ minHeight: 150 }}\n          placeholderTextColor={'gray'}\n          placeholder={'Body'}\n        />\n      );\n\n      return (\n        <Layout style={{ flex: 1 }}>\n          {renderHeader()}\n          {final}\n        </Layout>\n      );\n    }\n    return (\n      <SafeAreaView style={{ flex: 1 }}>\n        <KeyboardAvoidingView\n          style={{ flex: 1 }}\n          behavior={Platform.OS === 'ios' ? 'padding' : 'height'}>\n          <ScrollView contentContainerStyle={{ flex: 1 }}>\n            <Layout style={sponsorPageStyles.container}>\n              <Layout style={sponsorPageStyles.description}>\n                {renderInputFields()}\n                <Button\n                  disabled={!done}\n                  onPress={async () => {\n                    // console.log(JSON.stringify(body));\n                    await sendNotification(body);\n                    navigation.navigate('Notifications');\n                  }}>\n                  <Text style={myStyles.text}>Send Message</Text>\n                </Button>\n              </Layout>\n            </Layout>\n          </ScrollView>\n        </KeyboardAvoidingView>\n      </SafeAreaView>\n    );\n  };\n  return (\n    <NotificationHomePage.Navigator initialRouteName=\"Notifications & Messages\">\n      <NotificationHomePage.Screen\n        options={({ navigation }) => ({\n          title: 'Notifications',\n          headerTitle: () => {\n            return navigationHeader(navigation);\n          },\n        })}\n        name=\"Notifications\"\n        component={Notifications}\n      />\n      <NotificationHomePage.Screen\n        name=\"SingleNotification\"\n        component={SingleNotification}\n        options={{ headerTitle: '' }}\n      />\n      <NotificationHomePage.Screen\n        name=\"CreateNotification\"\n        component={CreateNotification}\n        options={{ headerTitle: '' }}\n      />\n    </NotificationHomePage.Navigator>\n  );\n}\n\nfunction convertTo12HourTime(time) {\n  if (time.length !== 5) {\n    time = '0' + time;\n  }\n  let hours = time.slice(0, 2);\n  let minutes = time.slice(3, 5);\n  let ampm = Number.parseInt(hours) > 12 ? 'pm' : 'am';\n  hours = hours % 12;\n  if (hours === 0) {\n    hours = 12;\n    ampm = 'pm';\n  }\n  return hours + ':' + minutes + ampm;\n}\n\nfunction getMinutesDiff(startTime, endTime) {\n  if (endTime > startTime) {\n    return (endTime - startTime) * 0.7;\n  } else if (startTime === endTime) {\n    return 0;\n  } else {\n    return (startTime - endTime) * -0.7;\n  }\n}\n\nfunction Calendar(userData) {\n  const allClassData = useAppSelector(selectClassesList);\n  const { data: currentSection, isLoading: isCurrentSectionLoading } =\n    useGetCurrentSectionQuery();\n  const darkMode: Boolean = useAppSelector(selectDarkMode);\n  const calendarFun = new CalendarFunctions();\n  const days = [\n    { day: 'Mon', id: 'Monday' },\n    { day: 'Tues', id: 'Tuesday' },\n    { day: 'Wed', id: 'Wednesday' },\n    { day: 'Thurs', id: 'Thursday' },\n    { day: 'Fri', id: 'Friday' },\n    { day: 'Sat', id: 'Saturday' },\n    { day: 'Sun', id: 'Sunday' },\n  ];\n  const times = [\n    '12:00 AM',\n    '1:00 AM',\n    '2:00 AM',\n    '3:00 AM',\n    '4:00 AM',\n    '5:00 AM',\n    '6:00 AM',\n    '7:00 AM',\n    '8:00 AM',\n    '9:00 AM',\n    '10:00 AM',\n    '11:00 AM',\n    '12:00 PM',\n    '1:00 PM',\n    '2:00 PM',\n    '3:00 PM',\n    '4:00 PM',\n    '5:00 PM',\n    '6:00 PM',\n    '7:00 PM',\n    '8:00 PM',\n    '9:00 PM',\n    '10:00 PM',\n    '11:00 PM',\n  ];\n\n  function renderDashes() {\n    let final = [];\n    for (let i = 0; i < 24; i++) {\n      final.push(\n        <Layout\n          style={{\n            width: 46,\n            marginLeft: 9,\n            top: 41.7 * i,\n            position: 'absolute',\n            height: 41.7,\n            borderBottomWidth: 0.7,\n            borderBottomColor: darkMode ? 'rgb(68,68,68)' : 'rgb(204,204,204)',\n          }}\n        />\n      );\n    }\n    return final;\n  }\n\n  const renderClasses = (elem) => {\n    let classes = [];\n    for (const course of userData) {\n      if (course.courseTerm === currentSection) {\n        let data = calendarFun.getFullClassData(\n          course.courseCode,\n          allClassData\n        );\n        let data2 = data.times.find(\n          (time) => time.courseCode === course.courseCode\n        );\n        for (const day in data2['daysOfTheWeek']) {\n          if (data2['daysOfTheWeek'][day] === elem.id) {\n            classes.push(renderItem(data, course.courseCode, () => {}));\n          }\n        }\n      }\n    }\n\n    return classes;\n  };\n\n  const topBar = useRef(null);\n\n  return (\n    <SafeAreaView\n      style={{\n        marginTop: 0,\n        marginLeft: 0,\n        paddingBottom: 15,\n        marginBottom: 20,\n      }}>\n      {/* Times */}\n      <ScrollView\n        horizontal={true}\n        snapToInterval={63}\n        showsHorizontalScrollIndicator={false}\n        style={{ marginLeft: 75 }}\n        ref={topBar}>\n        <View style={{ flexDirection: 'row' }}>\n          {days.map((elem) => {\n            return (\n              <Layout>\n                <Layout\n                  style={{\n                    borderColor: darkMode ? '#7a7a7a' : '#525252',\n                    borderBottomWidth: 1,\n                    width: '100%',\n                  }}>\n                  <Text\n                    style={{\n                      textAlign: 'center',\n                      color: darkMode ? '#7a7a7a' : '#525252',\n                      width: 63,\n                    }}>\n                    {elem.day}\n                  </Text>\n                </Layout>\n              </Layout>\n            );\n          })}\n        </View>\n      </ScrollView>\n      <ScrollView\n        contentOffset={{ x: 0, y: 292 }}\n        showsVerticalScrollIndicator={false}\n        bounces={false}>\n        <View style={{ flexDirection: 'row' }}>\n          <View\n            style={{\n              justifyContent: 'space-around',\n              height: 1000,\n            }}>\n            {times.map((time) => {\n              return (\n                <Text\n                  style={{\n                    textAlign: 'center',\n                    color: darkMode ? '#7a7a7a' : '#525252',\n                    paddingTop: '15%',\n                    height: 43,\n                    width: 75,\n                    borderWidth: 1,\n                    borderColor: darkMode ? '#7a7a7a' : '#525252',\n                  }}>\n                  {time}\n                </Text>\n              );\n            })}\n          </View>\n          {/* Classes */}\n          <ScrollView\n            horizontal={true}\n            snapToInterval={63}\n            decelerationRate={'normal'}\n            showsHorizontalScrollIndicator={false}\n            bounces={false}\n            scrollEventThrottle={1}\n            onScroll={(e) =>\n              topBar.current.scrollTo({\n                x: e.nativeEvent.contentOffset.x,\n                animated: false,\n                useNativeDriver: true,\n              })\n            }\n            onMomentumScrollBegin={(e) =>\n              topBar.current.scrollTo({\n                x: e.nativeEvent.contentOffset.x,\n                animated: false,\n                useNativeDriver: true,\n              })\n            }>\n            <View style={{ flexDirection: 'row' }}>\n              {days.map((elem) => {\n                return (\n                  <Layout>\n                    {renderDashes()}\n                    <Layout key={elem.day} style={{ width: 63 }}>\n                      {renderClasses(elem)}\n                    </Layout>\n                    <Layout\n                      style={{\n                        height: '100%',\n                        width: 1,\n                        backgroundColor: darkMode ? '#7a7a7a' : '#525252',\n                      }}\n                    />\n                  </Layout>\n                );\n              })}\n            </View>\n          </ScrollView>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n}\n\nconst sponsorPageStyles = StyleSheet.create({\n  container: {\n    flex: 1,\n    // alignItems: 'center',\n  },\n  header: {\n    marginTop: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n  },\n  address: {\n    alignItems: 'center',\n    margin: 10,\n    borderColor: 'black',\n    borderWidth: 1,\n    padding: 10,\n  },\n  video: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-start',\n  },\n  title: {\n    fontSize: 26,\n    marginLeft: 10,\n  },\n  logo: {\n    width: '100%',\n    height: 100,\n  },\n  description: {\n    flex: 1,\n    margin: 10,\n    borderRadius: 5,\n    width: '95%',\n    padding: 10,\n  },\n  couponContainer: {\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 20,\n    marginBottom: 20,\n  },\n  coupon: {\n    width: 400,\n    height: 267,\n  },\n  imageGallery: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    margin: 10,\n    marginBottom: 0,\n  },\n  imageStyle: {\n    width: 150,\n    height: 150,\n    paddingTop: 100,\n    margin: 5,\n  },\n  headerText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n});\n\nconst myStyles = StyleSheet.create({\n  inputBig: {\n    height: 200,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n  },\n  input: {\n    height: 50,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n  },\n  indentedInput: {\n    height: 50,\n    marginVertical: 12,\n    borderWidth: 1,\n    padding: 10,\n    marginRight: 12,\n    marginLeft: 30,\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n  },\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 12,\n    paddingHorizontal: 32,\n    borderRadius: 4,\n    elevation: 3,\n  },\n  timeButton: {\n    width: 100,\n    height: 50,\n    marginHorizontal: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 4,\n  },\n  timeText: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white',\n  },\n  actualTimeText: {\n    fontSize: 13,\n    lineHeight: 18,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white',\n  },\n  timeStyle: {\n    flex: 0.3,\n    borderWidth: 2,\n    borderLeftColor: 'white',\n  },\n});\n\nconst listingStyles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  cardContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    alignSelf: 'center',\n    width: '95%',\n    height: 75,\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderBottomWidth: 0,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 2,\n    elevation: 1,\n    marginLeft: 5,\n    marginRight: 5,\n    marginTop: 10,\n  },\n  containerForNotifications: {\n    alignItems: 'center',\n    alignSelf: 'center',\n    width: '95%',\n    height: 75,\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderBottomWidth: 0,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 2,\n    elevation: 1,\n    marginLeft: 5,\n    marginRight: 5,\n    marginTop: 10,\n  },\n  text: {\n    flex: 1,\n    fontSize: 20,\n    textAlign: 'center',\n    marginTop: 5,\n    marginBottom: 5,\n  },\n  image: {\n    width: '100%',\n    height: '100%',\n    borderRadius: 10,\n  },\n});\n","export const departments = [\n  'AFRI',\n  'AMST',\n  'ANTH',\n  'ARBC',\n  'ARBT',\n  'ARCN',\n  'ARHI',\n  'ART',\n  'ASAM',\n  'ASIA',\n  'ASTR',\n  'BIOL',\n  'CASA',\n  'CGH',\n  'CGS',\n  'CHEM',\n  'CHIN',\n  'CHLT',\n  'CHNT',\n  'CHST',\n  'CLAS',\n  'CLES',\n  'COGS',\n  'CORE',\n  'CREA',\n  'CSCI',\n  'CSMT',\n  'DANC',\n  'DS',\n  'EA',\n  'ECON',\n  'EDUC',\n  'ENGL',\n  'ENGR',\n  'ENTR',\n  'EURO',\n  'FGSS',\n  'FHS',\n  'FREN',\n  'FS',\n  'FWS',\n  'GEOG',\n  'GEOL',\n  'GERM',\n  'GLAS',\n  'GOVT',\n  'GREK',\n  'GRMT',\n  'GWS',\n  'HIST',\n  'HMSC',\n  'HSA',\n  'HUM',\n  'ID',\n  'IR',\n  'ITAL',\n  'JAPN',\n  'JPNT',\n  'KORE',\n  'KRNT',\n  'LAMS',\n  'LAS',\n  'LAST',\n  'LATN',\n  'LEAD',\n  'LGCS',\n  'LGST',\n  'LIT',\n  'MATH',\n  'MCBI',\n  'MCSI',\n  'MES',\n  'MLLC',\n  'MOBI',\n  'MS',\n  'MSL',\n  'MUS',\n  'NEUR',\n  'ORST',\n  'PE',\n  'PHIL',\n  'PHYS',\n  'POLI',\n  'PONT',\n  'PORT',\n  'POST',\n  'PPA',\n  'PPE',\n  'PSYC',\n  'RLIT',\n  'RLST',\n  'RUSS',\n  'RUST',\n  'SCI',\n  'SOC',\n  'SPAN',\n  'SPCH',\n  'STS',\n  'TEST',\n  'THEA',\n  'THES',\n  'WRIT',\n];\n","import {\n  Autocomplete,\n  AutocompleteItem,\n  Button,\n  Card,\n  Input,\n  Layout,\n  Text,\n} from '@ui-kitten/components';\nimport WrapItems from '../../../components/WrapItems';\nimport { useCallback, useEffect, useState } from 'react';\nimport { Keyboard, TouchableWithoutFeedback } from 'react-native';\nimport { departments } from '../../../constants/electiveGenerator';\nimport { useAppDispatch, useAppSelector } from '../../../app/hooks';\nimport {\n  electiveGeneratorSelected,\n  selectClassesList,\n  suggestedClassesUpdated,\n} from '../classPagesSlice';\nimport { showToast } from '../../../functions';\nimport synonyms from './synonyms.json'\n\nexport default function ElectiveGenerator({ navigation }: any) {\n  const dispatch = useAppDispatch();\n  const [departmentQuery, setDepartmentQuery] = useState('');\n  const [departmentOptions, setDepartmentOptions] = useState(departments);\n  const [description, setDescription] = useState('');\n\n  const classes = useAppSelector(selectClassesList);\n\n  const getClassesByDepartment = useCallback((department: string) => {\n    if (department === 'All Departments') return Object.entries(classes);\n    return Object.entries(classes).filter(([key, _]) => {\n      const classDepartment = key.split(' ')[0];\n      return classDepartment === department;\n    });\n  }, []);\n\n  useEffect(() => {\n    dispatch(electiveGeneratorSelected());\n  }, []);\n\n  const onChangeDepartmentText = useCallback((query: string): void => {\n    setDepartmentQuery(query);\n    setDepartmentOptions(\n      departments.filter((department) =>\n        department.includes(query.toUpperCase())\n      )\n    );\n  }, []);\n\n  const onSubmit = () => {\n    Keyboard.dismiss();\n    if (!departmentQuery || !description) {\n      showToast('Please fill out all fields', 'red');\n      return;\n    }\n    const cleanedDescription = description\n      .toLowerCase()\n      .replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, '')\n      .replace(/\\s{2,}/g, ' ');\n    const classesByDepartment = getClassesByDepartment(departmentQuery);\n    // Compare text in user input to class descriptions and return top 5 matches\n    classesByDepartment.sort((a, b) => {\n      const aWords = getWords(a[1].summary + ' ' + a[1].courseName)\n      const bWords = getWords(b[1].summary + ' ' + b[1].courseName)\n\n      const aMatches = aWords.filter((word) =>\n        cleanedDescription.includes(word)\n      );\n      const bMatches = bWords.filter((word) =>\n        cleanedDescription.includes(word)\n      );\n      return bMatches.length - aMatches.length;\n    });\n\n    const matches = Object.fromEntries(classesByDepartment.slice(0, 5));\n    dispatch(suggestedClassesUpdated(matches));\n    navigation.goBack();\n    showToast('Suggested classes updated!', 'green');\n  };\n\n\n  // Helper functions\n  const getWords = (text: string) => {\n    const wordList = text\n        .toLowerCase()\n        .replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, '')\n        .replace(/\\s{2,}/g, ' ')\n        .split(' ');\n\n    let wordListWithSynonyms = []\n\n    for (let word of wordList) {\n      if (synonyms[word]) {\n        wordListWithSynonyms.push(word)\n        wordListWithSynonyms = wordListWithSynonyms.concat(synonyms[word])\n      }\n    }\n\n    return wordListWithSynonyms\n  }\n\n  return (\n    <TouchableWithoutFeedback onPress={Keyboard.dismiss} style={{ flex: 1 }}>\n      <Layout style={{ flex: 1 }}>\n        <WrapItems childStyle={{ margin: 20 }}>\n          <Card activeOpacity={1} disabled>\n            <Text category=\"s1\" style={{ textAlign: 'center' }}>\n              Choose a department and write a description about what inspires\n              you.{`\\n\\n`}Then let our powerful AI choose the best electives for you!\n            </Text>\n          </Card>\n          <Autocomplete\n            label=\"Department\"\n            onSelect={(index) => setDepartmentQuery(departmentOptions[index])}\n            onChangeText={onChangeDepartmentText}\n            value={departmentQuery}>\n            {departmentOptions.map((option) => (\n              <AutocompleteItem title={option} key={option} />\n            ))}\n          </Autocomplete>\n          <Input\n            label=\"Description\"\n            multiline\n            textStyle={{ minHeight: 100 }}\n            value={description}\n            onChangeText={(text) => setDescription(text)}\n          />\n          <Button onPress={onSubmit}>Submit</Button>\n        </WrapItems>\n      </Layout>\n    </TouchableWithoutFeedback>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Image, Platform, TouchableOpacity } from 'react-native';\nimport { FontAwesome5, Ionicons, Foundation } from '@expo/vector-icons';\nimport { Button, Layout, Text, useTheme } from '@ui-kitten/components';\n\nimport ClassesList from './ClassesList';\nimport { SponsorsList, SponsorPage } from '../sponsors/SponsorsList';\nimport Header from '../../components/Header';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Settings from '../settings/index';\nimport { useAppSelector } from '../../app/hooks';\nimport {\n  selectDarkMode,\n  selectIsGuest,\n  selectUserKey,\n} from '../../app/appDataSlice';\nimport NotificationsNavigation from '../notifications/Notifications';\nimport { base_URL } from '../notifications/constants';\nimport SingleClassPage from './SingleClassPage/index';\nimport SelectTerm from './SelectTerm';\nimport ElectiveGenerator from './ElectiveGenerator';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function SearchClasses({ navigation }) {\n  const theme = useTheme();\n  const hasSelectedElectiveGenerator = useAppSelector(\n    (state) => state.appData.classPages.hasSelectedElectiveGen\n  );\n  const userKey = useAppSelector(selectUserKey);\n  const darkMode = useAppSelector(selectDarkMode);\n  const [numberOfNotifications, setNumberOfNotifications] = useState(0);\n\n  function refreshNotifications() {\n    fetch(base_URL + '/users/getNotifications', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        userKey: userKey,\n      },\n    }).then((res) => {\n      res.text().then((notifications) => {\n        notifications = JSON.parse(notifications);\n        setNumberOfNotifications(notifications.length);\n      });\n    });\n  }\n\n  useEffect(() => {\n    refreshNotifications();\n    setInterval(() => {\n      refreshNotifications();\n    }, 60000); // refresh every minute\n  }, []);\n\n  const accessoryLeft = (\n    <Image\n      style={{\n        height: 28,\n        width: 28,\n      }}\n      source={require('../../../assets/logos/app-logo-transparent.png')}\n    />\n  );\n\n  const accessoryRight = (\n    <Layout\n      style={{\n        flexDirection: 'row',\n        width: 120,\n        justifyContent: 'space-between',\n      }}>\n      <TouchableOpacity\n        onPress={() => {\n          navigation.navigate('ElectiveGenerator');\n        }}\n        style={{ flexDirection: 'row', alignItems: 'center' }}>\n        {hasSelectedElectiveGenerator ? (\n          <FontAwesome5\n            name=\"brain\"\n            size={23}\n            color={\n              darkMode ? theme['color-basic-200'] : theme['color-basic-800']\n            }\n          />\n        ) : (\n          <Foundation\n            name={'burst-new'}\n            size={30}\n            color={theme['color-warning-500']}\n          />\n        )}\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        onPress={() => {\n          navigation.navigate('SponsorsList');\n        }}\n        style={{ flexDirection: 'row', alignItems: 'center' }}>\n        <FontAwesome5\n          name=\"shopping-bag\"\n          size={23}\n          color={darkMode ? theme['color-basic-200'] : theme['color-basic-800']}\n        />\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        onPress={() => {\n          navigation.navigate('Settings');\n        }}\n        style={{ flexDirection: 'row', alignItems: 'center' }}>\n        <Ionicons\n          name=\"settings\"\n          size={23}\n          color={darkMode ? theme['color-basic-200'] : theme['color-basic-800']}\n        />\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        onPress={() => {\n          navigation.navigate('NotificationsPage');\n        }}\n        style={{ flexDirection: 'row', alignItems: 'center' }}>\n        <FontAwesome5\n          name=\"bell\"\n          size={23}\n          color={darkMode ? theme['color-basic-200'] : theme['color-basic-800']}\n        />\n        {numberOfNotifications > 0 ? (\n          <Layout\n            style={{\n              position: 'absolute',\n              backgroundColor: darkMode ? 'red' : '#fff',\n              borderRadius: 10,\n              paddingHorizontal: 3,\n              right: -7,\n              top: -3,\n            }}>\n            <Text>{numberOfNotifications}</Text>\n          </Layout>\n        ) : null}\n      </TouchableOpacity>\n    </Layout>\n  );\n\n  return (\n    <Stack.Navigator>\n      <Stack.Screen\n        name=\"ClassesList\"\n        component={ClassesList}\n        options={{\n          header: () => (\n            <Layout style={{ paddingBottom: 10 }}>\n              <Header\n                accessoryLeft={accessoryLeft}\n                accessoryRight={accessoryRight}\n                title=\"Athena\"\n              />\n            </Layout>\n          ),\n          title: 'ClassPages',\n        }}\n      />\n      <Stack.Screen\n        name=\"Settings\"\n        component={Settings}\n        options={{\n          headerShown: false,\n        }}\n      />\n      <Stack.Group screenOptions={{ headerTitle: 'Sponsors' }}>\n        <Stack.Screen\n          name=\"SponsorsList\"\n          component={SponsorsList}\n          options={{ title: 'Sponsors' }}\n        />\n        <Stack.Screen\n          name=\"SponsorPage\"\n          component={SponsorPage}\n          options={{ title: 'Sponsors' }}\n        />\n      </Stack.Group>\n      <Stack.Screen\n        name=\"NotificationsPage\"\n        component={NotificationsNavigation}\n        options={{ headerShown: false, title: 'Notifications' }}\n      />\n      <Stack.Screen\n        name=\"SelectTerm\"\n        component={SelectTerm}\n        options={{\n          title: 'Select Term',\n          headerShown: false,\n          animation: 'slide_from_bottom',\n          gestureDirection: 'vertical',\n        }}\n      />\n      <Stack.Screen\n        name=\"ElectiveGenerator\"\n        component={ElectiveGenerator}\n        options={{\n          title: 'Elective Generator',\n          animation: 'slide_from_bottom',\n          gestureDirection: 'vertical',\n        }}\n      />\n      {Platform.OS === 'web' && (\n        <Stack.Screen\n          name=\"SingleClassPage\"\n          component={SingleClassPage}\n          options={{\n            headerShown: false,\n            title: 'ClassPages',\n          }}\n        />\n      )}\n    </Stack.Navigator>\n  );\n}\n","export default {\n  'color-basic-100': '#FFFFFF',\n  'color-basic-200': '#F5F5F5',\n  'color-basic-300': '#D4D4D4',\n  'color-basic-400': '#B3B3B3',\n  'color-basic-500': '#808080',\n  'color-basic-600': '#4A4A4A',\n  'color-basic-700': '#383838',\n  'color-basic-800': '#292929',\n  'color-basic-900': '#1F1F1F',\n  'color-basic-1000': '#141414',\n  'color-basic-1100': '#000000',\n  'color-primary-100': '#FFE0D8',\n  'color-primary-200': '#FFBBB2',\n  'color-primary-300': '#FF8E8B',\n  'color-primary-400': '#FF6F78',\n  'color-primary-500': '#FF3F5E',\n  'color-primary-600': '#DB2E5A',\n  'color-primary-700': '#B71F54',\n  'color-primary-800': '#93144C',\n  'color-primary-900': '#7A0C47',\n  'color-success-100': '#FBD4F0',\n  'color-success-200': '#F8ABE8',\n  'color-success-300': '#EA7EDC',\n  'color-success-400': '#D55AD0',\n  'color-success-500': '#b42bba',\n  'color-success-600': '#8F1F9F',\n  'color-success-700': '#6E1585',\n  'color-success-800': '#500D6B',\n  'color-success-900': '#3A0859',\n  'color-info-100': '#CDFDFE',\n  'color-info-200': '#9CF4FE',\n  'color-info-300': '#6AE4FC',\n  'color-info-400': '#45D0FA',\n  'color-info-500': '#09B0F7',\n  'color-info-600': '#0689D4',\n  'color-info-700': '#0466B1',\n  'color-info-800': '#02498F',\n  'color-info-900': '#013476',\n  'color-warning-100': '#FFF6CC',\n  'color-warning-200': '#FFEA99',\n  'color-warning-300': '#FFDC66',\n  'color-warning-400': '#FFCD3F',\n  'color-warning-500': '#FFB600',\n  'color-warning-600': '#DB9600',\n  'color-warning-700': '#B77800',\n  'color-warning-800': '#935C00',\n  'color-warning-900': '#7A4800',\n  'color-danger-100': '#FEE5DE',\n  'color-danger-200': '#FEC6BE',\n  'color-danger-300': '#FEA09D',\n  'color-danger-400': '#FD858D',\n  'color-danger-500': '#FC5D77',\n  'color-danger-600': '#D8436A',\n  'color-danger-700': '#B52E5E',\n  'color-danger-800': '#921D51',\n  'color-danger-900': '#781149',\n  'color-grey-800': '#1F1F1F',\n  'color-grey-700': '#2F2F2F',\n  'color-grey-600': '#3F3F3F',\n  'color-grey-500': '#4F4F4F',\n  'color-grey-400': '#5F5F5F',\n  'color-grey-300': '#6F6F6F',\n  'color-grey-200': '#7F7F7F',\n  'color-grey-100': '#8F8F8F',\n  'color-grey-50': '#9F9F9F',\n};\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FontAwesome5 } from '@expo/vector-icons';\n\nexport const FontAwesomeIconsPack = {\n  name: 'fontAwesome',\n  icons: createIconsMap(),\n};\n\nfunction createIconsMap() {\n  return new Proxy(\n    {},\n    {\n      get(target, name) {\n        return IconProvider(name);\n      },\n    }\n  );\n}\n\nconst IconProvider = (name) => ({\n  toReactElement: (props) => FontAwesomeIcon({ name, ...props }),\n});\n\nfunction FontAwesomeIcon({ name, style }) {\n  const { height, tintColor, ...iconStyle } = StyleSheet.flatten(style);\n  return (\n    <FontAwesome5\n      name={name}\n      size={height}\n      color={tintColor}\n      style={iconStyle}\n    />\n  );\n}\n\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Feather } from '@expo/vector-icons';\n\nexport const FeatherIconsPack = {\n  name: 'feather',\n  icons: createIconsMap(),\n};\n\nfunction createIconsMap() {\n  return new Proxy(\n    {},\n    {\n      get(target, name) {\n        return IconProvider(name);\n      },\n    }\n  );\n}\n\nconst IconProvider = (name) => ({\n  toReactElement: (props) => FeatherIcon({ name, ...props }),\n});\n\nfunction FeatherIcon({ name, style }) {\n  const { height, tintColor, ...iconStyle } = StyleSheet.flatten(style);\n  return (\n    <Feather name={name} size={height} color={tintColor} style={iconStyle} />\n  );\n}\n","import {useCallback, useEffect, useState} from \"react\";\nimport {base_URL} from \"../../constants/admin\";\nimport {useAppSelector} from \"../../app/hooks\";\nimport {selectUserKey} from \"../../app/appDataSlice\";\nimport {\n    View,\n    Image,\n    Text,\n    TouchableOpacity,\n    ScrollView,\n    TextInput,\n    RefreshControl,\n    KeyboardAvoidingView,\n    Platform,\n    Dimensions\n} from \"react-native\";\nimport { FontAwesome } from '@expo/vector-icons';\nimport {createNativeStackNavigator} from \"@react-navigation/native-stack\";\nimport {Card, IndexPath, Layout, Select, SelectItem} from \"@ui-kitten/components\";\nimport moment from \"moment-timezone\";\nimport {LineChart} from \"react-native-chart-kit\";\nimport {Divider} from \"@ui-kitten/components\";\nimport * as ImagePicker from \"expo-image-picker\";\n\nconst AdminHomePage = createNativeStackNavigator();\n\nexport default function AdminHomeNavigation() {\n    const [ adminCommands, setAdminCommands ] = useState([])\n    const userKey = useAppSelector(selectUserKey)\n    useEffect(() => {\n        getAdminCommands()\n    }, [])\n    async function getAdminCommands() {\n        const adminURL = base_URL + '/adminCommands'\n        let res = await fetch(adminURL + '/getAdminCommands', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'userKey': userKey\n            },\n        })\n        console.log(adminCommands)\n        let commands: Array<any> = await res.json()\n        let filter = await fetch(adminURL + '/toggleAdminCommands', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'userKey': userKey\n            },\n            body: '{}',\n        })\n        const filterObject = (await filter.json()).currentAdminCommandsStatus\n        console.log(filterObject)\n        commands = commands.sort(function(a, b) {\n            const textA = a.label.toUpperCase();\n            const textB = b.label.toUpperCase();\n            return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\n        });\n        let finalCommandList = []\n        for (const command of commands) {\n            if (filterObject[command.label]) {\n                finalCommandList.push(command)\n            }\n        }\n        // @ts-ignore\n        setAdminCommands(finalCommandList)\n        return commands\n    }\n\n    const [refreshing, setRefreshing] = useState(false);\n\n    const onRefresh = useCallback(() => {\n        setRefreshing(true);\n        setAdminCommands([])\n        getAdminCommands().then(commands => setRefreshing(false))\n    }, []);\n\n    const AdminHome = ({ navigation }) => {\n        return (\n            <ScrollView refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} />}>\n                {adminCommands?.length === 0 ? <Text>No Commands Yet. Rip</Text> : null}\n                {adminCommands?.map((command) => {\n                    return (\n                        <TouchableOpacity\n                            onPress={() => {\n                                navigation.navigate('AdminCommand', { data: command });\n                            }}\n                            style={listingStyles.cardContainer}\n                            key={command.url}>\n                            <Text style={listingStyles.text}>{command.label}</Text>\n                        </TouchableOpacity>\n                    );\n                })}\n            </ScrollView>\n        );\n    };\n\n    return (\n        <AdminHomePage.Navigator initialRouteName=\"AdminHome\">\n            <AdminHomePage.Screen\n                options={{\n                    //title: 'Admin Home',\n                    /*headerTitle: () => {\n                        return adminControlPanelHeader;\n                    },*/\n                    headerShown: false\n                }}\n                name=\"AdminHome\"\n                component={AdminHome}\n            />\n            <AdminHomePage.Screen\n                name=\"AdminCommand\"\n                component={AdminCommand}\n                options={{ headerTitle: '' }}\n            />\n        </AdminHomePage.Navigator>\n    );\n}\n\n\nconst AdminCommand = ({route: {params: { data }}}) => {\n    const [ info, setInfo ] = useState({});\n    const [ isFileUpload, setIsFileUpload ] = useState(false);\n    const [ body, setBody ] = useState({})\n    const [ users, setUsers ] = useState([])\n    const [ fileUploads, setFileUploads ] = useState([])\n    const [ sponsors, setSponsors ] = useState([])\n    const [ status, setStatus ] = useState('0')\n    const [ allFieldsFilled, setAllFieldsFilled ] = useState(false)\n    const [ buttonPushed, setButtonPushed ] = useState(false) // refresh button\n    const userKey = useAppSelector(selectUserKey)\n\n    useEffect(() => {\n        // Check for first button render\n        checkForFieldsFilled(body)\n        // Fetch User List\n        fetch(base_URL + '/users/getUserNameList', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'userKey': userKey\n            }\n        }).then(async (data) => {\n            if (data.ok) {\n                let newUsers = (await data.json()).map(userName => {\n                    return {\n                        label: userName,\n                        id: userName\n                    }\n                })\n                setUsers(newUsers)\n            }\n        })\n        // Fetch Sponsor List\n        fetch(base_URL + '/sponsors/', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'userKey': userKey\n            }\n        }).then(async (data) => {\n            if (data.ok) {\n                let sponsors = (await data.json()).map(sponsor => {\n                    return {\n                        label: sponsor.sponsorName,\n                        id: sponsor._id\n                    }\n                })\n                setSponsors(sponsors)\n            }\n        })\n        // Fetch File upload List\n        fetch(base_URL + '/adminCommands/getReferenceImages', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'userKey': userKey\n            }\n        }).then(async (data) => {\n            if (data.ok) {\n                let images = (await data.json()).map(imageName => {\n                    return {\n                        label: imageName,\n                        id: imageName\n                    }\n                })\n                setFileUploads(images)\n            }\n        })\n    }, [])\n\n    function checkForFieldsFilled(body) {\n        for (const field of data.fields) {\n            if (field.mandatory) {\n                if (body[field.id] === undefined || body[field.id] === null) {\n                    setAllFieldsFilled(false)\n                    return\n                }\n            }\n        }\n        setAllFieldsFilled(true)\n    }\n\n    const sendApiData = (data, userKey) => {\n        let additionToUrl = ''\n        for (const aspect in body) {\n            if (body[aspect].paramOverride) {\n                additionToUrl += body[aspect]\n                break\n            }\n        }\n        if (JSON.stringify(body,null,2) !== '{}' && data.apiType === 'GET') {\n            for (const aspect in body) {\n                if (additionToUrl === '') {\n                    additionToUrl = '?'\n                } else {\n                    additionToUrl += '&'\n                }\n                additionToUrl += aspect + '=' + body[aspect]\n            }\n        }\n        const newUrl = data.url + additionToUrl\n        console.log('isFileUpload: ' + isFileUpload)\n        if (!isFileUpload) {\n            fetch(\n                newUrl,\n                {\n                    method: data.apiType,\n                    headers: {\n                        'Content-Type': 'application/json',\n                        userKey: userKey\n                    },\n                    body: JSON.stringify(body,null,2) !== '{}' && data.apiType !== 'GET' ? JSON.stringify(body) : undefined\n                }\n            ).then((res) => {\n                // @ts-ignore\n                setStatus(res.status)\n                res.text().then((text) => {\n                    try {\n                        const text2 = JSON.parse(text)\n                        setInfo(text2)\n                    } catch (err) {\n                        setInfo(text)\n                    }\n                })\n            })\n        } else {\n            let formdata = new FormData();\n            for (const item in body) {\n                if (!item.includes('picture')) {\n                    formdata.append(item, body[item]);\n                } else {\n                    formdata.append(item, {\n                        // @ts-ignore\n                        uri: body[item].uri,\n                        name: item,\n                        type: 'image/jpg',\n                    });\n                }\n            }\n            fetch(newUrl, {\n                body: formdata,\n                redirect: 'follow',\n                method: data.apiType,\n                headers: {\n                    userKey: userKey\n                },\n            }).then((res) => {\n                // @ts-ignore\n                setStatus(res.status)\n                res.text().then((text) => {\n                    try {\n                        const text2 = JSON.parse(text)\n                        setInfo(text2)\n                    } catch (err) {\n                        setInfo(text)\n                    }\n                })\n            })\n        }\n    }\n\n    if (buttonPushed) {\n        setButtonPushed(false)\n        sendApiData(data, userKey)\n    }\n\n    function renderEachDropItem(field) {\n        if (field['data']) {\n            // This is where we can add preset lists if we can't use something hardcoded on the server\n            switch (field['data']) {\n                case 'users' : {\n                    field.options = users\n                    break\n                }\n                case 'sponsors' : {\n                    field.options = sponsors\n                    break\n                }\n                case 'fileUploads' : {\n                    field.options = fileUploads\n                    break\n                }\n            }\n        }\n        let final = []\n        for (const option of field.options) {\n            final.push(\n                <SelectItem title={option.label}/>\n            )\n        }\n        return final\n    }\n\n    function renderTheFieldsNecessary(fields) {\n        const changeValue = (theValue, valueToChange) => {\n            let newBody = body\n            for (const aspect in newBody) {\n                if (newBody[aspect] === null || newBody[aspect] === undefined || newBody[aspect] === '') {\n                    delete newBody[aspect]\n                }\n            }\n            if (theValue !== undefined) {\n                newBody[valueToChange] = theValue\n            } else {\n                if (newBody[valueToChange]) {\n                    delete newBody[valueToChange]\n                }\n            }\n            console.log(newBody)\n            setBody(newBody)\n            checkForFieldsFilled(newBody)\n        }\n\n        const fileUploadTemplate = (field) => {\n            const pickImage = async () => {\n                let result = await ImagePicker.launchImageLibraryAsync({\n                    allowsEditing: false,\n                });\n                if (!result.cancelled) {\n                    changeValue(result, field.id);\n                }\n            };\n\n            return (\n                <View>\n                    {/* Image Picker */}\n                    <TouchableOpacity\n                        onPress={() => {\n                            pickImage();\n                        }}\n                        style={{\n                            height: 80,\n                            justifyContent: 'center',\n                            alignItems: 'center',\n                            borderRadius: 8,\n                            paddingVertical: 8,\n                            flexDirection: 'row',\n                            backgroundColor: '#dbdbdb',\n                            marginVertical: 15,\n                            marginHorizontal: 5,\n                        }}>\n                        <Layout\n                            style={{\n                                flex: 1,\n                                flexDirection: 'row',\n                                height: '100%',\n                                marginHorizontal: 10,\n                                backgroundColor: '#dbdbdb',\n                            }}>\n                            <Layout\n                                style={{\n                                    flex: 1,\n                                    justifyContent: 'center',\n                                    alignItems: 'center',\n                                    height: '100%',\n                                    borderRadius: 10,\n                                    backgroundColor: '#bfbfbf',\n                                }}>\n                                {body && body[field?.id] ? (\n                                    <Image\n                                        source={{ uri: body[field.id].uri }}\n                                        style={{ width: '90%', height: '90%', borderRadius: 10 }}\n                                    />\n                                ) : (\n                                  <FontAwesome name=\"image\" size={40} color={'grey'} />\n                                )}\n                            </Layout>\n                            <Layout\n                                style={{\n                                    backgroundColor: '#dbdbdb',\n                                    flex: 4,\n                                    height: '100%',\n                                    justifyContent: 'center',\n                                    alignItems: 'center',\n                                }}>\n                                <Text\n                                    style={{\n                                        fontSize: 17,\n                                    }}>\n                                    {body && body[field?.id]\n                                        ? 'Select Another Image'\n                                        : 'Select Image'}\n                                </Text>\n                            </Layout>\n                        </Layout>\n                    </TouchableOpacity>\n                </View>\n            );\n        }\n        const renderFilterParameters = (fields) => {\n            if (fields.length === 0) {\n                return null\n            }\n            return (\n                <View style={{flexDirection:'row'}}>\n                    <Text\n                        style={{\n                            fontSize: 15,\n                            paddingLeft: 12,\n                            paddingBottom: 5,\n                            paddingTop: 5,\n                            alignContent:'center',\n                            fontWeight: 'bold',\n                        }}>\n                        Filters/Parameters\n                    </Text>\n                </View>\n            )\n        }\n        let final = [];\n\n        function renderStringArray(field) {\n            const valuesToSend = {}\n            function changeStringValue(theValue, miniField, field) {\n                valuesToSend[miniField] = theValue\n                let newFieldForBody = []\n                for (const value of Object.values(valuesToSend)) {\n                    newFieldForBody.push(value)\n                }\n                changeValue(newFieldForBody, field.id)\n            }\n            let tempFinal = []\n            tempFinal.push(\n                <Text\n                    style={{\n                        fontSize: 14,\n                        paddingLeft: 5,\n                        paddingBottom: 3,\n                        paddingTop: 3,\n                    }}>\n                    {field.mandatory ? field.label + ' (mandatory)' : field.label}\n                </Text>\n            )\n            for (const eachOne in field.stringArray) {\n                tempFinal.push(\n                    <TextInput\n                        autoCapitalize={'none'}\n                        onChangeText={(theValue) => changeStringValue(theValue, field.stringArray[eachOne].label, field)}\n                        style={myStyles.indentedInput}\n                        placeholderTextColor={'gray'}\n                        placeholder={field.stringArray[eachOne].mandatory ? field.stringArray[eachOne].label + ' (mandatory)' : field.stringArray[eachOne].label}\n                    />\n                )\n            }\n            return tempFinal;\n        }\n\n        const renderMultiSelectDropDown = (field) => {\n            const [ selectedIndex, setSelectedIndex ] = useState([]);\n            const [ hasChosen, setHasChosen ] = useState(false)\n            function toggleValue(index) {\n                setHasChosen(true)\n                setSelectedIndex(index)\n                const newSelection = Array.isArray(index) ? index.map((littleIndex) => {\n                    return field.options[littleIndex.row].id\n                }) : field.options[index.row].id\n                changeValue(newSelection, field.id)\n            }\n            function calculateSelectedValues() {\n                let finalArray = selectedIndex.map((littleIndex) => {\n                    return field.options[littleIndex.row].label + ', '\n                })\n                if (finalArray.length > 0){\n                    let finalObject = finalArray.at(-1)\n                    finalObject = finalObject.replace(', ', '')\n                    finalArray.splice( -1, 1)\n                    finalArray.push(finalObject)\n                    return finalArray\n                } else {\n                    return field.mandatory ? field.label + ' (mandatory)' : field.label\n                }\n            }\n            return (\n                <Layout style={myStyles.containerDrop} level='1'>\n                    <Select\n                        multiSelect={true}\n                        value={hasChosen ? calculateSelectedValues() : field.label}\n                        selectedIndex={selectedIndex}\n                        onSelect={index => toggleValue(index)}>\n                        {renderEachDropItem(field)}\n                    </Select>\n                </Layout>\n            );\n        }\n\n        const renderDropDown = (field) => {\n            const [ selectedIndex, setSelectedIndex ] = useState(new IndexPath(0));\n            const [ hasChosen, setHasChosen ] = useState(false)\n\n            function currentValue() {\n                return <Text>{!hasChosen ? ('Choose ' + field.label + (field.mandatory ? ' (mandatory)' : '')) : field.options[selectedIndex.row - 1].label} </Text>\n            }\n\n            function handleSelection(index) {\n                setSelectedIndex(index)\n                changeValue(index.row === 0 ? undefined : field.options[index.row - 1].id, field.id)\n                if (index.row === 0) {\n                    setHasChosen( false)\n                } else {\n                    setHasChosen(true)\n                }\n\n            }\n\n            return (\n                <Select\n                    style={myStyles.containerDrop}\n                    value={currentValue}\n                    selectedIndex={selectedIndex}\n                    onSelect={handleSelection}>\n                    <SelectItem title={' '}/>\n                    {renderEachDropItem(field)}\n                </Select>\n            );\n        };\n\n        for (let i = 0; i < fields.length; i++) {\n            const type = fields[i].type\n            if (type === 'Boolean') {\n                final.push(\n                    trueFalseTemplate(fields[i])\n                )\n            } else if (type === 'String') {\n                final.push(\n                    <TextInput\n                        autoCapitalize={'none'}\n                        clearButtonMode={'always'}\n                        onChangeText={(theValue) => changeValue(theValue, fields[i].id)}\n                        style={myStyles.input}\n                        placeholderTextColor={'gray'}\n                        placeholder={fields[i].mandatory ? fields[i].label + ' (mandatory)' : fields[i].label}\n                    />\n                )\n            } else if (type === 'ArrayString') {\n                final.push(renderStringArray(fields[i]))\n            } else if (type === 'DropDown') {\n                final.push(renderDropDown(fields[i]))\n            } else if (type === 'MultiSelectDropDown') {\n                final.push(renderMultiSelectDropDown(fields[i]))\n            } else if (type === 'BigString') {\n                final.push(\n                    <TextInput\n                        autoCapitalize={'sentences'}\n                        clearButtonMode={'always'}\n                        onChangeText={(theValue) => changeValue(theValue, fields[i].id)}\n                        style={myStyles.inputBig}\n                        multiline={true}\n                        placeholderTextColor={'gray'}\n                        placeholder={fields[i].mandatory ? fields[i].label + ' (mandatory)' : fields[i].label}\n                    />\n                )\n            } else if (type === 'FileUpload') {\n                if (!isFileUpload) {\n                    setIsFileUpload(true);\n                }\n                final.push(fileUploadTemplate(fields[i]))\n            }\n        }\n        return (\n            <View>\n                {renderFilterParameters(fields)}\n                <View>\n                    {final}\n                </View>\n            </View>\n        )\n    }\n\n    const trueFalseTemplate = (field) => {\n        const [selectedIndex, setSelectedIndex] = useState();\n        const boolValues = ['false', 'true']\n        // @ts-ignore\n        const displayValue = boolValues[selectedIndex - 1]\n        const renderOption = (displayValue) => (\n            <SelectItem title={displayValue}/>\n        );\n        const changeEverything = (value) => {\n            setSelectedIndex(value)\n            if (value.row === 0) {\n                let newBody = body\n                newBody[field.id] = false\n                setBody(newBody)\n            } else if (value.row === 1) {\n                let newBody = body\n                newBody[field.id] = true\n                setBody(newBody)\n            }\n        }\n        return (\n            <Layout style={styles.container} level='1'>\n                <Select\n                    label={field.label}\n                    selectedIndex={selectedIndex}\n                    value={displayValue}\n                    onSelect={index => changeEverything(index)}\n                    placeholder={field.mandatory ? field.label + \" (mandatory)\" : field.label + \"\"}>\n                    {boolValues.map(renderOption)}\n                </Select>\n            </Layout>\n        );\n    };\n\n    function showResponseData(actions) {\n        if (JSON.stringify(info,null,2) === '{}') {\n            return null\n        }\n        let informationToShow = [];\n\n        // use this one for displaying everything pretty\n        if (Array.isArray(info)) {\n            if (data.isDateGraph) { // check for need for rendering graphs\n                const timeFrames = [\n                    '2week-unique',\n                    '2week-total',\n                    'month-unique',\n                    '6month-total'\n                ]\n                for (const item of timeFrames) {\n                    const dataToShow = {\n                        labels: getDates(item),\n                        datasets: [\n                            {\n                                data: getData(item)\n                            }\n                        ]\n                    }\n                    informationToShow.push(renderOneGraph(dataToShow, item))\n                }\n            }\n            for (const oneElement of info) {\n                informationToShow.push(\n                    renderOneCard(oneElement, actions ? actions : [])\n                );\n            }\n        } else {\n            informationToShow.push(\n                <Text style={{ flexShrink: 1 }}>\n                    {typeof info === 'string' ? info : JSON.stringify(info,null,2)}\n                </Text>\n            );\n        }\n\n        function getData(timeFrame) {\n            let final = [];\n            switch (timeFrame) {\n                case '2week-unique': {\n                    for (let i = 13; i >= 0; i--) {\n                        let day = moment().tz(\"America/Los_Angeles\").subtract(i, 'days').format('YYYY-MM-DD');\n                        let counter = 0;\n                        let usersToday = []\n                        // @ts-ignore\n                        for (const instance of info) {\n                            let userName = instance.userName\n                            if (instance.date === day && !usersToday.includes(userName)) {\n                                usersToday.push(userName)\n                                counter++;\n                            }\n                        }\n                        final.push(counter);\n                    }\n                    break;\n                }\n                case '2week-total': {\n                    for (let i = 13; i >= 0; i--) {\n                        let day = moment().tz(\"America/Los_Angeles\").subtract(i, 'days').format('YYYY-MM-DD');\n                        let counter = 0;\n                        let usersToday = []\n                        // @ts-ignore\n                        for (const instance of info) {\n                            let userName = instance.userName\n                            if (instance.date === day) {\n                                usersToday.push(userName)\n                                counter++;\n                            }\n                        }\n                        final.push(counter);\n                    }\n                    break;\n                }\n                case 'month-unique': {\n                    for (let i = 4; i > 0; i--) {\n                        let weekStart = moment().tz(\"America/Los_Angeles\").subtract(i, 'weeks').format('YYYY-MM-DD')\n                        let weekEnd = moment().tz(\"America/Los_Angeles\").subtract(i - 1, 'weeks').format('YYYY-MM-DD')\n                        let counter = 0;\n                        let usersMonth = []\n                        // @ts-ignore\n                        for (const instance of info) {\n                            if (instance.date > weekStart && instance.date <= weekEnd && !usersMonth.includes(instance.userName)) {\n                                counter++;\n                                usersMonth.push(instance.userName)\n                            }\n                        }\n                        final.push(counter);\n                    }\n                    break;\n                }\n                case '6month-total': {\n                    for (let i = 6; i > 0; i--) {\n                        let monthStart = moment().tz(\"America/Los_Angeles\").subtract(i, 'months').format('YYYY-MM-DD')\n                        let monthEnd = moment().tz(\"America/Los_Angeles\").subtract(i - 1, 'months').format('YYYY-MM-DD')\n                        let counter = 0;\n                        // @ts-ignore\n                        for (const instance of info) {\n                            if (instance.date > monthStart && instance.date <= monthEnd) {\n                                counter++;\n                            }\n                        }\n                        final.push(counter);\n                    }\n                    break;\n                }\n            }\n            return final;\n        }\n\n        function getDates(timeFrame) {\n            let final = []\n            switch (timeFrame) {\n                case '2week-unique': {\n                    for (let i = 13; i >= 0; i--) {\n                        final.push(moment().tz(\"America/Los_Angeles\").subtract(i, 'days').format('MM/DD'))\n                    }\n                    break;\n                }\n                case '2week-total': {\n                    for (let i = 13; i >= 0; i--) {\n                        final.push(moment().tz(\"America/Los_Angeles\").subtract(i, 'days').format('MM/DD'))\n                    }\n                    break;\n                }\n                case 'month-unique': {\n                    for (let i = 4; i > 0; i--) {\n                        final.push(moment().tz(\"America/Los_Angeles\").subtract(i, 'weeks').add(1, 'days').format('MM/DD')\n                            + '-' +\n                            moment().tz(\"America/Los_Angeles\").subtract(i - 1, 'weeks').format('MM/DD'))\n                    }\n                    break;\n                }\n                case '6month-total': {\n                    for (let i = 6; i > 0; i--) {\n                        final.push(moment().tz(\"America/Los_Angeles\").subtract(i, 'months').add(1, 'days').format('MM/DD')\n                            + '-' +\n                            moment().tz(\"America/Los_Angeles\").subtract(i - 1, 'months').format('MM/DD'))\n                    }\n                    break;\n                }\n            }\n            return final;\n        }\n\n        function renderOneGraph(graphData, timeFrame) {\n            return (\n                <View style={{paddingBottom: 10}}>\n                    <Text>Timeframe: {timeFrame}</Text>\n                    <LineChart\n                        data={graphData}\n                        width={Dimensions.get(\"window\").width}\n                        height={400}\n                        verticalLabelRotation={60}\n                        fromZero={true}\n                        xLabelsOffset={-10}\n                        segments={8}\n                        chartConfig={{\n                            backgroundColor: \"#bdbdbd\",\n                            decimalPlaces: 0,\n                            color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n                            labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n                            style: {\n                                borderRadius: 16\n                            },\n                            propsForDots: {\n                                r: \"6\",\n                                strokeWidth: \"2\",\n                                stroke: \"#333333\"\n                            }\n                        }}\n                    />\n                </View>\n            )\n        }\n\n        function renderOneCard(cardInfo, actions) {\n            let finalText = []\n            for (const aspect in cardInfo) {\n                if (aspect !== '_id' && aspect !== '__v'){\n                    finalText.push(\n                        <View style={{flexDirection: 'row', flexWrap:'wrap'}}>\n                            <Text style={{fontWeight: 'bold'}}>\n                                {aspect + ' : '}\n                            </Text>\n                            <Text>\n                                {JSON.stringify(cardInfo[aspect],null,'\\t')}\n                            </Text>\n                        </View>\n                    )\n                }\n            }\n            let renderedActions = null\n            // @ts-ignore\n            if (actions !== []) {\n                renderedActions = []\n                for (const action of actions) {\n                    renderedActions.push(\n                        renderButtonForCard(action, cardInfo)\n                    )\n                }\n            }\n\n            function renderButtonForCard(action, cardInfo) {\n                return (\n                    <View style={{marginHorizontal: 20}}>\n                        <TouchableOpacity style={{\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            width: 100,\n                            height: 40,\n                            backgroundColor: action.color ? action.color : 'gray',\n                            elevation: 3,\n                        }} onPress={() => {\n                            let params = {}\n                            for (const parameter of action.params) {\n                                params[parameter] = cardInfo[parameter] ? cardInfo[parameter] : undefined\n                            }\n                            fetch(\n                                action.url,\n                                {\n                                    method: action.method,\n                                    headers: {\n                                        'Content-Type': 'application/json',\n                                        'userKey': userKey\n                                    },\n                                    body: JSON.stringify(params)\n                                }\n                            ).then(res => {\n                                if (res.ok) {\n                                    setButtonPushed(true)\n                                }\n                                // res.text().then(final => console.log(final))\n                            })\n                        }}>\n                            {/* @ts-ignore */}\n                            <Text style={myStyles.buttonText}>{action.label}</Text>\n                        </TouchableOpacity>\n                    </View>\n                )\n            }\n\n\n            return (\n                <View>\n                    <Card>\n                        {finalText}\n                        <View style={{paddingTop: 15, width:'95%', flexDirection: 'row', alignSelf:'center', alignContent: 'center', justifyContent: 'center'}}>\n                            {renderedActions}\n                        </View>\n                    </Card>\n                    <Divider/>\n                </View>\n            )\n\n        }\n\n        return (\n            <View style={{ flexShrink: 1 }}>\n                <Text\n                    style={{\n                        fontSize: 20,\n                        paddingLeft: 20,\n                        paddingBottom: 0,\n                        paddingTop: 20,\n                        fontWeight: 'bold',\n                    }}>\n                    Server Response\n                </Text>\n                <Text\n                    style={{\n                        fontSize: 13,\n                        paddingLeft: 20,\n                        paddingBottom: 10,\n                        paddingTop: 5,\n                        fontStyle: 'italic',\n                    }}>\n                    Status Code: {status}\n                </Text>\n                <View style={{paddingTop: 10, backgroundColor: 'lightgray'}}>\n                    {informationToShow}\n                </View>\n            </View>\n        );\n    }\n\n\n    return (\n        <KeyboardAvoidingView\n            behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}>\n            <ScrollView style={{height: '100%'}}>\n                <View style={sponsorPageStyles.container}>\n                    <View style={{ width: '100%', display: 'flex', alignItems: 'center' }}>\n                        <Text style={sponsorPageStyles.title}>{data.label}</Text>\n                    </View>\n\n                    {data.url && (\n                        // @ts-ignore\n                        <View style={sponsorPageStyles.address}>\n                            <Text style={{ fontSize: 18 }}>{data.url}</Text>\n                        </View>\n                    )}\n                    <View style={sponsorPageStyles.description}>\n                        {renderTheFieldsNecessary(data.fields)}\n                    </View>\n                    {allFieldsFilled && <TouchableOpacity onPress={() => {\n                        sendApiData(data, userKey)\n                        // @ts-ignore\n                    }} style={myStyles.button}><Text style={myStyles.text}>Send Call</Text></TouchableOpacity>}\n                    {showResponseData(data.actions)}\n                </View>\n            </ScrollView>\n        </KeyboardAvoidingView>\n    );\n};\n\nconst sponsorPageStyles = {\n    container: {\n        flex: 1,\n        backgroundColor: 'white',\n        // alignItems: 'center',\n    },\n    header: {\n        marginTop: 20,\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%',\n    },\n    address: {\n        alignItems: 'center',\n        margin: 10,\n        borderColor: 'black',\n        borderWidth: 1,\n        padding: 10,\n    },\n    video: {\n        marginTop: 20,\n        display: 'flex',\n        justifyContent: 'flex-start',\n    },\n    title: {\n        fontSize: 26,\n        marginLeft: 10,\n    },\n    logo: {\n        width: '100%',\n        height: 100,\n    },\n    description: {\n        borderWidth: 1,\n        margin: 10,\n        borderColor: '#5d5c5c',\n        borderRadius: 5,\n        width: '95%',\n        padding: 10,\n        backgroundColor: 'rgba(178,166,166,0.22)',\n    },\n    couponContainer: {\n        width: '100%',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    coupon: {\n        width: 400,\n        height: 267,\n    },\n    imageGallery: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        margin: 10,\n        marginBottom: 0,\n    },\n    imageStyle: {\n        width: 150,\n        height: 150,\n        paddingTop: 100,\n        margin: 5,\n    },\n    headerText: {\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n}\n\nconst myStyles = {\n    inputBig: {\n        height: 200,\n        backgroundColor: 'white',\n        margin: 12,\n        borderWidth: 1,\n        padding: 10,\n    },\n    input: {\n        backgroundColor: '#ffffff',\n        height: 50,\n        margin: 12,\n        borderWidth: 1,\n        padding: 10,\n    },\n    containerDrop: {\n        backgroundColor: '#ffffff',\n        height: 42,\n        margin: 12,\n        borderWidth: 1,\n    },\n    indentedInput: {\n        backgroundColor: '#ffffff',\n        height: 50,\n        marginVertical: 12,\n        borderWidth: 1,\n        padding: 10,\n        marginRight: 12,\n        marginLeft: 30\n    },\n    text: {\n        fontSize: 16,\n        lineHeight: 21,\n        fontWeight: 'bold',\n        letterSpacing: 0.25,\n        color: 'white',\n    },\n    buttonText: {\n        fontSize: 13,\n        flexWrap: 'wrap',\n        lineHeight: 15,\n        fontWeight: 'bold',\n        letterSpacing: 0.25,\n        color: 'white',\n    },\n    button: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        paddingVertical: 12,\n        paddingHorizontal: 32,\n        borderRadius: 4,\n        elevation: 3,\n        backgroundColor: 'black',\n    }\n}\n\n\nconst listingStyles = {\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n    },\n    cardContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        alignSelf: 'center',\n        width: '95%',\n        height: 75,\n        backgroundColor: '#bbbbbb',\n        borderRadius: 10,\n        borderWidth: 1,\n        borderColor: '#ddd',\n        borderBottomWidth: 0,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.2,\n        shadowRadius: 2,\n        elevation: 1,\n        marginLeft: 5,\n        marginRight: 5,\n        marginTop: 10,\n    },\n    text: {\n        flex: 1,\n        fontSize: 20,\n        textAlign: 'center',\n        marginTop: 5,\n        marginBottom: 5,\n    },\n    image: {\n        width: '100%',\n        height: '100%',\n        borderRadius: 10,\n    },\n}\n\nconst styles = {\n    imagesContainer: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between',\n        padding: 10,\n        paddingTop: 20,\n    },\n    imageContainer: {\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    imageLabel: {\n        fontSize: 12,\n        color: 'black',\n        padding: 10,\n        textAlign: 'center',\n    },\n    cardContainer: {\n        backgroundColor: '#FFF',\n        borderWidth: 0,\n        flex: 1,\n        justifyContent: 'center',\n        margin: 0,\n        padding: 0,\n    },\n    container: {\n        flex: 1,\n\n    }\n}","import {createNativeStackNavigator} from \"@react-navigation/native-stack\";\nimport {useAppSelector} from \"../../app/hooks\";\nimport {selectDarkMode, selectUserKey} from \"../../app/appDataSlice\";\nimport React, {useState} from \"react\";\nimport {base_URL} from \"../notifications/constants\";\nimport {Image, TouchableOpacity} from \"react-native\";\nimport {Layout} from \"@ui-kitten/components\";\nimport Header from \"../../components/Header\";\nimport AdminHomeNavigation from \"./adminPanel\";\n\n\nconst AdminStack = createNativeStackNavigator();\nexport default function AdminPanel() {\n    const accessoryLeft = (\n        <Image\n            style={{\n                height: 28,\n                width: 28,\n                alignItems: 'center',\n            }}\n            source={require('../../../assets/logos/app-logo-transparent.png')}\n        />\n    );\n\n    return (\n        <AdminStack.Navigator>\n            <AdminStack.Screen\n                options={{\n                    header: () => {\n                        return (\n                            <Layout style={{paddingBottom: 10}}>\n                                <Header\n                                    accessoryLeft={accessoryLeft}\n                                    title=\"Admin Panel\"\n                                />\n                            </Layout>\n                        )\n                    },\n                }}\n                name={'AdminStack'}\n                component={AdminHomeNavigation}\n            />\n        </AdminStack.Navigator>\n    );\n}","import { Image, View } from 'react-native';\n\nexport default function WebSplashScreen() {\n  return (\n    <View\n      style={{\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}>\n      <Image\n        source={require('../../assets/logos/splash-logo.png')}\n        style={{ width: 300, height: 300 }}\n      />\n    </View>\n  );\n}\n","import { useIsFocused, useNavigation } from '@react-navigation/native';\nimport { useGetCurrentSectionQuery } from '../../api/classPagesApi';\nimport {\n  Alert,\n  Dimensions,\n  FlatList,\n  Image,\n  Keyboard,\n  KeyboardAvoidingView,\n  LogBox,\n  Platform,\n  SafeAreaView,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from 'react-native';\nimport { Text } from '@ui-kitten/components';\nimport { useAppSelector } from '../../../app/hooks';\nimport { io } from 'socket.io-client';\nimport React, { useEffect, useState } from 'react';\nimport { base_URL } from '../../../constants/admin';\nimport { selectUserKey } from '../../../app/appDataSlice';\nimport { useGetUserInfoQuery } from '../../api/usersApi';\nimport Loader from 'react-native-three-dots-loader';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport * as ImagePicker from 'expo-image-picker';\nimport Toast from 'react-native-root-toast';\nimport SearchBar from '../../../components/SearchBar';\n\nexport default function SingleChatRoom({\n  route: {\n    params: { data },\n  },\n}) {\n  const [imagePickerStatus, requestImagePickerPermission] =\n    ImagePicker.useMediaLibraryPermissions();\n  const [cameraStatus, requestCameraPermission] =\n    ImagePicker.useCameraPermissions();\n  const [filter, setFilter] = useState('');\n  const [showSearch, setShowSearch] = useState(false);\n  const [photoSelected, setPhotoSelected] = useState({\n    date: null,\n    id: null,\n    contentImage: null,\n  });\n  const [keyboardShown, setKeyboardShown] = useState(false);\n  const [retryNumber, setRetryNumber] = useState(0);\n  const [failedConnection, setFailedConnection] = useState(false);\n  const [hardDisableSend, setHardDisableSend] = useState(false);\n  const navigation = useNavigation();\n  const [message, setMessage] = useState('');\n  const [filteredMessageList, setFilteredMessageList] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const userKey = useAppSelector(selectUserKey);\n  const { data: userData } = useGetUserInfoQuery(userKey, {\n    skip: !userKey,\n  });\n  const { data: currentSection, isLoading: isCurrentSectionLoading } =\n    useGetCurrentSectionQuery();\n  const [messageList, setMessageList] = useState([]);\n  const socket = io(base_URL + '/realTimeChat/' + data.id, {\n    auth: {\n      userKey,\n    },\n  });\n\n  useEffect(() => {\n    // Bug with some component i guess cause i didn't use animated anything, yet expo has a seizure and spams warnings\n    LogBox.ignoreLogs(['Animated: `useNativeDriver`']);\n\n    // Keyboard listeners\n    const showListener = Keyboard.addListener('keyboardWillShow', () => {\n      setKeyboardShown(true);\n    });\n    const hideListener = Keyboard.addListener('keyboardWillHide', () => {\n      setKeyboardShown(false);\n    });\n\n    return () => {\n      showListener.remove();\n      hideListener.remove();\n    };\n  }, []);\n\n  useEffect(() => {\n    navigation.setOptions({\n      headerTitle:\n        data.id === 'public'\n          ? 'Public'\n          : data.id === 'admin'\n          ? 'Admin'\n          : data.id,\n      headerRight: () => (\n        <TouchableOpacity\n          onPress={() => {\n            setFilter('');\n            setShowSearch(!showSearch);\n          }}>\n          <FontAwesome5 name=\"search\" size={20} color={'black'} />\n        </TouchableOpacity>\n      ),\n    });\n  }, [showSearch]);\n\n  useEffect(() => {\n    // maintenance\n\n    // socket logic\n    socket.connect();\n    const timer = setTimeout(function () {\n      socket.off('connect');\n      socket.off('newMessage');\n      socket.disconnect();\n      socket.close();\n      setFailedConnection(true);\n    }, 10000);\n    socket.on('connect', () => {\n      console.log('connected');\n      clearTimeout(timer);\n      getMessages();\n    });\n    return () => {\n      setLoaded(false);\n      socket.disconnect();\n      socket.off('connect');\n      socket.off('newMessage');\n    };\n  }, [useIsFocused(), retryNumber]);\n\n  // Add all new message changes here\n  useEffect(() => {\n    socket.on('imageMessageServer', (msg) => {\n      addMessage(msg);\n    });\n    socket.on('newMessage', (msg) => {\n      addMessage(msg);\n    });\n    socket.on('deleteMessage', (msg) => {\n      const index = messageList.findIndex((mess) => isEqualTo(mess, msg));\n      if (index !== -1) {\n        setMessageList([...messageList].splice(index, 1));\n      }\n    });\n    return () => {\n      socket.off('imageMessageServer');\n      socket.off('newMessage');\n      socket.off('deleteMessage');\n    };\n  }, [messageList]);\n\n  function getMessages() {\n    fetch(base_URL + '/chatRooms/getMessages?roomId=' + data.id, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        userKey: userKey,\n      },\n    }).then(async (data) => {\n      if (!data.ok) {\n        setFailedConnection(true);\n      } else {\n        data.json().then(async (array) => {\n          setMessageList(array);\n          setLoaded(true);\n        });\n      }\n    });\n  }\n\n  useEffect(() => {\n    setFilteredMessageList(\n      messageList.filter((mess) =>\n        (mess.user + mess.message).toLowerCase().includes(filter.toLowerCase())\n      )\n    );\n  }, [filter]);\n\n  function addMessage(messageToAdd) {\n    let myMessage = messageList.find((mess) => isEqualTo(mess, messageToAdd));\n    if (myMessage) {\n      delete myMessage.isUnsent;\n      setMessageList(\n        [...messageList]\n          .filter((mess) => !isEqualTo(mess, messageToAdd))\n          .concat(myMessage)\n      );\n    } else {\n      setMessageList([...messageList].concat(messageToAdd));\n    }\n  }\n\n  function isEqualTo(message1, message2) {\n    try {\n      return message1.user === message2.user && message1.date === message2.date;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  async function activateCamera() {\n    const date = new Date().toISOString();\n    const response = await requestCameraPermission();\n    if (response.granted || cameraStatus.granted) {\n      let result = await ImagePicker.launchCameraAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      });\n      if (!result.canceled) {\n        setMessage('');\n        setPhotoSelected({\n          id: userData.userName + date + data.id + currentSection,\n          contentImage: result.assets[0],\n          date: date,\n        });\n      }\n    } else {\n      Alert.alert(\n        \"Permission to access camera is required. Please enable it in your phone's settings.\"\n      );\n    }\n  }\n\n  async function selectPhoto() {\n    const date = new Date().toISOString();\n    const response = await requestImagePickerPermission();\n    if (response.granted || imagePickerStatus.granted) {\n      let result = await ImagePicker.launchImageLibraryAsync({\n        allowsEditing: false,\n      });\n      if (!result.canceled) {\n        setMessage('');\n        setPhotoSelected({\n          id: userData.userName + date + data.id + currentSection,\n          contentImage: result.assets[0],\n          date: date,\n        });\n\n        if (Platform.OS === 'android') {\n          Toast.show(\"Don't worry if the image seems blurry on the sides.\", {\n            duration: Toast.durations.LONG,\n            opacity: 1,\n            position: -100,\n            backgroundColor: 'grey',\n            shadow: false,\n          });\n        }\n      }\n    } else {\n      Alert.alert(\n        \"Permission to access camera roll is required. Please enable it in your phone's settings.\"\n      );\n    }\n  }\n\n  function deleteTheMessage(messageToDelete) {\n    if (messageToDelete.user === userData.userName) {\n      socket.emit('deleteMyMessage', messageToDelete);\n      setMessageList(\n        messageList.filter((mess) => !isEqualTo(mess, messageToDelete))\n      );\n      Toast.show('Message Deleted', {\n        duration: Toast.durations.SHORT,\n        opacity: 0.7,\n        position: Toast.positions.CENTER,\n        backgroundColor: 'grey',\n        shadow: false,\n      });\n    }\n  }\n\n  async function sendNewMessage() {\n    setHardDisableSend(true); // basically a semaphore lol\n    if (message !== '') {\n      let newMessage = {\n        message: message,\n        date: new Date().toISOString(),\n        user: userData.userName,\n        isUnsent: true,\n      };\n      setMessageList([...messageList].concat(newMessage));\n      delete newMessage.isUnsent;\n      socket.emit('newMessageClient', newMessage);\n      setMessage('');\n    }\n    if (photoSelected.id !== null) {\n      const date = photoSelected.date;\n      setMessageList(\n        [...messageList].concat({\n          isImage: true,\n          isUnsent: true,\n          message: photoSelected.contentImage.uri,\n          user: userData.userName,\n          date: date,\n        })\n      );\n\n      const photo = photoSelected;\n      setPhotoSelected({ date: null, id: null, contentImage: null });\n\n      let formdata = new FormData();\n      formdata.append('picture', {\n        // @ts-ignore\n        uri: photo.contentImage.uri,\n        name: 'picture',\n        type: 'image/jpg',\n      });\n      formdata.append('id', photo.id);\n      formdata.append('date', date);\n      const res = await fetch(base_URL + '/chatRooms/uploadImage', {\n        method: 'POST',\n        redirect: 'follow',\n        headers: {\n          'Content-Type': 'application/json',\n          userKey: userKey,\n        },\n        body: formdata,\n      });\n      if (res.ok) {\n        const newMessage = {\n          date: date,\n          user: userData.userName,\n          message: photo.id,\n        };\n        socket.emit('imageMessageClient', newMessage);\n      }\n    }\n    setHardDisableSend(false);\n  }\n\n  function deletionAlert(messageToDelete) {\n    if (messageToDelete.user === userData.userName) {\n      Alert.alert(\n        'Delete Message',\n        'This action cannot be undone',\n        [\n          {\n            text: 'Confirm',\n            onPress: () => {\n              deleteTheMessage(messageToDelete);\n            },\n          },\n          {\n            text: 'Cancel',\n            style: 'cancel',\n          },\n        ],\n        { cancelable: true }\n      );\n    }\n  }\n\n  const renderItem = ({ item }) => (\n    <TouchableOpacity\n      disabled={item?.isUnsent}\n      onLongPress={() => deletionAlert(item)}\n      style={{\n        opacity: item?.isUnsent ? 0.4 : 1,\n        flexDirection: 'row',\n        marginVertical: 5,\n        minHeight: item.isImage ? windowHeight * 0.25 : undefined,\n        width: '100%',\n      }}>\n      <Text style={{ paddingRight: 10, fontWeight: 'bold' }}>{item.user}:</Text>\n      {item.isImage ? (\n        <Image\n          source={{ uri: item.message }}\n          style={{ flex: 1, resizeMode: 'contain' }}\n        />\n      ) : (\n        <Text style={{ flex: 1, flexWrap: 'wrap' }}>{item.message}</Text>\n      )}\n    </TouchableOpacity>\n  );\n  const windowHeight = Dimensions.get('screen').height;\n\n  return (\n    <SafeAreaView style={{ flex: 1 }}>\n      <KeyboardAvoidingView style={{ flex: 1 }}>\n        <View\n          style={[\n            styles.messagingScreen,\n            { paddingVertical: 5, paddingHorizontal: 10 },\n          ]}>\n          {messageList.length > 0 ? (\n            <View style={{ flex: 1 }}>\n              {showSearch && (\n                <SearchBar\n                  searchTerm={filter}\n                  onChangeText={setFilter}\n                  inputProps={{ autoCorrect: false }}\n                  placeholder=\"Search\"\n                />\n              )}\n              <FlatList\n                style={{}}\n                data={\n                  filter === ''\n                    ? [...messageList].reverse()\n                    : [...filteredMessageList].reverse()\n                }\n                renderItem={renderItem}\n                keyExtractor={(item) => item?.date + item?.user}\n                inverted\n              />\n            </View>\n          ) : failedConnection ? (\n            <TouchableOpacity\n              onPress={() => {\n                setFailedConnection(false);\n                setRetryNumber(retryNumber + 1);\n              }}>\n              <Text style={{ marginTop: '10%', textAlign: 'center' }}>\n                Connection Failed{'\\n'}Press to Reload\n              </Text>\n            </TouchableOpacity>\n          ) : loaded ? (\n            <Text style={{ textAlign: 'center' }}>No chats yet :/</Text>\n          ) : (\n            <View style={{ marginTop: '20%' }}>\n              <Loader />\n            </View>\n          )}\n        </View>\n\n        <View style={styles.messagingInputContainer}>\n          {!keyboardShown && (\n            <TouchableOpacity\n              onPress={activateCamera}\n              disabled={\n                hardDisableSend ||\n                !loaded ||\n                messageList.some((msg) => msg.isUnsent)\n              }\n              style={{\n                alignSelf: 'center',\n                paddingRight: 5,\n              }}>\n              <FontAwesome5\n                name=\"camera\"\n                size={20}\n                color={\n                  !hardDisableSend &&\n                  loaded &&\n                  !messageList.some((msg) => msg.isUnsent)\n                    ? 'black'\n                    : 'gray'\n                }\n              />\n            </TouchableOpacity>\n          )}\n          {!photoSelected.contentImage ? (\n            <View style={styles.messagingInput}>\n              <TextInput\n                placeholder={'Begin Typing...'}\n                placeholderTextColor={'gray'}\n                editable={loaded}\n                value={message}\n                multiline={true}\n                onChangeText={(value) => setMessage(value)}\n              />\n            </View>\n          ) : (\n            <View\n              style={{\n                ...styles.messagingInput,\n                paddingHorizontal: 10,\n                height: 150,\n              }}>\n              <Image\n                source={{ uri: photoSelected.contentImage?.uri }}\n                style={{ flex: 1, borderRadius: 10 }}\n              />\n              <TouchableOpacity\n                onPress={() => {\n                  setPhotoSelected({\n                    id: null,\n                    contentImage: null,\n                    date: null,\n                  });\n                }}\n                style={{ position: 'absolute', marginLeft: 15, marginTop: 10 }}>\n                <FontAwesome5\n                  name=\"times\"\n                  size={25}\n                  color={'#ff2e2e'}\n                  style={{}}\n                />\n              </TouchableOpacity>\n            </View>\n          )}\n          {!keyboardShown && (\n            <TouchableOpacity\n              onPress={selectPhoto}\n              disabled={\n                hardDisableSend ||\n                !loaded ||\n                messageList.some((msg) => msg.isUnsent)\n              }\n              style={{\n                width: '15%',\n                alignSelf: 'center',\n                paddingRight: 10,\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}>\n              <FontAwesome5\n                name=\"image\"\n                size={30}\n                color={\n                  !hardDisableSend &&\n                  loaded &&\n                  !messageList.some((msg) => msg.isUnsent)\n                    ? 'black'\n                    : 'gray'\n                }\n              />\n            </TouchableOpacity>\n          )}\n          <TouchableOpacity\n            style={{\n              ...styles.messagingButtonContainer,\n              backgroundColor:\n                !hardDisableSend &&\n                loaded &&\n                !messageList.some((msg) => msg.isUnsent)\n                  ? '#a245ee'\n                  : 'rgba(162,69,238,0.34)',\n            }}\n            onPress={sendNewMessage}\n            disabled={\n              hardDisableSend ||\n              !loaded ||\n              messageList.some((msg) => msg.isUnsent)\n            }>\n            <View>\n              <Text style={{ color: '#f2f0f1', fontSize: 15 }}>Send</Text>\n            </View>\n          </TouchableOpacity>\n        </View>\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = {\n  messagingScreen: {\n    flex: 1,\n  },\n  messagingInputContainer: {\n    width: '100%',\n    minHeight: 30,\n    backgroundColor: 'white',\n    paddingVertical: 15,\n    paddingHorizontal: 15,\n    justifyContent: 'center',\n    flexDirection: 'row',\n  },\n  messagingInput: {\n    borderWidth: 1,\n    padding: 10,\n    paddingTop: 5,\n    paddingHorizontal: 15,\n    flex: 1,\n    marginHorizontal: 10,\n    borderRadius: 20,\n  },\n  messagingButtonContainer: {\n    width: '20%',\n    alignSelf: 'center',\n    height: 40,\n    borderRadius: 3,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Image, ScrollView, StyleSheet, TouchableOpacity } from 'react-native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Layout, Text, List } from '@ui-kitten/components';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { useAppSelector } from '../../app/hooks';\nimport {\n  selectDarkMode,\n  selectIsGuest,\n  selectUserKey,\n} from '../../app/appDataSlice';\nimport { usersApiSlice } from '../api/usersApi';\nimport ModalContainer from '../../components/ModalContainer';\nimport SingleChatRoom from './singleChatPage/SingleChatRoom.native';\nimport { useIsFocused } from '@react-navigation/native';\nimport SelectTerm from '../classPages/SelectTerm';\nimport { CurrentTermLabel } from '../classPages/ClassesList';\n\nconst ChatRoomsNavigator = createNativeStackNavigator();\n\nexport default function ChatsRoomNavigation({ navigation }) {\n  const darkMode = useAppSelector(selectDarkMode);\n  const navigationHeader = (navigation) => (\n    <Layout\n      style={{\n        width: '100%',\n        justifyContent: 'space-between',\n        flexDirection: 'row',\n        alignItems: 'center',\n        flex: 1,\n        backgroundColor: 'transparent',\n      }}>\n      <Layout\n        style={{\n          paddingBottom: 5,\n          flexDirection: 'row',\n          alignContent: 'center',\n          flex: 1,\n          backgroundColor: 'transparent',\n        }}>\n        <Image\n          style={{\n            height: 28,\n            width: 28,\n          }}\n          source={require('../../../assets/logos/app-logo.png')}\n        />\n        <Text\n          style={{\n            paddingTop: 3,\n            paddingLeft: 10,\n            fontSize: 20,\n            fontWeight: '500',\n            color: darkMode ? '#fff' : '#000',\n          }}>\n          Chats\n        </Text>\n      </Layout>\n      <Layout\n        style={{\n          alignSelf: 'flex-end',\n          paddingRight: 40,\n          paddingBottom: 10,\n          flexDirection: 'row',\n          backgroundColor: 'transparent',\n        }}></Layout>\n    </Layout>\n  );\n\n  return (\n    <ChatRoomsNavigator.Navigator initialRouteName={'Chats'}>\n      <ChatRoomsNavigator.Screen\n        options={({ navigation }) => ({\n          title: 'Chats',\n          headerTitle: () => {\n            return navigationHeader(navigation);\n          },\n        })}\n        name=\"Chats\"\n        component={Chats}\n      />\n      <ChatRoomsNavigator.Screen\n        name=\"SingleChatRoom\"\n        component={SingleChatRoom}\n        options={{ headerTitle: '' }}\n      />\n      <ChatRoomsNavigator.Screen\n        name=\"SelectTerm\"\n        component={SelectTerm}\n        options={{\n          title: 'Select Term',\n          headerShown: false,\n          animation: 'slide_from_bottom',\n          gestureDirection: 'vertical',\n        }}\n      />\n    </ChatRoomsNavigator.Navigator>\n  );\n}\n\nconst Chats = ({ navigation }) => {\n  const [showGuestModal, setShowGuestModal] = useState(false);\n  const userKey = useAppSelector(selectUserKey);\n  const isGuest = useAppSelector(selectIsGuest);\n  const darkMode = useAppSelector(selectDarkMode);\n  const [refreshing, setRefreshing] = useState(false);\n  const [isMoving, setIsMoving] = useState(false);\n  const currentSection = useAppSelector(\n    (state) => state.appData.classPages.currentSection\n  );\n  const [availableChats, setAvailableChats] = useState([]);\n  const { data: userData } =\n    usersApiSlice.endpoints.getUserInfo.useQueryState(userKey);\n\n  function generateChatRooms() {\n    let chats = [];\n    if (userData.permissionLevel === 'admin') {\n      chats.push({\n        title: 'Admin Chatroom',\n        lastModifiedDate: '',\n        id: 'admin',\n      });\n    }\n    try {\n      for (const section of Object.entries(userData.addedClasses.classes)) {\n        if (section[0] === currentSection) {\n          for (const course of Object.values(section[1])) {\n            chats.push({\n              title: course[0],\n              lastModifiedDate: '',\n              id: course[0].replace(' ', ''),\n            });\n          }\n        }\n      }\n    } catch (e) {\n      console.log(e.message);\n    }\n    setAvailableChats(chats);\n  }\n\n  useEffect(() => {\n    setRefreshing(true);\n    generateChatRooms();\n    setRefreshing(false);\n  }, [useIsFocused, currentSection]);\n\n  const onRefresh = useCallback(() => {\n    setRefreshing(true);\n    generateChatRooms();\n    setRefreshing(false);\n  }, []);\n\n  const renderItem = ({ item }) => {\n    return (\n      <Layout>\n        <ScrollView>\n          <TouchableOpacity\n            style={{\n              alignItems: 'center',\n              alignSelf: 'center',\n              width: '95%',\n              borderRadius: 10,\n              marginLeft: 5,\n              marginRight: 5,\n              marginTop: 10,\n            }}\n            onPress={() => {\n              if (isGuest) {\n                setShowGuestModal(true);\n              } else {\n                navigation.navigate('SingleChatRoom', {\n                  data: item,\n                });\n              }\n            }}\n            key={item?.id}>\n            <Layout\n              style={{\n                alignItems: 'center',\n                alignSelf: 'center',\n                width: '95%',\n                height: 75,\n                borderRadius: 10,\n                backgroundColor: darkMode ? '#333333' : '#ebebeb',\n                shadowColor: '#000',\n                shadowOffset: { width: 0, height: 1 },\n                shadowOpacity: 0.2,\n                shadowRadius: 2,\n                elevation: 1,\n                marginLeft: 5,\n                marginRight: 5,\n                marginTop: 10,\n                justifyContent: 'center',\n              }}>\n              <Text\n                style={{\n                  fontWeight: 'bold',\n                  fontSize: 20,\n                }}>\n                {item?.title}\n              </Text>\n              {item?.lastModifiedDate ? (\n                <Text style={{ fontStyle: 'italic', fontSize: 12 }}>\n                  {item?.lastModifiedDate}\n                </Text>\n              ) : null}\n            </Layout>\n          </TouchableOpacity>\n        </ScrollView>\n        {showGuestModal && (\n          <ModalContainer\n            title=\"Wait!\"\n            children={\n              <Text style={{ paddingHorizontal: 30 }}>\n                This feature is locked to our Guest Users. Please create a free\n                account with us to take advantage this feature.\n              </Text>\n            }\n            backDropVisible={showGuestModal}\n            setBackDropVisible={setShowGuestModal}\n          />\n        )}\n      </Layout>\n    );\n  };\n\n  return (\n    <Layout style={{ flex: 1 }}>\n      <CurrentTermLabel\n        navigation={navigation}\n        currentSection={currentSection}\n        style={{ marginTop: 20, marginLeft: 20 }}\n      />\n      {availableChats.length === 0 ? (\n        <Layout style={{ alignItems: 'center' }}>\n          <Text\n            style={{\n              paddingTop: '25%',\n              paddingBottom: 10,\n              textAlign: 'center',\n            }}>\n            No Available Chat Rooms\n          </Text>\n          <TouchableOpacity\n            onPress={() => {\n              refreshAvailableChats();\n            }}>\n            <FontAwesome size={25} color={'#1E90FF'} name=\"rotate-right\" />\n          </TouchableOpacity>\n        </Layout>\n      ) : null}\n      <List\n        style={{ backgroundColor: 'transparent' }}\n        contentContainerStyle={{ flex: 1 }}\n        data={availableChats}\n        scrollEnabled={!isMoving}\n        renderItem={renderItem}\n        onRefresh={onRefresh}\n        refreshing={refreshing}\n      />\n    </Layout>\n  );\n};\n\nconst sponsorPageStyles = StyleSheet.create({\n  container: {\n    flex: 1,\n    // alignItems: 'center',\n  },\n  header: {\n    marginTop: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n  },\n  address: {\n    alignItems: 'center',\n    margin: 10,\n    borderColor: 'black',\n    borderWidth: 1,\n    padding: 10,\n  },\n  video: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-start',\n  },\n  title: {\n    fontSize: 26,\n    marginLeft: 10,\n  },\n  logo: {\n    width: '100%',\n    height: 100,\n  },\n  description: {\n    flex: 1,\n    margin: 10,\n    borderRadius: 5,\n    width: '95%',\n    padding: 10,\n  },\n  couponContainer: {\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 20,\n    marginBottom: 20,\n  },\n  coupon: {\n    width: 400,\n    height: 267,\n  },\n  imageGallery: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    margin: 10,\n    marginBottom: 0,\n  },\n  imageStyle: {\n    width: 150,\n    height: 150,\n    paddingTop: 100,\n    margin: 5,\n  },\n  headerText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n});\n\nconst myStyles = StyleSheet.create({\n  inputBig: {\n    height: 200,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n  },\n  input: {\n    height: 50,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n  },\n  indentedInput: {\n    height: 50,\n    marginVertical: 12,\n    borderWidth: 1,\n    padding: 10,\n    marginRight: 12,\n    marginLeft: 30,\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n  },\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 12,\n    paddingHorizontal: 32,\n    borderRadius: 4,\n    elevation: 3,\n  },\n  timeButton: {\n    width: 100,\n    height: 50,\n    marginHorizontal: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 4,\n  },\n  timeText: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white',\n  },\n  actualTimeText: {\n    fontSize: 13,\n    lineHeight: 18,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white',\n  },\n  timeStyle: {\n    flex: 0.3,\n    borderWidth: 2,\n    borderLeftColor: 'white',\n  },\n});\n\nconst listingStyles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  cardContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    alignSelf: 'center',\n    width: '95%',\n    height: 75,\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderBottomWidth: 0,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 2,\n    elevation: 1,\n    marginLeft: 5,\n    marginRight: 5,\n    marginTop: 10,\n  },\n  containerForNotifications: {\n    alignItems: 'center',\n    alignSelf: 'center',\n    width: '95%',\n    height: 75,\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderBottomWidth: 0,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 2,\n    elevation: 1,\n    marginLeft: 5,\n    marginRight: 5,\n    marginTop: 10,\n  },\n  text: {\n    flex: 1,\n    fontSize: 20,\n    textAlign: 'center',\n    marginTop: 5,\n    marginBottom: 5,\n  },\n  image: {\n    width: '100%',\n    height: '100%',\n    borderRadius: 10,\n  },\n});\n","import React, { useEffect, useRef, useState } from 'react';\nimport { store } from './src/app/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { persistStore } from 'redux-persist';\nimport * as eva from '@eva-design/eva';\nimport {\n  ApplicationProvider,\n  IconRegistry,\n  Text,\n  useTheme,\n} from '@ui-kitten/components';\nimport {\n  DarkTheme,\n  DefaultTheme,\n  NavigationContainer,\n} from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as ExpoSplashScreen from 'expo-splash-screen';\nimport { Ionicons } from '@expo/vector-icons';\nimport { StatusBar } from 'expo-status-bar';\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { RootSiblingParent } from 'react-native-root-siblings';\nimport Constants from 'expo-constants';\nimport { isDevice } from 'expo-device';\nimport * as Notifications from 'expo-notifications';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Alert, Platform, useColorScheme, Dimensions } from 'react-native';\nimport { BottomSheetModalProvider } from '@gorhom/bottom-sheet';\nimport * as Linking from 'expo-linking';\n\nimport Auth from './src/features/authentication';\nimport Discover from './src/features/discover';\nimport Calendar from './src/features/calendar';\nimport ClassPages from './src/features/classPages';\nimport { useAppDispatch, useAppSelector } from './src/app/hooks';\nimport {\n  deviceDarkModeSet,\n  mobileSiteSet,\n  selectDarkMode,\n  selectUserKey,\n  userKeyUpdated,\n} from './src/app/appDataSlice';\nimport Theme from './src/theme/custom-theme';\nimport {\n  useAddExpoPushTokenMutation,\n  useGetUserInfoQuery,\n  useLazyGetUserInfoQuery,\n  useTrackLoginMutation,\n} from './src/features/api/usersApi';\nimport {\n  useLazyGetAllClassesQuery,\n  useLazyGetAllSectionsQuery,\n} from './src/features/api/classPagesApi';\nimport { FontAwesomeIconsPack } from './src/theme/font-awesome-icons';\nimport { useLazyGetCurrentVersionQuery } from './src/features/api/apiSlice';\nimport { FeatherIconsPack } from './src/theme/feather-icons';\nimport AdminPanel from './src/features/adminPanel';\nimport WebSplashScreen from './src/components/WebSplashScreen';\nimport { versionCompare } from './src/functions';\nimport {\n  availableSectionsListUpdated,\n  currentSectionUpdated,\n} from './src/features/classPages/classPagesSlice';\nimport ChatsRoomNavigation from './src/features/chats/ChatRooms';\n\nconst windowWidth = Dimensions.get('window').width;\nconst persistor = persistStore(store);\nconst Stack = createNativeStackNavigator();\nconst Tab = createBottomTabNavigator();\nconst prefix = Linking.createURL('/');\n\nExpoSplashScreen.preventAutoHideAsync();\n\nNotifications.setNotificationHandler({\n  handleNotification: async () => ({\n    shouldShowAlert: true,\n    shouldPlaySound: false,\n    shouldSetBadge: false,\n  }),\n});\n\nconst registerForPushNotificationsAsync = async () => {\n  let token: string;\n  if (isDevice && Platform.OS !== 'web') {\n    const { status: existingStatus } =\n      await Notifications.getPermissionsAsync();\n    let finalStatus = existingStatus;\n    if (existingStatus !== 'granted') {\n      const { status } = await Notifications.requestPermissionsAsync();\n      finalStatus = status;\n    }\n    if (finalStatus !== 'granted') {\n      alert('Failed to get push token for push notification!');\n      return;\n    }\n    token = (await Notifications.getExpoPushTokenAsync()).data;\n    console.log(token);\n  }\n\n  if (Platform.OS === 'android') {\n    Notifications.setNotificationChannelAsync('default', {\n      name: 'default',\n      importance: Notifications.AndroidImportance.MAX,\n      vibrationPattern: [0, 250, 250, 250],\n      lightColor: '#FF231F7C',\n    });\n  }\n\n  return token;\n};\n\nexport default function Entry() {\n  return (\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <RootSiblingParent>\n          <GestureHandlerRootView style={{ flex: 1 }}>\n            <BottomSheetModalProvider>\n              <App />\n            </BottomSheetModalProvider>\n          </GestureHandlerRootView>\n        </RootSiblingParent>\n      </PersistGate>\n    </Provider>\n  );\n}\n\nfunction App() {\n  const colorScheme = useColorScheme();\n  const dispatch = useAppDispatch();\n  const userKey = useAppSelector(selectUserKey);\n  const darkMode = useAppSelector(selectDarkMode);\n  const useDeviceColorScheme = useAppSelector(\n    (state) => state.appData.secure.useDeviceColorScheme\n  );\n  const localCurrentSection = useAppSelector(\n    (state) => state.appData.classPages.currentSection\n  );\n  const [isReady, setIsReady] = useState(false);\n  const [trackLogin] = useTrackLoginMutation();\n  const [getAllSections] = useLazyGetAllSectionsQuery();\n  const [getAllClasses] = useLazyGetAllClassesQuery();\n  const [getCurrentVersion] = useLazyGetCurrentVersionQuery();\n  const [getUserInfo, { data: userData, isError }] = useLazyGetUserInfoQuery();\n  const [addExpoPushToken] = useAddExpoPushTokenMutation();\n\n  const [notification, setNotification] = useState(false);\n  const notificationListener = useRef();\n  const responseListener = useRef();\n\n  const linking = {\n    prefixes: [prefix],\n  };\n\n  useEffect(() => {\n    const prepare = async () => {\n      try {\n        let fetchedCurrentSection = await getAllSections().unwrap();\n\n        // Check for user key\n        if (userKey) {\n          const fetchedUserData = await getUserInfo(userKey).unwrap();\n          await trackLogin(userKey);\n\n          // Notfication token setup\n          try {\n            const expoPushToken = await registerForPushNotificationsAsync();\n            if (expoPushToken) {\n              await addExpoPushToken({\n                userKey,\n                expoPushToken,\n                userName: fetchedUserData.userName,\n              }).unwrap();\n            }\n          } catch (e) {\n            console.warn('Failed to set up expo push token', e);\n          }\n\n          dispatch(\n            availableSectionsListUpdated(fetchedCurrentSection.availableTerms)\n          );\n\n          // Check for current section and update class list if outdated\n          if (\n            Platform.OS === 'web' ||\n            fetchedCurrentSection.currentTerm !== localCurrentSection\n          ) {\n            console.log();\n            dispatch(currentSectionUpdated(fetchedCurrentSection.currentTerm));\n            try {\n              getAllClasses({\n                userKey,\n                collegeName: fetchedUserData.collegeName,\n                courseTerm: fetchedCurrentSection.currentTerm,\n              }).unwrap();\n            } catch (e) {\n              console.log('Section is outdated: could not fetch classes', e);\n            }\n          }\n        }\n\n        notificationListener.current =\n          Notifications.addNotificationReceivedListener((notification) => {\n            setNotification(notification);\n          });\n\n        responseListener.current =\n          Notifications.addNotificationResponseReceivedListener((response) => {\n            console.log(response);\n          });\n\n        checkForUpdates();\n      } catch (e) {\n        dispatch(userKeyUpdated('')); // Clear userKey if login fails\n        console.warn('Login Fail', e);\n      } finally {\n        setIsReady(true);\n        await ExpoSplashScreen.hideAsync();\n      }\n    };\n    console.log('Preparing app');\n\n    prepare();\n\n    return () => {\n      if (notificationListener.current) {\n        Notifications.removeNotificationSubscription(\n          notificationListener.current\n        );\n      }\n\n      if (responseListener.current) {\n        Notifications.removeNotificationSubscription(responseListener.current);\n      }\n    };\n  }, [userKey]);\n\n  useEffect(() => {\n    if (useDeviceColorScheme) {\n      dispatch(deviceDarkModeSet(colorScheme === 'dark'));\n    }\n  }, [colorScheme]);\n\n  useEffect(() => {\n    dispatch(mobileSiteSet(windowWidth < 768));\n  }, [windowWidth]);\n\n  const checkForUpdates = async () => {\n    try {\n      // Check for current version\n      const currentVersion = Constants.manifest2.extra.expoClient.version;\n      \n\n      const res = await getCurrentVersion().unwrap();\n      const currentFrontEndVersion =\n        res?.currentFrontEndVersion.currentFrontEndVersion;\n\n      if (\n        Platform.OS !== 'web' &&\n        versionCompare(currentFrontEndVersion, currentVersion) > 0\n      ) {\n        Alert.alert('There is a new version available!', '', [\n          {\n            text:\n              Platform.OS === 'android'\n                ? 'Update on the Play Store'\n                : 'Update on the App Store',\n            onPress: () =>\n              Linking.openURL(\n                Platform.OS === 'android'\n                  ? 'market://details?id=com.theathenanetwork.app'\n                  : 'https://apps.apple.com/us/app/athena-network/id1628317342'\n              ),\n          },\n          {\n            text: 'Cancel',\n            style: 'cancel',\n          },\n        ]);\n      }\n    } catch (e) {\n      console.warn('Update check failed', e);\n    }\n  };\n\n  if (!isReady) {\n    if (Platform.OS === 'web') {\n      return <WebSplashScreen />;\n    } else {\n      return null;\n    }\n  }\n\n  return (\n    <NavigationContainer\n      documentTitle={{\n        formatter: (options, route) =>\n          `${options?.title ?? route?.name} - Athena Network`,\n      }}\n      theme={darkMode ? DarkTheme : DefaultTheme}\n      linking={linking}\n      fallback={<WebSplashScreen />}>\n      <ApplicationProvider\n        {...eva}\n        theme={{ ...(darkMode ? eva.dark : eva.light), ...Theme }}>\n        <StatusBar style={darkMode ? 'light' : 'dark'} />\n        <IconRegistry icons={[FontAwesomeIconsPack, FeatherIconsPack]} />\n\n        <Stack.Navigator screenOptions={{ headerShown: false }}>\n          {userData && !isError ? (\n            <Stack.Screen name=\"Tabs\" component={TabsPage} />\n          ) : (\n            <Stack.Screen name=\"Auth\" component={Auth} />\n          )}\n        </Stack.Navigator>\n      </ApplicationProvider>\n    </NavigationContainer>\n  );\n}\n\nconst TabsPage = () => {\n  const theme = useTheme();\n  const userKey = useAppSelector(selectUserKey);\n  const { data: userData } = useGetUserInfoQuery(userKey, {\n    skip: !userKey,\n  });\n  const [isDev] = useState(__DEV__ ? true : false);\n\n  return (\n    <Tab.Navigator\n      initialRouteName={'Discover'}\n      screenOptions={({ route }) => ({\n        // detachInactiveScreens: false,\n        // unmountOnBlur: false,\n        tabBarHideOnKeyboard: Platform.OS === 'android',\n        tabBarIcon: ({ focused }) => {\n          // Create type for icon name\n          type IoniconsIconName = React.ComponentProps<typeof Ionicons>['name'];\n          let iconName: IoniconsIconName = 'ios-home';\n\n          if (route.name === 'ClassPages') {\n            iconName = focused ? 'book' : 'book-outline';\n          } else if (route.name === 'Discover') {\n            iconName = focused ? 'compass' : 'compass-outline';\n          } else if (route.name === 'Calendar') {\n            iconName = focused ? 'calendar' : 'calendar-outline';\n          } else if (route.name === 'ChatsRoomNavigation') {\n            iconName = focused ? 'chatbubbles' : 'chatbubbles-outline';\n          }\n\n          return (\n            <Ionicons\n              name={iconName}\n              size={25}\n              color={\n                focused ? theme['color-primary-500'] : theme['color-basic-500']\n              }\n            />\n          );\n        },\n        tabBarStyle: { paddingTop: 5 },\n        tabBarItemStyle: {},\n        headerShown: false,\n      })}>\n      <Tab.Screen\n        name=\"ClassPages\"\n        component={ClassPages}\n        options={{\n          unmountOnBlur: true,\n          tabBarLabel: () => (\n            <Text\n              style={{\n                margin: Platform.OS === 'web' ? 15 : undefined,\n                fontSize: 12,\n              }}>\n              Class Pages\n            </Text>\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"Calendar\"\n        component={Calendar}\n        options={{\n          unmountOnBlur: true,\n          tabBarLabel: () => (\n            <Text\n              style={{\n                margin: Platform.OS === 'web' ? 15 : undefined,\n                fontSize: 12,\n              }}>\n              Calendar\n            </Text>\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"ChatsRoomNavigation\"\n        component={ChatsRoomNavigation}\n        options={{\n          unmountOnBlur: true,\n          tabBarLabel: () => (\n            <Text\n              style={{\n                margin: Platform.OS === 'web' ? 15 : undefined,\n                fontSize: 12,\n              }}>\n              Chats\n            </Text>\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"Discover\"\n        component={Discover}\n        options={{\n          unmountOnBlur: false,\n          tabBarLabel: () => (\n            <Text\n              style={{\n                margin: Platform.OS === 'web' ? 15 : undefined,\n                fontSize: 12,\n              }}>\n              Discover\n            </Text>\n          ),\n        }}\n      />\n      {userData?.permissionLevel === 'admin' && (\n        <Tab.Screen\n          name=\"Admin\"\n          component={AdminPanel}\n          options={{\n            unmountOnBlur: false,\n            tabBarLabel: () => (\n              <Text\n                style={{\n                  margin: Platform.OS === 'web' ? 15 : undefined,\n                  fontSize: 12,\n                }}>\n                Admin\n              </Text>\n            ),\n          }}\n        />\n      )}\n    </Tab.Navigator>\n  );\n};\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}