{"version":3,"sources":["assets/logos/app-logo-transparent.png","assets/sponsorPage/coupon.png","assets/sponsorPage/become-sponsor.png","assets/logos/owl-white-text.png","assets/logos/owl-black-text.png","node_modules/moment/locale sync /^/.//.*$","assets/logos/splash-logo.png","assets/logos/app-logo.png","src/app/appDataSlice.ts","src/features/api/apiSlice.ts","src/features/api/usersApi.ts","src/features/api/classPagesApi.ts","src/features/classPages/classPagesSlice.ts","src/features/discover/discoverSlice.ts","src/features/calendar/calendarSlice.ts","src/app/SecureStorage.ts","src/app/storage.ts","src/app/store.ts","src/app/hooks.ts","src/features/authentication/ForgotPassword/EnterCodePage.tsx","src/features/authentication/ForgotPassword/EnterEmailPage.tsx","src/features/authentication/ForgotPassword/index.tsx","src/features/authentication/Login.tsx","src/components/BackButton.tsx","src/features/authentication/Signup/SignupForm.tsx","src/features/authentication/Signup/VerifyEmail.tsx","src/features/authentication/Signup/index.tsx","src/features/authentication/index.tsx","src/components/Header.tsx","src/constants/discover.ts","src/features/api/discoverApi.ts","src/features/discover/BottomBar.tsx","src/components/withPreventDoubleClick.tsx","src/features/discover/Cards/TextCard.tsx","src/components/DoubleTap.tsx","src/components/DoubleTapHeart.tsx","src/functions.ts","src/features/discover/ImageComponent.tsx","src/features/discover/Cards/ImageCard.tsx","src/features/discover/Cards/SponsorCard.tsx","src/features/discover/EventBody.tsx","src/features/discover/Cards/EventCard.tsx","src/features/discover/PostsList.tsx","src/components/DisabledOptionModal.tsx","src/features/discover/SinglePost/Comment.tsx","src/features/discover/SinglePost/SinglePostBody.tsx","src/components/FullPageSpinner.tsx","src/features/discover/SinglePost/SinglePostPage.tsx","src/features/discover/CreatePost/CreateImagePost.tsx","src/components/WrapItems.tsx","src/features/discover/CreatePost/CreateEventPost.tsx","src/features/discover/CreatePost/CreatePost.tsx","src/components/SearchBar.tsx","src/features/discover/SearchPage.tsx","src/components/Menu.tsx","src/features/api/sponsorsApi.ts","src/features/sponsors/SponsorsList.tsx","src/features/discover/index.tsx","src/features/calendar/CreateCustomEvent.tsx","src/features/calendar/CalendarFunctions.ts","src/features/calendar/customEvent.tsx","src/features/calendar/ScheduledItem.tsx","src/components/ModalContainer.tsx","src/features/notifications/constants.tsx","src/components/UserNameSelectionDropDown.tsx","src/features/classPages/SingleClassPage/exportModalClass.tsx","src/constants/admin.ts","src/features/classPages/SingleClassPage/InfoPage.tsx","src/constants/classPages.ts","src/features/classPages/SingleClassPage/PostReview.tsx","src/features/classPages/SingleClassPage/index.tsx","src/components/Message.tsx","src/features/classPages/ClassListItemItem.tsx","src/features/classPages/ClassListItem.tsx","src/features/classPages/AddedClasses.tsx","src/features/classPages/FilterClasses.tsx","src/features/classPages/ClassesList.tsx","src/features/calendar/CalendarPage.tsx","src/features/calendar/exportModal.tsx","src/features/classPages/SelectTerm.tsx","src/features/calendar/index.tsx","src/features/settings/EditUser.tsx","src/features/settings/SettingsPage.tsx","src/features/settings/index.tsx","src/features/notifications/notificationSinglePage.tsx","src/features/notifications/Notifications.tsx","src/constants/electiveGenerator.ts","src/features/classPages/ElectiveGenerator/index.tsx","src/features/classPages/index.tsx","src/theme/custom-theme.ts","src/theme/font-awesome-icons.tsx","src/theme/feather-icons.tsx","src/features/adminPanel/adminPanel.tsx","src/features/adminPanel/index.tsx","src/components/WebSplashScreen.tsx","src/features/chats/singleChatPage/SingleChatRoom.native.tsx","src/features/chats/ChatRooms.tsx","App.tsx","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","initialState","userKey","isGuest","isMobile","darkMode","useDeviceColorScheme","appDataSlice","createSlice","name","reducers","reset","userKeyUpdated","state","action","payload","setIsGuest","deviceDarkModeSet","useDeviceColorSchemeSet","deleteAllAppData","mobileSiteSet","extraReducers","selectDarkMode","appData","secure","selectUserKey","selectIsGuest","actions","apiSlice","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getCurrentVersion","query","useLazyGetCurrentVersionQuery","usersApiSlice","injectEndpoints","overrideExisting","getUserInfo","providesTags","url","headers","transformErrorResponse","response","status","error","transformResponse","classes","rest","addedClasses","length","courseCode","courseTerm","school","split","masterCourseCode","slice","join","push","console","warn","login","mutation","userName","password","params","trackLogin","method","responseHandler","text","deleteAccount","editUser","invalidatesTags","body","fields","getCollegeList","signupUser","verifySignup","resetPassword","email","useTrackLoginMutation","useGetUserInfoQuery","useLazyGetUserInfoQuery","useLoginMutation","useDeleteAccountMutation","useEditUserMutation","useGetCollegeListQuery","useSignupUserMutation","useVerifySignupMutation","useResetPasswordMutation","classPagesApi","getAllClasses","pageNumber","collegeName","getRatingFromReviews","reviews","totalAverage","counter","review","rating","toFixed","getDifficultyFromReviews","difficulty","fromEntries","entries","key","value","sort","getCurrentSection","currentTerm","getAllSections","addClass","classesToAdd","onQueryStarted","dispatch","queryFulfilled","patchResult","util","updateQueryData","draft","undo","removeClass","classesToRemove","filter","classCode","isAllowedToReview","sendReview","useGetCurrentSectionQuery","useGetAllClassesQuery","useAddClassMutation","useRemoveClassMutation","useIsAllowedToReviewQuery","useSendReviewMutation","useLazyGetAllClassesQuery","useLazyGetAllSectionsQuery","filteredClasses","renderedClasses","currentSection","availableSections","selectedClass","searchTerm","page","isHMC","filters","colleges","HM","CM","PO","PZ","SC","hasSelectedElectiveGen","suggestedClasses","classPagesSlice","currentSectionUpdated","availableSectionsListUpdated","endOfListReached","resetClasses","caseReducers","searchResultsFiltered","suggestedClassesUpdated","electiveGeneratorSelected","classSelected","selectedClassCleared","filtersSaved","isHMCUpdated","filtersReset","newResultsArray","collegeAbr","substring","college","isCollegeFiltered","searchTermUpdated","matchDepartmentName","searchCourseCode","findSearchTermShortcuts","searchTerms","courseName","times","filterBySearchTerm","newResultsObject","addMatcher","matchFulfilled","searchPhrase","replace","match","p1","p2","p3","p4","p5","padStart","coursePhrase","professorName","trim","includes","toUpperCase","selectClassesList","classPages","submittedSearchTerm","tag","recentSearches","discoverSlice","searchTermSubmitted","unshift","searchTermChanged","recentSearchTermSelected","tagSelected","recentSearchTermRemoved","term","selectSearchTerm","discover","selectSubmittedSearchTerm","selectTag","selectRecentSearches","isThreeDay","calendarSlice","isThreeDaySet","defaultReplacer","replaceCharacter","SecureStorage","options","replacer","getItem","SecureStore","setItem","removeItem","createSecureStorage","securePersistConfig","storage","Platform","OS","AsyncStorage","cpPersistConfig","ExpoFileSystemStorage","whitelist","discoverPersistConfig","rootReducer","combineReducers","persistReducer","classPagesReducer","appDataReducer","discoverReducer","calendar","calendarReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","immutableCheck","concat","useAppDispatch","useDispatch","useAppSelector","useSelector","EnterCodePage","navigation","style","flex","alignItems","justifyContent","margin","category","onPress","index","routes","EnterEmailPage","useState","setEmail","inputRef","useRef","isLoading","isError","netInfo","useNetInfo","useEffect","current","focus","onSubmit","isConnected","unwrap","navigate","alert","paddingTop","autoCapitalize","placeholder","ref","onChangeText","onSubmitEditing","Keyboard","dismiss","color","disabled","accessoryRight","Stack","createNativeStackNavigator","ForgotPassword","Navigator","screenOptions","headerShown","Screen","component","DarkModeLogo","require","LightModeLogo","Login","setUserName","setPassword","loginError","setLoginError","passwordRef","React","handleLogin","NetInfo","fetch","allSections","availableTerms","then","guestLogin","TouchableWithoutFeedback","KeyboardAvoidingView","styles","container","behavior","Image","source","logo","inputView","autoComplete","TextInput","placeholderTextColor","keyboardType","blurOnSubmit","secureTextEntry","TouchableOpacity","forgot_button","position","backgroundColor","loginBtn","width","borderRadius","height","marginTop","maxWidth","level","signupBtn","StyleSheet","create","title","fontSize","fontWeight","textAlign","image","marginBottom","flexDirection","marginLeft","marginRight","borderColor","borderWidth","guestButton","alignSelf","BackButton","props","HeaderBackButton","goBack","label","labelVisible","Signup","realFirstName","setRealFirstName","realLastName","setRealLastName","major","setMajor","IndexPath","selectedIndex","setSelectedIndex","simplifiedSignup","setSimplifiedSignUp","humanReadableCollegeName","userCollege","setUserCollege","collegeList","data","signupLoading","firstNameInputRef","lastNameInputRef","passwordInputRef","majorInputRef","handleSubmitButton","validateInput","SectionStyle","labelSection","inputStyle","underlineColorAndroid","defaultValue","returnKeyType","containerDrop","onFocus","onSelect","newObject","row","ScrollView","zIndex","top","left","paddingVertical","paddingHorizontal","checked","onChange","nextChecked","buttonStyle","buttonTextStyle","paddingLeft","paddingRight","errorTextStyle","successTextStyle","padding","input","button","buttonText","minHeight","minWidth","VerifyEmail","verificationCode","setVerificationCode","verifyCode","getUserInfoLoading","handleVerifyCodeButton","description","theme","useTheme","headerStyle","headerLeft","SignupForm","Auth","Header","accessoryLeft","center","Constants","statusBarHeight","tagIndices","adminTagIndices","postOptions","EMOJI_LIST","postsAdapter","createEntityAdapter","selectId","post","_id","tranformComments","comments","comment","numLikes","likes","hasLiked","discoverApiSlice","getDiscoverPosts","keepUnusedDataFor","sponsor","pageLength","_","addMany","getInitialState","hasMorePages","ids","postsSelectors","selectAll","createDiscoverPost","type","content","tags","emoji","postBody","pinned","newPost","addOne","deleteDiscoverPost","searchPatchResult","removeOne","getPostById","postId","updatedPost","updateFunction","updateOne","changes","likePost","postAuthor","selectById","addComment","initiate","likeComment","commentId","deleteComment","getSelectors","useLazyGetDiscoverPostsQuery","useCreateDiscoverPostMutation","useDeleteDiscoverPostMutation","useLikePostMutation","useAddCommentMutation","useLazyGetPostByIdQuery","useLikeCommentMutation","useDeleteCommentMutation","DebounceTouchable","WrappedComponent","time","PreventDoubleClick","debouncedOnPress","debounce","leading","trailing","this","PureComponent","displayName","withPreventDoubleClick","BottomBar","commentIconShown","undefined","searchedTag","userData","useQueryState","selectFromResult","result","onPressLike","log","flexWrap","FontAwesome","opacity","size","TextCard","pinnedIcon","isUrl","renderTextBody","indexOf","TouchableHighlight","paddingBottom","FontAwesome5","DoubleTap","lastTap","handleDoubleTap","now","Date","delay","onDoubleTap","children","Component","defaultProps","forwardRef","iconStyle","useImperativeHandle","animate","opacityAnim","Animated","Value","scaleAnim","heartRotation","setHeartRotation","Math","floor","random","pickRandomDegree","setValue","parallel","sequence","timing","toValue","duration","useNativeDriver","easing","Easing","bounce","start","View","transform","scale","rotate","getImageUrl","imageId","IMAGE_BUCKET_URL","stringToEmoji","str","dec","i","charCodeAt","showToast","message","Toast","show","durations","LONG","shadow","FormatTimeRange","end","startDate","endDate","getHours","getMinutes","weekDayNumberToName","0","1","2","3","4","5","6","FormatDate","date","newDate","weekDay","getDay","month","getMonth","day","getDate","windowWidth","Dimensions","get","ImageComponent","apiInfo","likeRef","handlePressLike","uri","maxHeight","resizeMode","DoubleTapHeart","right","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","ImageCard","activeOpacity","SponsorCard","imageLink","setImageLink","hasCoupon","coupons","onError","becomeSponsor","sponsorName","ImageBackground","marginHorizontal","couponDescription","EventBody","link","location","startTime","endTime","contentURL","contentText","contentImage","host","truncated","eventInfo","useMemo","info","EventCard","isAdded","setIsAdded","toggleAdditionOfEvent","isAdd","JSON","stringify","toTimeString","catch","customEvents","some","customEvent","useIsFocused","PostsList","handleRemoveRecentSearch","handleClickRecentSearch","route","fetchPosts","isFetching","posts","fetchFirstPage","fetchMorePosts","PinIcon","MaterialIcons","renderItem","item","commonProps","isSponsor","sponsorProps","parse","contentUrl","FooterSpinner","keyboardShouldPersistTaps","ListHeaderComponent","fontStyle","Array","from","marginVertical","appearance","pack","LinearGradient","colors","x","y","contentContainerStyle","onRefresh","refreshing","keyExtractor","onEndReachedThreshold","onEndReached","ListFooterComponent","showsVerticalScrollIndicator","ItemSeparatorComponent","Divider","DisabledFieldModal","setShowModal","visible","backdropStyle","myStyles","backdrop","onBackdropPress","Comment","isOwnComment","isExpanded","setIsExpanded","handleLikeComment","handleDeleteComment","onLongPress","Alert","SinglePostBody","handleLikePost","scrollEnabled","multiline","textStyle","RegExp","test","href","FullPageSpinner","SinglePost","showModal","setComment","inputFocused","setInputFocused","refreshPost","refreshPostLoading","addCommentLoading","deletePost","deletePostLoading","handleRefreshPost","handleDeletePost","handleSubmitComment","header","footer","bottom","borderTopWidth","onBlur","CreateImage","discoverPostInputs","setDiscoverPostInputs","TagInput","showTitle","ImagePicker","imagePickerStatus","requestImagePickerPermission","cameraStatus","requestCameraPermission","onPressCamera","granted","mediaTypes","Images","canceled","assets","pickImage","allowsEditing","Title","newText","imagePicker","Feather","WrapItems","childStyle","LayoutProps","Children","child","CreateEvent","setStartTime","setEndTime","setDate","showTimePickerAndroid","setShowTimePickerAndroid","formatDateService","NativeDateService","format","timePickerOptions","setTime","formatAMPM","hours","minutes","ampm","dateService","nextDate","placement","mode","change","AntDesign","OptionalText","CreatePost","permissionLevel","selectedTagIndex","setSelectedTagIndex","selectedPostTypeIndex","setSelectedPostTypeIndex","setError","isEmojiShown","setIsEmojiShown","tagArray","submitEvent","formdata","FormData","append","toISOString","forEach","submitImage","toast","setTimeout","hide","groupedData","multiSelect","SearchBar","inputProps","cancelButtonAction","cancelButtonStatus","alwaysShowCancelButton","selected","setSelected","LayoutAnimation","configureNext","autoCorrect","SearchPage","searchBarBackgroundColor","Menu","menuItems","setMenuItems","showsHorizontalScrollIndicator","horizontal","Text","sponsorsApiSlice","refreshSponsors","sponsors","a","b","textA","textB","find","postSponsorVisit","sponsorId","useLazyRefreshSponsorsQuery","usePostSponsorVisitMutation","SponsorPage","isDarkMode","sponsorPageStyles","address","video","display","subtitle","couponContainer","coupon","imageGallery","imageStyle","headerText","setImageIndex","setIsVisible","canOpenLink","setCanOpenLink","postSponsorVisitQuery","videoLinkArray","videoLink","Linking","canOpenURL","website","funct","phoneNumber","openURL","borderBottomColor","borderBottomWidth","images","img","dayOfTheWeek","buildTimeString","openTime","convertTo12HourTime","closeTime","Number","parseInt","SponsorsList","sponsorFilters","setSponsorFilters","gotSponsors","setGotSponsors","refreshSponsorsQuery","tabNames","temp","findIndex","splice","tempFilters","getFilters","shouldLimitPrint","filterName","sponsorsToSend","getTheSponsors","renderSponsorsBasedOnFilters","listingStyles","cardContainer","final","starredFinal","object","Discover","setSearchTerm","initialParams","onPressIn","headerTitle","animation","CreateCustomEvent","showDots","setShowDots","useNavigation","dateToUse","selectedDate","setSelectedDate","isOneDay","setIsOneDay","allValuesPopulated","setAllValuesPopulated","daysArray","setDaysArray","eventTitle","setEventTitle","skip","daysOfWeek","testID","event","finalArray","littleIndex","finalObject","at","calculateSelectedValues","newSelection","toggleValue","option","renderEachDropItem","CalendarFunctions","string","charIndex","toString","getColor","minuteHeight","allClassData","renderCustomEvent","universalHeight","calendarFun","startHour","startMinute","endHour","endMinute","stringToColour","days","SHORT","removeEvent","cancelable","getMinutesDiff","adjustsFontSizeToFit","numberOfLines","masterClassInfo","handleClassSelected","thisTime","course","classLocation","ModalContainer","backDropVisible","setBackDropVisible","backdropOpacity","isVisible","base_URL","UserNameSelectionDropDown","setHasChosen","setRecipient","names","setNames","users","setUsers","modal","ok","userList","json","user","realName","userNameContainsString","auser","toLowerCase","firstPar","secondPar","findUserNameFromName","ExportModalClass","classData","showGuestModal","setShowGuestModal","renderModal","recipient","exportClass","recipients","isCourseData","Button","returnValue","Manager","randomizationFactor","addTrailingSlash","autoConnect","withStyles","eva","scrollViewRef","professorReviewsObject","setProfessorReviewsObject","dark","light","isAllowedToReviewRes","getReviewsFromProfessor","lastName","res","scrollTo","animated","averageGradeMSGModal","creditWeightHM","creditWeight","timeSpentOutOfClass","lineHeight","averageGrade","courseDescription","summary","boxed","prerequisites","corequisites","disclaimer","subHeader","section","sectionText","seatsFilled","seatsAvailable","permCount","daysOfTheWeek","isAllowed","professor","getProfessorReviewsList","courseOpen","courseClosed","details","BodyContainer","borderTopColor","documentStyle","imageLabel","schedule","graphImage","aspectRatio","grade","reviewText","reviewBox","indentedInput","letterSpacing","NEW_REVIEW_FIELDS","mandatory","NewReview","setBody","handleReviewSubmitted","changeValue","theValue","valueToChange","newBody","aspect","inputBig","clearButtonMode","field","hasChosen","renderDropDown","alignContent","renderFilterParameters","renderTheFieldsNecessary","SingleClassPage","bottomSheetRef","InfoPage","PostReview","Message","ClassListItemItem","handleAddClass","handleRemoveClass","added","selectedAnim","dropDownItem","isAvailable","notAvailable","spring","speed","list__container","addedClassesContainer","borderTopRightRadius","borderBottomRightRadius","borderRightWidth","buttonContainer","dropDown","loadingMessage","loadingMessageRefresh","Item","menuOpen","setIsMenuOpen","inItem","property","update","springDamping","UIManager","setLayoutAnimationEnabledExperimental","addClassButton","AddedClasses","FlatList","ListEmptyComponent","Entypo","FilterClasses","setFiltersMenuVisible","initialFilters","setColleges","onChangeIsHMC","onChangeFilterCollege","CurrentTermLabel","ClassesList","setMenuOpen","addedClassesVisible","setAddedClassesVisible","filtersMenuVisible","listRef","setListRef","fetchUserInfo","getClasses","classListLoading","userInfoSuccess","isSuccess","fetchClasses","handleRefresh","snapToIndex","courseInfo","onScroll","scrollEventThrottle","maxToRenderPerBatch","initialNumToRender","refreshControl","RefreshControl","tintColor","titleColor","locations","scrollToOffset","offset","filteredColleges","c","renderFilteredCollegesList","CalendarPage","isWeb","threeDayWidth","fiveDayWidth","renderCustomEvents","elem","finalRender","eventIsThisDay","showThisWeek","dayString","dayOfWeek","adjustDays","getMs","seconds","dateOfEvent","currentDate","currentDayOfWeek","startOfWeek","valueOf","getSeconds","endOfWeek","renderDashes","renderClasses","getFullClassData","data2","topBar","startingOffset","snapToInterval","contentOffset","bounces","decelerationRate","nativeEvent","onMomentumScrollBegin","LogBox","ignoreAllLogs","exportSchedule","convert","isSchedule","SelectTerm","userDataCache","startIndexValue","selectedSectionIndex","setSelectedSectionIndex","Calendar","leftComponent","MaterialCommunityIcons","rightComponent","trackBar","activeBackgroundColor","inActiveBackgroundColor","thumbButton","activeColor","inActiveColor","bool","gestureDirection","EditProfileHeader","saveChanges","EditUser","inputs","profileDescription","propOptions","linkedin","setFields","changedFields","err","SettingsPage","colorScheme","useColorScheme","logOut","resetClassPages","resetDiscover","resetAppData","resetApiState","handleDeleteAccount","handleUseDeviceSettingToggled","handleDarkModeToggled","manifest2","extra","expoClient","version","Settings","Group","presentation","NotificationHomePage","NotificationsNavigation","notifications","setNotifications","isOpen","setIsOpen","refreshNotifications","bodyTosend","createNotificationButton","newUsers","getDateText","spaceIndex","first","initialRouteName","navigationHeader","setRefreshing","isMoving","setIsMoving","useCallback","newNotifications","not","redirect","notification","disableRightSwipe","onSwipeValueChange","handleOnLeftSwipe","creationDate","listToRemove","jsonSchedule","thereIsAtLeastOne","courseSimpleData","repliable","done","setDone","tempBody","SafeAreaView","renderInputFields","sendNotification","timeButton","timeText","actualTimeText","timeStyle","borderLeftColor","departments","containerForNotifications","ElectiveGenerator","departmentQuery","setDepartmentQuery","departmentOptions","setDepartmentOptions","setDescription","getClassesByDepartment","department","onChangeDepartmentText","classesByDepartment","aWords","bWords","aMatches","word","matches","SearchClasses","hasSelectedElectiveGenerator","numberOfNotifications","setNumberOfNotifications","setInterval","Foundation","Ionicons","FontAwesomeIconsPack","icons","Proxy","target","IconProvider","toReactElement","flatten","FontAwesomeIcon","FeatherIconsPack","FeatherIcon","AdminHomePage","AdminHomeNavigation","adminCommands","setAdminCommands","getAdminCommands","adminURL","commands","filterObject","currentAdminCommandsStatus","finalCommandList","command","AdminCommand","setInfo","isFileUpload","setIsFileUpload","fileUploads","setFileUploads","setSponsors","setStatus","allFieldsFilled","setAllFieldsFilled","buttonPushed","setButtonPushed","checkForFieldsFilled","imageName","sendApiData","additionToUrl","paramOverride","apiType","newUrl","text2","trueFalseTemplate","boolValues","displayValue","changeEverything","renderStringArray","valuesToSend","tempFinal","miniField","newFieldForBody","values","changeStringValue","stringArray","eachOne","renderMultiSelectDropDown","isArray","cancelled","fileUploadTemplate","graphData","timeFrame","informationToShow","isDateGraph","dataToShow","labels","getDates","datasets","getData","verticalLabelRotation","fromZero","xLabelsOffset","segments","chartConfig","decimalPlaces","labelColor","propsForDots","r","strokeWidth","stroke","oneElement","renderOneCard","flexShrink","moment","tz","subtract","usersToday","instance","weekStart","weekEnd","usersMonth","monthStart","monthEnd","add","cardInfo","finalText","renderedActions","renderButtonForCard","parameter","showResponseData","imagesContainer","imageContainer","AdminStack","AdminPanel","WebSplashScreen","SingleChatRoom","setFilter","showSearch","setShowSearch","photoSelected","setPhotoSelected","keyboardShown","setKeyboardShown","retryNumber","setRetryNumber","failedConnection","setFailedConnection","hardDisableSend","setHardDisableSend","setMessage","filteredMessageList","setFilteredMessageList","loaded","setLoaded","messageList","setMessageList","socket","io","auth","addMessage","messageToAdd","myMessage","mess","isEqualTo","isUnsent","message1","message2","newMessage","emit","isImage","photo","deletionAlert","messageToDelete","positions","CENTER","deleteTheMessage","ignoreLogs","showListener","addListener","hideListener","remove","setOptions","headerRight","connect","timer","off","disconnect","close","on","clearTimeout","array","msg","windowHeight","messagingScreen","reverse","inverted","messagingInputContainer","messagingInput","editable","messagingButtonContainer","ChatRoomsNavigator","ChatsRoomNavigation","Chats","availableChats","setAvailableChats","generateChatRooms","chats","lastModifiedDate","refreshAvailableChats","persistor","persistStore","Tab","createBottomTabNavigator","token","isDevice","existingStatus","Notifications","finalStatus","importance","MAX","vibrationPattern","lightColor","App","localCurrentSection","isReady","setIsReady","setExpoPushToken","setNotification","notificationListener","responseListener","prepare","fetchedCurrentSection","registerForPushNotificationsAsync","checkForUpdates","ExpoSplashScreen","currentVersion","currentFrontEndVersion","v1","v2","lexicographical","zeroExtend","v1parts","v2parts","isValidPart","every","NaN","versionCompare","NavigationContainer","documentTitle","formatter","DarkTheme","DefaultTheme","Theme","StatusBar","TabsPage","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","tabBarHideOnKeyboard","tabBarIcon","focused","iconName","tabBarStyle","tabBarItemStyle","ClassPages","unmountOnBlur","tabBarLabel","registerRootComponent"],"mappings":"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CXzS,KAAK,iBACL0S,UAAWL,GACX7E,QAAS,CAAEiI,MAAO,uB,cCxBX,SAASwF,GAAO,GAMd,IALfC,EAAa,EAAbA,cACAhJ,EAAc,EAAdA,eACAuD,EAAK,EAALA,MACA0F,EAAM,EAANA,OAAO,EAAD,EACN9F,aAAK,MAAG,IAAG,EAEX,OACE,gBAAC,UAAM,CACLA,MAAOA,EACPvF,MAAO,CACL0B,WAAY4J,WAAUC,gBAAkB,GACxCrG,MAAO,OACP/E,eAAgB,gBAChB8F,cAAe,MACf/F,WAAY,SACZoJ,kBAAmB,IACnB,UACF,gBAAC,UAAM,CAAC/D,MAAOA,EAAOvF,MAAO,CAAEiG,cAAe,OAAQ,UACnDmF,EACD,eAAC,QAAI,CAACpL,MAAO,CAAEkG,WAAY,GAAIN,SAAU,GAAIC,WAAY,OAAQ,SAC9DF,OAGJ0F,EAEAjJ,K,cCnCMoJ,GAAa,CACxB,QACA,SACA,eACA,UACA,MACA,SACA,MACA,SACA,WAGWC,GAAkB,CAC7B,iBACA,QACA,SACA,eACA,UACA,MACA,SACA,MACA,SACA,WAKWC,GAAc,CAAC,aAAc,YAAa,OAAQ,SAKlDC,GAAa,CACxB,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,SACA,qBACA,qBACA,qBACA,qBACA,qBACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,eACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,eACA,eACA,eACA,qEACA,qEACA,qEACA,eACA,mDACA,mDACA,mDACA,eACA,mDACA,mDACA,qEACA,qEACA,qEACA,mDACA,mDACA,qEACA,qEACA,qEACA,mDACA,mDACA,qEACA,qEACA,qEACA,eACA,eACA,eACA,eACA,eACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,SACA,qBACA,qBACA,qBACA,qBACA,qBACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,SACA,qBACA,qBACA,qBACA,qBACA,qBACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,SACA,qBACA,qBACA,qBACA,qBACA,qBACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,SACA,qBACA,qBACA,qBACA,qBACA,qBACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,SACA,qBACA,qBACA,qBACA,qBACA,qBACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,eACA,eACA,iCACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,SACA,eACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,eACA,eACA,eACA,SACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,SACA,SACA,SACA,SACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,SACA,eACA,eACA,SACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,SACA,SACA,eACA,SACA,eACA,eACA,eACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,eACA,eACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,eACA,eACA,eACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,eACA,SACA,eACA,SACA,SACA,SACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,SACA,eACA,eACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,OACA,OACA,SACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBA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","file":"static/js/app.34c5b3b4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/app-logo-transparent.1ede614a.png\";","module.exports = __webpack_public_path__ + \"static/media/coupon.84c88381.png\";","module.exports = __webpack_public_path__ + \"static/media/become-sponsor.513cb6e7.png\";","module.exports = __webpack_public_path__ + \"static/media/owl-white-text.9861cc3f.png\";","module.exports = __webpack_public_path__ + \"static/media/owl-black-text.6f7231df.png\";","var map = {\n\t\"./af\": 381,\n\t\"./af.js\": 381,\n\t\"./ar\": 382,\n\t\"./ar-dz\": 383,\n\t\"./ar-dz.js\": 383,\n\t\"./ar-kw\": 384,\n\t\"./ar-kw.js\": 384,\n\t\"./ar-ly\": 385,\n\t\"./ar-ly.js\": 385,\n\t\"./ar-ma\": 386,\n\t\"./ar-ma.js\": 386,\n\t\"./ar-sa\": 387,\n\t\"./ar-sa.js\": 387,\n\t\"./ar-tn\": 388,\n\t\"./ar-tn.js\": 388,\n\t\"./ar.js\": 382,\n\t\"./az\": 389,\n\t\"./az.js\": 389,\n\t\"./be\": 390,\n\t\"./be.js\": 390,\n\t\"./bg\": 391,\n\t\"./bg.js\": 391,\n\t\"./bm\": 392,\n\t\"./bm.js\": 392,\n\t\"./bn\": 393,\n\t\"./bn-bd\": 394,\n\t\"./bn-bd.js\": 394,\n\t\"./bn.js\": 393,\n\t\"./bo\": 395,\n\t\"./bo.js\": 395,\n\t\"./br\": 396,\n\t\"./br.js\": 396,\n\t\"./bs\": 397,\n\t\"./bs.js\": 397,\n\t\"./ca\": 398,\n\t\"./ca.js\": 398,\n\t\"./cs\": 399,\n\t\"./cs.js\": 399,\n\t\"./cv\": 400,\n\t\"./cv.js\": 400,\n\t\"./cy\": 401,\n\t\"./cy.js\": 401,\n\t\"./da\": 402,\n\t\"./da.js\": 402,\n\t\"./de\": 403,\n\t\"./de-at\": 404,\n\t\"./de-at.js\": 404,\n\t\"./de-ch\": 405,\n\t\"./de-ch.js\": 405,\n\t\"./de.js\": 403,\n\t\"./dv\": 406,\n\t\"./dv.js\": 406,\n\t\"./el\": 407,\n\t\"./el.js\": 407,\n\t\"./en-au\": 408,\n\t\"./en-au.js\": 408,\n\t\"./en-ca\": 409,\n\t\"./en-ca.js\": 409,\n\t\"./en-gb\": 410,\n\t\"./en-gb.js\": 410,\n\t\"./en-ie\": 411,\n\t\"./en-ie.js\": 411,\n\t\"./en-il\": 412,\n\t\"./en-il.js\": 412,\n\t\"./en-in\": 413,\n\t\"./en-in.js\": 413,\n\t\"./en-nz\": 414,\n\t\"./en-nz.js\": 414,\n\t\"./en-sg\": 415,\n\t\"./en-sg.js\": 415,\n\t\"./eo\": 416,\n\t\"./eo.js\": 416,\n\t\"./es\": 417,\n\t\"./es-do\": 418,\n\t\"./es-do.js\": 418,\n\t\"./es-mx\": 419,\n\t\"./es-mx.js\": 419,\n\t\"./es-us\": 420,\n\t\"./es-us.js\": 420,\n\t\"./es.js\": 417,\n\t\"./et\": 421,\n\t\"./et.js\": 421,\n\t\"./eu\": 422,\n\t\"./eu.js\": 422,\n\t\"./fa\": 423,\n\t\"./fa.js\": 423,\n\t\"./fi\": 424,\n\t\"./fi.js\": 424,\n\t\"./fil\": 425,\n\t\"./fil.js\": 425,\n\t\"./fo\": 426,\n\t\"./fo.js\": 426,\n\t\"./fr\": 427,\n\t\"./fr-ca\": 428,\n\t\"./fr-ca.js\": 428,\n\t\"./fr-ch\": 429,\n\t\"./fr-ch.js\": 429,\n\t\"./fr.js\": 427,\n\t\"./fy\": 430,\n\t\"./fy.js\": 430,\n\t\"./ga\": 431,\n\t\"./ga.js\": 431,\n\t\"./gd\": 432,\n\t\"./gd.js\": 432,\n\t\"./gl\": 433,\n\t\"./gl.js\": 433,\n\t\"./gom-deva\": 434,\n\t\"./gom-deva.js\": 434,\n\t\"./gom-latn\": 435,\n\t\"./gom-latn.js\": 435,\n\t\"./gu\": 436,\n\t\"./gu.js\": 436,\n\t\"./he\": 437,\n\t\"./he.js\": 437,\n\t\"./hi\": 438,\n\t\"./hi.js\": 438,\n\t\"./hr\": 439,\n\t\"./hr.js\": 439,\n\t\"./hu\": 440,\n\t\"./hu.js\": 440,\n\t\"./hy-am\": 441,\n\t\"./hy-am.js\": 441,\n\t\"./id\": 442,\n\t\"./id.js\": 442,\n\t\"./is\": 443,\n\t\"./is.js\": 443,\n\t\"./it\": 444,\n\t\"./it-ch\": 445,\n\t\"./it-ch.js\": 445,\n\t\"./it.js\": 444,\n\t\"./ja\": 446,\n\t\"./ja.js\": 446,\n\t\"./jv\": 447,\n\t\"./jv.js\": 447,\n\t\"./ka\": 448,\n\t\"./ka.js\": 448,\n\t\"./kk\": 449,\n\t\"./kk.js\": 449,\n\t\"./km\": 450,\n\t\"./km.js\": 450,\n\t\"./kn\": 451,\n\t\"./kn.js\": 451,\n\t\"./ko\": 452,\n\t\"./ko.js\": 452,\n\t\"./ku\": 453,\n\t\"./ku.js\": 453,\n\t\"./ky\": 454,\n\t\"./ky.js\": 454,\n\t\"./lb\": 455,\n\t\"./lb.js\": 455,\n\t\"./lo\": 456,\n\t\"./lo.js\": 456,\n\t\"./lt\": 457,\n\t\"./lt.js\": 457,\n\t\"./lv\": 458,\n\t\"./lv.js\": 458,\n\t\"./me\": 459,\n\t\"./me.js\": 459,\n\t\"./mi\": 460,\n\t\"./mi.js\": 460,\n\t\"./mk\": 461,\n\t\"./mk.js\": 461,\n\t\"./ml\": 462,\n\t\"./ml.js\": 462,\n\t\"./mn\": 463,\n\t\"./mn.js\": 463,\n\t\"./mr\": 464,\n\t\"./mr.js\": 464,\n\t\"./ms\": 465,\n\t\"./ms-my\": 466,\n\t\"./ms-my.js\": 466,\n\t\"./ms.js\": 465,\n\t\"./mt\": 467,\n\t\"./mt.js\": 467,\n\t\"./my\": 468,\n\t\"./my.js\": 468,\n\t\"./nb\": 469,\n\t\"./nb.js\": 469,\n\t\"./ne\": 470,\n\t\"./ne.js\": 470,\n\t\"./nl\": 471,\n\t\"./nl-be\": 472,\n\t\"./nl-be.js\": 472,\n\t\"./nl.js\": 471,\n\t\"./nn\": 473,\n\t\"./nn.js\": 473,\n\t\"./oc-lnc\": 474,\n\t\"./oc-lnc.js\": 474,\n\t\"./pa-in\": 475,\n\t\"./pa-in.js\": 475,\n\t\"./pl\": 476,\n\t\"./pl.js\": 476,\n\t\"./pt\": 477,\n\t\"./pt-br\": 478,\n\t\"./pt-br.js\": 478,\n\t\"./pt.js\": 477,\n\t\"./ro\": 479,\n\t\"./ro.js\": 479,\n\t\"./ru\": 480,\n\t\"./ru.js\": 480,\n\t\"./sd\": 481,\n\t\"./sd.js\": 481,\n\t\"./se\": 482,\n\t\"./se.js\": 482,\n\t\"./si\": 483,\n\t\"./si.js\": 483,\n\t\"./sk\": 484,\n\t\"./sk.js\": 484,\n\t\"./sl\": 485,\n\t\"./sl.js\": 485,\n\t\"./sq\": 486,\n\t\"./sq.js\": 486,\n\t\"./sr\": 487,\n\t\"./sr-cyrl\": 488,\n\t\"./sr-cyrl.js\": 488,\n\t\"./sr.js\": 487,\n\t\"./ss\": 489,\n\t\"./ss.js\": 489,\n\t\"./sv\": 490,\n\t\"./sv.js\": 490,\n\t\"./sw\": 491,\n\t\"./sw.js\": 491,\n\t\"./ta\": 492,\n\t\"./ta.js\": 492,\n\t\"./te\": 493,\n\t\"./te.js\": 493,\n\t\"./tet\": 494,\n\t\"./tet.js\": 494,\n\t\"./tg\": 495,\n\t\"./tg.js\": 495,\n\t\"./th\": 496,\n\t\"./th.js\": 496,\n\t\"./tk\": 497,\n\t\"./tk.js\": 497,\n\t\"./tl-ph\": 498,\n\t\"./tl-ph.js\": 498,\n\t\"./tlh\": 499,\n\t\"./tlh.js\": 499,\n\t\"./tr\": 500,\n\t\"./tr.js\": 500,\n\t\"./tzl\": 501,\n\t\"./tzl.js\": 501,\n\t\"./tzm\": 502,\n\t\"./tzm-latn\": 503,\n\t\"./tzm-latn.js\": 503,\n\t\"./tzm.js\": 502,\n\t\"./ug-cn\": 504,\n\t\"./ug-cn.js\": 504,\n\t\"./uk\": 505,\n\t\"./uk.js\": 505,\n\t\"./ur\": 506,\n\t\"./ur.js\": 506,\n\t\"./uz\": 507,\n\t\"./uz-latn\": 508,\n\t\"./uz-latn.js\": 508,\n\t\"./uz.js\": 507,\n\t\"./vi\": 509,\n\t\"./vi.js\": 509,\n\t\"./x-pseudo\": 510,\n\t\"./x-pseudo.js\": 510,\n\t\"./yo\": 511,\n\t\"./yo.js\": 511,\n\t\"./zh-cn\": 512,\n\t\"./zh-cn.js\": 512,\n\t\"./zh-hk\": 513,\n\t\"./zh-hk.js\": 513,\n\t\"./zh-mo\": 514,\n\t\"./zh-mo.js\": 514,\n\t\"./zh-tw\": 515,\n\t\"./zh-tw.js\": 515\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 831;","module.exports = __webpack_public_path__ + \"static/media/splash-logo.2b1029f0.png\";","module.exports = __webpack_public_path__ + \"static/media/app-logo.f5ec62f5.png\";","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Appearance } from 'react-native';\n\nimport type { RootState } from './store';\n\n// Define a type for the slice state\ninterface AppDataState {\n  userKey: string;\n  isGuest: boolean;\n  isMobile: boolean;\n  darkMode: boolean;\n  useDeviceColorScheme: boolean;\n}\n\n// Define the initial state using that type\nconst initialState: AppDataState = {\n  userKey: '',\n  isGuest: false,\n  isMobile: false,\n  darkMode: false,\n  useDeviceColorScheme: false,\n};\n\nexport const appDataSlice = createSlice({\n  name: 'appData',\n  initialState,\n  reducers: {\n    reset: () => initialState,\n    userKeyUpdated: (state, action: PayloadAction<string>) => {\n      state.userKey = action.payload;\n    },\n    setIsGuest: (state, action: PayloadAction<boolean>) => {\n      state.isGuest = action.payload;\n    },\n    deviceDarkModeSet: (state, action: PayloadAction<boolean>) => {\n      state.darkMode = action.payload;\n    },\n    useDeviceColorSchemeSet: (state, action: PayloadAction<boolean>) => {\n      state.useDeviceColorScheme = action.payload;\n    },\n    deleteAllAppData: (state) => {\n      state.userKey = '';\n      state.isGuest = false;\n      state.darkMode = true;\n    },\n    mobileSiteSet: (state, action: PayloadAction<boolean>) => {\n      state.isMobile = action.payload;\n    },\n  },\n  extraReducers: () => {},\n});\n\n// Selectors\nexport const selectDarkMode = (state: RootState) =>\n  state.appData.secure.darkMode;\n\nexport const selectUserKey = (state: RootState) => state.appData.secure.userKey;\n\nexport const selectIsGuest = (state: RootState) => state.appData.secure.isGuest;\n\nexport const selectMobile = (state: RootState) => state.appData.secure.isMobile;\n\n// Actions\nexport const {\n  userKeyUpdated,\n  setIsGuest,\n  deleteAllAppData,\n  reset,\n  deviceDarkModeSet,\n  useDeviceColorSchemeSet,\n  mobileSiteSet,\n} = appDataSlice.actions;\n\nexport default appDataSlice.reducer;\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport const apiSlice = createApi({\n  reducerPath: 'api',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://api.athenaserver.com:5678/api',\n  }),\n  tagTypes: ['User', 'Posts'],\n  endpoints: (builder) => ({\n    getCurrentVersion: builder.query<any, void>({\n      query: () => '/randomShit/getCurrentVersion',\n    }),\n  }),\n});\n\nexport const { useLazyGetCurrentVersionQuery } = apiSlice;\n","import { apiSlice } from './apiSlice';\nimport {\n  AddedClasses,\n  CourseTermAddedClasses,\n  UserData,\n} from '../../app/types';\n\nexport const usersApiSlice = apiSlice.injectEndpoints({\n  overrideExisting: true,\n  endpoints: (builder) => ({\n    getUserInfo: builder.query({\n      providesTags: ['User'],\n      query: (userKey: string) => ({\n        url: '/users/me',\n        headers: {\n          userKey,\n        },\n      }),\n      transformErrorResponse: (response) => {\n        if (response.status === 401) {\n          return { error: 'Unauthorized' };\n        }\n        return response;\n      },\n      transformResponse: ({ classes, ...rest }) => {\n        const addedClasses = {\n          length: 0,\n          classes: {} as { [courseTerm: string]: CourseTermAddedClasses },\n        } as AddedClasses;\n\n        try {\n          for (const { courseCode, courseTerm } of classes) {\n            let school = courseCode.split('-');\n            school = school[school.length - 2].split(' ');\n            school = school[school.length - 1];\n            const masterCourseCode =\n              courseCode.split(' ').slice(0, 2).join(' ') + ' ' + school;\n            if (courseTerm in addedClasses.classes) {\n              if (masterCourseCode in addedClasses.classes[courseTerm]) {\n                addedClasses.classes[courseTerm][masterCourseCode].push(\n                  courseCode\n                );\n              } else {\n                addedClasses.classes[courseTerm][masterCourseCode] = [\n                  courseCode,\n                ];\n              }\n            } else {\n              addedClasses.classes[courseTerm] = {\n                [masterCourseCode]: [courseCode],\n              };\n            }\n\n            addedClasses.length++;\n          }\n        } catch (e) {\n          console.warn('Error Adding Classes To State', e);\n        }\n\n        return { addedClasses: addedClasses, ...rest } as UserData;\n      },\n    }),\n    login: builder.mutation({\n      query: ({ userName, password, isGuest }) => ({\n        url: `/users/login`,\n        params: isGuest\n          ? {\n              userName,\n              password,\n              isGuest,\n            }\n          : {\n              userName,\n              password,\n            },\n      }),\n    }),\n    trackLogin: builder.mutation({\n      query: (userKey) => ({\n        url: `/analytics/login/openedApp`,\n        method: 'POST',\n        headers: {\n          userKey: userKey,\n        },\n        responseHandler: (response) => response.text(),\n      }),\n    }),\n    deleteAccount: builder.mutation({\n      query: ({ userKey, userName }) => ({\n        url: '/users',\n        method: 'DELETE',\n        headers: {\n          userKey,\n        },\n        params: {\n          userName,\n        },\n      }),\n    }),\n    editUser: builder.mutation({\n      invalidatesTags: ['User'],\n      query: ({ userKey, userName, fields }) => ({\n        url: '/users/' + userName,\n        method: 'PATCH',\n        headers: {\n          'content-type': 'application/json',\n          userKey,\n        },\n        body: fields,\n      }),\n    }),\n    getCollegeList: builder.query<any, void>({\n      query: () => '/randomShit/getCollegeList',\n    }),\n    signupUser: builder.mutation({\n      query: (body) => ({\n        url: '/users',\n        method: 'POST',\n        body,\n        responseHandler: (response) => response.text(),\n      }),\n    }),\n    verifySignup: builder.mutation({\n      query: (code) => ({\n        url: '/users/verification',\n        method: 'POST',\n        body: { code },\n      }),\n    }),\n    resetPassword: builder.mutation({\n      query: (email) => ({\n        url: '/users/forgotPassword',\n        params: {\n          email,\n        },\n        responseHandler: (response) => response.text(),\n      }),\n    }),\n  }),\n});\n\nexport const {\n  useTrackLoginMutation,\n  useGetUserInfoQuery,\n  useLazyGetUserInfoQuery,\n  useLoginMutation,\n  useDeleteAccountMutation,\n  useEditUserMutation,\n  useGetCollegeListQuery,\n  useSignupUserMutation,\n  useVerifySignupMutation,\n  useResetPasswordMutation,\n} = usersApiSlice;\n","import { apiSlice } from './apiSlice';\n\nimport { AllSectionsResponse, Class } from '../../app/types';\nimport { usersApiSlice } from './usersApi';\n\nexport const classPagesApi = apiSlice.injectEndpoints({\n  overrideExisting: true,\n  endpoints: (builder) => ({\n    getAllClasses: builder.query({\n      query: ({ userKey, pageNumber, courseTerm, collegeName }) => ({\n        url: `/classes/masterClassList/` + collegeName,\n        headers: {\n          userKey,\n        },\n        params: {\n          pageNumber: pageNumber,\n          courseTerm: courseTerm,\n        },\n      }),\n      transformResponse: (response: { [masterCourseCode: string]: Class }) => {\n        const getRatingFromReviews = (reviews) => {\n          if (reviews.length === 0) {\n            return null;\n          } else {\n            let totalAverage = 0;\n            let counter = 0;\n            for (const review of reviews) {\n              if (review.rating) {\n                totalAverage += review.rating;\n                counter++;\n              }\n            }\n            if (counter > 0) {\n              return (totalAverage / counter).toFixed(2);\n            } else {\n              return null;\n            }\n          }\n        };\n\n        const getDifficultyFromReviews = (reviews) => {\n          if (reviews.length === 0) {\n            return null;\n          } else {\n            let totalAverage = 0;\n            let counter = 0;\n            for (const review of reviews) {\n              if (review.difficulty) {\n                totalAverage += review.difficulty;\n                counter++;\n              }\n            }\n            if (counter > 0) {\n              return (totalAverage / counter).toFixed(2);\n            } else {\n              return null;\n            }\n          }\n        };\n\n        return Object.fromEntries(\n          Object.entries(response).map(([key, value]) => {\n            return [\n              key,\n              {\n                ...value,\n                reviews: value.reviews.sort(),\n                rating: getRatingFromReviews(value.reviews),\n                difficulty: getDifficultyFromReviews(value.reviews),\n              },\n            ];\n          })\n        );\n      },\n    }),\n    getCurrentSection: builder.query<any, void>({\n      query: () => '/randomShit/currentTerm',\n      transformResponse: (response: { currentTerm: string }) =>\n        response.currentTerm,\n    }),\n    getAllSections: builder.query<AllSectionsResponse, void>({\n      query: () => '/randomShit/getAllTerms',\n    }),\n    addClass: builder.mutation({\n      query: ({ userKey, courseCode, courseTerm, userName }) => ({\n        url: `/users/` + userName,\n        method: 'PATCH',\n        headers: {\n          userKey,\n        },\n        body: {\n          classesToAdd: [{ courseCode, courseTerm }],\n        },\n      }),\n      async onQueryStarted(\n        { userKey, courseCode, masterCourseCode, courseTerm },\n        { dispatch, queryFulfilled }\n      ) {\n        const patchResult = dispatch(\n          usersApiSlice.util.updateQueryData(\n            'getUserInfo',\n            userKey,\n            (draft) => {\n              if (!(courseTerm in draft.addedClasses.classes)) {\n                draft.addedClasses.classes[courseTerm] = {\n                  [masterCourseCode]: [courseCode],\n                };\n              } else if (\n                !(masterCourseCode in draft.addedClasses.classes[courseTerm])\n              ) {\n                draft.addedClasses.classes[courseTerm][masterCourseCode] = [\n                  courseCode,\n                ];\n              } else {\n                draft.addedClasses.classes[courseTerm][masterCourseCode].push(\n                  courseCode\n                );\n              }\n              draft.addedClasses.length++;\n            }\n          )\n        );\n\n        try {\n          await queryFulfilled;\n        } catch {\n          patchResult.undo();\n        }\n      },\n    }),\n    removeClass: builder.mutation({\n      query: ({ userKey, courseCode, courseTerm, userName }) => ({\n        url: `/users/` + userName,\n        method: 'PATCH',\n        headers: {\n          userKey,\n        },\n        body: {\n          classesToRemove: [{ courseCode, courseTerm }],\n        },\n      }),\n      async onQueryStarted(\n        { userKey, courseCode, masterCourseCode, courseTerm },\n        { dispatch, queryFulfilled }\n      ) {\n        const patchResult = dispatch(\n          usersApiSlice.util.updateQueryData(\n            'getUserInfo',\n            userKey,\n            (draft) => {\n              draft.addedClasses.classes[courseTerm][masterCourseCode] =\n                draft.addedClasses.classes[courseTerm][masterCourseCode].filter(\n                  (classCode) => classCode !== courseCode\n                );\n              draft.addedClasses.length--;\n            }\n          )\n        );\n\n        try {\n          await queryFulfilled;\n        } catch {\n          patchResult.undo();\n        }\n      },\n    }),\n    isAllowedToReview: builder.query({\n      query: ({ masterCourseCode, userKey }) => ({\n        url: '/users/isAllowedToReview',\n        method: 'GET',\n        params: {\n          masterCourseCode,\n        },\n        headers: {\n          userKey,\n        },\n      }),\n    }),\n    sendReview: builder.mutation({\n      query: ({ userKey, body }) => ({\n        url: '/classes/userReview',\n        method: 'PATCH',\n        headers: {\n          userKey,\n        },\n        body,\n        responseHandler: (response) => response.text(),\n      }),\n    }),\n  }),\n});\n\nexport const {\n  useGetAllClassesQuery,\n  useGetCurrentSectionQuery,\n  useAddClassMutation,\n  useRemoveClassMutation,\n  useIsAllowedToReviewQuery,\n  useSendReviewMutation,\n  useLazyGetAllClassesQuery,\n  useLazyGetAllSectionsQuery,\n} = classPagesApi;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport type { RootState } from '../../app/store';\nimport { Class, Filters } from '../../app/types';\nimport { classPagesApi } from '../api/classPagesApi';\n\n// Define a type for the slice state\ninterface ClassPagesState {\n  classes: { [masterCourseCode: string]: Class };\n  filteredClasses: { [masterCourseCode: string]: Class };\n  renderedClasses: { [masterCourseCode: string]: Class };\n  currentSection: string;\n  availableSections: string[];\n  searchTerm: string;\n  selectedClass: any;\n  page: number;\n  filters: Filters;\n  isHMC: boolean;\n  hasSelectedElectiveGen: boolean;\n  suggestedClasses: { [masterCourseCode: string]: Class };\n}\n\n// Define the initial state using that type\nconst initialState: ClassPagesState = {\n  classes: {},\n  filteredClasses: {},\n  renderedClasses: {},\n  currentSection: '',\n  availableSections: [],\n  selectedClass: {},\n  searchTerm: '',\n  page: 1,\n  isHMC: false,\n  filters: {\n    colleges: { HM: true, CM: true, PO: true, PZ: true, SC: true },\n  },\n  hasSelectedElectiveGen: false,\n  suggestedClasses: {},\n};\n\nexport const classPagesSlice = createSlice({\n  name: 'classPages',\n  initialState,\n  reducers: {\n    reset: () => initialState,\n    currentSectionUpdated: (state, action: PayloadAction<string>) => {\n      state.currentSection = action.payload;\n    },\n    availableSectionsListUpdated: (state, action: PayloadAction<string[]>) => {\n      state.availableSections = action.payload;\n    },\n    endOfListReached: (state) => {\n      state.page++;\n    },\n    resetClasses: (state) => {\n      state.page = 1;\n      state.searchTerm = '';\n\n      classPagesSlice.caseReducers.searchResultsFiltered(state);\n    },\n    suggestedClassesUpdated: (\n      state,\n      action: PayloadAction<{ [masterCourseCode: string]: Class }>\n    ) => {\n      state.suggestedClasses = action.payload;\n    },\n    electiveGeneratorSelected: (state) => {\n      state.hasSelectedElectiveGen = true;\n    },\n    classSelected: (state, action: PayloadAction<string>) => {\n      state.selectedClass = state.classes[action.payload];\n    },\n    selectedClassCleared: (state) => {\n      state.selectedClass = {};\n    },\n    filtersSaved: (state, action: PayloadAction<Filters>) => {\n      state.filters = action.payload;\n      classPagesSlice.caseReducers.searchResultsFiltered(state);\n    },\n    isHMCUpdated: (state, action: PayloadAction<boolean>) => {\n      state.isHMC = action.payload;\n    },\n    filtersReset: (state) => {\n      state.filters = initialState.filters;\n\n      classPagesSlice.caseReducers.searchResultsFiltered(state);\n    },\n    searchResultsFiltered: (state) => {\n      // Update the renderedClasses object with the new filters\n      let newResultsArray = Object.entries(state.classes);\n\n      newResultsArray = newResultsArray.filter(([masterCourseCode, _]) => {\n        const collegeAbr = masterCourseCode.substring(\n          masterCourseCode.length - 2,\n          masterCourseCode.length\n        );\n\n        for (const [college, isCollegeFiltered] of Object.entries(\n          state.filters.colleges\n        )) {\n          if (collegeAbr === college) {\n            return isCollegeFiltered;\n          }\n        }\n      });\n\n      state.filteredClasses = Object.fromEntries(newResultsArray);\n      state.renderedClasses = { ...state.filteredClasses };\n    },\n    searchTermUpdated: (state, action: PayloadAction<string>) => {\n      let newResultsArray = Object.entries(state.filteredClasses);\n      state.searchTerm = action.payload;\n      state.page = 1;\n\n      if (state.searchTerm === '') {\n        classPagesSlice.caseReducers.resetClasses(state);\n      } else {\n        const searchTerm = matchDepartmentName(state.searchTerm);\n\n        // Check for courseCode shortcuts\n        const searchCourseCode = findSearchTermShortcuts(searchTerm);\n\n        const searchTerms = searchTerm.split(' ');\n\n        newResultsArray = newResultsArray.filter(\n          ([_, { courseName, times, masterCourseCode }]) =>\n            filterBySearchTerm(\n              courseName,\n              times,\n              masterCourseCode,\n              searchCourseCode,\n              searchCourseCode === state.searchTerm ? searchTerms : []\n            )\n        );\n\n        let newResultsObject = Object.fromEntries(newResultsArray);\n\n        state.renderedClasses = { ...newResultsObject };\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addMatcher(\n      classPagesApi.endpoints.getAllClasses.matchFulfilled,\n      (state, { payload }) => {\n        state.classes = payload;\n        state.renderedClasses = payload;\n      }\n    );\n  },\n});\n\n// Helper functions\n\nconst findSearchTermShortcuts = (searchPhrase: string) => {\n  return searchPhrase\n    .replace(/(cs *)(\\d+)/i, (match, p1, p2) => 'csci ' + p2)\n    .replace(\n      /((e *)|(eng *)|(engr *))(\\d+)/i,\n      (match, p1, p2, p3, p4, p5) => 'engr ' + p5\n    )\n    .replace(/(bio *)(\\d+)/i, (match, p1, p2) => 'biol ' + p2)\n    .replace(\n      // pad 0s for courseCode search\n      /([a-z]+ *)(\\d+)/i,\n      (match, p1, p2) => p1 + p2.padStart(3, '0')\n    );\n};\n\n// convert full department name search phrase to the department code\nconst matchDepartmentName = (searchPhrase: string) => {\n  return searchPhrase\n    .replace(/(computer science)/i, 'csci')\n    .replace(/(engineering)/i, 'engr')\n    .replace(/(biology)/i, 'biol');\n};\n\nconst filterBySearchTerm = (\n  courseName: string,\n  times: any[],\n  masterCourseCode: string,\n  searchCourseCode?: string,\n  searchTerms?: string[]\n) => {\n  const coursePhrase = `${masterCourseCode} ${courseName} ${\n    times[0]?.professorName ? times[0].professorName : ''\n  }`;\n\n  // Return true if any of the searchCourseCodes are found in the masterCourseCode\n  if (\n    masterCourseCode\n      .trim()\n      .replace(/\\s+/g, ' ')\n      .includes(searchCourseCode.toUpperCase().trim().replace(/\\s+/g, ' '))\n  ) {\n    return true;\n  }\n\n  // Return true if all of the searchPhrases are found in the coursePhrase\n  for (const searchTerm of searchTerms) {\n    if (\n      !coursePhrase\n        .toUpperCase()\n        .trim()\n        .replace(/\\s+/g, ' ')\n        .includes(searchTerm.toUpperCase().trim().replace(/\\s+/g, ' '))\n    ) {\n      return false;\n    }\n  }\n\n  return searchTerms.length > 0;\n};\n\nconst filterByCollege = (filters, [className, _]) => {\n  const college = className.split(' ').at(-1);\n  return filters.colleges.includes(college);\n};\n\n// Selectors\nexport const selectClassesList = (state: RootState) =>\n  state.appData.classPages.classes;\n\nexport const selectRenderedClassesList = (state: RootState) =>\n  state.appData.classPages.renderedClasses;\n\n// Actions\nexport const {\n  currentSectionUpdated,\n  endOfListReached,\n  searchTermUpdated,\n  resetClasses,\n  classSelected,\n  selectedClassCleared,\n  reset,\n  filtersSaved,\n  filtersReset,\n  isHMCUpdated,\n  availableSectionsListUpdated,\n  electiveGeneratorSelected,\n  suggestedClassesUpdated,\n} = classPagesSlice.actions;\n\nexport default classPagesSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport type { PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from '../../app/store';\n\ninterface DiscoverState {\n  searchTerm: string;\n  submittedSearchTerm: string;\n  tag: string;\n  recentSearches: string[];\n}\nconst initialState: DiscoverState = {\n  searchTerm: '',\n  submittedSearchTerm: '',\n  tag: '',\n  recentSearches: [],\n};\n\nexport const discoverSlice = createSlice({\n  name: 'discover',\n  initialState,\n  reducers: {\n    reset: () => initialState,\n    searchTermSubmitted: (state, action: PayloadAction<string>) => {\n      state.submittedSearchTerm = action.payload;\n      if (action.payload && !state.recentSearches.includes(action.payload)) {\n        state.recentSearches.unshift(action.payload);\n      }\n    },\n    searchTermChanged: (state, action: PayloadAction<string>) => {\n      state.searchTerm = action.payload;\n      if (action.payload === '') {\n        state.submittedSearchTerm = '';\n      }\n    },\n    recentSearchTermSelected: (state, action: PayloadAction<string>) => {\n      state.searchTerm = action.payload;\n      state.submittedSearchTerm = action.payload;\n    },\n    tagSelected: (state, action: PayloadAction<string>) => {\n      state.tag = action.payload;\n    },\n    recentSearchTermRemoved: (state, action: PayloadAction<string>) => {\n      state.recentSearches = state.recentSearches.filter(\n        (term) => term !== action.payload\n      );\n    },\n  },\n});\n\nexport const {\n  reset,\n  searchTermChanged,\n  searchTermSubmitted,\n  tagSelected,\n  recentSearchTermSelected,\n  recentSearchTermRemoved,\n} = discoverSlice.actions;\n\nexport const selectSearchTerm = (state: RootState) =>\n  state.appData.discover.searchTerm;\nexport const selectSubmittedSearchTerm = (state: RootState) =>\n  state.appData.discover.submittedSearchTerm;\nexport const selectTag = (state: RootState) => state.appData.discover.tag;\nexport const selectRecentSearches = (state: RootState) =>\n  state.appData.discover.recentSearches;\n\nexport default discoverSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport type { PayloadAction } from '@reduxjs/toolkit';\n\ninterface CalendarState {\n  isThreeDay: boolean;\n}\n\nconst initialState: CalendarState = {\n  isThreeDay: false,\n};\n\nexport const calendarSlice = createSlice({\n  name: 'discover',\n  initialState: initialState,\n  reducers: {\n    reset: (state) => (state = initialState),\n    isThreeDaySet: (state, action: PayloadAction<boolean>) => {\n      state.isThreeDay = action.payload;\n    },\n  },\n});\n\nexport const { reset, isThreeDaySet } = calendarSlice.actions;\n\nexport default calendarSlice.reducer;\n","import * as SecureStore from 'expo-secure-store';\n\nexport default function createSecureStorage(options: any = {}) {\n  const replaceCharacter = options.replaceCharacter || '_';\n  const replacer = options.replacer || defaultReplacer;\n\n  return {\n    getItem: (key: string) =>\n      SecureStore.getItemAsync(replacer(key, replaceCharacter), options),\n    setItem: (key: string, value: string) =>\n      SecureStore.setItemAsync(replacer(key, replaceCharacter), value, options),\n    removeItem: (key: string) =>\n      SecureStore.deleteItemAsync(replacer(key, replaceCharacter), options),\n  };\n}\n\nfunction defaultReplacer(key: string, replaceCharacter: string) {\n  return key.replace(/[^a-z0-9.\\-_]/gi, replaceCharacter);\n}\n","// import createSecureStore from \"redux-persist-expo-securestore\"\nimport * as ExpoSecureStorage from 'expo-secure-store';\nimport { Platform } from 'react-native';\nimport { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport ExpoFileSystemStorage from 'redux-persist-expo-filesystem';\n\nimport appDataReducer from '../app/appDataSlice';\nimport classPagesReducer from '../features/classPages/classPagesSlice';\nimport discoverReducer from '../features/discover/discoverSlice';\nimport calendarReducer from '../features/calendar/calendarSlice';\nimport createSecureStorage from './SecureStorage';\n\n// Secure storage\n\n// const SecureStorage = createSecureStore();\nconst SecureStorage = createSecureStorage();\n\nconst securePersistConfig = {\n  key: 'secure',\n  storage: Platform.OS === 'web' ? AsyncStorage : SecureStorage,\n};\n\n// Non-secure (AsyncStorage) storage\nconst cpPersistConfig = {\n  key: 'classPages',\n  storage: Platform.OS === 'android' ? ExpoFileSystemStorage : AsyncStorage,\n  whitelist:\n    Platform.OS === 'web'\n      ? ['currentSection', 'filters', 'hasSelectedElectiveGen']\n      : ['classes', 'currentSection', 'isHMC', 'hasSelectedElectiveGen'],\n};\n\nconst discoverPersistConfig = {\n  key: 'discover',\n  storage: Platform.OS === 'android' ? ExpoFileSystemStorage : AsyncStorage,\n  whitelist: ['recentSearches'],\n};\n\n// Combine them together\nexport const rootReducer = combineReducers({\n  classPages: persistReducer(cpPersistConfig, classPagesReducer),\n  secure: persistReducer(securePersistConfig, appDataReducer),\n  discover: persistReducer(discoverPersistConfig, discoverReducer),\n  calendar: calendarReducer,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nimport { rootReducer } from './storage';\nimport { apiSlice } from '../features/api/apiSlice';\n\nexport const store = configureStore({\n  reducer: {\n    appData: rootReducer,\n    [apiSlice.reducerPath]: apiSlice.reducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: false,\n      immutableCheck: false,\n    }).concat(apiSlice.middleware),\n});\n\n// serializableCheck: {\n//   ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//   ignoredPaths: [\n//     'appData.classPages.classes',\n//     'addData.classPages.renderedClasses',\n//   ],\n// },\n// immutableCheck: {\n//   ignoredPaths: [\n//     'appData.classPages.classes',\n//     'addData.classPages.renderedClasses',\n//   ],\n// },\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch: () => AppDispatch = useDispatch\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n\n","import { Button, Layout, Text } from '@ui-kitten/components';\n\nexport default function EnterCodePage({ navigation }) {\n  return (\n    <Layout style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Text\n        style={{\n          margin: 10,\n        }}\n        category=\"s1\">\n        An email has been sent to you with a temporary password. Login to set\n        your new password.\n      </Text>\n      <Button\n        style={{ margin: 10 }}\n        onPress={() => {\n          navigation.reset({ index: 0, routes: [{ name: 'Login' }] });\n        }}>\n        Back to Login\n      </Button>\n    </Layout>\n  );\n}\n","import { Button, Input, Layout, Spinner, Text } from '@ui-kitten/components';\nimport { useEffect, useRef, useState } from 'react';\nimport { useNetInfo } from '@react-native-community/netinfo';\nimport { Keyboard } from 'react-native';\n\nimport { useResetPasswordMutation } from '../../api/usersApi';\n\nexport default function EnterEmailPage({ navigation }) {\n  const [email, setEmail] = useState('');\n  const inputRef = useRef<Input>(null);\n  const [resetPassword, { isLoading, isError }] = useResetPasswordMutation();\n  const netInfo = useNetInfo();\n\n  useEffect(() => {\n    if (inputRef.current) inputRef.current.focus();\n  }, [inputRef.current]);\n\n  const onSubmit = async () => {\n    if (!netInfo.isConnected) {\n      alert('Connect to the internet to reset your password');\n      return;\n    }\n\n    try {\n      await resetPassword(email).unwrap();\n      navigation.navigate('EnterCodePage');\n    } catch (e) {\n      console.warn('Error submitting forgot password email', e);\n    }\n  };\n\n  return (\n    <Layout style={{ flex: 1, paddingTop: 30, alignItems: 'center' }}>\n      <Text style={{ margin: 10 }} category=\"s1\">\n        Enter your email to get started\n      </Text>\n\n      <Input\n        autoCapitalize=\"none\"\n        placeholder=\"Email\"\n        ref={inputRef}\n        style={{ margin: 10 }}\n        onChangeText={setEmail}\n        value={email}\n        onSubmitEditing={Keyboard.dismiss}\n      />\n      {isError && (\n        <Text style={{ color: 'red' }}>Email is invalid. Try again</Text>\n      )}\n      <Button\n        style={{ margin: 10 }}\n        onPress={onSubmit}\n        disabled={isLoading}\n        accessoryRight={() => (isLoading ? <Spinner status=\"basic\" /> : null)}>\n        Submit\n      </Button>\n    </Layout>\n  );\n}\n","import { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport EnterCodePage from './EnterCodePage';\nimport EnterEmailPage from './EnterEmailPage';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function ForgotPassword() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n      }}>\n      <Stack.Screen name=\"EnterEmailPage\" component={EnterEmailPage} />\n      <Stack.Screen name=\"EnterCodePage\" component={EnterCodePage} />\n    </Stack.Navigator>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  Image,\n  StyleSheet,\n  TouchableOpacity,\n  KeyboardAvoidingView,\n  Keyboard,\n  TouchableWithoutFeedback,\n  Platform,\n  TextInput,\n} from 'react-native';\nimport { Input, Layout, Spinner, Text } from '@ui-kitten/components';\nimport NetInfo from '@react-native-community/netinfo';\nimport {\n  useLazyGetUserInfoQuery,\n  useLoginMutation,\n  useTrackLoginMutation,\n} from '../api/usersApi';\n\nconst DarkModeLogo = require('../../../assets/logos/owl-white-text.png');\nconst LightModeLogo = require('../../../assets/logos/owl-black-text.png');\n\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport {\n  selectDarkMode,\n  setIsGuest,\n  userKeyUpdated,\n} from '../../app/appDataSlice';\nimport { useLazyGetAllSectionsQuery } from '../api/classPagesApi';\nimport {\n  availableSectionsListUpdated,\n  currentSectionUpdated,\n} from '../classPages/classPagesSlice';\n\nexport default function Login({ navigation }) {\n  const [userName, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const [loginError, setLoginError] = useState('');\n\n  const [login, { isLoading }] = useLoginMutation();\n  const [getUserInfo] = useLazyGetUserInfoQuery();\n  const [trackLogin] = useTrackLoginMutation();\n  const [getAllSections] = useLazyGetAllSectionsQuery();\n  const darkMode = useAppSelector(selectDarkMode);\n  // const apiUserKey = useAppSelector((state) => state.appData.secure);\n  const dispatch = useAppDispatch();\n\n  const passwordRef = React.useRef(null);\n\n  const handleLogin = async () => {\n    Keyboard.dismiss();\n\n    // Check for internet connection\n    const netInfo = await NetInfo.fetch();\n    if (!netInfo.isConnected) {\n      setLoginError('No internet connection');\n      return;\n    }\n\n    // Validate input\n    if (!userName) {\n      setLoginError(\"Username can't be empty\");\n    } else if (!password) {\n      setLoginError(\"Password can't be empty\");\n    } else {\n      try {\n        const { userKey } = await login({\n          userName,\n          password,\n        }).unwrap();\n        // Save user key and data to redux store\n        dispatch(userKeyUpdated(userKey));\n        dispatch(setIsGuest(false));\n\n        // Get current section\n        const allSections = await getAllSections().unwrap();\n\n        dispatch(currentSectionUpdated(allSections.currentTerm));\n        dispatch(availableSectionsListUpdated(allSections.availableTerms));\n\n        // Get user info\n        getUserInfo(userKey)\n          .unwrap()\n          .then(async () => {\n            await trackLogin(userKey);\n          });\n\n        // Reset login form\n        setUserName('');\n        setPassword('');\n        setLoginError('');\n      } catch (e) {\n        setLoginError('Invalid username or password');\n        console.error('Failed to Login: ', e);\n      }\n    }\n  };\n\n  const guestLogin = async () => {\n    Keyboard.dismiss();\n\n    // Check for internet connection\n    const netInfo = await NetInfo.fetch();\n    if (!netInfo.isConnected) {\n      setLoginError('No internet connection');\n      return;\n    }\n\n    try {\n      const { userKey } = await login({\n        userName: '',\n        password: '',\n        isGuest: true,\n      }).unwrap();\n      // Save user key and data to redux store\n      dispatch(userKeyUpdated(userKey));\n      dispatch(setIsGuest(true));\n\n      // Get user info\n      getUserInfo(userKey)\n        .unwrap()\n        .then(async () => {\n          await trackLogin(userKey);\n        });\n\n      // Reset login form\n      setUserName('');\n      setPassword('');\n      setLoginError('');\n    } catch (e) {\n      setLoginError('Invalid username or password');\n      console.error('Failed to Login: ', e);\n    }\n  };\n\n  return (\n    <TouchableWithoutFeedback\n      style={{ flex: 1 }}\n      onPress={() => {\n        Keyboard.dismiss();\n      }}>\n      <KeyboardAvoidingView\n        style={styles.container}\n        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}>\n        <Layout\n          style={{\n            flex: 1,\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}>\n          {darkMode ? (\n            <Image source={DarkModeLogo} style={styles.logo} />\n          ) : (\n            <Image source={LightModeLogo} style={styles.logo} />\n          )}\n\n          <Layout style={styles.inputView}>\n            <Input\n              autoCapitalize=\"none\"\n              status=\"control\"\n              autoComplete=\"username\"\n              style={styles.TextInput}\n              placeholder=\"username / email\"\n              placeholderTextColor=\"white\"\n              keyboardType=\"email-address\"\n              onChangeText={(userName) => setUserName(userName)}\n              value={userName}\n              onSubmitEditing={() => passwordRef.current.focus()}\n              blurOnSubmit={false}\n            />\n          </Layout>\n          <Layout style={styles.inputView}>\n            <Input\n              style={styles.TextInput}\n              autoComplete=\"password\"\n              placeholder=\"password\"\n              placeholderTextColor=\"white\"\n              secureTextEntry={true}\n              onChangeText={(password) => setPassword(password)}\n              value={password}\n              ref={passwordRef}\n            />\n          </Layout>\n          <TouchableOpacity\n            onPress={() => {\n              navigation.navigate('ForgotPassword');\n            }}>\n            <Text style={styles.forgot_button}>Forgot Password?</Text>\n          </TouchableOpacity>\n          {isLoading ? (\n            <Layout\n              style={{ position: 'absolute', backgroundColor: 'transparent' }}>\n              <Spinner />\n            </Layout>\n          ) : null}\n\n          <TouchableOpacity\n            style={styles.loginBtn}\n            onPress={() => {\n              handleLogin();\n            }}>\n            <Text style={{ color: '#fff' }}>LOGIN</Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={{\n              width: '50%',\n              borderRadius: 25,\n              height: 40,\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginTop: 20,\n              backgroundColor: darkMode ? '#8b31e3' : 'rgb(98,111,187)',\n              maxWidth: 300,\n            }}\n            onPress={() => {\n              guestLogin();\n            }}>\n            <Text style={{ color: '#fff' }}>Try As Guest</Text>\n          </TouchableOpacity>\n          <Text style={styles.error}>{loginError}</Text>\n          <TouchableOpacity\n            style={{ width: '100%' }}\n            onPress={() => {\n              navigation.navigate('Signup');\n            }}>\n            <Layout level={'2'} style={styles.signupBtn}>\n              <Text>SIGN UP</Text>\n            </Layout>\n          </TouchableOpacity>\n        </Layout>\n      </KeyboardAvoidingView>\n    </TouchableWithoutFeedback>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  image: {\n    marginBottom: 40,\n  },\n\n  inputView: {\n    flexDirection: 'row',\n    height: 40,\n    marginTop: 20,\n    marginLeft: 50,\n    marginRight: 50,\n    margin: 10,\n  },\n\n  TextInput: {\n    backgroundColor: '#b42bba',\n    borderColor: '#b42bba',\n    color: '#fff',\n    borderWidth: 1,\n    borderRadius: 30,\n    width: '100%',\n    maxWidth: 300,\n  },\n\n  forgot_button: {\n    height: 30,\n    marginBottom: 30,\n  },\n\n  loginBtn: {\n    width: '80%',\n    borderRadius: 25,\n    height: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 10,\n    backgroundColor: '#ff3f5e',\n    maxWidth: 300,\n  },\n  guestButton: {\n    width: '60%',\n    borderRadius: 25,\n    height: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 20,\n  },\n  signupBtn: {\n    marginTop: 60,\n    width: '100%',\n    height: 50,\n    alignItems: 'center',\n    alignSelf: 'center',\n    justifyContent: 'center',\n    maxWidth: 800,\n  },\n  error: {\n    color: 'red',\n    fontSize: 15,\n  },\n  logo: {\n    width: 178,\n    height: 197,\n    marginBottom: 20,\n  },\n});\n","import { HeaderBackButton } from '@react-navigation/elements';\nimport { Platform } from 'react-native';\n\nexport default function BackButton({ navigation, ...props }) {\n  return (\n    <HeaderBackButton\n      {...props}\n      onPress={navigation.goBack}\n      label=\"Back\"\n      labelVisible={Platform.OS === 'ios'}\n    />\n  );\n}\n","// Import React and Component\nimport React, { useState, useRef } from 'react';\nimport {\n  StyleSheet,\n  KeyboardAvoidingView,\n  Keyboard,\n  TouchableOpacity,\n  ScrollView,\n  Platform,\n} from 'react-native';\n\nimport {\n  CheckBox,\n  IndexPath,\n  Layout,\n  Select,\n  SelectItem,\n  Text,\n  Input,\n  Spinner,\n} from '@ui-kitten/components';\nimport {\n  useGetCollegeListQuery,\n  useSignupUserMutation,\n} from '../../api/usersApi';\n\nconst Signup = ({ navigation }) => {\n  const [realFirstName, setRealFirstName] = useState('');\n  const [realLastName, setRealLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [major, setMajor] = useState('');\n  const [selectedIndex, setSelectedIndex] = useState(new IndexPath(0));\n  const [simplifiedSignup, setSimplifiedSignUp] = useState(false);\n  const [userCollege, setUserCollege] = useState({\n    collegeName: '',\n    humanReadableCollegeName: null,\n  });\n\n  const { data: collegeList } = useGetCollegeListQuery();\n  const [signupUser, { isLoading: signupLoading }] = useSignupUserMutation();\n\n  const firstNameInputRef = useRef<Input>();\n  const lastNameInputRef = useRef<Input>();\n  const passwordInputRef = useRef<Input>();\n  const majorInputRef = useRef<Input>();\n\n  const validateInput = () => {\n    if (!simplifiedSignup) {\n      if (!realFirstName) {\n        alert('Please fill First Name');\n        return false;\n      }\n      if (!realLastName) {\n        alert('Please fill Last Name');\n        return false;\n      }\n\n      if (!userCollege.collegeName) {\n        alert('Please fill College Name');\n        return false;\n      }\n\n      if (!major) {\n        alert('Please fill Major');\n        return false;\n      }\n    }\n\n    if (!email) {\n      alert('Please fill Email');\n      return false;\n    }\n\n    if (!password) {\n      alert('Please fill Password');\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleSubmitButton = async () => {\n    if (validateInput()) {\n      try {\n        const body = {\n          email,\n          password,\n          realFirstName,\n          realLastName,\n          collegeName: userCollege.collegeName,\n          major,\n        };\n\n        await signupUser(body).unwrap();\n        navigation.navigate('VerifyEmail');\n      } catch (e) {\n        console.warn('Signup error: ', e);\n      }\n    }\n  };\n\n  const renderCollegeDropDown = () => {\n    function handleSelection(index) {\n      setSelectedIndex(index);\n      const newObject = {\n        collegeName: collegeList[index.row].id,\n        humanReadableCollegeName: collegeList[index.row].label,\n      };\n      setUserCollege(newObject);\n    }\n\n    return (\n      <Layout style={styles.containerDrop}>\n        <Select\n          placeholder={'Choose A College'}\n          value={\n            !userCollege.humanReadableCollegeName\n              ? 'Selection'\n              : userCollege.humanReadableCollegeName\n          }\n          onFocus={Keyboard.dismiss}\n          selectedIndex={selectedIndex}\n          onSelect={handleSelection}>\n          {collegeList &&\n            collegeList.map((college, index) => (\n              <SelectItem title={college.label} key={index} />\n            ))}\n        </Select>\n      </Layout>\n    );\n  };\n\n  let fields = [];\n  fields.push(\n    <Layout key={'1'}>\n      <Layout style={styles.SectionStyle}>\n        <Layout style={styles.labelSection}>\n          <Text style={styles.label}>Email</Text>\n        </Layout>\n        <Input\n          style={styles.inputStyle}\n          onChangeText={(email) => setEmail(email)}\n          underlineColorAndroid=\"#f000\"\n          placeholder=\"Enter Email\"\n          placeholderTextColor=\"#8b9cb5\"\n          defaultValue=\"\"\n          autoCapitalize=\"none\"\n          returnKeyType=\"next\"\n          onSubmitEditing={() =>\n            passwordInputRef.current ? passwordInputRef.current.focus() : null\n          }\n          blurOnSubmit={false}\n        />\n      </Layout>\n      <Layout style={styles.SectionStyle}>\n        <Layout style={styles.labelSection}>\n          <Text style={styles.label}>Password</Text>\n        </Layout>\n        <Input\n          style={styles.inputStyle}\n          onChangeText={(password) => setPassword(password)}\n          underlineColorAndroid=\"#f000\"\n          placeholder=\"Enter Password\"\n          placeholderTextColor=\"#8b9cb5\"\n          defaultValue=\"\"\n          ref={passwordInputRef}\n          returnKeyType=\"next\"\n          secureTextEntry={true}\n          onSubmitEditing={() =>\n            firstNameInputRef.current ? firstNameInputRef.current.focus() : null\n          }\n          blurOnSubmit={false}\n        />\n      </Layout>\n    </Layout>\n  );\n\n  if (!simplifiedSignup) {\n    fields.push(\n      <Layout key={'2'}>\n        <Layout style={styles.SectionStyle}>\n          <Layout style={styles.labelSection}>\n            <Text style={styles.label}>First Name</Text>\n          </Layout>\n          <Input\n            style={styles.inputStyle}\n            onChangeText={setRealFirstName}\n            ref={firstNameInputRef}\n            underlineColorAndroid=\"#f000\"\n            placeholder=\"Enter First Name\"\n            placeholderTextColor=\"#8b9cb5\"\n            defaultValue=\"\"\n            autoCapitalize=\"sentences\"\n            returnKeyType=\"next\"\n            onSubmitEditing={() =>\n              lastNameInputRef?.current\n                ? lastNameInputRef.current.focus()\n                : null\n            }\n            blurOnSubmit={false}\n          />\n        </Layout>\n\n        <Layout style={styles.SectionStyle}>\n          <Layout style={styles.labelSection}>\n            <Text style={styles.label}>Last Name</Text>\n          </Layout>\n          <Input\n            style={styles.inputStyle}\n            onChangeText={setRealLastName}\n            underlineColorAndroid=\"#f000\"\n            placeholder=\"Enter Last Name\"\n            placeholderTextColor=\"#8b9cb5\"\n            defaultValue=\"\"\n            ref={lastNameInputRef}\n            autoCapitalize=\"sentences\"\n            returnKeyType=\"next\"\n            onSubmitEditing={() =>\n              majorInputRef.current ? majorInputRef.current.focus() : null\n            }\n            blurOnSubmit={false}\n          />\n        </Layout>\n\n        <Layout style={styles.SectionStyle}>\n          <Layout style={styles.labelSection}>\n            <Text style={styles.label}>Intended Major</Text>\n          </Layout>\n          <Input\n            style={styles.inputStyle}\n            onChangeText={setMajor}\n            underlineColorAndroid=\"#f000\"\n            placeholder=\"Enter Intended Major\"\n            placeholderTextColor=\"#8b9cb5\"\n            defaultValue=\"\"\n            ref={majorInputRef}\n            blurOnSubmit={true}\n          />\n        </Layout>\n\n        <Layout style={styles.SectionStyle}>\n          <Layout style={styles.labelSection}>\n            <Text style={styles.label}>College Name</Text>\n          </Layout>\n          {renderCollegeDropDown()}\n        </Layout>\n      </Layout>\n    );\n  }\n\n  return (\n    // Registration Page\n    <Layout style={{ flex: 1 }}>\n      <ScrollView style={{ flex: 1 }}>\n        {/* Spinner */}\n        {signupLoading && (\n          <Layout\n            style={{\n              flex: 1,\n              position: 'absolute',\n              zIndex: 1,\n              top: '50%',\n              left: '50%',\n              backgroundColor: 'transparent',\n            }}>\n            <Spinner />\n          </Layout>\n        )}\n\n        <Layout style={{ paddingVertical: 30, paddingHorizontal: 40 }}>\n          <CheckBox\n            checked={simplifiedSignup}\n            onChange={(nextChecked) => setSimplifiedSignUp(nextChecked)}>\n            Simplified Signup\n          </CheckBox>\n        </Layout>\n\n        <KeyboardAvoidingView\n          style={{ flex: 1 }}\n          behavior={Platform.OS === 'ios' ? 'padding' : 'height'}>\n          {fields}\n\n          <TouchableOpacity\n            style={styles.buttonStyle}\n            onPress={handleSubmitButton}>\n            <Text style={styles.buttonTextStyle}>Register</Text>\n          </TouchableOpacity>\n        </KeyboardAvoidingView>\n      </ScrollView>\n    </Layout>\n  );\n};\nexport default Signup;\n\nconst styles = StyleSheet.create({\n  SectionStyle: {\n    flexDirection: 'row',\n    height: 40,\n    marginTop: 20,\n    marginLeft: 35,\n    marginRight: 35,\n    margin: 10,\n  },\n  buttonStyle: {\n    backgroundColor: '#b42bba',\n    borderWidth: 0,\n    color: '#FFFFFF',\n    borderColor: '#7DE24E',\n    height: 40,\n    alignItems: 'center',\n    borderRadius: 30,\n    marginLeft: 35,\n    marginRight: 35,\n    marginTop: 20,\n    marginBottom: 20,\n  },\n  buttonTextStyle: {\n    color: '#FFFFFF',\n    paddingVertical: 10,\n    fontSize: 16,\n  },\n  inputStyle: {\n    flex: 1,\n    paddingLeft: 15,\n    paddingRight: 15,\n    borderWidth: 1,\n    borderRadius: 30,\n    borderColor: '#dadae8',\n  },\n  errorTextStyle: {\n    color: 'red',\n    textAlign: 'center',\n    fontSize: 14,\n  },\n  successTextStyle: {\n    color: 'black',\n    textAlign: 'center',\n    fontSize: 18,\n    padding: 30,\n  },\n  label: {\n    textAlign: 'center',\n    fontSize: 15,\n    paddingLeft: 10,\n    paddingRight: 10,\n  },\n  labelSection: {\n    justifyContent: 'center',\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n  },\n\n  text: {\n    fontSize: 20,\n    margin: 20,\n  },\n  input: {\n    width: '80%',\n    margin: 20,\n    borderWidth: 1,\n    borderColor: 'black',\n    borderRadius: 20,\n    height: 40,\n    padding: 10,\n  },\n  button: {\n    width: '80%',\n    margin: 20,\n    alignItems: 'center',\n    backgroundColor: '#b42bba',\n    height: 40,\n    borderRadius: 20,\n    borderColor: '#b42bba',\n    justifyContent: 'center',\n  },\n  buttonText: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: 'white',\n  },\n  containerDrop: {\n    minHeight: 128,\n    minWidth: 200,\n  },\n});\n","import React from 'react';\nimport { Layout, Text, Input, Spinner } from '@ui-kitten/components';\nimport { StyleSheet, TouchableOpacity } from 'react-native';\nimport {\n  useVerifySignupMutation,\n  useLazyGetUserInfoQuery,\n} from '../../api/usersApi';\nimport { useAppDispatch } from '../../../app/hooks';\nimport { userKeyUpdated } from '../../../app/appDataSlice';\n\nexport default function VerifyEmail() {\n  const [verificationCode, setVerificationCode] = React.useState('');\n  const [verifyCode, { isError }] = useVerifySignupMutation();\n  const [getUserInfo, { isLoading: getUserInfoLoading }] =\n    useLazyGetUserInfoQuery();\n  const dispatch = useAppDispatch();\n\n  const handleVerifyCodeButton = async () => {\n    try {\n      const { password } = await verifyCode(verificationCode).unwrap();\n      dispatch(userKeyUpdated(password));\n      await getUserInfo(password).unwrap();\n    } catch (error) {\n      console.warn(\"Couldn't verify code\", error);\n    }\n  };\n\n  return (\n    <Layout style={styles.container}>\n      <Text style={styles.text}>\n        A verification code has been sent to your email. Please check your email\n        and enter the code below.\n      </Text>\n      {getUserInfoLoading && <Spinner />}\n      {isError && <Text>Error verifying code</Text>}\n      <Input\n        style={styles.input}\n        placeholder=\"Verification Code\"\n        keyboardType=\"numeric\"\n        onChangeText={(text) => setVerificationCode(text)}\n      />\n      <TouchableOpacity style={styles.button} onPress={handleVerifyCodeButton}>\n        <Text style={styles.buttonText}>Finish Signup</Text>\n      </TouchableOpacity>\n    </Layout>\n  );\n}\n\nconst styles = StyleSheet.create({\n  SectionStyle: {\n    flexDirection: 'row',\n    height: 40,\n    marginTop: 20,\n    marginLeft: 35,\n    marginRight: 35,\n    margin: 10,\n  },\n  buttonStyle: {\n    backgroundColor: '#b42bba',\n    borderWidth: 0,\n    color: '#FFFFFF',\n    borderColor: '#7DE24E',\n    height: 40,\n    alignItems: 'center',\n    borderRadius: 30,\n    marginLeft: 35,\n    marginRight: 35,\n    marginTop: 20,\n    marginBottom: 20,\n  },\n  buttonTextStyle: {\n    color: '#FFFFFF',\n    paddingVertical: 10,\n    fontSize: 16,\n  },\n  inputStyle: {\n    flex: 1,\n    color: 'black',\n    paddingLeft: 15,\n    paddingRight: 15,\n    borderWidth: 1,\n    borderRadius: 30,\n    borderColor: '#dadae8',\n  },\n  errorTextStyle: {\n    color: 'red',\n    textAlign: 'center',\n    fontSize: 14,\n  },\n  successTextStyle: {\n    color: 'black',\n    textAlign: 'center',\n    fontSize: 18,\n    padding: 30,\n  },\n  description: {\n    color: 'black',\n    textAlign: 'center',\n    fontSize: 18,\n    padding: 30,\n  },\n  label: {\n    color: 'black',\n    textAlign: 'center',\n    fontSize: 15,\n    paddingLeft: 10,\n    paddingRight: 10,\n  },\n  labelSection: {\n    justifyContent: 'center',\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n  },\n\n  text: {\n    fontSize: 20,\n    margin: 20,\n  },\n  input: {\n    width: '80%',\n    margin: 20,\n    borderWidth: 1,\n    borderColor: 'black',\n    borderRadius: 20,\n    height: 40,\n    padding: 10,\n  },\n  button: {\n    width: '80%',\n    margin: 20,\n    alignItems: 'center',\n    backgroundColor: '#b42bba',\n    height: 40,\n    borderRadius: 20,\n    borderColor: '#b42bba',\n    justifyContent: 'center',\n  },\n  buttonText: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: 'white',\n  },\n  containerDrop: {\n    minHeight: 128,\n    minWidth: 200,\n  },\n});\n","import { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { useTheme } from '@ui-kitten/components';\nimport { selectDarkMode } from '../../../app/appDataSlice';\nimport { useAppSelector } from '../../../app/hooks';\nimport BackButton from '../../../components/BackButton';\nimport SignupForm from './SignupForm';\nimport VerifyEmail from './VerifyEmail';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function Signup() {\n  const theme = useTheme();\n  const darkMode = useAppSelector(selectDarkMode);\n\n  return (\n    <Stack.Navigator\n      screenOptions={({ navigation }) => ({\n        headerStyle: {\n          backgroundColor: darkMode ? theme['color-basic-800'] : '#fff',\n        },\n        headerLeft: (props) => (\n          <BackButton {...props} navigation={navigation} />\n        ),\n      })}>\n      <Stack.Screen\n        name=\"SignupForm\"\n        component={SignupForm}\n        options={{ title: 'Signup' }}\n      />\n      <Stack.Screen\n        name=\"VerifyEmail\"\n        component={VerifyEmail}\n        options={{ title: 'Verify Email' }}\n      />\n    </Stack.Navigator>\n  );\n}\n","import { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { useTheme } from '@ui-kitten/components';\nimport { selectDarkMode } from '../../app/appDataSlice';\nimport { useAppSelector } from '../../app/hooks';\nimport BackButton from '../../components/BackButton';\nimport ForgotPassword from './ForgotPassword/index';\nimport Login from './Login';\nimport Signup from './Signup/index';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function Auth() {\n  const theme = useTheme();\n  const darkMode = useAppSelector(selectDarkMode);\n\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerStyle: {\n          backgroundColor: darkMode ? theme['color-basic-800'] : '#fff',\n        },\n      }}>\n      <Stack.Screen\n        name=\"Login\"\n        component={Login}\n        options={{ headerShown: false }}\n      />\n      <Stack.Screen\n        name=\"Signup\"\n        component={Signup}\n        options={{ headerShown: false }}\n      />\n      <Stack.Screen\n        name=\"ForgotPassword\"\n        component={ForgotPassword}\n        options={{ title: 'Reset Password' }}\n      />\n    </Stack.Navigator>\n  );\n}\n","import { Layout, Text } from '@ui-kitten/components';\nimport Constants from 'expo-constants';\n\ntype HeaderProps = {\n  accessoryLeft?: keyof JSX.IntrinsicElements | JSX.Element;\n  accessoryRight?: keyof JSX.IntrinsicElements | JSX.Element;\n  center?: keyof JSX.IntrinsicElements | JSX.Element;\n  title: string;\n  level?: '1' | '2' | '3' | '4';\n};\n\nexport default function Header({\n  accessoryLeft,\n  accessoryRight,\n  title,\n  center,\n  level = '1',\n}: HeaderProps) {\n  return (\n    <Layout\n      level={level}\n      style={{\n        paddingTop: Constants.statusBarHeight + 10,\n        width: '100%',\n        justifyContent: 'space-between',\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingHorizontal: 20,\n      }}>\n      <Layout level={level} style={{ flexDirection: 'row' }}>\n        {accessoryLeft}\n        <Text style={{ marginLeft: 10, fontSize: 20, fontWeight: '500' }}>\n          {title}\n        </Text>\n      </Layout>\n      {center}\n\n      {accessoryRight}\n    </Layout>\n  );\n}\n","export const DISCOVER_LIST_PAGE_SIZE = 5;\n\nexport const tagIndices = [\n  'Clubs',\n  'Events',\n  'College News',\n  'Courses',\n  'HMC',\n  'Pomona',\n  'CMC',\n  'Pitzer',\n  'Scripps',\n];\n\nexport const adminTagIndices = [\n  'Athena Network',\n  'Clubs',\n  'Events',\n  'College News',\n  'Courses',\n  'HMC',\n  'Pomona',\n  'CMC',\n  'Pitzer',\n  'Scripps',\n];\n\nexport const MAX_WIDTH_WEB = 700;\n\nexport const postOptions = ['Image Post', 'Text Post', 'Link', 'Event'];\n\nexport const IMAGE_BUCKET_URL =\n  'https://athena-image-storage.s3.us-west-2.amazonaws.com/imagePostImages';\n\nexport const EMOJI_LIST = [\n  '😀',\n  '😁',\n  '😂',\n  '🤣',\n  '😃',\n  '😄',\n  '😅',\n  '😆',\n  '😉',\n  '😊',\n  '😋',\n  '😎',\n  '😍',\n  '😘',\n  '😗',\n  '😙',\n  '😚',\n  '☺',\n  '🙂',\n  '🤗',\n  '🤔',\n  '😐',\n  '😑',\n  '😶',\n  '🙄',\n  '😏',\n  '😣',\n  '😥',\n  '😮',\n  '🤐',\n  '😯',\n  '😪',\n  '😫',\n  '😴',\n  '😌',\n  '🤓',\n  '😛',\n  '😜',\n  '😝',\n  '🤤',\n  '😒',\n  '😓',\n  '😔',\n  '😕',\n  '🙃',\n  '🤑',\n  '😲',\n  '☹',\n  '🙁',\n  '😖',\n  '😞',\n  '😟',\n  '😤',\n  '😢',\n  '😭',\n  '😦',\n  '😧',\n  '😨',\n  '😩',\n  '😬',\n  '😰',\n  '😱',\n  '😳',\n  '😵',\n  '😡',\n  '😠',\n  '😇',\n  '🤠',\n  '🤡',\n  '🤥',\n  '😷',\n  '🤒',\n  '🤕',\n  '🤢',\n  '🤧',\n  '😈',\n  '👿',\n  '👹',\n  '👺',\n  '💀',\n  '☠',\n  '👻',\n  '👽',\n  '👾',\n  '🤖',\n  '💩',\n  '😺',\n  '😸',\n  '😹',\n  '😻',\n  '😼',\n  '😽',\n  '🙀',\n  '😿',\n  '😾',\n  '🙈',\n  '🙉',\n  '🙊',\n  '👦',\n  '👦🏻',\n  '👦🏼',\n  '👦🏽',\n  '👦🏾',\n  '👦🏿',\n  '👧',\n  '👧🏻',\n  '👧🏼',\n  '👧🏽',\n  '👧🏾',\n  '👧🏿',\n  '👨',\n  '👨🏻',\n  '👨🏼',\n  '👨🏽',\n  '👨🏾',\n  '👨🏿',\n  '👩',\n  '👩🏻',\n  '👩🏼',\n  '👩🏽',\n  '👩🏾',\n  '👩🏿',\n  '👴',\n  '👴🏻',\n  '👴🏼',\n  '👴🏽',\n  '👴🏾',\n  '👴🏿',\n  '👵',\n  '👵🏻',\n  '👵🏼',\n  '👵🏽',\n  '👵🏾',\n  '👵🏿',\n  '👶',\n  '👶🏻',\n  '👶🏼',\n  '👶🏽',\n  '👶🏾',\n  '👶🏿',\n  '👼',\n  '👼🏻',\n  '👼🏼',\n  '👼🏽',\n  '👼🏾',\n  '👼🏿',\n  '👮',\n  '👮🏻',\n  '👮🏼',\n  '👮🏽',\n  '👮🏾',\n  '👮🏿',\n  '🕵',\n  '🕵🏻',\n  '🕵🏼',\n  '🕵🏽',\n  '🕵🏾',\n  '🕵🏿',\n  '💂',\n  '💂🏻',\n  '💂🏼',\n  '💂🏽',\n  '💂🏾',\n  '💂🏿',\n  '👷',\n  '👷🏻',\n  '👷🏼',\n  '👷🏽',\n  '👷🏾',\n  '👷🏿',\n  '👳',\n  '👳🏻',\n  '👳🏼',\n  '👳🏽',\n  '👳🏾',\n  '👳🏿',\n  '👱',\n  '👱🏻',\n  '👱🏼',\n  '👱🏽',\n  '👱🏾',\n  '👱🏿',\n  '🎅',\n  '🎅🏻',\n  '🎅🏼',\n  '🎅🏽',\n  '🎅🏾',\n  '🎅🏿',\n  '🤶',\n  '🤶🏻',\n  '🤶🏼',\n  '🤶🏽',\n  '🤶🏾',\n  '🤶🏿',\n  '👸',\n  '👸🏻',\n  '👸🏼',\n  '👸🏽',\n  '👸🏾',\n  '👸🏿',\n  '🤴',\n  '🤴🏻',\n  '🤴🏼',\n  '🤴🏽',\n  '🤴🏾',\n  '🤴🏿',\n  '👰',\n  '👰🏻',\n  '👰🏼',\n  '👰🏽',\n  '👰🏾',\n  '👰🏿',\n  '🤵',\n  '🤵🏻',\n  '🤵🏼',\n  '🤵🏽',\n  '🤵🏾',\n  '🤵🏿',\n  '🤰',\n  '🤰🏻',\n  '🤰🏼',\n  '🤰🏽',\n  '🤰🏾',\n  '🤰🏿',\n  '👲',\n  '👲🏻',\n  '👲🏼',\n  '👲🏽',\n  '👲🏾',\n  '👲🏿',\n  '🙍',\n  '🙍🏻',\n  '🙍🏼',\n  '🙍🏽',\n  '🙍🏾',\n  '🙍🏿',\n  '🙎',\n  '🙎🏻',\n  '🙎🏼',\n  '🙎🏽',\n  '🙎🏾',\n  '🙎🏿',\n  '🙅',\n  '🙅🏻',\n  '🙅🏼',\n  '🙅🏽',\n  '🙅🏾',\n  '🙅🏿',\n  '🙆',\n  '🙆🏻',\n  '🙆🏼',\n  '🙆🏽',\n  '🙆🏾',\n  '🙆🏿',\n  '💁',\n  '💁🏻',\n  '💁🏼',\n  '💁🏽',\n  '💁🏾',\n  '💁🏿',\n  '🙋',\n  '🙋🏻',\n  '🙋🏼',\n  '🙋🏽',\n  '🙋🏾',\n  '🙋🏿',\n  '🙇',\n  '🙇🏻',\n  '🙇🏼',\n  '🙇🏽',\n  '🙇🏾',\n  '🙇🏿',\n  '🤦',\n  '🤦🏻',\n  '🤦🏼',\n  '🤦🏽',\n  '🤦🏾',\n  '🤦🏿',\n  '🤷',\n  '🤷🏻',\n  '🤷🏼',\n  '🤷🏽',\n  '🤷🏾',\n  '🤷🏿',\n  '💆',\n  '💆🏻',\n  '💆🏼',\n  '💆🏽',\n  '💆🏾',\n  '💆🏿',\n  '💇',\n  '💇🏻',\n  '💇🏼',\n  '💇🏽',\n  '💇🏾',\n  '💇🏿',\n  '🚶',\n  '🚶🏻',\n  '🚶🏼',\n  '🚶🏽',\n  '🚶🏾',\n  '🚶🏿',\n  '🏃',\n  '🏃🏻',\n  '🏃🏼',\n  '🏃🏽',\n  '🏃🏾',\n  '🏃🏿',\n  '💃',\n  '💃🏻',\n  '💃🏼',\n  '💃🏽',\n  '💃🏾',\n  '💃🏿',\n  '🕺',\n  '🕺🏻',\n  '🕺🏼',\n  '🕺🏽',\n  '🕺🏾',\n  '🕺🏿',\n  '👯',\n  '🕴',\n  '🗣',\n  '👤',\n  '👥',\n  '🤺',\n  '🏇',\n  '⛷',\n  '🏂',\n  '🏌',\n  '🏄',\n  '🏄🏻',\n  '🏄🏼',\n  '🏄🏽',\n  '🏄🏾',\n  '🏄🏿',\n  '🚣',\n  '🚣🏻',\n  '🚣🏼',\n  '🚣🏽',\n  '🚣🏾',\n  '🚣🏿',\n  '🏊',\n  '🏊🏻',\n  '🏊🏼',\n  '🏊🏽',\n  '🏊🏾',\n  '🏊🏿',\n  '⛹',\n  '⛹🏻',\n  '⛹🏼',\n  '⛹🏽',\n  '⛹🏾',\n  '⛹🏿',\n  '🏋',\n  '🏋🏻',\n  '🏋🏼',\n  '🏋🏽',\n  '🏋🏾',\n  '🏋🏿',\n  '🚴',\n  '🚴🏻',\n  '🚴🏼',\n  '🚴🏽',\n  '🚴🏾',\n  '🚴🏿',\n  '🚵',\n  '🚵🏻',\n  '🚵🏼',\n  '🚵🏽',\n  '🚵🏾',\n  '🚵🏿',\n  '🏎',\n  '🏍',\n  '🤸',\n  '🤸🏻',\n  '🤸🏼',\n  '🤸🏽',\n  '🤸🏾',\n  '🤸🏿',\n  '🤼',\n  '🤼🏻',\n  '🤼🏼',\n  '🤼🏽',\n  '🤼🏾',\n  '🤼🏿',\n  '🤽',\n  '🤽🏻',\n  '🤽🏼',\n  '🤽🏽',\n  '🤽🏾',\n  '🤽🏿',\n  '🤾',\n  '🤾🏻',\n  '🤾🏼',\n  '🤾🏽',\n  '🤾🏾',\n  '🤾🏿',\n  '🤹',\n  '🤹🏻',\n  '🤹🏼',\n  '🤹🏽',\n  '🤹🏾',\n  '🤹🏿',\n  '👫',\n  '👬',\n  '👭',\n  '💏',\n  '👩‍❤️‍💋‍👨',\n  '👨‍❤️‍💋‍👨',\n  '👩‍❤️‍💋‍👩',\n  '💑',\n  '👩‍❤️‍👨',\n  '👨‍❤️‍👨',\n  '👩‍❤️‍👩',\n  '👪',\n  '👨‍👩‍👦',\n  '👨‍👩‍👧',\n  '👨‍👩‍👧‍👦',\n  '👨‍👩‍👦‍👦',\n  '👨‍👩‍👧‍👧',\n  '👨‍👨‍👦',\n  '👨‍👨‍👧',\n  '👨‍👨‍👧‍👦',\n  '👨‍👨‍👦‍👦',\n  '👨‍👨‍👧‍👧',\n  '👩‍👩‍👦',\n  '👩‍👩‍👧',\n  '👩‍👩‍👧‍👦',\n  '👩‍👩‍👦‍👦',\n  '👩‍👩‍👧‍👧',\n  '🏻',\n  '🏼',\n  '🏽',\n  '🏾',\n  '🏿',\n  '💪',\n  '💪🏻',\n  '💪🏼',\n  '💪🏽',\n  '💪🏾',\n  '💪🏿',\n  '🤳',\n  '🤳🏻',\n  '🤳🏼',\n  '🤳🏽',\n  '🤳🏾',\n  '🤳🏿',\n  '👈',\n  '👈🏻',\n  '👈🏼',\n  '👈🏽',\n  '👈🏾',\n  '👈🏿',\n  '👉',\n  '👉🏻',\n  '👉🏼',\n  '👉🏽',\n  '👉🏾',\n  '👉🏿',\n  '☝',\n  '☝🏻',\n  '☝🏼',\n  '☝🏽',\n  '☝🏾',\n  '☝🏿',\n  '👆',\n  '👆🏻',\n  '👆🏼',\n  '👆🏽',\n  '👆🏾',\n  '👆🏿',\n  '🖕',\n  '🖕🏻',\n  '🖕🏼',\n  '🖕🏽',\n  '🖕🏾',\n  '🖕🏿',\n  '👇',\n  '👇🏻',\n  '👇🏼',\n  '👇🏽',\n  '👇🏾',\n  '👇🏿',\n  '✌',\n  '✌🏻',\n  '✌🏼',\n  '✌🏽',\n  '✌🏾',\n  '✌🏿',\n  '🤞',\n  '🤞🏻',\n  '🤞🏼',\n  '🤞🏽',\n  '🤞🏾',\n  '🤞🏿',\n  '🖖',\n  '🖖🏻',\n  '🖖🏼',\n  '🖖🏽',\n  '🖖🏾',\n  '🖖🏿',\n  '🤘',\n  '🤘🏻',\n  '🤘🏼',\n  '🤘🏽',\n  '🤘🏾',\n  '🤘🏿',\n  '🤙',\n  '🤙🏻',\n  '🤙🏼',\n  '🤙🏽',\n  '🤙🏾',\n  '🤙🏿',\n  '🖐',\n  '🖐🏻',\n  '🖐🏼',\n  '🖐🏽',\n  '🖐🏾',\n  '🖐🏿',\n  '✋',\n  '✋🏻',\n  '✋🏼',\n  '✋🏽',\n  '✋🏾',\n  '✋🏿',\n  '👌',\n  '👌🏻',\n  '👌🏼',\n  '👌🏽',\n  '👌🏾',\n  '👌🏿',\n  '👍',\n  '👍🏻',\n  '👍🏼',\n  '👍🏽',\n  '👍🏾',\n  '👍🏿',\n  '👎',\n  '👎🏻',\n  '👎🏼',\n  '👎🏽',\n  '👎🏾',\n  '👎🏿',\n  '✊',\n  '✊🏻',\n  '✊🏼',\n  '✊🏽',\n  '✊🏾',\n  '✊🏿',\n  '👊',\n  '👊🏻',\n  '👊🏼',\n  '👊🏽',\n  '👊🏾',\n  '👊🏿',\n  '🤛',\n  '🤛🏻',\n  '🤛🏼',\n  '🤛🏽',\n  '🤛🏾',\n  '🤛🏿',\n  '🤜',\n  '🤜🏻',\n  '🤜🏼',\n  '🤜🏽',\n  '🤜🏾',\n  '🤜🏿',\n  '🤚',\n  '🤚🏻',\n  '🤚🏼',\n  '🤚🏽',\n  '🤚🏾',\n  '🤚🏿',\n  '👋',\n  '👋🏻',\n  '👋🏼',\n  '👋🏽',\n  '👋🏾',\n  '👋🏿',\n  '👏',\n  '👏🏻',\n  '👏🏼',\n  '👏🏽',\n  '👏🏾',\n  '👏🏿',\n  '✍',\n  '✍🏻',\n  '✍🏼',\n  '✍🏽',\n  '✍🏾',\n  '✍🏿',\n  '👐',\n  '👐🏻',\n  '👐🏼',\n  '👐🏽',\n  '👐🏾',\n  '👐🏿',\n  '🙌',\n  '🙌🏻',\n  '🙌🏼',\n  '🙌🏽',\n  '🙌🏾',\n  '🙌🏿',\n  '🙏',\n  '🙏🏻',\n  '🙏🏼',\n  '🙏🏽',\n  '🙏🏾',\n  '🙏🏿',\n  '🤝',\n  '🤝🏻',\n  '🤝🏼',\n  '🤝🏽',\n  '🤝🏾',\n  '🤝🏿',\n  '💅',\n  '💅🏻',\n  '💅🏼',\n  '💅🏽',\n  '💅🏾',\n  '💅🏿',\n  '👂',\n  '👂🏻',\n  '👂🏼',\n  '👂🏽',\n  '👂🏾',\n  '👂🏿',\n  '👃',\n  '👃🏻',\n  '👃🏼',\n  '👃🏽',\n  '👃🏾',\n  '👃🏿',\n  '👣',\n  '👀',\n  '👁',\n  '👁‍🗨',\n  '👅',\n  '👄',\n  '💋',\n  '💘',\n  '❤',\n  '💓',\n  '💔',\n  '💕',\n  '💖',\n  '💗',\n  '💙',\n  '💚',\n  '💛',\n  '💜',\n  '🖤',\n  '💝',\n  '💞',\n  '💟',\n  '❣',\n  '💌',\n  '💤',\n  '💢',\n  '💣',\n  '💥',\n  '💦',\n  '💨',\n  '💫',\n  '💬',\n  '🗨',\n  '🗯',\n  '💭',\n  '🕳',\n  '👓',\n  '🕶',\n  '👔',\n  '👕',\n  '👖',\n  '👗',\n  '👘',\n  '👙',\n  '👚',\n  '👛',\n  '👜',\n  '👝',\n  '🛍',\n  '🎒',\n  '👞',\n  '👟',\n  '👠',\n  '👡',\n  '👢',\n  '👑',\n  '👒',\n  '🎩',\n  '🎓',\n  '⛑',\n  '📿',\n  '💄',\n  '💍',\n  '💎',\n  '🐵',\n  '🐒',\n  '🦍',\n  '🐶',\n  '🐕',\n  '🐩',\n  '🐺',\n  '🦊',\n  '🐱',\n  '🐈',\n  '🦁',\n  '🐯',\n  '🐅',\n  '🐆',\n  '🐴',\n  '🐎',\n  '🦌',\n  '🦄',\n  '🐮',\n  '🐂',\n  '🐃',\n  '🐄',\n  '🐷',\n  '🐖',\n  '🐗',\n  '🐽',\n  '🐏',\n  '🐑',\n  '🐐',\n  '🐪',\n  '🐫',\n  '🐘',\n  '🦏',\n  '🐭',\n  '🐁',\n  '🐀',\n  '🐹',\n  '🐰',\n  '🐇',\n  '🐿',\n  '🦇',\n  '🐻',\n  '🐨',\n  '🐼',\n  '🐾',\n  '🦃',\n  '🐔',\n  '🐓',\n  '🐣',\n  '🐤',\n  '🐥',\n  '🐦',\n  '🐧',\n  '🕊',\n  '🦅',\n  '🦆',\n  '🦉',\n  '🐸',\n  '🐊',\n  '🐢',\n  '🦎',\n  '🐍',\n  '🐲',\n  '🐉',\n  '🐳',\n  '🐋',\n  '🐬',\n  '🐟',\n  '🐠',\n  '🐡',\n  '🦈',\n  '🐙',\n  '🐚',\n  '🦀',\n  '🦐',\n  '🦑',\n  '🦋',\n  '🐌',\n  '🐛',\n  '🐜',\n  '🐝',\n  '🐞',\n  '🕷',\n  '🕸',\n  '🦂',\n  '💐',\n  '🌸',\n  '💮',\n  '🏵',\n  '🌹',\n  '🥀',\n  '🌺',\n  '🌻',\n  '🌼',\n  '🌷',\n  '🌱',\n  '🌲',\n  '🌳',\n  '🌴',\n  '🌵',\n  '🌾',\n  '🌿',\n  '☘',\n  '🍀',\n  '🍁',\n  '🍂',\n  '🍃',\n  '🍇',\n  '🍈',\n  '🍉',\n  '🍊',\n  '🍋',\n  '🍌',\n  '🍍',\n  '🍎',\n  '🍏',\n  '🍐',\n  '🍑',\n  '🍒',\n  '🍓',\n  '🥝',\n  '🍅',\n  '🥑',\n  '🍆',\n  '🥔',\n  '🥕',\n  '🌽',\n  '🌶',\n  '🥒',\n  '🍄',\n  '🥜',\n  '🌰',\n  '🍞',\n  '🥐',\n  '🥖',\n  '🥞',\n  '🧀',\n  '🍖',\n  '🍗',\n  '🥓',\n  '🍔',\n  '🍟',\n  '🍕',\n  '🌭',\n  '🌮',\n  '🌯',\n  '🥙',\n  '🥚',\n  '🍳',\n  '🥘',\n  '🍲',\n  '🥗',\n  '🍿',\n  '🍱',\n  '🍘',\n  '🍙',\n  '🍚',\n  '🍛',\n  '🍜',\n  '🍝',\n  '🍠',\n  '🍢',\n  '🍣',\n  '🍤',\n  '🍥',\n  '🍡',\n  '🍦',\n  '🍧',\n  '🍨',\n  '🍩',\n  '🍪',\n  '🎂',\n  '🍰',\n  '🍫',\n  '🍬',\n  '🍭',\n  '🍮',\n  '🍯',\n  '🍼',\n  '🥛',\n  '☕',\n  '🍵',\n  '🍶',\n  '🍾',\n  '🍷',\n  '🍸',\n  '🍹',\n  '🍺',\n  '🍻',\n  '🥂',\n  '🥃',\n  '🍽',\n  '🍴',\n  '🥄',\n  '🔪',\n  '🏺',\n  '🌍',\n  '🌎',\n  '🌏',\n  '🌐',\n  '🗺',\n  '🗾',\n  '🏔',\n  '⛰',\n  '🌋',\n  '🗻',\n  '🏕',\n  '🏖',\n  '🏜',\n  '🏝',\n  '🏞',\n  '🏟',\n  '🏛',\n  '🏗',\n  '🏘',\n  '🏙',\n  '🏚',\n  '🏠',\n  '🏡',\n  '🏢',\n  '🏣',\n  '🏤',\n  '🏥',\n  '🏦',\n  '🏨',\n  '🏩',\n  '🏪',\n  '🏫',\n  '🏬',\n  '🏭',\n  '🏯',\n  '🏰',\n  '💒',\n  '🗼',\n  '🗽',\n  '⛪',\n  '🕌',\n  '🕍',\n  '⛩',\n  '🕋',\n  '⛲',\n  '⛺',\n  '🌁',\n  '🌃',\n  '🌄',\n  '🌅',\n  '🌆',\n  '🌇',\n  '🌉',\n  '♨',\n  '🌌',\n  '🎠',\n  '🎡',\n  '🎢',\n  '💈',\n  '🎪',\n  '🎭',\n  '🖼',\n  '🎨',\n  '🎰',\n  '🚂',\n  '🚃',\n  '🚄',\n  '🚅',\n  '🚆',\n  '🚇',\n  '🚈',\n  '🚉',\n  '🚊',\n  '🚝',\n  '🚞',\n  '🚋',\n  '🚌',\n  '🚍',\n  '🚎',\n  '🚐',\n  '🚑',\n  '🚒',\n  '🚓',\n  '🚔',\n  '🚕',\n  '🚖',\n  '🚗',\n  '🚘',\n  '🚙',\n  '🚚',\n  '🚛',\n  '🚜',\n  '🚲',\n  '🛴',\n  '🛵',\n  '🚏',\n  '🛣',\n  '🛤',\n  '⛽',\n  '🚨',\n  '🚥',\n  '🚦',\n  '🚧',\n  '🛑',\n  '⚓',\n  '⛵',\n  '🛶',\n  '🚤',\n  '🛳',\n  '⛴',\n  '🛥',\n  '🚢',\n  '✈',\n  '🛩',\n  '🛫',\n  '🛬',\n  '💺',\n  '🚁',\n  '🚟',\n  '🚠',\n  '🚡',\n  '🚀',\n  '🛰',\n  '🛎',\n  '🚪',\n  '🛌',\n  '🛏',\n  '🛋',\n  '🚽',\n  '🚿',\n  '🛀',\n  '🛀🏻',\n  '🛀🏼',\n  '🛀🏽',\n  '🛀🏾',\n  '🛀🏿',\n  '🛁',\n  '⌛',\n  '⏳',\n  '⌚',\n  '⏰',\n  '⏱',\n  '⏲',\n  '🕰',\n  '🕛',\n  '🕧',\n  '🕐',\n  '🕜',\n  '🕑',\n  '🕝',\n  '🕒',\n  '🕞',\n  '🕓',\n  '🕟',\n  '🕔',\n  '🕠',\n  '🕕',\n  '🕡',\n  '🕖',\n  '🕢',\n  '🕗',\n  '🕣',\n  '🕘',\n  '🕤',\n  '🕙',\n  '🕥',\n  '🕚',\n  '🕦',\n  '🌑',\n  '🌒',\n  '🌓',\n  '🌔',\n  '🌕',\n  '🌖',\n  '🌗',\n  '🌘',\n  '🌙',\n  '🌚',\n  '🌛',\n  '🌜',\n  '🌡',\n  '☀',\n  '🌝',\n  '🌞',\n  '⭐',\n  '🌟',\n  '🌠',\n  '☁',\n  '⛅',\n  '⛈',\n  '🌤',\n  '🌥',\n  '🌦',\n  '🌧',\n  '🌨',\n  '🌩',\n  '🌪',\n  '🌫',\n  '🌬',\n  '🌀',\n  '🌈',\n  '🌂',\n  '☂',\n  '☔',\n  '⛱',\n  '⚡',\n  '❄',\n  '☃',\n  '⛄',\n  '☄',\n  '🔥',\n  '💧',\n  '🌊',\n  '🎃',\n  '🎄',\n  '🎆',\n  '🎇',\n  '✨',\n  '🎈',\n  '🎉',\n  '🎊',\n  '🎋',\n  '🎍',\n  '🎎',\n  '🎏',\n  '🎐',\n  '🎑',\n  '🎀',\n  '🎁',\n  '🎗',\n  '🎟',\n  '🎫',\n  '🎖',\n  '🏆',\n  '🏅',\n  '🥇',\n  '🥈',\n  '🥉',\n  '⚽',\n  '⚾',\n  '🏀',\n  '🏐',\n  '🏈',\n  '🏉',\n  '🎾',\n  '🎱',\n  '🎳',\n  '🏏',\n  '🏑',\n  '🏒',\n  '🏓',\n  '🏸',\n  '🥊',\n  '🥋',\n  '🥅',\n  '🎯',\n  '⛳',\n  '⛸',\n  '🎣',\n  '🎽',\n  '🎿',\n  '🎮',\n  '🕹',\n  '🎲',\n  '♠',\n  '♥',\n  '♦',\n  '♣',\n  '🃏',\n  '🀄',\n  '🎴',\n  '🔇',\n  '🔈',\n  '🔉',\n  '🔊',\n  '📢',\n  '📣',\n  '📯',\n  '🔔',\n  '🔕',\n  '🎼',\n  '🎵',\n  '🎶',\n  '🎙',\n  '🎚',\n  '🎛',\n  '🎤',\n  '🎧',\n  '📻',\n  '🎷',\n  '🎸',\n  '🎹',\n  '🎺',\n  '🎻',\n  '🥁',\n  '📱',\n  '📲',\n  '☎',\n  '📞',\n  '📟',\n  '📠',\n  '🔋',\n  '🔌',\n  '💻',\n  '🖥',\n  '🖨',\n  '⌨',\n  '🖱',\n  '🖲',\n  '💽',\n  '💾',\n  '💿',\n  '📀',\n  '🎥',\n  '🎞',\n  '📽',\n  '🎬',\n  '📺',\n  '📷',\n  '📸',\n  '📹',\n  '📼',\n  '🔍',\n  '🔎',\n  '🔬',\n  '🔭',\n  '📡',\n  '🕯',\n  '💡',\n  '🔦',\n  '🏮',\n  '📔',\n  '📕',\n  '📖',\n  '📗',\n  '📘',\n  '📙',\n  '📚',\n  '📓',\n  '📒',\n  '📃',\n  '📜',\n  '📄',\n  '📰',\n  '🗞',\n  '📑',\n  '🔖',\n  '🏷',\n  '💰',\n  '💴',\n  '💵',\n  '💶',\n  '💷',\n  '💸',\n  '💳',\n  '💹',\n  '💱',\n  '💲',\n  '✉',\n  '📧',\n  '📨',\n  '📩',\n  '📤',\n  '📥',\n  '📦',\n  '📫',\n  '📪',\n  '📬',\n  '📭',\n  '📮',\n  '🗳',\n  '✏',\n  '✒',\n  '🖋',\n  '🖊',\n  '🖌',\n  '🖍',\n  '📝',\n  '💼',\n  '📁',\n  '📂',\n  '🗂',\n  '📅',\n  '📆',\n  '🗒',\n  '🗓',\n  '📇',\n  '📈',\n  '📉',\n  '📊',\n  '📋',\n  '📌',\n  '📍',\n  '📎',\n  '🖇',\n  '📏',\n  '📐',\n  '✂',\n  '🗃',\n  '🗄',\n  '🗑',\n  '🔒',\n  '🔓',\n  '🔏',\n  '🔐',\n  '🔑',\n  '🗝',\n  '🔨',\n  '⛏',\n  '⚒',\n  '🛠',\n  '🗡',\n  '⚔',\n  '🔫',\n  '🏹',\n  '🛡',\n  '🔧',\n  '🔩',\n  '⚙',\n  '🗜',\n  '⚗',\n  '⚖',\n  '🔗',\n  '⛓',\n  '💉',\n  '💊',\n  '🚬',\n  '⚰',\n  '⚱',\n  '🗿',\n  '🛢',\n  '🔮',\n  '🛒',\n  '🏧',\n  '🚮',\n  '🚰',\n  '♿',\n  '🚹',\n  '🚺',\n  '🚻',\n  '🚼',\n  '🚾',\n  '🛂',\n  '🛃',\n  '🛄',\n  '🛅',\n  '⚠',\n  '🚸',\n  '⛔',\n  '🚫',\n  '🚳',\n  '🚭',\n  '🚯',\n  '🚱',\n  '🚷',\n  '📵',\n  '🔞',\n  '☢',\n  '☣',\n  '⬆',\n  '↗',\n  '➡',\n  '↘',\n  '⬇',\n  '↙',\n  '⬅',\n  '↖',\n  '↕',\n  '↔',\n  '↩',\n  '↪',\n  '⤴',\n  '⤵',\n  '🔃',\n  '🔄',\n  '🔙',\n  '🔚',\n  '🔛',\n  '🔜',\n  '🔝',\n  '🛐',\n  '⚛',\n  '🕉',\n  '✡',\n  '☸',\n  '☯',\n  '✝',\n  '☦',\n  '☪',\n  '☮',\n  '🕎',\n  '🔯',\n  '♈',\n  '♉',\n  '♊',\n  '♋',\n  '♌',\n  '♍',\n  '♎',\n  '♏',\n  '♐',\n  '♑',\n  '♒',\n  '♓',\n  '⛎',\n  '🔀',\n  '🔁',\n  '🔂',\n  '▶',\n  '⏩',\n  '⏭',\n  '⏯',\n  '◀',\n  '⏪',\n  '⏮',\n  '🔼',\n  '⏫',\n  '🔽',\n  '⏬',\n  '⏸',\n  '⏹',\n  '⏺',\n  '⏏',\n  '🎦',\n  '🔅',\n  '🔆',\n  '📶',\n  '📳',\n  '📴',\n  '♻',\n  '📛',\n  '⚜',\n  '🔰',\n  '🔱',\n  '⭕',\n  '✅',\n  '☑',\n  '✔',\n  '✖',\n  '❌',\n  '❎',\n  '➕',\n  '➖',\n  '➗',\n  '➰',\n  '➿',\n  '〽',\n  '✳',\n  '✴',\n  '❇',\n  '‼',\n  '⁉',\n  '❓',\n  '❔',\n  '❕',\n  '❗',\n  '〰',\n  '©',\n  '®',\n  '™',\n  '#️⃣',\n  '*️⃣',\n  '0️⃣',\n  '1️⃣',\n  '2️⃣',\n  '3️⃣',\n  '4️⃣',\n  '5️⃣',\n  '6️⃣',\n  '7️⃣',\n  '8️⃣',\n  '9️⃣',\n  '🔟',\n  '💯',\n  '🔠',\n  '🔡',\n  '🔢',\n  '🔣',\n  '🔤',\n  '🅰',\n  '🆎',\n  '🅱',\n  '🆑',\n  '🆒',\n  '🆓',\n  'ℹ',\n  '🆔',\n  'Ⓜ',\n  '🆕',\n  '🆖',\n  '🅾',\n  '🆗',\n  '🅿',\n  '🆘',\n  '🆙',\n  '🆚',\n  '🈁',\n  '🈂',\n  '🈷',\n  '🈶',\n  '🈯',\n  '🉐',\n  '🈹',\n  '🈚',\n  '🈲',\n  '🉑',\n  '🈸',\n  '🈴',\n  '🈳',\n  '㊗',\n  '㊙',\n  '🈺',\n  '🈵',\n  '▪',\n  '▫',\n  '◻',\n  '◼',\n  '◽',\n  '◾',\n  '⬛',\n  '⬜',\n  '🔶',\n  '🔷',\n  '🔸',\n  '🔹',\n  '🔺',\n  '🔻',\n  '💠',\n  '🔘',\n  '🔲',\n  '🔳',\n  '⚪',\n  '⚫',\n  '🔴',\n  '🔵',\n  '🏁',\n  '🚩',\n  '🎌',\n  '🏴',\n  '🏳',\n  '🇦🇨',\n  '🇦🇩',\n  '🇦🇪',\n  '🇦🇫',\n  '🇦🇬',\n  '🇦🇮',\n  '🇦🇱',\n  '🇦🇲',\n  '🇦🇴',\n  '🇦🇶',\n  '🇦🇷',\n  '🇦🇸',\n  '🇦🇹',\n  '🇦🇺',\n  '🇦🇼',\n  '🇦🇽',\n  '🇦🇿',\n  '🇧🇦',\n  '🇧🇧',\n  '🇧🇩',\n  '🇧🇪',\n  '🇧🇫',\n  '🇧🇬',\n  '🇧🇭',\n  '🇧🇮',\n  '🇧🇯',\n  '🇧🇱',\n  '🇧🇲',\n  '🇧🇳',\n  '🇧🇴',\n  '🇧🇶',\n  '🇧🇷',\n  '🇧🇸',\n  '🇧🇹',\n  '🇧🇻',\n  '🇧🇼',\n  '🇧🇾',\n  '🇧🇿',\n  '🇨🇦',\n  '🇨🇨',\n  '🇨🇩',\n  '🇨🇫',\n  '🇨🇬',\n  '🇨🇭',\n  '🇨🇮',\n  '🇨🇰',\n  '🇨🇱',\n  '🇨🇲',\n  '🇨🇳',\n  '🇨🇴',\n  '🇨🇵',\n  '🇨🇷',\n  '🇨🇺',\n  '🇨🇻',\n  '🇨🇼',\n  '🇨🇽',\n  '🇨🇾',\n  '🇨🇿',\n  '🇩🇪',\n  '🇩🇬',\n  '🇩🇯',\n  '🇩🇰',\n  '🇩🇲',\n  '🇩🇴',\n  '🇩🇿',\n  '🇪🇦',\n  '🇪🇨',\n  '🇪🇪',\n  '🇪🇬',\n  '🇪🇭',\n  '🇪🇷',\n  '🇪🇸',\n  '🇪🇹',\n  '🇪🇺',\n  '🇫🇮',\n  '🇫🇯',\n  '🇫🇰',\n  '🇫🇲',\n  '🇫🇴',\n  '🇫🇷',\n  '🇬🇦',\n  '🇬🇧',\n  '🇬🇩',\n  '🇬🇪',\n  '🇬🇫',\n  '🇬🇬',\n  '🇬🇭',\n  '🇬🇮',\n  '🇬🇱',\n  '🇬🇲',\n  '🇬🇳',\n  '🇬🇵',\n  '🇬🇶',\n  '🇬🇷',\n  '🇬🇸',\n  '🇬🇹',\n  '🇬🇺',\n  '🇬🇼',\n  '🇬🇾',\n  '🇭🇰',\n  '🇭🇲',\n  '🇭🇳',\n  '🇭🇷',\n  '🇭🇹',\n  '🇭🇺',\n  '🇮🇨',\n  '🇮🇩',\n  '🇮🇪',\n  '🇮🇱',\n  '🇮🇲',\n  '🇮🇳',\n  '🇮🇴',\n  '🇮🇶',\n  '🇮🇷',\n  '🇮🇸',\n  '🇮🇹',\n  '🇯🇪',\n  '🇯🇲',\n  '🇯🇴',\n  '🇯🇵',\n  '🇰🇪',\n  '🇰🇬',\n  '🇰🇭',\n  '🇰🇮',\n  '🇰🇲',\n  '🇰🇳',\n  '🇰🇵',\n  '🇰🇷',\n  '🇰🇼',\n  '🇰🇾',\n  '🇰🇿',\n  '🇱🇦',\n  '🇱🇧',\n  '🇱🇨',\n  '🇱🇮',\n  '🇱🇰',\n  '🇱🇷',\n  '🇱🇸',\n  '🇱🇹',\n  '🇱🇺',\n  '🇱🇻',\n  '🇱🇾',\n  '🇲🇦',\n  '🇲🇨',\n  '🇲🇩',\n  '🇲🇪',\n  '🇲🇫',\n  '🇲🇬',\n  '🇲🇭',\n  '🇲🇰',\n  '🇲🇱',\n  '🇲🇲',\n  '🇲🇳',\n  '🇲🇴',\n  '🇲🇵',\n  '🇲🇶',\n  '🇲🇷',\n  '🇲🇸',\n  '🇲🇹',\n  '🇲🇺',\n  '🇲🇻',\n  '🇲🇼',\n  '🇲🇽',\n  '🇲🇾',\n  '🇲🇿',\n  '🇳🇦',\n  '🇳🇨',\n  '🇳🇪',\n  '🇳🇫',\n  '🇳🇬',\n  '🇳🇮',\n  '🇳🇱',\n  '🇳🇴',\n  '🇳🇵',\n  '🇳🇷',\n  '🇳🇺',\n  '🇳🇿',\n  '🇴🇲',\n  '🇵🇦',\n  '🇵🇪',\n  '🇵🇫',\n  '🇵🇬',\n  '🇵🇭',\n  '🇵🇰',\n  '🇵🇱',\n  '🇵🇲',\n  '🇵🇳',\n  '🇵🇷',\n  '🇵🇸',\n  '🇵🇹',\n  '🇵🇼',\n  '🇵🇾',\n  '🇶🇦',\n  '🇷🇪',\n  '🇷🇴',\n  '🇷🇸',\n  '🇷🇺',\n  '🇷🇼',\n  '🇸🇦',\n  '🇸🇧',\n  '🇸🇨',\n  '🇸🇩',\n  '🇸🇪',\n  '🇸🇬',\n  '🇸🇭',\n  '🇸🇮',\n  '🇸🇯',\n  '🇸🇰',\n  '🇸🇱',\n  '🇸🇲',\n  '🇸🇳',\n  '🇸🇴',\n  '🇸🇷',\n  '🇸🇸',\n  '🇸🇹',\n  '🇸🇻',\n  '🇸🇽',\n  '🇸🇾',\n  '🇸🇿',\n  '🇹🇦',\n  '🇹🇨',\n  '🇹🇩',\n  '🇹🇫',\n  '🇹🇬',\n  '🇹🇭',\n  '🇹🇯',\n  '🇹🇰',\n  '🇹🇱',\n  '🇹🇲',\n  '🇹🇳',\n  '🇹🇴',\n  '🇹🇷',\n  '🇹🇹',\n  '🇹🇻',\n  '🇹🇼',\n  '🇹🇿',\n  '🇺🇦',\n  '🇺🇬',\n  '🇺🇲',\n  '🇺🇸',\n  '🇺🇾',\n  '🇺🇿',\n  '🇻🇦',\n  '🇻🇨',\n  '🇻🇪',\n  '🇻🇬',\n  '🇻🇮',\n  '🇻🇳',\n  '🇻🇺',\n  '🇼🇫',\n  '🇼🇸',\n  '🇽🇰',\n  '🇾🇪',\n  '🇾🇹',\n  '🇿🇦',\n  '🇿🇲',\n  '🇿🇼',\n];\n","import { apiSlice } from './apiSlice';\nimport { DiscoverPost } from '../../app/types';\nimport { DISCOVER_LIST_PAGE_SIZE } from '../../constants/discover';\nimport { createEntityAdapter } from '@reduxjs/toolkit';\n\ntype getPostsArgs = {\n  userKey: string;\n  userName: string;\n  pageNumber?: number;\n  tag?: string;\n  searchTerm?: string;\n  sponsor?: boolean;\n};\n\nconst postsAdapter = createEntityAdapter<DiscoverPost>({\n  selectId: (post: DiscoverPost) => post._id,\n});\n\n// Helper Functions\n\nconst tranformComments = (comments, userName) =>\n  comments.map((comment) => ({\n    ...comment,\n    numLikes: comment.likes.length,\n    hasLiked: comment.likes.includes(userName),\n  }));\n\nexport const discoverApiSlice = apiSlice.injectEndpoints({\n  overrideExisting: true,\n  endpoints: (builder) => ({\n    getDiscoverPosts: builder.query<any, getPostsArgs>({\n      keepUnusedDataFor: 6000,\n      query: ({ userKey, pageNumber, tag, searchTerm, sponsor = true }) => ({\n        url: `/discover/getPosts`,\n        headers: {\n          userKey,\n        },\n        params: {\n          tag,\n          searchTerm,\n          pageNumber,\n          sponsor,\n          pageLength: DISCOVER_LIST_PAGE_SIZE,\n        },\n      }),\n      transformResponse: (response: DiscoverPost[], _, { userName }) => {\n        // Return Post To State Using Adapters\n        return postsAdapter.addMany(\n          postsAdapter.getInitialState({\n            hasMorePages: response.length > 0,\n          }),\n          // TODO: Refactoring likes and comments. Should maybe be done in backend\n          response.map((post) => ({\n            ...post,\n            numLikes: post.likes.length,\n            hasLiked: post.likes.includes(userName),\n            comments: tranformComments(post.comments, userName),\n          }))\n        );\n      },\n      async onQueryStarted(\n        { userKey, pageNumber, userName, searchTerm, tag, sponsor },\n        { queryFulfilled, dispatch }\n      ) {\n        if (!pageNumber) {\n          return;\n        }\n        const { data } = await queryFulfilled;\n\n        if (data?.ids?.length > 0) {\n          // Add Posts On Current Request To Page 1\n          dispatch(\n            discoverApiSlice.util.updateQueryData(\n              'getDiscoverPosts',\n              { userKey, pageNumber: 1, userName, searchTerm, tag, sponsor },\n              (draft) => {\n                postsAdapter.addMany(draft, postsSelectors.selectAll(data));\n              }\n            )\n          );\n\n          if (pageNumber > 1) {\n            // Remove Cached Data From State Since We Already Added It To Page 1\n            dispatch(\n              discoverApiSlice.util.updateQueryData(\n                'getDiscoverPosts',\n                { userKey, pageNumber, userName, searchTerm, tag, sponsor },\n                (draft) => {\n                  draft = postsAdapter.getInitialState();\n                }\n              )\n            );\n          }\n        } else {\n          // No More Pages To Load\n          dispatch(\n            discoverApiSlice.util.updateQueryData(\n              'getDiscoverPosts',\n              { userKey, pageNumber: 1, userName, searchTerm, tag, sponsor },\n              (draft) => {\n                draft.hasMorePages = false;\n              }\n            )\n          );\n        }\n      },\n    }),\n\n    createDiscoverPost: builder.mutation({\n      query: ({\n        userKey,\n        title,\n        type,\n        content,\n        tags,\n        status,\n        emoji,\n        postBody,\n        pinned,\n      }) => {\n        if (type === 'contentImage' || type === 'contentEvent') {\n          return {\n            url: '/discover/addPost',\n            method: 'POST',\n            headers: { userKey },\n            body: postBody,\n          };\n        }\n        return {\n          url: '/discover/addPost',\n          method: 'POST',\n          headers: { userKey },\n          body: {\n            title,\n            type,\n            [type]: content,\n            tags,\n            status,\n            emoji,\n            pinned,\n          },\n        };\n      },\n      async onQueryStarted(\n        { userKey, userName },\n        { dispatch, queryFulfilled }\n      ) {\n        try {\n          const { data: newPost } = await queryFulfilled;\n\n          // Add New Post To State\n          dispatch(\n            discoverApiSlice.util.updateQueryData(\n              'getDiscoverPosts',\n              { userKey, userName, pageNumber: 1 },\n              (draft) => {\n                postsAdapter.addOne(draft, {\n                  ...newPost,\n                  numLikes: 0,\n                  hasLiked: false,\n                });\n              }\n            )\n          );\n        } catch (e) {\n          console.warn('Error Adding Post To State', e);\n        }\n      },\n    }),\n    deleteDiscoverPost: builder.mutation({\n      query: ({ userKey, _id, userName, title }) => ({\n        url: '/discover/deletePost',\n        method: 'DELETE',\n        headers: { userKey },\n        body: {\n          _id,\n          userName,\n          title,\n        },\n        responseHandler: (response) => response.text(),\n      }),\n      async onQueryStarted(\n        { userKey, _id, userName, searchTerm, tag },\n        { dispatch, queryFulfilled }\n      ) {\n        if (searchTerm || tag) {\n          var searchPatchResult = dispatch(\n            discoverApiSlice.util.updateQueryData(\n              'getDiscoverPosts',\n              { userKey, userName, pageNumber: 1, searchTerm, tag },\n              (draft) => {\n                postsAdapter.removeOne(draft, _id);\n              }\n            )\n          );\n        }\n\n        var patchResult = dispatch(\n          discoverApiSlice.util.updateQueryData(\n            'getDiscoverPosts',\n            { userKey, userName, pageNumber: 1 },\n            (draft) => {\n              postsAdapter.removeOne(draft, _id);\n            }\n          )\n        );\n\n        try {\n          await queryFulfilled;\n        } catch {\n          patchResult.undo();\n          if (searchPatchResult) {\n            searchPatchResult.undo();\n          }\n        }\n      },\n    }),\n\n    getPostById: builder.query({\n      query: ({ userKey, postId }) => ({\n        url: `/discover/getPostById`,\n        headers: {\n          userKey,\n        },\n        params: {\n          id: postId,\n        },\n      }),\n      async onQueryStarted(\n        { userKey, postId, userName, searchTerm, tag },\n        { dispatch, queryFulfilled }\n      ) {\n        // Replace Post In State With Updated Post\n\n        try {\n          const { data: updatedPost } = await queryFulfilled;\n          const updateFunction = (draft) => {\n            postsAdapter.updateOne(draft, {\n              id: postId,\n              changes: {\n                ...updatedPost,\n                numLikes: updatedPost.likes.length,\n                hasLiked: updatedPost.likes.includes(userName),\n                comments: tranformComments(updatedPost.comments, userName),\n              },\n            });\n          };\n          dispatch(\n            discoverApiSlice.util.updateQueryData(\n              'getDiscoverPosts',\n              {\n                userKey,\n                userName,\n                pageNumber: 1,\n              },\n              updateFunction\n            )\n          );\n          if (searchTerm || tag) {\n            dispatch(\n              discoverApiSlice.util.updateQueryData(\n                'getDiscoverPosts',\n                {\n                  userKey,\n                  userName,\n                  pageNumber: 1,\n                  searchTerm,\n                  tag,\n                },\n                updateFunction\n              )\n            );\n          }\n        } catch (e) {\n          console.warn('Error Updating Post In State', e);\n        }\n      },\n    }),\n\n    likePost: builder.mutation({\n      query: ({ userKey, _id, title, postAuthor }) => ({\n        url: '/discover/like',\n        method: 'PATCH',\n        headers: { userKey },\n        body: {\n          _id,\n          title,\n          userName: postAuthor,\n        },\n        responseHandler: (response) => response.text(),\n      }),\n      async onQueryStarted(\n        { userKey, _id, userName, searchTerm, tag },\n        { dispatch, queryFulfilled }\n      ) {\n        const updateFunction = (draft) => {\n          const post = postsSelectors.selectById(draft, _id);\n          // Use updateOne to update the post with the given ID\n          postsAdapter.updateOne(draft, {\n            id: _id,\n            changes: {\n              numLikes: post.hasLiked ? post.numLikes - 1 : post.numLikes + 1,\n              hasLiked: !post.hasLiked,\n            },\n          });\n        };\n\n        if (searchTerm || tag) {\n          var searchPatchResult = dispatch(\n            discoverApiSlice.util.updateQueryData(\n              'getDiscoverPosts',\n              { userKey, pageNumber: 1, userName, searchTerm, tag },\n              updateFunction\n            )\n          );\n        }\n        var patchResult = dispatch(\n          discoverApiSlice.util.updateQueryData(\n            'getDiscoverPosts',\n            { userKey, pageNumber: 1, userName },\n            updateFunction\n          )\n        );\n\n        try {\n          await queryFulfilled;\n        } catch {\n          if (searchPatchResult) {\n            searchPatchResult.undo();\n          }\n          patchResult.undo();\n        }\n      },\n    }),\n\n    addComment: builder.mutation({\n      query: ({ userKey, _id, text }) => ({\n        url: '/discover/addComment',\n        method: 'POST',\n        headers: { userKey },\n        body: {\n          _id,\n          text,\n        },\n        responseHandler: (response) => response.text(),\n      }),\n\n      async onQueryStarted(\n        { userKey, _id, userName, searchTerm, tag },\n        { dispatch, queryFulfilled }\n      ) {\n        try {\n          await queryFulfilled;\n\n          // Call getPostById to update the post in state\n          dispatch(\n            discoverApiSlice.endpoints.getPostById.initiate({\n              userKey,\n              postId: _id,\n              userName,\n              searchTerm,\n              tag,\n            })\n          );\n        } catch (e) {\n          console.warn('Error Adding Comment To State', e);\n        }\n      },\n    }),\n\n    likeComment: builder.mutation({\n      query: ({ userKey, postId, commentId }) => ({\n        url: '/discover/likeComment',\n        method: 'PATCH',\n        headers: { userKey },\n        body: {\n          postId,\n          commentId,\n        },\n        responseHandler: (response) => response.text(),\n      }),\n      async onQueryStarted(\n        { userKey, postId, commentId, userName, searchTerm, tag },\n        { dispatch, queryFulfilled }\n      ) {\n        const updateFunction = (draft) => {\n          const post = postsSelectors.selectById(draft, postId);\n          // Use updateOne to update the post with the given ID\n          postsAdapter.updateOne(draft, {\n            id: postId,\n            changes: {\n              comments: post.comments.map((comment) => {\n                if (comment._id === commentId) {\n                  return {\n                    ...comment,\n                    numLikes: comment.hasLiked\n                      ? comment.numLikes - 1\n                      : comment.numLikes + 1,\n                    hasLiked: !comment.hasLiked,\n                  };\n                }\n                return comment;\n              }),\n            },\n          });\n        };\n        if (searchTerm || tag) {\n          var searchPatchResult = dispatch(\n            discoverApiSlice.util.updateQueryData(\n              'getDiscoverPosts',\n              { userKey, pageNumber: 1, userName, searchTerm, tag },\n              updateFunction\n            )\n          );\n        }\n\n        const patchResult = dispatch(\n          discoverApiSlice.util.updateQueryData(\n            'getDiscoverPosts',\n            { userKey, userName, pageNumber: 1 },\n            updateFunction\n          )\n        );\n\n        try {\n          await queryFulfilled;\n        } catch {\n          patchResult.undo();\n          if (searchPatchResult) {\n            searchPatchResult.undo();\n          }\n        }\n      },\n    }),\n\n    deleteComment: builder.mutation({\n      query: ({ userKey, postId, commentId }) => ({\n        url: '/discover/deleteComment',\n        method: 'DELETE',\n        headers: { userKey },\n        body: {\n          postId,\n          commentId,\n        },\n        responseHandler: (response) => response.text(),\n      }),\n      async onQueryStarted(\n        { userKey, postId, commentId, userName, searchTerm, tag },\n        { dispatch, queryFulfilled }\n      ) {\n        const updateFunction = (draft) => {\n          const post = postsSelectors.selectById(draft, postId);\n          // Use updateOne to update the post with the given ID\n          postsAdapter.updateOne(draft, {\n            id: postId,\n            changes: {\n              comments: post.comments.filter(\n                (comment) => comment._id !== commentId\n              ),\n            },\n          });\n        };\n        const patchResult = dispatch(\n          discoverApiSlice.util.updateQueryData(\n            'getDiscoverPosts',\n            {\n              userKey,\n              userName,\n              pageNumber: 1,\n            },\n            updateFunction\n          )\n        );\n\n        if (searchTerm || tag) {\n          var searchPatchResult = dispatch(\n            discoverApiSlice.util.updateQueryData(\n              'getDiscoverPosts',\n              {\n                userKey,\n                userName,\n                pageNumber: 1,\n              },\n              updateFunction\n            )\n          );\n        }\n\n        try {\n          await queryFulfilled;\n        } catch {\n          patchResult.undo();\n          if (searchPatchResult) {\n            searchPatchResult.undo();\n          }\n        }\n      },\n    }),\n  }),\n});\n\nconst postsSelectors = postsAdapter.getSelectors();\n\nexport { postsAdapter, postsSelectors };\n\nexport const {\n  useLazyGetDiscoverPostsQuery,\n  useCreateDiscoverPostMutation,\n  useDeleteDiscoverPostMutation,\n  useLikePostMutation,\n  useAddCommentMutation,\n  useLazyGetPostByIdQuery,\n  useLikeCommentMutation,\n  useDeleteCommentMutation,\n} = discoverApiSlice;\n","import { TouchableOpacity, Platform, UIManager } from 'react-native';\nimport React from 'react';\nimport { Layout, Text, useTheme } from '@ui-kitten/components';\nimport { FontAwesome } from '@expo/vector-icons';\nimport {\n  discoverApiSlice,\n  postsAdapter,\n  postsSelectors,\n  useLikePostMutation,\n} from '../api/discoverApi';\nimport { selectDarkMode, selectUserKey } from '../../app/appDataSlice';\nimport { useAppSelector } from '../../app/hooks';\nimport { usersApiSlice } from '../api/usersApi';\nimport withPreventDoubleClick from '../../components/withPreventDoubleClick';\n\nconst DebounceTouchable = withPreventDoubleClick(TouchableOpacity, 600);\n\nexport default function BottomBar({\n  tags,\n  _id,\n  commentIconShown = true,\n  searchTerm = undefined,\n  searchedTag = undefined,\n}) {\n  const userKey = useAppSelector(selectUserKey);\n  const darkMode = useAppSelector(selectDarkMode);\n  const theme = useTheme();\n\n  const { data: userData } =\n    usersApiSlice.endpoints.getUserInfo.useQueryState(userKey);\n  const [likePost] = useLikePostMutation();\n\n  const post = discoverApiSlice.endpoints.getDiscoverPosts.useQueryState(\n    {\n      pageNumber: 1,\n      userKey,\n      userName: userData.userName,\n      searchTerm,\n      tag: searchedTag,\n    },\n    {\n      selectFromResult: (result) =>\n        postsSelectors.selectById(\n          result.data ?? postsAdapter.getInitialState(),\n          _id\n        ),\n    }\n  );\n\n  const onPressLike = async () => {\n    if (!post) return;\n    try {\n      await likePost({\n        userKey,\n        _id,\n        title: post.title,\n        postAuthor: post.userName,\n        userName: userData.userName,\n        searchTerm,\n        tag: searchedTag,\n      }).unwrap();\n    } catch (error) {\n      console.log('Error liking post:', error);\n    }\n  };\n\n  return (\n    <Layout\n      style={{\n        width: '100%',\n        flexDirection: 'row',\n        paddingVertical: 5,\n        paddingHorizontal: 15,\n      }}>\n      <Layout\n        style={{\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          flex: 6,\n        }}>\n        {/* tags */}\n        {tags.map((tag: string, index: number) => (\n          <Layout\n            key={index}\n            level=\"3\"\n            style={{\n              padding: 5,\n              borderRadius: 5,\n              marginRight: 5,\n              marginTop: 2,\n            }}>\n            <Text style={{ fontSize: 12 }}>{tag}</Text>\n          </Layout>\n        ))}\n      </Layout>\n\n      {/* Icons */}\n      <Layout\n        style={{\n          flexDirection: 'row',\n          flex: 2,\n          justifyContent: 'space-evenly',\n          alignItems: 'center',\n        }}>\n        <FontAwesome\n          style={{ flex: 2, opacity: commentIconShown ? 1 : 0 }}\n          name=\"comments-o\"\n          size={20}\n          color={darkMode ? '#fff' : '#000'}\n        />\n        {/* Likes */}\n        {/* @ts-ignore */}\n        <DebounceTouchable\n          style={{\n            flexDirection: 'row',\n            flex: 3,\n            justifyContent: 'space-evenly',\n            alignItems: 'center',\n          }}\n          onPress={onPressLike}>\n          <Text\n            style={{\n              fontSize: 15,\n              paddingTop: 1,\n            }}>\n            {post?.numLikes}\n          </Text>\n          <FontAwesome\n            style={{ alignSelf: 'center' }}\n            size={17}\n            color={\n              post?.hasLiked\n                ? theme['color-primary-500']\n                : darkMode\n                ? '#fff'\n                : '#000'\n            }\n            name={post?.hasLiked ? 'heart' : 'heart-o'}\n          />\n        </DebounceTouchable>\n      </Layout>\n      {/* @ts-ignore */}\n    </Layout>\n  );\n}\n","import { debounce } from 'lodash';\nimport React from 'react';\n\nexport default function withPreventDoubleClick(WrappedComponent, time = 300) {\n  class PreventDoubleClick extends React.PureComponent {\n    debouncedOnPress = () => {\n      this.props.onPress && this.props.onPress();\n    };\n\n    onPress = debounce(this.debouncedOnPress, time, {\n      leading: true,\n      trailing: false,\n    });\n\n    render() {\n      return <WrappedComponent {...this.props} onPress={this.onPress} />;\n    }\n  }\n\n  PreventDoubleClick.displayName = `withPreventDoubleClick(${\n    WrappedComponent.displayName || WrappedComponent.name\n  })`;\n  return PreventDoubleClick;\n}\n","import {  Layout, ListItem, Text } from '@ui-kitten/components';\nimport { TouchableHighlight } from 'react-native';\nimport {  FontAwesome5 } from '@expo/vector-icons';\nimport BottomBar from '../BottomBar';\n\nexport default function TextCard({\n  navigation,\n  tags,\n  title,\n  body,\n  emoji,\n  _id,\n  searchTerm,\n  searchedTag,\n  pinnedIcon,\n  isUrl = false,\n}) {\n\n  const renderTextBody = () => {\n    let text = body;\n\n    if (text.indexOf('\\n') > 10 && text.indexOf('\\n') < 50) {\n      return text.split('\\n')[0] + '...';\n    } else if (text.length > 50) {\n      return text.substring(0, 50) + '...';\n    } else {\n      return text;\n    }\n  };\n\n  const renderUrl = () => {\n    return (\n      <Text style={{ color: 'grey' }}>\n        <FontAwesome5 name=\"link\" />\n        {` `}\n        {body.length > 30 ? body.slice(0, 30) + '...' : body}\n      </Text>\n    );\n  };\n\n\n  return (\n    <TouchableHighlight\n      onPress={() => {\n        navigation.navigate('SinglePost', { _id, searchTerm, searchedTag });\n      }}>\n      <Layout>\n        {pinnedIcon}\n\n        <ListItem\n          disabled\n          accessoryLeft={() => (\n            <Text style={{ fontSize: 35, marginRight: 15 }}>{emoji}</Text>\n          )}\n          style={{\n            paddingLeft: 15,\n            paddingTop: 25,\n            paddingBottom: 0,\n          }}\n          title={() => (\n            <Text style={{ fontSize: 20, paddingBottom: 5 }}>{title}</Text>\n          )}\n          description={() => (\n            <Text style={{ color: 'grey' }}>\n              {isUrl ? renderUrl() : renderTextBody()}\n            </Text>\n          )}\n        />\n\n        <BottomBar\n          tags={tags}\n          _id={_id}\n          searchTerm={searchTerm}\n          searchedTag={searchedTag}\n        />\n      </Layout>\n    </TouchableHighlight>\n  );\n}\n","import React from 'react';\nimport { TouchableWithoutFeedback } from 'react-native';\n\nexport default class DoubleTap extends React.Component {\n  static defaultProps = {\n    delay: 300,\n    onDoubleTap: () => {},\n    children: null,\n  };\n\n  lastTap = null;\n\n  // https://gist.github.com/brunotavares/3c9a373ba5cd1b4ff28b\n  handleDoubleTap = () => {\n    const now = Date.now();\n    if (this.lastTap && (now - this.lastTap) < this.props.delay) {\n      this.props.onDoubleTap();\n    } else {\n      this.lastTap = now;\n    }\n  }\n\n  render() {\n    return (\n      <TouchableWithoutFeedback onPress={this.handleDoubleTap}>\n        {this.props.children}\n      </TouchableWithoutFeedback>\n    );\n  }\n}","import { FontAwesome } from '@expo/vector-icons';\nimport { useTheme } from '@ui-kitten/components';\nimport { forwardRef, useImperativeHandle, useRef, useState } from 'react';\nimport { Animated, Easing } from 'react-native';\n\nexport default forwardRef(\n  ({ style, iconStyle }: { style: {}; iconStyle?: {} }, ref) => {\n    useImperativeHandle(ref, () => ({\n      animate,\n    }));\n\n    const opacityAnim = useRef(new Animated.Value(0)).current;\n    const scaleAnim = useRef(new Animated.Value(1)).current;\n    const [heartRotation, setHeartRotation] = useState('0deg');\n\n    const pickRandomDegree = () => {\n      const options = ['0deg', '15deg', '-15deg'];\n      return options[Math.floor(Math.random() * options.length)];\n    };\n\n    const animate = () => {\n      // animation: shrink quickly with bounce, opacity 0 - 1. Stop for a moment. Increase in size. Opacity 1-0\n      setHeartRotation(pickRandomDegree());\n\n      scaleAnim.setValue(1);\n      opacityAnim.setValue(0);\n\n      Animated.parallel([\n        Animated.sequence([\n          Animated.timing(opacityAnim, {\n            toValue: 1,\n            duration: 200,\n            useNativeDriver: true,\n          }),\n          Animated.timing(opacityAnim, {\n            toValue: 1,\n            duration: 300,\n            useNativeDriver: true,\n          }),\n          Animated.timing(opacityAnim, {\n            toValue: 0,\n            duration: 100,\n            useNativeDriver: true,\n          }),\n        ]),\n        ,\n        Animated.sequence([\n          Animated.timing(scaleAnim, {\n            toValue: 0.8,\n            easing: Easing.bounce,\n            duration: 200,\n            useNativeDriver: true,\n          }),\n          Animated.timing(scaleAnim, {\n            toValue: 0.8,\n            duration: 300,\n            useNativeDriver: true,\n          }),\n          Animated.timing(scaleAnim, {\n            toValue: 1.2,\n            duration: 100,\n            useNativeDriver: true,\n          }),\n        ]),\n      ]).start();\n    };\n\n    return (\n      <Animated.View\n        style={{\n          ...style,\n          opacity: opacityAnim,\n          transform: [{ scale: scaleAnim }],\n        }}>\n        <FontAwesome\n          name=\"heart\"\n          size={110}\n          style={{ transform: [{ rotate: heartRotation }], ...iconStyle }}\n        />\n      </Animated.View>\n    );\n  }\n);\n","import { EMOJI_LIST, IMAGE_BUCKET_URL } from './constants/discover';\nimport Toast from 'react-native-root-toast';\n\nexport function getRndInteger(min: number, max: number) {\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nexport function getImageUrl(imageId: string) {\n  return `${IMAGE_BUCKET_URL}/${imageId}.jpg`;\n}\n\nexport function nFormatter(num: number, digits: number) {\n  const lookup = [\n    { value: 1, symbol: '' },\n    { value: 1e3, symbol: 'k' },\n    { value: 1e6, symbol: 'M' },\n    { value: 1e9, symbol: 'G' },\n    { value: 1e12, symbol: 'T' },\n    { value: 1e15, symbol: 'P' },\n    { value: 1e18, symbol: 'E' },\n  ];\n  const rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\n  var item = lookup\n    .slice()\n    .reverse()\n    .find(function (item) {\n      return num >= item.value;\n    });\n  return item\n    ? (num / item.value).toFixed(digits).replace(rx, '$1') + item.symbol\n    : '0';\n}\n\nexport function versionCompare(v1: string, v2: string, options?: any) {\n  var lexicographical = options && options.lexicographical,\n    zeroExtend = options && options.zeroExtend,\n    v1parts = v1.split('.') as any[],\n    v2parts = v2.split('.') as any[];\n\n  function isValidPart(x) {\n    return (lexicographical ? /^\\d+[A-Za-z]*$/ : /^\\d+$/).test(x);\n  }\n\n  if (!v1parts.every(isValidPart) || !v2parts.every(isValidPart)) {\n    return NaN;\n  }\n\n  if (zeroExtend) {\n    while (v1parts.length < v2parts.length) v1parts.push('0');\n    while (v2parts.length < v1parts.length) v2parts.push('0');\n  }\n\n  if (!lexicographical) {\n    v1parts = v1parts.map(Number);\n    v2parts = v2parts.map(Number);\n  }\n\n  for (var i = 0; i < v1parts.length; ++i) {\n    if (v2parts.length == i) {\n      return 1;\n    }\n\n    if (v1parts[i] == v2parts[i]) {\n      continue;\n    } else if (v1parts[i] > v2parts[i]) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n\n  if (v1parts.length != v2parts.length) {\n    return -1;\n  }\n\n  return 0;\n}\n\nexport const stringToEmoji = (str: string) => {\n  if (!str) {\n    return '';\n  }\n  let dec = 0;\n  for (let i = 0; i < str.length; ++i) {\n    dec += str.charCodeAt(i) << i;\n  }\n  const emoji = EMOJI_LIST[dec % EMOJI_LIST.length];\n  return emoji;\n};\n\nexport function validURL(str: string) {\n  var pattern = new RegExp(\n    '^(https?:\\\\/\\\\/)?' + // protocol\n      '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n      '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n      '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n      '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n      '(\\\\#[-a-z\\\\d_]*)?$',\n    'i'\n  ); // fragment locator\n  return !!pattern.test(str);\n}\n\nexport function showToast(message: string, backgroundColor: string = '#000') {\n  Toast.show(message, {\n    duration: Toast.durations.LONG,\n    opacity: 1,\n    position: -100,\n    backgroundColor,\n    shadow: false,\n  });\n}\n\n// Format range with 12 hour time\nexport const FormatTimeRange = (start: string, end: string) => {\n  const startDate = new Date(start);\n  const endDate = new Date(end);\n\n  const startHours = startDate.getHours() % 12 || 12;\n  const startMinutes = startDate.getMinutes();\n  const startAmPm = startDate.getHours() >= 12 ? 'pm' : 'am';\n  const endHours = endDate.getHours() % 12 || 12;\n  const endMinutes = endDate.getMinutes();\n  const endAmPm = endDate.getHours() >= 12 ? 'pm' : 'am';\n  return `${startHours}:${startMinutes}${startAmPm} - ${endHours}:${endMinutes}${endAmPm}`;\n};\n\nconst weekDayNumberToName = {\n  0: 'Sunday',\n  1: 'Monday',\n  2: 'Tuesday',\n  3: 'Wednesday',\n  4: 'Thursday',\n  5: 'Friday',\n  6: 'Saturday',\n};\n\nexport const FormatDate = (date: string) => {\n  const newDate = new Date(date);\n\n  const weekDay = newDate.getDay();\n  const month = newDate.getMonth() + 1;\n  const day = newDate.getDate();\n  return `${weekDayNumberToName[weekDay]}, ${month}/${day}`;\n};\n","import { Layout, useTheme } from '@ui-kitten/components';\nimport { useRef } from 'react';\nimport { Dimensions, Image } from 'react-native';\nimport { selectUserKey } from '../../app/appDataSlice';\nimport { useAppSelector } from '../../app/hooks';\nimport DoubleTap from '../../components/DoubleTap';\nimport DoubleTapHeart from '../../components/DoubleTapHeart';\nimport { MAX_WIDTH_WEB } from '../../constants/discover';\nimport { getImageUrl } from '../../functions';\nimport { useLikePostMutation } from '../api/discoverApi';\n\nconst windowWidth = Dimensions.get('window').width;\n\nexport default function ImageComponent({ imageId, hasLiked, apiInfo }) {\n  const theme = useTheme();\n  const [likePost] = useLikePostMutation();\n  const userKey = useAppSelector(selectUserKey);\n  const likeRef = useRef(null);\n\n  const handlePressLike = async () => {\n    likeRef.current?.animate();\n\n    if (hasLiked) {\n      return;\n    }\n    try {\n      await likePost({\n        userKey,\n        tag: apiInfo.searchedTag,\n        ...apiInfo,\n      }).unwrap();\n    } catch (error) {\n      console.log('Error liking post:', error);\n    }\n  };\n\n  return (\n    <DoubleTap delay={1200} onDoubleTap={handlePressLike}>\n      <Layout style={{ flex: 1, alignItems: 'center' }}>\n        <Image\n          source={{\n            uri: getImageUrl(imageId),\n          }}\n          style={{\n            borderRadius: 5,\n            width: windowWidth * 0.9,\n            height: windowWidth * 0.9,\n            maxHeight: MAX_WIDTH_WEB,\n            maxWidth: MAX_WIDTH_WEB,\n            marginBottom: 10,\n            resizeMode: 'contain',\n          }}\n        />\n        <DoubleTapHeart\n          style={{\n            position: 'absolute',\n            top: '35%',\n            right: '30%',\n            shadowColor: '#000',\n            shadowOffset: {\n              width: 0,\n              height: 3,\n            },\n            shadowOpacity: 0.29,\n            shadowRadius: 4.65,\n\n            elevation: 7,\n          }}\n          ref={likeRef}\n          iconStyle={{ color: theme['color-primary-500'] }}\n        />\n      </Layout>\n    </DoubleTap>\n  );\n}\n","import { Layout, Text } from '@ui-kitten/components';\nimport { useEffect, useRef } from 'react';\nimport { TouchableOpacity, Image, Dimensions } from 'react-native';\nimport { selectUserKey } from '../../../app/appDataSlice';\nimport { useAppSelector } from '../../../app/hooks';\nimport DoubleTap from '../../../components/DoubleTap';\nimport DoubleTapHeart from '../../../components/DoubleTapHeart';\nimport { MAX_WIDTH_WEB } from '../../../constants/discover';\nimport { getImageUrl } from '../../../functions';\nimport { useLikePostMutation } from '../../api/discoverApi';\nimport BottomBar from '../BottomBar';\nimport ImageComponent from '../ImageComponent';\n\nconst windowWidth = Dimensions.get('window').width;\n\nexport default function ImageCard({\n  title,\n  _id,\n  navigation,\n  imageId,\n  tags,\n  postAuthor,\n  userName,\n  searchTerm,\n  searchedTag,\n  pinnedIcon,\n  hasLiked,\n}) {\n  return (\n    <Layout>\n      {pinnedIcon}\n      <Layout style={{ flex: 1, alignItems: 'center' }}>\n        <TouchableOpacity\n          onPress={() => {\n            navigation.navigate('SinglePost', { _id, searchTerm, searchedTag });\n          }}\n          activeOpacity={0.9}\n          style={{\n            flex: 1,\n            alignItems: 'center',\n            paddingVertical: 10,\n          }}>\n          <Layout\n            style={{\n              width: windowWidth * 0.9,\n              maxWidth: MAX_WIDTH_WEB,\n              paddingVertical: 10,\n            }}>\n            <Text style={{ fontSize: 20 }}>{title}</Text>\n          </Layout>\n          <ImageComponent\n            apiInfo={{\n              _id,\n              title,\n              postAuthor,\n              userName,\n              searchTerm,\n              searchedTag,\n            }}\n            imageId={imageId}\n            hasLiked={hasLiked}\n          />\n\n          <BottomBar\n            tags={tags}\n            _id={_id}\n            searchTerm={searchTerm}\n            searchedTag={searchedTag}\n          />\n        </TouchableOpacity>\n      </Layout>\n    </Layout>\n  );\n}\n","import { Layout, Text } from '@ui-kitten/components';\nimport { useEffect, useState } from 'react';\nimport {\n  Dimensions,\n  Image,\n  ImageBackground,\n  Platform,\n  StyleSheet,\n  TouchableHighlight,\n} from 'react-native';\nimport { selectDarkMode } from '../../../app/appDataSlice';\nimport { useAppSelector } from '../../../app/hooks';\n\nconst windowWidth = Dimensions.get('window').width;\n\nimport becomeSponsor from '../../../../assets/sponsorPage/become-sponsor.png';\n\nexport default function SponsorCard({ data, navigation }) {\n  const [imageLink, setImageLink] = useState({ uri: data.logo });\n  const webWidth = Dimensions.get('window').width * 0.3;\n  const hasCoupon = !!data.coupons[0];\n\n  return (\n    <TouchableHighlight\n      style={{ flex: 1 }}\n      onPress={() => {\n        if (hasCoupon) {\n          navigation.navigate('SponsorPageDiscover', { data });\n        }\n      }}>\n      <Layout style={{ flex: 1 }}>\n        <Text category=\"label\" style={{ marginLeft: 20 }}>\n          Ad\n        </Text>\n\n        <Layout\n          style={{\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n          }}>\n          <Layout\n            style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n            <Image\n              source={imageLink}\n              onError={() => {\n                setImageLink(becomeSponsor);\n              }}\n              style={{\n                height: hasCoupon\n                  ? Platform.OS === 'web'\n                    ? 200\n                    : windowWidth / 2 - 20\n                  : Platform.OS === 'web'\n                  ? 200\n                  : windowWidth * 0.8,\n                width: hasCoupon\n                  ? Platform.OS === 'web'\n                    ? '20%'\n                    : windowWidth / 2 - 20\n                  : Platform.OS === 'web'\n                  ? '20%'\n                  : windowWidth * 0.8,\n                resizeMode: 'contain',\n              }}\n            />\n            {imageLink?.uri && <Text>{data.sponsorName}</Text>}\n          </Layout>\n\n          {data.coupons[0] && imageLink?.uri && (\n            <Layout style={{ flex: 1, alignItems: 'center' }}>\n              <ImageBackground\n                resizeMode=\"contain\"\n                source={require('../../../../assets/sponsorPage/coupon.png')}\n                style={{\n                  width: windowWidth / 2 - 20,\n                  height: 200,\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}>\n                <Text\n                  style={{\n                    fontSize: 13,\n                    paddingBottom: 7,\n                    paddingRight: 7,\n                    marginHorizontal: 25,\n                  }}>\n                  {data.coupons[0].couponDescription}\n                </Text>\n              </ImageBackground>\n            </Layout>\n          )}\n        </Layout>\n      </Layout>\n    </TouchableHighlight>\n  );\n}\n","import { Divider, Layout, Text } from '@ui-kitten/components';\nimport { useMemo } from 'react';\nimport { TouchableOpacity, Dimensions } from 'react-native';\nimport { FontAwesome5 } from '@expo/vector-icons';\n\nimport { MAX_WIDTH_WEB } from '../../constants/discover';\nimport { FormatDate, FormatTimeRange } from '../../functions';\nimport BottomBar from './BottomBar';\nimport ImageComponent from './ImageComponent';\nimport { A } from '@expo/html-elements';\n\nconst windowWidth = Dimensions.get('window').width;\n\ninterface EventCardProps {\n  title: string;\n  location: string;\n  date: string;\n  startTime: string;\n  endTime: string;\n  _id: string;\n  postAuthor: string;\n  userName: string;\n  hasLiked: boolean;\n  searchTerm?: string;\n  searchedTag?: string;\n  tags?: string[];\n  contentURL?: string;\n  contentText?: string;\n  contentImage?: string;\n  host?: string;\n  truncated?: boolean;\n}\n\nexport default function EventBody({\n  title,\n  location,\n  date,\n  startTime,\n  endTime,\n  contentURL,\n  contentText,\n  contentImage,\n  host,\n  hasLiked,\n  _id,\n  searchTerm,\n  searchedTag,\n  postAuthor,\n  userName,\n  truncated = true,\n}: EventCardProps) {\n  const eventInfo = useMemo(\n    () => [\n      {\n        title: 'Location',\n        value: location,\n      },\n      {\n        title: 'Date',\n        value: FormatDate(date),\n      },\n      {\n        title: 'Time',\n        value: FormatTimeRange(startTime, endTime),\n      },\n      {\n        title: 'Host',\n        value: host,\n      },\n      {\n        title: 'Description',\n        value: contentText,\n      },\n    ],\n    [location, date, startTime, endTime, host, contentURL, contentText]\n  );\n\n  const renderUrl = (link: string) => {\n    return (\n      <Layout\n        style={{\n          flexDirection: 'row',\n          width: windowWidth * 0.9,\n          maxWidth: MAX_WIDTH_WEB,\n          paddingVertical: 5,\n        }}>\n        <Text category=\"s1\">Link: </Text>\n        {truncated ? (\n          <Text category=\"p1\">\n            {link.length > 30 ? link.slice(0, 30) + '...' : link}\n          </Text>\n        ) : (\n          <A>\n            <Text>{link}</Text>\n          </A>\n        )}\n      </Layout>\n    );\n  };\n\n  return (\n    <Layout style={{ flex: 1, alignItems: 'center' }}>\n      {contentImage ? (\n        <ImageComponent\n          apiInfo={{\n            _id,\n            title,\n            postAuthor,\n            userName,\n            searchTerm,\n            searchedTag,\n          }}\n          imageId={contentImage}\n          hasLiked={hasLiked}\n        />\n      ) : (\n        <Divider />\n      )}\n\n      {/* Event Info  */}\n      {eventInfo.map((info, index) => {\n        if (info.value)\n          return (\n            <Layout\n              key={index}\n              style={{\n                flexDirection: 'row',\n                width: windowWidth * 0.9,\n                maxWidth: MAX_WIDTH_WEB,\n                paddingVertical: 5,\n              }}>\n              <Text category=\"s1\">\n                {info.title}\n                {`: `}\n                <Text category=\"p1\">\n                  {truncated\n                    ? info.value.length > 30\n                      ? info.value.slice(0, 30) + '...'\n                      : info.value\n                    : info.value}\n                </Text>\n              </Text>\n            </Layout>\n          );\n      })}\n\n      {contentURL ? renderUrl(contentURL) : null}\n    </Layout>\n  );\n}\n","import { Divider, Layout, Text } from '@ui-kitten/components';\nimport React, {useEffect, useMemo, useState} from 'react';\nimport { TouchableOpacity, Dimensions } from 'react-native';\nimport { FontAwesome5 } from '@expo/vector-icons';\n\nimport EventBody from '../EventBody';\nimport { MAX_WIDTH_WEB } from '../../../constants/discover';\nimport { FormatDate, FormatTimeRange } from '../../../functions';\nimport BottomBar from '../BottomBar';\nimport ImageComponent from '../ImageComponent';\nimport {useAppSelector} from \"../../../app/hooks\";\nimport {selectDarkMode, selectUserKey} from \"../../../app/appDataSlice\";\nimport ModalContainer from \"../../../components/ModalContainer\";\nimport {useEditUserMutation, useGetUserInfoQuery} from \"../../api/usersApi\";\nimport Toast from \"react-native-root-toast\";\nimport {useFocusEffect, useIsFocused} from \"@react-navigation/native\";\n\nconst windowWidth = Dimensions.get('window').width;\n\ninterface EventCardProps {\n  title: string;\n  location: string;\n  date: string;\n  startTime: string;\n  endTime: string;\n  pinnedIcon: JSX.Element;\n  _id: string;\n  postAuthor: string;\n  userName: string;\n  hasLiked: boolean;\n  navigation: any;\n  searchTerm?: string;\n  searchedTag?: string;\n  tags?: string[];\n  contentURL?: string;\n  contentText?: string;\n  contentImage?: string;\n  host?: string;\n}\n\nexport default function EventCard({\n  title,\n  location,\n  date,\n  startTime,\n  endTime,\n  pinnedIcon,\n  tags,\n  contentURL,\n  contentText,\n  contentImage,\n  host,\n  hasLiked,\n  _id,\n  searchTerm,\n  searchedTag,\n  postAuthor,\n  userName,\n  navigation,\n}: EventCardProps) {\n  const darkMode = useAppSelector(selectDarkMode)\n  const userKey = useAppSelector(selectUserKey)\n  const {data: userData} = useGetUserInfoQuery(useAppSelector(selectUserKey));\n  const [ eventPopUp, setEventPopUp ] = useState(false)\n  const [ isAdded, setIsAdded ] = useState(false)\n  const [editUser] = useEditUserMutation();\n\n  useEffect(() => {\n    setIsAdded(userData.customEvents.some(customEvent => {\n      return (\n          customEvent.name === title &&\n          customEvent.startTime == startTime &&\n          customEvent.endTime == endTime &&\n          customEvent.date == date\n      )\n    }))\n  }, [useIsFocused()]) // this forces just the button component to re-render when the focus changes\n\n  function handleEventSyncWithServer(isAdd: boolean) {\n    editUser({\n      userKey,\n      userName: userData.userName,\n      fields: JSON.stringify(isAdd ? {\n        \"addCustomEvent\": {\n          \"name\": title,\n          \"startTime\": new Date(startTime).toTimeString().slice(0, 5),\n          \"endTime\": new Date(endTime).toTimeString().slice(0, 5),\n          \"days\": [],\n          \"date\": date\n        },\n      } : {\n        \"removeCustomEvent\": {\n          \"name\": title,\n          \"startTime\": new Date(startTime).toTimeString().slice(0, 5),\n          \"endTime\": new Date(endTime).toTimeString().slice(0, 5),\n          \"days\": [],\n          \"date\": date\n        },\n      })\n    }).unwrap().then(async () => {\n      setIsAdded(isAdd)\n    }).catch(() => {\n      Toast.show(\n          \"Failed to add event.\\nPlease try again later\",\n          {\n            duration: Toast.durations.LONG,\n            opacity: 1,\n            position: -100,\n            backgroundColor: 'grey',\n            shadow: false,\n          }\n      );\n    })\n  }\n\n  function toggleAdditionOfEvent() {\n    handleEventSyncWithServer(!isAdded)\n  }\n\n  return (\n    <Layout>\n      {pinnedIcon}\n      <Layout style={{ flex: 1, alignItems: 'center' }}>\n        <TouchableOpacity\n          onPress={() => {\n            navigation.navigate('SinglePost', { _id, searchTerm, searchedTag });\n          }}\n          activeOpacity={0.9}\n          style={{\n            flex: 1,\n            alignItems: 'center',\n            paddingVertical: 10,\n          }}>\n          <Layout\n            style={{\n              width: windowWidth * 0.9,\n              maxWidth: MAX_WIDTH_WEB,\n              paddingVertical: 10,\n              flexDirection: 'row'\n            }}>\n            <Text style={{ fontSize: 20 }}>{title}</Text>\n            <TouchableOpacity style={{alignSelf: 'flex-end', marginLeft: 'auto'}} onPress={ () => {\n                toggleAdditionOfEvent()\n              }\n            }>\n              <FontAwesome5\n                  name={isAdded ? 'times' : 'plus'}\n                  size={23}\n                  color={darkMode ? 'white' : 'black'}\n              />\n            </TouchableOpacity>\n          </Layout>\n\n          <EventBody\n            contentURL={contentURL}\n            contentText={contentText}\n            contentImage={contentImage}\n            host={host}\n            title={title}\n            location={location}\n            date={date}\n            startTime={startTime}\n            endTime={endTime}\n            _id={_id}\n            postAuthor={postAuthor}\n            userName={userName}\n            hasLiked={hasLiked}\n          />\n\n          <BottomBar\n            tags={tags}\n            _id={_id}\n            searchTerm={searchTerm}\n            searchedTag={searchedTag}\n          />\n        </TouchableOpacity>\n      </Layout>\n    </Layout>\n  );\n}\n","import {\n  Button,\n  Divider,\n  Icon,\n  Layout,\n  List,\n  ListItem,\n  Spinner,\n  Text,\n  useTheme,\n} from '@ui-kitten/components';\nimport { useEffect, useRef, useState } from 'react';\nimport { FontAwesome5, MaterialIcons } from '@expo/vector-icons';\nimport Modal from 'react-native-modal';\n\nimport { useAppSelector } from '../../app/hooks';\nimport Header from '../../components/Header';\nimport {\n  discoverApiSlice,\n  postsAdapter,\n  postsSelectors,\n  useLazyGetDiscoverPostsQuery,\n} from '../api/discoverApi';\nimport { Keyboard, Platform, TouchableOpacity } from 'react-native';\nimport { selectDarkMode, selectUserKey } from '../../app/appDataSlice';\nimport TextCard from './Cards/TextCard';\nimport { DiscoverPost } from '../../app/types';\nimport ImageCard from './Cards/ImageCard';\nimport { usersApiSlice } from '../api/usersApi';\nimport SponsorCard from './Cards/SponsorCard';\nimport EventCard from './Cards/EventCard';\nimport {LinearGradient} from \"expo-linear-gradient\";\n\nexport default function PostsList({\n  navigation,\n  tag,\n  searchTerm,\n  recentSearches,\n  handleRemoveRecentSearch,\n  handleClickRecentSearch,\n  route\n}: {\n  navigation: any;\n  tag?: string;\n  searchTerm?: string;\n  recentSearches?: string[];\n  sponsor?: boolean;\n  handleRemoveRecentSearch?: (searchTerm: string) => void;\n  handleClickRecentSearch?: (searchTerm: string) => void;\n  route?: { params: { sponsor: boolean } };\n}) {\n\n  const theme = useTheme();\n  const userKey = useAppSelector(selectUserKey);\n  const darkMode = useAppSelector(selectDarkMode);\n\n  const {\n    data: { userName },\n  } = usersApiSlice.endpoints.getUserInfo.useQueryState(userKey);\n\n  const pageNumber = useRef(0);\n  const [fetchPosts, { isFetching, isLoading, isError }] =\n    useLazyGetDiscoverPostsQuery();\n\n  const { posts, hasMorePages } =\n    discoverApiSlice.endpoints.getDiscoverPosts.useQueryState(\n      { pageNumber: 1, userKey, userName, tag, searchTerm, },\n      {\n        selectFromResult: (result) => {\n          return {\n            hasMorePages: result.data?.hasMorePages,\n            posts: postsSelectors.selectAll(\n              result.data ?? postsAdapter.getInitialState()\n            ),\n          };\n        },\n      }\n    );\n\n  const fetchFirstPage = async () => {\n    pageNumber.current = 1;\n    await fetchPosts({\n      userKey,\n      pageNumber: pageNumber.current,\n      userName,\n      tag,\n      searchTerm,\n      // sponsor,\n    });\n  };\n\n  const fetchMorePosts = async () => {\n    if (!hasMorePages || isFetching) return;\n    pageNumber.current++;\n    await fetchPosts({\n      userKey,\n      pageNumber: pageNumber.current,\n      userName,\n      tag,\n      searchTerm,\n      // sponsor,\n    });\n  };\n\n  useEffect(() => {\n    fetchFirstPage();\n  }, [searchTerm, tag]);\n\n  const PinIcon = (\n    <Layout\n      style={{\n        flexDirection: 'row',\n        marginBottom: 0,\n        marginTop: 10,\n        marginLeft: 10,\n      }}>\n      <MaterialIcons\n        name=\"push-pin\"\n        size={20}\n        color={theme['color-primary-500']}\n      />\n      <Text style={{ color: theme['color-primary-500'] }}>pinned</Text>\n    </Layout>\n  );\n\n  // Render Content\n\n  const renderItem = ({ item }: { item: DiscoverPost }) => {\n    const commonProps = {\n      title: item.title,\n      tags: item.tags,\n      _id: item._id,\n      postAuthor: item.userName,\n      navigation,\n      key: item._id,\n      searchTerm,\n      searchedTag: tag,\n      pinnedIcon: item.pinned ? PinIcon : null,\n    };\n\n    if (item.isSponsor) {\n      const sponsorProps = JSON.parse(item.contentText);\n      return <SponsorCard data={sponsorProps} navigation={navigation} />;\n    }\n\n    switch (item.type) {\n      case 'contentText':\n        return (\n          <TextCard\n            {...commonProps}\n            body={item.contentText}\n            emoji={item.emoji}\n            isUrl={false}\n          />\n        );\n      case 'contentUrl':\n        return (\n          <TextCard\n            {...commonProps}\n            body={item.contentUrl}\n            emoji={item.emoji}\n            isUrl={true}\n          />\n        );\n      case 'contentImage':\n        return (\n          <ImageCard\n            {...commonProps}\n            hasLiked={item.hasLiked}\n            imageId={item.contentImage}\n            postAuthor={item.userName}\n            userName={userName}\n          />\n        );\n        case 'contentEvent':\n          return (\n            <EventCard\n              location={item.location}\n              date={item.date}\n              startTime={item.startTime}\n              postAuthor={item.userName}\n              userName={userName}\n              contentURL={item.contentUrl}\n              contentText={item.contentText}\n              contentImage={item.contentImage}\n              endTime={item.endTime}\n              hasLiked={item.hasLiked}\n              host={item.host}\n              {...commonProps}\n              />)\n\n      default:\n        console.log('Tried to load an unknown post type:', item?.type);\n        return null;\n    }\n  };\n\n  const renderRecentSearch = ({ item }: { item: string }) => {\n    return (\n      <ListItem\n        onPress={() => {\n          handleClickRecentSearch(item);\n          Keyboard.dismiss();\n        }}\n        style={{\n          paddingVertical: 10,\n          marginVertical: 0,\n          backgroundColor: 'transparent',\n        }}\n        title={item}\n        accessoryLeft={() => (\n          <Icon\n            name=\"clock\"\n            style={{\n              height: 20,\n              color: theme['color-basic-400'],\n              marginHorizontal: 10,\n            }}\n          />\n        )}\n        accessoryRight={(props) => (\n          <Button\n            appearance=\"ghost\"\n            onPress={() => handleRemoveRecentSearch(item)}\n            accessoryLeft={<Icon {...props} name=\"x\" pack=\"feather\" />}\n          />\n        )}\n      />\n    );\n  };\n\n  const FooterSpinner = () => {\n    if (isFetching) {\n      return (\n        <Layout style={{ alignItems: 'center', paddingVertical: 10 }}>\n          <Spinner />\n        </Layout>\n      );\n    }\n  };\n\n  let content = <></>;\n  if (isLoading) {\n    content = (\n      <Layout style={{ marginTop: 20, alignItems: 'center' }}>\n        <Spinner />\n      </Layout>\n    );\n  } else if (isError) {\n    content = (\n      <Layout style={{ alignItems: 'center', marginTop: 20 }}>\n        <FontAwesome5\n          name=\"exclamation\"\n          size={50}\n          color={theme['color-danger-500']}\n        />\n        <Text style={{ textAlign: 'center', fontSize: 20 }}>\n          Error loading posts\n        </Text>\n      </Layout>\n    );\n  } else if (posts.length === 0) {\n    content = (\n      <Layout style={{ alignItems: 'center', marginTop: 20 }}>\n        <FontAwesome5\n          name=\"sad-tear\"\n          size={50}\n          color={theme['color-danger-500']}\n        />\n        <Text style={{ textAlign: 'center', fontSize: 20 }}>\n          No posts found\n        </Text>\n      </Layout>\n    );\n  } else if (searchTerm === '' && tag === '') {\n    if (recentSearches?.length > 0) {\n      content = (\n        <Layout style={{ flex: 1 }}>\n          <List\n            keyboardShouldPersistTaps=\"handled\"\n            ListHeaderComponent={() => (\n              <Text\n                status=\"success\"\n                style={{ fontStyle: 'italic', marginLeft: 20 }}>\n                Recent Searches\n              </Text>\n            )}\n            data={Array.from(recentSearches)}\n            renderItem={renderRecentSearch}\n          />\n        </Layout>\n      );\n    } else {\n      content = (\n        <Layout style={{ flex: 1 }}>\n          <Layout style={{ marginTop: 30, justifyContent: 'center' }}>\n            <Text style={{ textAlign: 'center', fontSize: 20 }}>\n              Search for posts\n            </Text>\n            <Text\n              style={{\n                textAlign: 'center',\n                fontSize: 16,\n                color: theme['color-basic-500'],\n              }}>\n              Search by title, tag, or college\n            </Text>\n          </Layout>\n        </Layout>\n      );\n    }\n  } else {\n    content = (\n        Platform.OS === 'web' ?\n            <LinearGradient\n                colors={\n                    darkMode\n                        ? [theme['color-basic-1100'], theme['color-basic-1100']]\n                        : [theme['color-primary-500'], theme['color-success-500']]\n                }\n                style={{ width: '100%', margin: 0, alignItems: 'center', flex: 1 }}\n                start={{ x: 0, y: 0 }}\n                end={{ x: 1, y: 0.4 }}>\n                <List\n                    contentContainerStyle={{ width: '100%', alignSelf: 'center', paddingHorizontal: 10}}\n                    onRefresh={fetchFirstPage}\n                    refreshing={isLoading}\n                    data={posts}\n                    keyExtractor={(item) => item._id}\n                    renderItem={renderItem}\n                    onEndReachedThreshold={0.5}\n                    onEndReached={fetchMorePosts}\n                    ListFooterComponent={FooterSpinner}\n                    showsVerticalScrollIndicator={false}\n                    ItemSeparatorComponent={null}\n                />\n            </LinearGradient> :\n          <Layout style={{ flex: 1 }}>\n            <List\n              contentContainerStyle={{ width: '100%' }}\n              onRefresh={fetchFirstPage}\n              refreshing={isLoading}\n              data={posts}\n              keyExtractor={(item) => item._id}\n              renderItem={renderItem}\n              onEndReachedThreshold={0.5}\n              onEndReached={fetchMorePosts}\n              ListFooterComponent={FooterSpinner}\n              showsVerticalScrollIndicator={false}\n              ItemSeparatorComponent={Divider}\n            />\n          </Layout>\n    );\n  }\n\n  return <Layout style={{ flex: 1 }}>{content}</Layout>;\n}\n","import { Card, Modal, Text, Button } from '@ui-kitten/components';\nimport { StyleSheet } from 'react-native';\n\nexport default function DisabledFieldModal({setShowModal}) {\n  return (\n    <Modal\n      visible={true}\n      backdropStyle={myStyles.backdrop}\n      style={{ width: '75%' }}\n      onBackdropPress={() => setShowModal(false)}>\n      <Card disabled={true}>\n        <Text style={{ fontSize: 15, paddingTop: 5, paddingBottom: 10 }}>\n          Sorry, we are experiencing technical difficulties and this\n          functionality is currently undergoing maintenance. Please try again\n          later.\n        </Text>\n        <Button\n          onPress={() => {\n            setShowModal(false);\n          }}>\n          Dismiss\n        </Button>\n      </Card>\n    </Modal>\n  );\n}\n\nconst myStyles = StyleSheet.create({\n  backdrop: {\n    backgroundColor: 'rgba(0, 0, 0, 0.65)',\n  },\n});\n","import { TouchableOpacity, Alert } from 'react-native';\nimport { Layout, Text, useTheme } from '@ui-kitten/components';\nimport { useState } from 'react';\n\nimport { FontAwesome } from '@expo/vector-icons';\nimport { stringToEmoji } from '../../../functions';\nimport { useAppSelector } from '../../../app/hooks';\nimport { selectDarkMode, selectUserKey } from '../../../app/appDataSlice';\nimport {\n  useDeleteCommentMutation,\n  useLikeCommentMutation,\n} from '../../api/discoverApi';\n\nexport default function Comment({\n  body,\n  postId,\n  commentId,\n  isOwnComment,\n  userName,\n  numLikes,\n  hasLiked,\n  searchTerm,\n  searchedTag,\n}) {\n  const theme = useTheme();\n  const userKey = useAppSelector(selectUserKey);\n  const darkMode = useAppSelector(selectDarkMode);\n  const [isExpanded, setIsExpanded] = useState(true);\n  const [likeComment] = useLikeCommentMutation();\n  const [deleteComment, deleteCommentLoading] = useDeleteCommentMutation();\n\n  const handleLikeComment = async () => {\n    try {\n      await likeComment({\n        commentId,\n        postId,\n        userKey,\n        userName,\n        searchTerm,\n        tag: searchedTag,\n      }).unwrap();\n    } catch (error) {\n      console.warn(\"Couldn't like comment\", error);\n    }\n  };\n\n  const handleDeleteComment = () => {\n    try {\n      deleteComment({\n        commentId,\n        postId,\n        userKey,\n        userName,\n        searchTerm,\n        tag: searchedTag,\n      }).unwrap();\n    } catch (error) {\n      console.warn(\"Couldn't delete comment\", error);\n    }\n  };\n\n  return (\n    <TouchableOpacity\n      style={{ flexDirection: 'row', marginVertical: 10, marginHorizontal: 15 }}\n      onPress={() => setIsExpanded(!isExpanded)}\n      onLongPress={() => {\n        if (isOwnComment) {\n          Alert.alert('', body, [\n            {\n              text: 'Cancel',\n              style: 'cancel',\n            },\n            {\n              text: 'Delete',\n              onPress: handleDeleteComment,\n            },\n          ]);\n        }\n      }}>\n      <Layout\n        style={{\n          height: '100%',\n          flexDirection: 'row',\n          flex: 11,\n        }}>\n        <Layout\n          style={{\n            borderRadius: 100,\n            width: 35,\n            height: 35,\n            marginRight: 10,\n            backgroundColor: darkMode\n              ? theme['color-basic-600']\n              : theme['color-basic-300'],\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}>\n          <Text style={{ fontSize: 15 }}>{stringToEmoji(body)}</Text>\n        </Layout>\n\n        <Text style={{ fontWeight: 'normal', flex: 1, paddingTop: 7 }}>\n          {`  `}\n          {isExpanded || body.length <= 50 ? body : `${body.slice(0, 50)}...`}\n        </Text>\n      </Layout>\n\n      <TouchableOpacity\n        style={{\n          flexDirection: 'row',\n          alignSelf: 'center',\n          alignItems: 'center',\n        }}\n        onPress={handleLikeComment}>\n        <Text style={{ padding: 5, fontSize: 15 }}>{numLikes}</Text>\n        <FontAwesome\n          size={15}\n          color={\n            hasLiked ? theme['color-primary-500'] : theme['color-basic-400']\n          }\n          name=\"heart\"\n        />\n      </TouchableOpacity>\n    </TouchableOpacity>\n  );\n}\n","import { A } from '@expo/html-elements';\nimport { Input, Text } from '@ui-kitten/components';\nimport { Dimensions } from 'react-native';\nimport { selectDarkMode } from '../../../app/appDataSlice';\nimport { useAppSelector } from '../../../app/hooks';\nimport { validURL } from '../../../functions';\n\nconst windowWidth = Dimensions.get('window').width;\n\nexport default function SinglePostBody({ type, body, handleLikePost }) {\n  const darkMode = useAppSelector(selectDarkMode);\n\n  if (type === 'contentText') {\n    return (\n      <Input\n        scrollEnabled={false}\n        multiline\n        disabled\n        value={body}\n        style={{\n          backgroundColor: 'transparent',\n          borderWidth: 0,\n        }}\n        textStyle={{ color: darkMode ? 'white' : 'black' }}\n      />\n    );\n  } else if (type === 'contentUrl') {\n    if (validURL(body)) {\n      return (\n        <A style={{ color: 'blue' }} href={body}>\n          {body}\n        </A>\n      );\n    } else {\n      return <Text>{body}</Text>;\n    }\n  }\n  return <></>;\n}\n","import { Layout, Spinner } from '@ui-kitten/components';\n\nexport default function FullPageSpinner({opacity = 0.4}) {\n  return (\n    <Layout\n      style={{\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        height: '100%',\n        position: 'absolute',\n        backgroundColor: 'black',\n        flex: 1,\n        opacity,\n        zIndex: 100,\n      }}>\n      <Spinner size=\"large\" />\n    </Layout>\n  );\n}\n","import {\n  Layout,\n  Text,\n  Card,\n  Button,\n  List,\n  Input,\n  useTheme,\n  Spinner,\n  Divider,\n} from '@ui-kitten/components';\nimport { useEffect, useState } from 'react';\nimport {\n  Keyboard,\n  TouchableWithoutFeedback,\n  ScrollView,\n  TouchableOpacity,\n  RefreshControl,\n} from 'react-native';\nimport { FontAwesome5 } from '@expo/vector-icons';\n\nimport { selectDarkMode, selectUserKey } from '../../../app/appDataSlice';\nimport { useAppSelector } from '../../../app/hooks';\nimport DisabledFieldModal from '../../../components/DisabledOptionModal';\nimport {\n  discoverApiSlice,\n  postsAdapter,\n  postsSelectors,\n  useAddCommentMutation,\n  useDeleteDiscoverPostMutation,\n  useLazyGetPostByIdQuery,\n  useLikePostMutation,\n} from '../../api/discoverApi';\nimport { usersApiSlice } from '../../api/usersApi';\nimport BottomBar from '../BottomBar';\nimport Comment from './Comment';\nimport SinglePostBody from './SinglePostBody';\nimport { stringToEmoji } from '../../../functions';\nimport FullPageSpinner from '../../../components/FullPageSpinner';\nimport { useAddClassMutation } from '../../api/classPagesApi';\nimport { MAX_WIDTH_WEB } from '../../../constants/discover';\nimport ImageComponent from '../ImageComponent';\nimport {LinearGradient} from \"expo-linear-gradient\";\n\nexport default function SinglePost({\n  route: {\n    params: { _id, searchTerm, searchedTag },\n  },\n  navigation,\n}) {\n  const theme = useTheme();\n  const darkMode = useAppSelector(selectDarkMode);\n  const userKey = useAppSelector(selectUserKey);\n  const [showModal, setShowModal] = useState(false);\n  const [comment, setComment] = useState('');\n  const [inputFocused, setInputFocused] = useState(false);\n\n  const [likePost] = useLikePostMutation();\n  const [refreshPost, { isLoading: refreshPostLoading }] =\n    useLazyGetPostByIdQuery();\n  const [addComment, { isLoading: addCommentLoading }] =\n    useAddCommentMutation();\n  const [deletePost, { isLoading: deletePostLoading }] =\n    useDeleteDiscoverPostMutation();\n  const { data: userData } =\n    usersApiSlice.endpoints.getUserInfo.useQueryState(userKey);\n  const post = discoverApiSlice.endpoints.getDiscoverPosts.useQueryState(\n    { pageNumber: 1, userKey, userName: userData.userName },\n    {\n      selectFromResult: (result) =>\n        postsSelectors.selectById(\n          result.data ?? postsAdapter.getInitialState(),\n          _id\n        ),\n    }\n  );\n\n  useEffect(() => {\n    if (!post) navigation.goBack();\n  }, [post]);\n\n  const handleRefreshPost = async () => {\n    try {\n      await refreshPost({\n        postId: _id,\n        userKey,\n        userName: userData.userName,\n        searchTerm,\n        tag: searchedTag,\n      }).unwrap();\n    } catch (error) {\n      console.warn(\"Couldn't refresh post\", error);\n    }\n  };\n\n  const handleDeletePost = async () => {\n    try {\n      await deletePost({\n        _id,\n        userKey,\n        userName: userData.userName,\n        title: post.title,\n        searchTerm,\n        tag: searchedTag,\n      }).unwrap();\n    } catch (error) {\n      console.warn(\"Couldn't delete post\", error);\n    }\n  };\n\n  const handleSubmitComment = async () => {\n    try {\n      await addComment({\n        _id,\n        userKey,\n        userName: userData.userName,\n        text: comment,\n        searchTerm,\n        tag: searchedTag,\n      }).unwrap();\n      setComment('');\n      setInputFocused(false);\n      Keyboard.dismiss();\n    } catch (e) {\n      console.warn('Error submitting comment', e);\n    }\n  };\n\n  const handlePressLike = async () => {\n    try {\n      await likePost({\n        userKey,\n        _id,\n        title: post.title,\n        postAuthor: post.userName,\n        userName: userData.userName,\n        searchTerm,\n        tag: searchedTag,\n      }).unwrap();\n    } catch (error) {\n      console.log('Error liking post:', error);\n    }\n  };\n\n  let body = <></>;\n  if (post?.type === 'contentImage') {\n    body = (\n      <ImageComponent\n        apiInfo={{\n          userKey,\n          _id,\n          title: post.title,\n          postAuthor: post.userName,\n          userName: userData.userName,\n          searchTerm,\n          searchedTag,\n        }}\n        hasLiked={post.hasLiked}\n        imageId={post.contentImage}\n      />\n    );\n  } else if (post?.type === 'contentText' || post?.type === 'contentUrl') {\n    body = (\n      <SinglePostBody\n        handleLikePost={handlePressLike}\n        type={post.type}\n        body={post.contentText || post.contentUrl}\n      />\n    );\n  }\n\n  const TopContent = () => {\n    return (\n      <Layout style={{ maxWidth: MAX_WIDTH_WEB, alignSelf: 'center' }}>\n        <Card\n          disabled\n          style={{ margin: 8, borderWidth: 0 }}\n          header={\n            <Layout>\n              <Text style={{ fontWeight: 'bold', fontSize: 20 }}>\n                {post.title}\n              </Text>\n            </Layout>\n          }\n          footer={\n            <Layout style={{ margin: 0, padding: 0 }}>\n              <BottomBar\n                commentIconShown={false}\n                tags={post.tags}\n                _id={post._id}\n              />\n            </Layout>\n          }>\n          {body}\n        </Card>\n        {post.userName === userData.userName ? (\n          <Layout style={{ flexDirection: 'row', width: '100%' }}>\n            <Button\n              status=\"danger\"\n              style={{ margin: 8, flex: 1 }}\n              onPress={handleDeletePost}>\n              Delete Post\n            </Button>\n            {/* <Button style={{ margin: 8, flex: 1 }} disabled>\n              Edit Post\n            </Button> */}\n          </Layout>\n        ) : null}\n\n        <Card disabled style={{ borderWidth: 0 }}>\n          <Text\n            style={{\n              fontWeight: '600',\n            }}>{`Comments (${post.comments.length})`}</Text>\n        </Card>\n      </Layout>\n    );\n  };\n\n  if (!post) {\n    return null;\n  }\n\n  return (\n      <LinearGradient\n          colors={\n              darkMode\n                  ? [theme['color-basic-1100'], theme['color-basic-1100']]\n                  : [theme['color-primary-500'], theme['color-success-500']]\n          }\n          style={{ width: '100%', margin: 0, alignItems: 'center', flex: 1 }}\n          start={{ x: 0, y: 0 }}\n          end={{ x: 1, y: 0.4 }}>\n    <Layout style={{ flex: 1 }}>\n      {showModal && <DisabledFieldModal setShowModal={setShowModal} />}\n      {/* Render Comments */}\n      <List\n        onRefresh={handleRefreshPost}\n        showsVerticalScrollIndicator={false}\n        refreshing={refreshPostLoading}\n        ListHeaderComponent={TopContent}\n        contentContainerStyle={{\n          marginHorizontal: 10,\n          maxWidth: 700,\n          alignSelf: 'center',\n        }}\n        style={{ backgroundColor: 'transparent' }}\n        data={post.comments}\n        ItemSeparatorComponent={Divider}\n        renderItem={({ item }) => (\n          <Comment\n            body={item.text}\n            postId={post._id}\n            commentId={item._id}\n            numLikes={item.numLikes}\n            hasLiked={item.hasLiked}\n            userName={userData.userName}\n            isOwnComment={item.userName === userData.userName}\n            searchTerm={searchTerm}\n            searchedTag={searchedTag}\n          />\n        )}\n        keyExtractor={(comment) => {\n          return comment._id;\n        }}\n      />\n      <Layout\n        style={{\n          flexDirection: 'row',\n          alignItems: 'center',\n          height: 55,\n          bottom: 0,\n          width: '100%',\n          paddingVertical: 10,\n          paddingRight: 10,\n          borderColor: darkMode\n            ? theme['color-basic-500']\n            : theme['color-basic-300'],\n          borderTopWidth: 1,\n        }}>\n        <Layout\n          style={{\n            flex: 1,\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}>\n          <Layout\n            style={{\n              borderRadius: 100,\n              width: 35,\n              height: 35,\n              backgroundColor: darkMode\n                ? theme['color-basic-600']\n                : theme['color-basic-300'],\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}>\n            <Text style={{ fontSize: 15 }}>\n              {stringToEmoji(userData.userName)}\n            </Text>\n          </Layout>\n        </Layout>\n\n        <Input\n          accessoryRight={\n            inputFocused ? (\n              <TouchableOpacity onPress={handleSubmitComment}>\n                <FontAwesome5\n                  name=\"arrow-alt-circle-right\"\n                  size={22}\n                  color={theme['color-primary-500']}\n                />\n              </TouchableOpacity>\n            ) : null\n          }\n          style={{ flex: 7 }}\n          placeholder=\"Add a comment...\"\n          onFocus={() => setInputFocused(true)}\n          onBlur={() => setInputFocused(false)}\n          value={comment}\n          onChangeText={(text) => setComment(text)}\n          onSubmitEditing={handleSubmitComment}\n        />\n      </Layout>\n      {(deletePostLoading || addCommentLoading) && <FullPageSpinner />}\n    </Layout>\n      </LinearGradient>\n  );\n}\n","import {\n  Alert,\n  Image,\n  TouchableOpacity,\n  Dimensions,\n  Platform,\n} from 'react-native';\nimport React from 'react';\nimport { Layout, Text, Input } from '@ui-kitten/components';\nimport * as ImagePicker from 'expo-image-picker';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { Feather } from '@expo/vector-icons';\nimport Toast from 'react-native-root-toast';\n\nconst windowWidth = Dimensions.get('window').width;\n\nexport default function CreateImage({\n  discoverPostInputs,\n  setDiscoverPostInputs,\n  TagInput,\n  showTitle = true,\n}) {\n  const [imagePickerStatus, requestImagePickerPermission] =\n    ImagePicker.useMediaLibraryPermissions();\n  const [cameraStatus, requestCameraPermission] =\n    ImagePicker.useCameraPermissions();\n\n  const onPressCamera = async () => {\n    const response = await requestCameraPermission();\n    if (response.granted || cameraStatus.granted) {\n      let result = await ImagePicker.launchCameraAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      });\n      if (!result.canceled) {\n        setDiscoverPostInputs({\n          ...discoverPostInputs,\n          contentImage: result.assets[0],\n        });\n      }\n    } else {\n      Alert.alert(\n        \"Permission to access camera is required. Please enable it in your phone's settings.\"\n      );\n    }\n  };\n\n  const pickImage = async () => {\n    const response = await requestImagePickerPermission();\n    if (response.granted || imagePickerStatus.granted) {\n      let result = await ImagePicker.launchImageLibraryAsync({\n        allowsEditing: false,\n      });\n      if (!result.canceled) {\n        setDiscoverPostInputs({\n          ...discoverPostInputs,\n          contentImage: result.assets[0],\n        });\n\n        if (Platform.OS === 'android') {\n          Toast.show(\n            \"Don't worry if the image seems blurry on the sides.\",\n            {\n              duration: Toast.durations.LONG,\n              opacity: 1,\n              position: -100,\n              backgroundColor: 'grey',\n              shadow: false,\n            }\n          );\n        }\n      }\n    } else {\n      Alert.alert(\n        \"Permission to access camera roll is required. Please enable it in your phone's settings.\"\n      );\n    }\n  };\n\n  const Title = (\n    <Layout\n      style={{\n        flexDirection: 'row',\n        justifyContent: 'space-evenly',\n        alignItems: 'center',\n        marginTop: 15,\n      }}>\n      <Input\n        label=\"Title\"\n        placeholder=\"Post Title\"\n        value={discoverPostInputs?.title ? discoverPostInputs.title : ''}\n        style={{ flex: 5 }}\n        onChangeText={(newText) => {\n          setDiscoverPostInputs({\n            ...discoverPostInputs,\n            title: newText,\n          });\n        }}\n      />\n    </Layout>\n  );\n\n  let imagePicker = <></>;\n\n  if (discoverPostInputs?.contentImage) {\n    // Image Preview\n    imagePicker = (\n      <Layout\n        level=\"2\"\n        style={{\n          height: 300,\n          marginVertical: 10,\n          borderRadius: 10,\n          shadowColor: '#000',\n          shadowOffset: {\n            width: 0,\n            height: 5,\n          },\n          shadowOpacity: 0.34,\n          shadowRadius: 6.27,\n\n          elevation: 10,\n        }}>\n        <TouchableOpacity\n          onPress={() => {\n            setDiscoverPostInputs(null);\n          }}\n          style={{ position: 'absolute', right: 10, top: 5, zIndex: 1 }}>\n          <Feather name=\"x-circle\" size={30} color={'grey'} />\n        </TouchableOpacity>\n\n        <Image\n          source={{\n            uri: discoverPostInputs.contentImage.uri,\n          }}\n          style={{\n            borderRadius: 5,\n            width: '100%',\n            height: '100%',\n            resizeMode: 'contain',\n          }}\n        />\n      </Layout>\n    );\n  } else {\n    // Image Picker\n    imagePicker = (\n      <Layout style={{ flexDirection: 'row' }}>\n        <TouchableOpacity\n          onPress={() => {\n            pickImage();\n          }}\n          style={{\n            height: 80,\n            justifyContent: 'center',\n            alignItems: 'center',\n            flex: 1,\n            paddingVertical: 8,\n            flexDirection: 'row',\n          }}>\n          <Layout\n            level=\"2\"\n            style={{\n              flex: 1,\n              flexDirection: 'row',\n              height: '100%',\n              marginHorizontal: 10,\n              paddingVertical: 15,\n              paddingHorizontal: 5,\n              borderRadius: 8,\n              alignItems: 'center',\n              justifyContent: 'space-around',\n            }}>\n            <FontAwesome name=\"image\" size={25} color={'grey'} />\n            <Text>Select Image</Text>\n          </Layout>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={onPressCamera}\n          style={{\n            height: 80,\n            justifyContent: 'center',\n            alignItems: 'center',\n            flex: 1,\n            paddingVertical: 8,\n            flexDirection: 'row',\n          }}>\n          <Layout\n            level=\"2\"\n            style={{\n              flex: 1,\n              flexDirection: 'row',\n              height: '100%',\n              marginHorizontal: 10,\n              paddingVertical: 15,\n              paddingHorizontal: 5,\n              borderRadius: 8,\n              alignItems: 'center',\n              justifyContent: 'space-around',\n            }}>\n            <FontAwesome name=\"camera\" size={25} color={'grey'} />\n            <Text>Use Camera</Text>\n          </Layout>\n        </TouchableOpacity>\n      </Layout>\n    );\n  }\n\n  return (\n    <>\n      {showTitle && Title}\n      {TagInput()}\n      {imagePicker}\n    </>\n  );\n}\n","import { Layout } from '@ui-kitten/components';\nimport React from 'react';\n\nexport default function WrapItems({ childStyle, children, ...LayoutProps }) {\n  return (\n    <Layout {...LayoutProps}>\n      {React.Children.map(children, (child) => (\n        <Layout style={childStyle}>{child}</Layout>\n      ))}\n    </Layout>\n  );\n}\n","import {\n  Button,\n  CheckBox,\n  Datepicker,\n  Divider,\n  Input,\n  Layout,\n  NativeDateService,\n  Text,\n} from '@ui-kitten/components';\nimport { useMemo, useState } from 'react';\nimport { Platform } from 'react-native';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { AntDesign } from '@expo/vector-icons';\n\nimport CreateImage from './CreateImagePost';\nimport { OptionalText } from './CreatePost';\nimport WrapItems from '../../../components/WrapItems';\n\nexport default function CreateEvent({\n  discoverPostInputs,\n  setDiscoverPostInputs,\n  TagInput,\n  startTime,\n  setStartTime,\n  endTime,\n  setEndTime,\n  date,\n  setDate,\n}) {\n  // Needed because Android date picker uses a modal\n  const [showTimePickerAndroid, setShowTimePickerAndroid] = useState(false);\n\n  const formatDateService = new NativeDateService('en', {\n    format: 'MM/DD/YYYY',\n  });\n  const timePickerOptions = useMemo(\n    () => ({\n      'Start Time': { time: startTime, setTime: setStartTime },\n      'End Time': { time: endTime, setTime: setEndTime },\n    }),\n    [startTime, setStartTime, endTime, setEndTime]\n  );\n\n  const formatAMPM = (date: Date) => {\n    let hours = date.getHours();\n    let minutes = date.getMinutes() as any;\n    const ampm = hours >= 12 ? 'pm' : 'am';\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n    minutes = minutes < 10 ? '0' + minutes : minutes;\n    let strTime = hours + ':' + minutes + ' ' + ampm;\n    return strTime;\n  };\n\n  const Title = (\n    <Layout\n      style={{\n        flexDirection: 'row',\n        justifyContent: 'space-evenly',\n        alignItems: 'center',\n        marginTop: 15,\n      }}>\n      <Input\n        label=\"Title\"\n        placeholder=\"Post Title\"\n        value={discoverPostInputs?.title ? discoverPostInputs.title : ''}\n        style={{ flex: 5 }}\n        onChangeText={(newText) => {\n          setDiscoverPostInputs({\n            ...discoverPostInputs,\n            title: newText,\n          });\n        }}\n      />\n    </Layout>\n  );\n\n  const TimePicker = () => {\n    if (Platform.OS === 'android') {\n      return (\n        <Layout\n          style={{\n            flexDirection: 'row',\n            justifyContent: 'space-around',\n          }}>\n          {Object.entries(timePickerOptions).map(\n            ([label, { time, setTime }], i) => (\n              <Layout key={i} style={{ alignItems: 'center' }}>\n                <Text category=\"label\" style={{ marginBottom: 5 }}>\n                  {label}\n                </Text>\n                <Button\n                  onPress={() => {\n                    setShowTimePickerAndroid(true);\n                  }}>\n                  {formatAMPM(time)}\n                </Button>\n                {showTimePickerAndroid && (\n                  <DateTimePicker\n                    mode=\"time\"\n                    onChange={(change, date) => {\n                      setTime(date);\n                      setShowTimePickerAndroid(false);\n                    }}\n                    value={time}\n                  />\n                )}\n              </Layout>\n            )\n          )}\n        </Layout>\n      );\n    }\n    if (Platform.OS === 'ios') {\n      return (\n        <Layout\n          style={{\n            flexDirection: 'row',\n            justifyContent: 'space-around',\n          }}>\n          {Object.entries(timePickerOptions).map(\n            ([label, { time, setTime }], i) => (\n              <Layout key={i} style={{ alignItems: 'center' }}>\n                <Text category=\"label\" style={{ marginBottom: 5 }}>\n                  {label}\n                </Text>\n\n                <DateTimePicker\n                  mode=\"time\"\n                  onChange={(change, date) => {\n                    setTime(date);\n                  }}\n                  value={time}\n                />\n              </Layout>\n            )\n          )}\n        </Layout>\n      );\n    }\n  };\n\n  if (Platform.OS === 'web') {\n    return (\n      <Text>\n        Creating Event Posts is not supported on the web. Download the app on\n        the App Store or Play Store to make an Event Post.\n      </Text>\n    );\n  }\n\n  return (\n    <Layout>\n      <WrapItems childStyle={{ marginVertical: 10 }}>\n        {Title}\n        <Input\n          label={'Location'}\n          placeholder={'Ex: North Dorm, HMC'}\n          value={discoverPostInputs?.location}\n          onChangeText={(newText) => {\n            setDiscoverPostInputs({\n              ...discoverPostInputs,\n              location: newText,\n            });\n          }}\n        />\n        <Datepicker\n          label={'Date'}\n          dateService={formatDateService}\n          onSelect={(nextDate) => setDate(nextDate)}\n          date={date}\n          placement=\"top\"\n        />\n        <TimePicker />\n        <Layout style={{ padding: 6 }}>\n          <Divider />\n          <AntDesign name=\"caretdown\" style={{ position: 'absolute' }} />\n          <AntDesign\n            name=\"caretdown\"\n            style={{ position: 'absolute', right: 0 }}\n          />\n          <Layout\n            style={{ position: 'absolute', right: '44%', marginBottom: 6 }}>\n            <Text appearance=\"hint\">Optional</Text>\n          </Layout>\n        </Layout>\n\n        <Layout>\n          <Input\n            label=\"Link\"\n            placeholder=\"www.example.com\"\n            style={{ marginBottom: 10 }}\n            value={\n              discoverPostInputs?.contentUrl\n                ? discoverPostInputs.contentUrl\n                : ''\n            }\n            onChangeText={(newText) => {\n              setDiscoverPostInputs({\n                ...discoverPostInputs,\n                contentUrl: newText,\n              });\n            }}\n          />\n          <Input\n            label={'Host'}\n            placeholder={'Ex: John Doe'}\n            style={{ marginBottom: 5 }}\n            value={discoverPostInputs?.host}\n            onChangeText={(newText) => {\n              setDiscoverPostInputs({\n                ...discoverPostInputs,\n                host: newText,\n              });\n            }}\n          />\n\n          <Input\n            label={'Description'}\n            multiline\n            placeholder={'Describe the event...'}\n            style={{ marginVertical: 10 }}\n            value={discoverPostInputs?.description}\n            onChangeText={(newText) => {\n              setDiscoverPostInputs({\n                ...discoverPostInputs,\n                description: newText,\n              });\n            }}\n          />\n\n          <CreateImage\n            showTitle={false}\n            {...{ discoverPostInputs, setDiscoverPostInputs, TagInput }}\n          />\n        </Layout>\n      </WrapItems>\n    </Layout>\n  );\n}\n","import {\n  StyleSheet,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  Keyboard,\n  ScrollView,\n  KeyboardAvoidingView,\n  Platform,\n} from 'react-native';\nimport React, { useState } from 'react';\nimport {\n  Text,\n  Input,\n  Select,\n  SelectItem,\n  IndexPath,\n  Layout,\n  Button,\n  Spinner,\n  useTheme,\n  CheckBox,\n  Divider,\n} from '@ui-kitten/components';\nimport { FontAwesome5 } from '@expo/vector-icons';\n\nimport CreateImage from './CreateImagePost';\nimport {\n  tagIndices,\n  adminTagIndices,\n  postOptions,\n} from '../../../constants/discover';\nimport { useCreateDiscoverPostMutation } from '../../api/discoverApi';\nimport { useAppSelector } from '../../../app/hooks';\nimport { usersApiSlice } from '../../api/usersApi';\nimport Toast from 'react-native-root-toast';\nimport { selectDarkMode } from '../../../app/appDataSlice';\nimport CreateEventPost from './CreateEventPost';\nimport { showToast } from '../../../functions';\n\nexport const OptionalText = () => (\n  <Text\n    style={{\n      alignSelf: 'flex-end',\n      marginRight: 5,\n      color: 'grey',\n      fontSize: 11,\n    }}>\n    Optional\n  </Text>\n);\n\nexport default function CreatePost() {\n  const theme = useTheme();\n  const darkMode = useAppSelector(selectDarkMode);\n  const userKey = useAppSelector((state) => state.appData.secure.userKey);\n  const {\n    data: { userName, permissionLevel },\n  } = usersApiSlice.endpoints.getUserInfo.useQueryState(userKey);\n  const [discoverPostInputs, setDiscoverPostInputs] = useState(null);\n  const [startTime, setStartTime] = useState(new Date());\n  const [endTime, setEndTime] = useState(new Date());\n  const [date, setDate] = useState(new Date());\n  const [selectedTagIndex, setSelectedTagIndex] = useState<IndexPath[]>([]);\n  const [selectedPostTypeIndex, setSelectedPostTypeIndex] = useState(\n    new IndexPath(0)\n  );\n  const [error, setError] = useState(null);\n  const [isEmojiShown, setIsEmojiShown] = useState(false);\n\n  const [createDiscoverPost, { isLoading }] = useCreateDiscoverPostMutation();\n\n  const tagArray = permissionLevel === 'admin' ? adminTagIndices : tagIndices;\n\n  const submitEvent = async (tags: string[]) => {\n    // Validate date and time\n    if (date < new Date()) {\n      setError('Date must be in the future');\n      return;\n    }\n\n    if (startTime > endTime) {\n      setError('Start time must be before end time');\n      return;\n    }\n    \n\n    let formdata = new FormData();\n    formdata.append('type', 'contentEvent');\n    formdata.append('title', discoverPostInputs.title);\n    formdata.append('location', discoverPostInputs.location);\n    formdata.append('date', date.toISOString());\n    formdata.append('startTime', startTime.toISOString());\n    formdata.append('endTime', endTime.toISOString());\n\n    // Optional fields\n    if (discoverPostInputs.contentUrl)\n      formdata.append('contentUrl', discoverPostInputs.contentUrl);\n    if (discoverPostInputs.host)\n      formdata.append('host', discoverPostInputs.host);\n    if (discoverPostInputs.description)\n      formdata.append('contentText', discoverPostInputs.description);\n    if (discoverPostInputs.contentImage)\n      formdata.append('picture', {\n        uri: discoverPostInputs.contentImage.uri,\n        name: 'discoverImage',\n        type: 'image/jpg',\n      } as any);\n\n    tags.forEach((tag) => {\n      formdata.append('tags', tag);\n    });\n\n    try {\n      await createDiscoverPost({\n        type: 'contentEvent',\n        userKey,\n        userName,\n        postBody: formdata,\n      }).unwrap();\n\n      showToast('Posted Successfully!', theme['color-success-500']);\n\n      setDiscoverPostInputs(null);\n      setSelectedTagIndex([]);\n      setError(null);\n    } catch (e) {\n      console.warn(\"Couldn't post image\", e);\n      showToast('Post failed to send.', theme['color-warning-500']);\n    }\n  };\n\n  const submitImage = async (tags: string[]) => {\n    let formdata = new FormData();\n    formdata.append('title', discoverPostInputs.title);\n    formdata.append('type', 'contentImage');\n    formdata.append('picture', {\n      uri: discoverPostInputs.contentImage.uri,\n      name: 'discoverImage',\n      type: 'image/jpg',\n    } as any);\n    tags.forEach((tag) => {\n      formdata.append('tags', tag);\n    });\n\n    try {\n      await createDiscoverPost({\n        type: 'contentImage',\n        userKey,\n        userName,\n        postBody: formdata,\n      }).unwrap();\n\n      showToast('Posted Successfully!', theme['color-success-500']);\n\n      setDiscoverPostInputs(null);\n      setSelectedTagIndex([]);\n      setError(null);\n    } catch (e) {\n      console.warn(\"Couldn't post image\", e);\n      showToast('Post failed to send.', theme['color-warning-500']);\n    }\n  };\n\n  const onSubmit = async () => {\n    //\n    // Validate Input\n    //\n    if (\n      (selectedPostTypeIndex.row === 1 &&\n        (!discoverPostInputs ||\n          !discoverPostInputs.title ||\n          !discoverPostInputs.contentText)) ||\n      (selectedPostTypeIndex.row === 2 &&\n        (!discoverPostInputs ||\n          !discoverPostInputs.title ||\n          !discoverPostInputs.contentUrl)) ||\n      (selectedPostTypeIndex.row === 0 &&\n        (!discoverPostInputs ||\n          !discoverPostInputs.title ||\n          !discoverPostInputs.contentImage)) ||\n      (selectedPostTypeIndex.row === 3 &&\n        (!discoverPostInputs ||\n          !discoverPostInputs.title ||\n          !discoverPostInputs.location ||\n          !date ||\n          !startTime ||\n          !endTime))\n    ) {\n      console.log('onsubmit error', discoverPostInputs);\n      setError('Please Fill in All Fields');\n      return;\n    }\n\n    //\n    // Submit Post\n    //\n\n    const tags = selectedTagIndex.map((index) => tagArray[index.row]);\n\n    // Special Case for Image Post\n    if (selectedPostTypeIndex.row === 0) {\n      submitImage(tags);\n      return;\n    }\n\n    // Special Case for Event Post\n    if (selectedPostTypeIndex.row === 3) {\n      submitEvent(tags);\n      return;\n    }\n\n    let type = '';\n    if (selectedPostTypeIndex.row === 1) {\n      type = 'contentText';\n    } else if (selectedPostTypeIndex.row === 2) {\n      type = 'contentUrl';\n    }\n    try {\n      await createDiscoverPost({\n        type,\n        userKey,\n        userName,\n        tags,\n        content: discoverPostInputs[type],\n        title: discoverPostInputs.title,\n        emoji: discoverPostInputs.emoji,\n      }).unwrap();\n\n      let toast = Toast.show('Posted Successfully!', {\n        duration: Toast.durations.LONG,\n        opacity: 1,\n        position: -100,\n        backgroundColor: theme['color-success-500'],\n        shadow: false,\n      });\n\n      setTimeout(function hideToast() {\n        Toast.hide(toast);\n      }, 7000);\n\n      setDiscoverPostInputs(null);\n      setSelectedTagIndex([]);\n      setError(null);\n    } catch (e) {\n      let toast = Toast.show('Post failed to send.', {\n        duration: Toast.durations.LONG,\n        opacity: 1,\n        position: -100,\n        backgroundColor: theme['color-warning-500'],\n        shadow: false,\n      });\n\n      setTimeout(function hideToast() {\n        Toast.hide(toast);\n      }, 4000);\n    }\n  };\n\n  const TagInput = () => {\n    const groupedData = selectedTagIndex.map((index) => {\n      return tagArray[index.row];\n    });\n    return (\n      <Layout>\n        <Select\n          label={'Tags'}\n          multiSelect\n          value={groupedData.join(', ')}\n          placeholder=\"Select Tags\"\n          selectedIndex={selectedTagIndex}\n          onSelect={(index: IndexPath[]) => {\n            setSelectedTagIndex(index);\n          }}\n          style={styles.input}>\n          {tagArray.map((title, i) => (\n            <SelectItem title={title} key={i} />\n          ))}\n        </Select>\n        <OptionalText />\n      </Layout>\n    );\n  };\n\n  const renderPostOptions = () => {\n    // Text\n    if (selectedPostTypeIndex.row === 1) {\n      return (\n        <>\n          <Layout\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'space-evenly',\n              alignItems: 'center',\n              marginTop: 15,\n            }}>\n            {/* <EmojiToggle /> */}\n\n            <Input\n              placeholder=\"Post Title\"\n              onFocus={() => {\n                setIsEmojiShown(false);\n              }}\n              value={discoverPostInputs?.title ? discoverPostInputs.title : ''}\n              style={{ ...styles.input, flex: 5 }}\n              onChangeText={(newText) => {\n                setDiscoverPostInputs({\n                  ...discoverPostInputs,\n                  title: newText,\n                });\n              }}\n            />\n          </Layout>\n          {TagInput()}\n          <Input\n            multiline\n            placeholder=\"Post Body\"\n            onFocus={() => {\n              setIsEmojiShown(false);\n            }}\n            textStyle={{ minHeight: 100 }}\n            style={{ ...styles.input, alignSelf: 'center', width: '100%' }}\n            value={\n              discoverPostInputs?.contentText\n                ? discoverPostInputs.contentText\n                : ''\n            }\n            onChangeText={(newText) => {\n              setDiscoverPostInputs({\n                ...discoverPostInputs,\n                contentText: newText,\n              });\n            }}\n          />\n        </>\n      );\n    } else if (selectedPostTypeIndex.row === 2) {\n      // LINK\n      return (\n        <>\n          <Layout\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'space-evenly',\n              alignItems: 'center',\n              marginTop: 15,\n            }}>\n            {/* <EmojiToggle /> */}\n            <Input\n              placeholder=\"Post Title\"\n              onFocus={() => {\n                setIsEmojiShown(false);\n              }}\n              value={discoverPostInputs?.title ? discoverPostInputs.title : ''}\n              style={{ ...styles.input, flex: 5 }}\n              onChangeText={(newText) => {\n                setDiscoverPostInputs({\n                  ...discoverPostInputs,\n                  title: newText,\n                });\n              }}\n            />\n          </Layout>\n\n          <Input\n            placeholder=\"Post Link\"\n            style={styles.input}\n            onFocus={() => {\n              setIsEmojiShown(false);\n            }}\n            value={\n              discoverPostInputs?.contentUrl\n                ? discoverPostInputs.contentUrl\n                : ''\n            }\n            onChangeText={(newText) => {\n              setDiscoverPostInputs({\n                ...discoverPostInputs,\n                contentUrl: newText,\n              });\n            }}\n          />\n          {/* {PostTypeInput} */}\n          {TagInput()}\n        </>\n      );\n    } else if (selectedPostTypeIndex.row === 0) {\n      // IMAGE\n      return (\n        <CreateImage\n          discoverPostInputs={discoverPostInputs}\n          setDiscoverPostInputs={setDiscoverPostInputs}\n          TagInput={TagInput}\n        />\n      );\n    } else if (selectedPostTypeIndex.row === 3) {\n      // EVENT\n      return (\n        <CreateEventPost\n          discoverPostInputs={discoverPostInputs}\n          setDiscoverPostInputs={setDiscoverPostInputs}\n          TagInput={TagInput}\n          startTime={startTime}\n          setStartTime={setStartTime}\n          endTime={endTime}\n          setEndTime={setEndTime}\n          date={date}\n          setDate={setDate}\n        />\n      );\n    }\n  };\n\n  return (\n    <Layout style={{ flex: 1 }}>\n      <KeyboardAvoidingView\n        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n        style={{ flex: 1 }}>\n        <ScrollView style={{ flex: 1 }}>\n          <TouchableWithoutFeedback\n            style={{ flex: 1 }}\n            onPress={() => {\n              Keyboard.dismiss();\n            }}>\n            <Layout\n              style={{ flex: 1, marginBottom: 100, marginHorizontal: 16 }}>\n              <Select\n                status=\"success\"\n                label=\"Select Post Type\"\n                value={postOptions[selectedPostTypeIndex.row]}\n                selectedIndex={selectedPostTypeIndex}\n                onSelect={(index: IndexPath) => {\n                  setSelectedPostTypeIndex(index);\n                  setSelectedTagIndex([]);\n                  setDiscoverPostInputs(null);\n                  setError(null);\n                  setIsEmojiShown(false);\n                }}\n                style={styles.input}>\n                <SelectItem\n                  title=\"Image Post\"\n                  accessoryLeft={\n                    <FontAwesome5\n                      name=\"image\"\n                      size={17}\n                      color={darkMode ? '#fff' : '#000'}\n                    />\n                  }\n                />\n                <SelectItem\n                  title=\"Text Post\"\n                  accessoryLeft={\n                    <FontAwesome5\n                      name=\"file-alt\"\n                      size={17}\n                      color={darkMode ? '#fff' : '#000'}\n                    />\n                  }\n                />\n                <SelectItem\n                  title=\"Link\"\n                  accessoryLeft={\n                    <FontAwesome5\n                      name=\"link\"\n                      size={17}\n                      color={darkMode ? '#fff' : '#000'}\n                    />\n                  }\n                />\n                <SelectItem\n                  title=\"Event\"\n                  accessoryLeft={\n                    <FontAwesome5\n                      name=\"calendar-alt\"\n                      size={17}\n                      color={darkMode ? '#fff' : '#000'}\n                    />\n                  }\n                />\n              </Select>\n\n              <Divider />\n              {renderPostOptions()}\n              {error && (\n                <Layout>\n                  <Text\n                    style={{\n                      textAlign: 'center',\n                      color: 'red',\n                      fontStyle: 'italic',\n                    }}>\n                    {error}\n                  </Text>\n                </Layout>\n              )}\n              {!isEmojiShown && (\n                <Button\n                  style={styles.input}\n                  onPress={onSubmit}\n                  disabled={isLoading}>\n                  Submit\n                </Button>\n              )}\n            </Layout>\n          </TouchableWithoutFeedback>\n        </ScrollView>\n      </KeyboardAvoidingView>\n      {isLoading && (\n        <Layout\n          style={{\n            justifyContent: 'center',\n            alignItems: 'center',\n            width: '100%',\n            height: '100%',\n            position: 'absolute',\n            backgroundColor: 'black',\n            flex: 1,\n            opacity: 0.3,\n          }}>\n          <Spinner size=\"medium\" />\n        </Layout>\n      )}\n    </Layout>\n  );\n}\n\nconst styles = StyleSheet.create({\n  input: {\n    marginVertical: 5,\n  },\n});\n","import { Layout, Input, Button } from '@ui-kitten/components';\nimport { Icon } from '@ui-kitten/components';\nimport { useState } from 'react';\nimport {\n  Keyboard,\n  TouchableOpacity,\n  LayoutAnimation,\n  TouchableWithoutFeedback,\n} from 'react-native';\nimport { useTheme } from '@ui-kitten/components';\n\nimport { useAppSelector } from '../app/hooks';\nimport { selectDarkMode } from '../app/appDataSlice';\n\ntype SearchBarProps = {\n  onChangeText: (text: string) => void;\n  searchTerm: string;\n  placeholder?: string;\n  accessoryLeft?: any;\n  inputProps?: any;\n  inputStyle?: any;\n  inputRef?: any;\n  cancelButtonAction?: () => void;\n  onSubmitEditing?: () => void;\n  alwaysShowCancelButton?: boolean;\n  cancelButtonStatus?:\n    | 'basic'\n    | 'primary'\n    | 'success'\n    | 'info'\n    | 'warning'\n    | 'danger';\n};\n\nexport default function SearchBar({\n  onChangeText,\n  searchTerm,\n  accessoryLeft,\n  placeholder,\n  inputRef,\n  inputStyle,\n  inputProps,\n  cancelButtonAction = () => {},\n  onSubmitEditing = () => {},\n  cancelButtonStatus = 'warning',\n  alwaysShowCancelButton = false,\n}: SearchBarProps) {\n  const [selected, setSelected] = useState(false);\n\n  const darkMode = useAppSelector(selectDarkMode);\n  const theme = useTheme();\n\n  const select = () => {  \n    setSelected(true);\n    if (!alwaysShowCancelButton) {\n      LayoutAnimation.configureNext(\n        LayoutAnimation.create(100, 'linear', 'scaleX')\n      );\n    }\n  };\n\n  const deselect = () => {\n    setSelected(false);\n    if (!alwaysShowCancelButton) {\n      LayoutAnimation.configureNext(\n        LayoutAnimation.create(100, 'linear', 'opacity')\n      );\n    }\n  };\n\n  return (\n    <Layout\n      style={{\n        backgroundColor: 'transparent',\n        flexDirection: 'row',\n      }}>\n      {accessoryLeft}\n\n      <Input\n        style={{\n          ...inputStyle,\n          borderRadius: 20,\n          flex: 1,\n          borderWidth: 1,\n          borderColor: darkMode\n            ? theme['color-basic-500']\n            : theme['color-basic-100'],\n        }}\n        placeholderTextColor={theme['color-basic-500']}\n        accessoryRight={\n          selected && searchTerm.length > 0\n            ? (props) => (\n                <TouchableOpacity onPress={() => onChangeText('')}>\n                  <Icon {...props} name=\"times\" pack=\"fontAwesome\" />\n                </TouchableOpacity>\n              )\n            : null\n        }\n        onFocus={select}\n        onBlur={deselect}\n        placeholder={placeholder}\n        value={searchTerm}\n        onChangeText={(text) => {\n          onChangeText(text);\n        }}\n        onSubmitEditing={onSubmitEditing}\n        ref={inputRef}\n        autoCorrect={false}\n        {...inputProps}\n      />\n\n      {alwaysShowCancelButton || selected ? (\n        <Button\n          size=\"small\"\n          status={cancelButtonStatus}\n          appearance=\"ghost\"\n          onPress={() => {\n            Keyboard.dismiss();\n            cancelButtonAction();\n          }}>\n          Cancel\n        </Button>\n      ) : null}\n    </Layout>\n  );\n}\n","import { Input, Layout, useTheme } from '@ui-kitten/components';\nimport { useEffect, useRef, useState } from 'react';\nimport { selectDarkMode } from '../../app/appDataSlice';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport Header from '../../components/Header';\nimport SearchBar from '../../components/SearchBar';\nimport {\n  selectSearchTerm,\n  selectSubmittedSearchTerm,\n  searchTermChanged,\n  searchTermSubmitted,\n  selectTag,\n  selectRecentSearches,\n  recentSearchTermRemoved,\n  recentSearchTermSelected,\n} from './discoverSlice';\nimport PostsList from './PostsList';\nimport {LinearGradient} from \"expo-linear-gradient\";\nimport {CurrentTermLabel} from \"../classPages/ClassesList\";\n\nexport default function SearchPage({ navigation }) {\n  const dispatch = useAppDispatch();\n\n  const searchTerm = useAppSelector(selectSearchTerm);\n  const tag = useAppSelector(selectTag);\n  const submittedSearchTerm = useAppSelector(selectSubmittedSearchTerm);\n  const recentSearches = useAppSelector(selectRecentSearches);\n\n  const inputRef = useRef<Input>(null);\n\n  const darkMode = useAppSelector(selectDarkMode);\n  const theme = useTheme();\n\n  useEffect(() => {\n    inputRef.current?.focus();\n  }, []);\n\n  const onSubmitEditing = async () => {\n    dispatch(searchTermSubmitted(searchTerm));\n  };\n\n  const onChangeText = (text: string) => {\n    dispatch(searchTermChanged(text));\n  };\n\n  const handleRemoveRecentSearch = (searchTerm: string) => {\n    dispatch(recentSearchTermRemoved(searchTerm));\n  };\n\n  const handleClickRecentSearch = (searchTerm: string) => {\n    dispatch(recentSearchTermSelected(searchTerm));\n  };\n\n  let searchBarBackgroundColor = '';\n  if (darkMode) {\n    searchBarBackgroundColor = theme['color-basic-800'];\n  } else {\n    searchBarBackgroundColor = theme['color-basic-100'];\n  }\n\n  return (\n    <Layout style={{ flex: 1 }}>\n      <Layout level=\"2\" style={{ paddingBottom: 15 }}>\n        <Header\n          level=\"2\"\n          center={\n            <Layout\n              level=\"2\"\n              style={{ flex: 1, backgroundColor: 'transparent' }}>\n              <SearchBar\n                inputRef={inputRef}\n                inputStyle={{\n                  opacity: 1,\n                  backgroundColor: searchBarBackgroundColor,\n                }}\n                searchTerm={searchTerm}\n                onChangeText={onChangeText}\n                onSubmitEditing={onSubmitEditing}\n                placeholder=\"Search Posts...\"\n                cancelButtonAction={() => navigation.goBack()}\n                cancelButtonStatus=\"basic\"\n                alwaysShowCancelButton\n              />\n            </Layout>\n          }\n          title=\"\"\n        />\n      </Layout>\n      <PostsList\n        navigation={navigation}\n        tag={tag}\n        searchTerm={submittedSearchTerm}\n        recentSearches={recentSearches}\n        handleRemoveRecentSearch={handleRemoveRecentSearch}\n        handleClickRecentSearch={handleClickRecentSearch}\n        sponsor={true}\n      />\n    </Layout>\n  );\n}\n","import { ScrollView, View, Text } from 'react-native';\nimport React from 'react';\nimport { Button, useTheme } from '@ui-kitten/components';\nimport { Feather } from '@expo/vector-icons';\nimport { FontAwesome5 } from '@expo/vector-icons';\n\nexport default function Menu({ menuItems, setMenuItems }) {\n  const theme = useTheme();\n\n  return (\n    <View style={{ marginVertical: 10 }}>\n      <ScrollView\n        showsHorizontalScrollIndicator={false}\n        horizontal={true}\n        style={{ flexDirection: 'row' }}>\n        {Object.entries(menuItems).map(([name, value]: any[], index) => {\n          if (!value.selected) {\n            return (\n              <Button\n                onPress={() => {\n                  setMenuItems({\n                    ...menuItems,\n                    [name]: { selected: !value.selected },\n                  });\n                }}\n                status={value.selected ? 'info' : 'primary'}\n                style={{\n                  height: 45,\n                  marginHorizontal: 10,\n                  borderRadius: 20,\n                  backgroundColor: `rgba(${theme['color-success-500']}, ${1 - 0.03 * index})`,\n                  borderColor: `rgba(${theme['color-success-500']}, ${1 - 0.03 * index})`,\n                }}\n                key={index}>\n                <View\n                  style={{ alignItems: 'center', justifyContent: 'center' }}>\n                  <Text style={{ color: 'white' }}>\n                    {name}\n                    {value.selected && (\n                      <Text>\n                        {`    `}\n                        <Feather name=\"x\" size={15} />\n                      </Text>\n                    )}\n                  </Text>\n                </View>\n              </Button>\n            );\n          }\n        })}\n      </ScrollView>\n      <ScrollView\n        showsHorizontalScrollIndicator={false}\n        horizontal={true}\n        style={{ flexDirection: 'row', marginTop: 3, marginLeft: 8 }}>\n        {Object.entries(menuItems).map(([name, value] : any[], index) => {\n          if (value.selected) {\n            return (\n              <Button\n                accessoryRight={\n                  <FontAwesome5 name=\"times\" size={14} color=\"white\" />\n                }\n                onPress={() => {\n                  setMenuItems({\n                    ...menuItems,\n                    [name]: { selected: !value.selected },\n                  });\n                }}\n                style={{\n                  height: 45,\n                  marginHorizontal: 2,\n                  borderRadius: 20,\n                  backgroundColor: theme['color-success-500'],\n                  borderColor: theme['color-success-500'],\n                }}\n                key={index}>\n                <View\n                  style={{ alignItems: 'center', justifyContent: 'center' }}>\n                  <Text style={{ color: 'white' }}>{name}</Text>\n                </View>\n              </Button>\n            );\n          }\n        })}\n      </ScrollView>\n    </View>\n  );\n}\n","import { apiSlice } from './apiSlice';\n\nexport const sponsorsApiSlice = apiSlice.injectEndpoints({\n  overrideExisting: true,\n  endpoints: (builder) => ({\n    refreshSponsors: builder.query({\n      query: (userKey) => ({\n        url: '/sponsors',\n        headers: {\n          userKey,\n        },\n      }),\n      transformResponse: (sponsors: any[]) => {\n        sponsors = sponsors.sort(function (a, b) {\n          const textA = a.sponsorName.toUpperCase();\n          const textB = b.sponsorName.toUpperCase();\n          return textA < textB ? 1 : textA > textB ? -1 : 0;\n        });\n\n        return [\n          sponsors.find((sponsor) => sponsor.sponsorName === \"Big Mo's\"),\n          ...sponsors.filter((sponsor) => sponsor.sponsorName !== \"Big Mo's\"),\n        ];\n      },\n    }),\n    postSponsorVisit: builder.mutation({\n      query: ({ userKey, sponsorId }) => ({\n        url: '/analytics/sponsor/ping',\n        method: 'POST',\n        headers: {\n          userKey,\n        },\n        body: {\n          sponsorId,\n        },\n        responseHandler: (response) => response.text(),\n      }),\n    }),\n  }),\n});\n\nexport const { useLazyRefreshSponsorsQuery, usePostSponsorVisitMutation } =\n  sponsorsApiSlice;\n","import React, { useEffect, useState } from 'react';\nimport {\n  StyleSheet,\n  Image,\n  TouchableOpacity,\n  SafeAreaView,\n  ScrollView,\n  Linking,\n  View,\n  Text,\n  Platform,\n  Dimensions,\n} from 'react-native';\nimport { FontAwesome5 } from '@expo/vector-icons';\n\nimport _ from 'lodash';\nimport { useAppSelector } from '../../app/hooks';\nimport { selectDarkMode, selectUserKey } from '../../app/appDataSlice';\nimport Menu from '../../components/Menu';\nimport {\n  useLazyRefreshSponsorsQuery,\n  usePostSponsorVisitMutation,\n} from '../api/sponsorsApi';\nimport { Layout } from '@ui-kitten/components';\n\nconst windowWidth = Dimensions.get('window').width;\n\nexport const SponsorPage = ({\n  route: {\n    params: { data },\n  },\n}) => {\n  const isDarkMode = useAppSelector(selectDarkMode);\n  const sponsorPageStyles = StyleSheet.create({\n    container: {\n      flex: 1,\n    },\n    header: {\n      marginTop: 20,\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '100%',\n    },\n    address: {\n      color: isDarkMode ? 'white' : 'black',\n      alignItems: 'center',\n      margin: 10,\n      borderColor: 'black',\n      borderWidth: 1,\n      padding: 10,\n    },\n    video: {\n      marginTop: 20,\n      display: 'flex',\n      justifyContent: 'flex-start',\n    },\n    title: {\n      color: isDarkMode ? 'white' : 'black',\n      fontSize: 26,\n      marginLeft: 10,\n    },\n    subtitle: {\n      color: isDarkMode ? 'white' : 'black',\n      fontSize: 14,\n      justifyContent: 'center',\n    },\n    logo: {\n      width: '100%',\n      height: 100,\n    },\n    description: {\n      borderWidth: 1,\n      margin: 10,\n      borderColor: '#F1E4B5',\n      borderRadius: 5,\n      width: '95%',\n      padding: 10,\n      //backgroundColor: '#F9F9F9',\n    },\n    couponContainer: {\n      width: '100%',\n      justifyContent: 'center',\n      alignItems: 'center',\n      marginTop: 20,\n      marginBottom: 20,\n    },\n    coupon: {\n      width: 400,\n      height: 267,\n    },\n    imageGallery: {\n      justifyContent: 'center',\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      margin: 10,\n      marginBottom: 0,\n    },\n    imageStyle: {\n      width: 150,\n      height: 150,\n      paddingTop: 100,\n      margin: 5,\n    },\n    headerText: {\n      color: isDarkMode ? 'white' : 'black',\n      fontSize: 20,\n      fontWeight: 'bold',\n    },\n  });\n  const [imageIndex, setImageIndex] = useState(0);\n  const [visible, setIsVisible] = useState(false);\n  const [canOpenLink, setCanOpenLink] = useState(false);\n\n  const [postSponsorVisitQuery] = usePostSponsorVisitMutation();\n\n  const userKey = useAppSelector(selectUserKey);\n\n  const videoLinkArray = data.videoLink && data.videoLink.split('/');\n  const videoLink = data.videoLink && videoLinkArray[videoLinkArray.length - 1];\n\n  function getSubtitle() {\n    if (data.phoneNumber && data.email) {\n      return data.phoneNumber + ' \\u2022 ' + data.email;\n    } else if (data.phoneNumber) {\n      return data.phoneNumber;\n    } else if (data.email) {\n      return data.email;\n    } else {\n      return null;\n    }\n  }\n\n  const postSponsorVisit = async () => {\n    try {\n      await postSponsorVisitQuery({ userKey, sponsorId: data._id }).unwrap();\n    } catch (e) {\n      console.warn('Error posting sponsor visit: ', e);\n    }\n  };\n\n  useEffect(() => {\n    const funct = async () => {\n      setCanOpenLink(await Linking.canOpenURL(data.website));\n      postSponsorVisit();\n    };\n    funct();\n  }, []);\n\n  function renderWebsiteLink() {\n    if (canOpenLink) {\n      return (\n        <View>\n          <TouchableOpacity\n            onPress={() => {\n              Linking.openURL(data.website);\n            }}\n            style={{\n              display: 'flex',\n              flexDirection: 'row',\n              alignItems: 'center',\n            }}>\n            <Text\n              style={{\n                fontSize: 15,\n                color: isDarkMode ? '#6b7ee5' : '#4b5dc7',\n                paddingRight: 5,\n              }}>\n              Check Out Our Website!\n            </Text>\n            <FontAwesome5 name=\"link\" size={15} color=\"#4b5dc7\" />\n          </TouchableOpacity>\n        </View>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  return (\n    <Layout style={{ flex: 1 }}>\n      <ScrollView>\n        <Layout style={sponsorPageStyles.container}>\n          <View style={sponsorPageStyles.header}>\n            <Image\n              resizeMode=\"contain\"\n              style={sponsorPageStyles.logo}\n              source={{ uri: data.logo }}\n            />\n          </View>\n          <View\n            style={{ width: '100%', display: 'flex', alignItems: 'center' }}>\n            <Text style={sponsorPageStyles.title}>{data.sponsorName}</Text>\n            <Text style={sponsorPageStyles.subtitle}>{getSubtitle()}</Text>\n          </View>\n\n          {data.location && (\n            <View style={sponsorPageStyles.address}>\n              <Text\n                style={{ fontSize: 18, color: isDarkMode ? 'white' : 'black' }}>\n                {data.location}\n              </Text>\n            </View>\n          )}\n\n          <View\n            style={{ width: '100%', display: 'flex', alignItems: 'center' }}>\n            {renderWebsiteLink()}\n          </View>\n\n          <Layout style={sponsorPageStyles.description}>\n            <Text\n              style={{ fontSize: 17, color: isDarkMode ? 'white' : 'black' }}>\n              {data.description}\n            </Text>\n          </Layout>\n          <View\n            style={{\n              width: '100%',\n              alignSelf: 'flex-start',\n              marginLeft: 20,\n              borderBottomColor: '#F1E4B5',\n              borderBottomWidth: 2,\n              paddingBottom: 5,\n            }}>\n            <Text style={sponsorPageStyles.headerText}>Image Gallery</Text>\n          </View>\n\n          <View style={sponsorPageStyles.imageGallery}>\n            {data.images.map((img, index) => {\n              return (\n                <TouchableOpacity\n                  onPress={() => {\n                    setImageIndex(index);\n                    setIsVisible(true);\n                  }}>\n                  <Image\n                    style={sponsorPageStyles.imageStyle}\n                    source={{ uri: img }}\n                  />\n                </TouchableOpacity>\n              );\n            })}\n          </View>\n\n          {data.coupons[0] && (\n            <Layout style={sponsorPageStyles.couponContainer}>\n              <Image\n                resizeMode={'contain'}\n                source={require('../../../assets/sponsorPage/coupon.png')}\n                style={sponsorPageStyles.coupon}\n              />\n              <Text\n                style={{\n                  position: 'absolute',\n                  fontSize: 30,\n                  textAlign: 'center',\n                  justifyContent: 'center',\n                  width: '75%',\n                  paddingBottom: 20,\n                  paddingRight: 7,\n                }}>\n                {data.coupons[0].couponDescription}\n              </Text>\n              <Text\n                style={{ fontSize: 15, color: isDarkMode ? 'white' : 'black' }}>\n                Show this coupon at the store to redeem.\n              </Text>\n            </Layout>\n          )}\n\n          <View\n            style={{\n              width: '100%',\n              alignSelf: 'flex-start',\n              marginLeft: 20,\n              borderBottomColor: '#F1E4B5',\n              borderBottomWidth: 2,\n              paddingBottom: 5,\n            }}>\n            <Text style={sponsorPageStyles.headerText}>Hours</Text>\n          </View>\n          <View\n            style={{\n              justifyContent: 'center',\n              alignSelf: 'center',\n              marginLeft: 25,\n              marginBottom: 50,\n            }}>\n            {data.hours.map((day, i) => {\n              return (\n                <Layout\n                  key={i}\n                  style={{\n                    justifyContent: 'space-between',\n                    flexDirection: 'row',\n                    width: '100%',\n                  }}>\n                  <Text\n                    style={{\n                      marginTop: 10,\n                      color: isDarkMode ? 'white' : 'black',\n                    }}>\n                    {day.dayOfTheWeek}:\n                  </Text>\n                  <Text\n                    style={{\n                      alignSelf: 'flex-end',\n                      paddingRight: 30,\n                      marginTop: 10,\n                      color: isDarkMode ? 'white' : 'black',\n                    }}>\n                    {buildTimeString(day)}\n                  </Text>\n                </Layout>\n              );\n            })}\n          </View>\n        </Layout>\n      </ScrollView>\n    </Layout>\n  );\n};\n\nfunction buildTimeString(time) {\n  if (!time.openTime || time.openTime === '' || time.openTime === null) {\n    return 'closed';\n  }\n  return (\n    convertTo12HourTime(time.openTime) +\n    ' - ' +\n    convertTo12HourTime(time.closeTime)\n  );\n}\n\nfunction convertTo12HourTime(time) {\n  if (time.length !== 5) {\n    time = '0' + time;\n  }\n  let hours = time.slice(0, 2);\n  let minutes = time.slice(3, 5);\n  let ampm = Number.parseInt(hours) > 12 ? 'pm' : 'am';\n  hours = hours % 12;\n  if (hours === 0) {\n    hours = 12;\n    ampm = 'pm';\n  }\n  return hours + ':' + minutes + ampm;\n}\n\nexport function SponsorsList({ navigation }) {\n  const isDarkMode = useAppSelector(selectDarkMode);\n  const [sponsorFilters, setSponsorFilters] = useState({});\n  const [gotSponsors, setGotSponsors] = useState(false);\n  const userKey = useAppSelector(selectUserKey);\n  const [refreshSponsorsQuery, { data: sponsors }] =\n    useLazyRefreshSponsorsQuery();\n\n  if (!gotSponsors) {\n    setGotSponsors(true);\n    refreshSponsors();\n  }\n\n  useEffect(() => {\n    if (sponsors?.length > 0) {\n      getFilters();\n    }\n  }, [sponsors]);\n\n  async function refreshSponsors() {\n    try {\n      await refreshSponsorsQuery(userKey).unwrap();\n    } catch (e) {\n      console.warn('Error refreshing sponsors: ', e);\n    }\n  }\n\n  function getFilters() {\n    let tabNames = [];\n    let final = [];\n    for (const sponsor of sponsors) {\n      if (sponsor.tags !== undefined) {\n        for (const name of sponsor.tags) {\n          if (!tabNames.includes(name)) {\n            tabNames.push(name);\n          }\n        }\n      }\n    }\n    tabNames = tabNames.sort();\n\n    // Puts 'Other' at the end\n    const temp = tabNames.includes('Other')\n      ? tabNames.findIndex((item) => item === 'Other')\n      : -1;\n    if (temp !== -1) {\n      tabNames.splice(temp, 1);\n    }\n    tabNames.push('Other');\n\n    let tempFilters = {};\n    for (const name of tabNames) {\n      tempFilters[name] = {\n        selected: false,\n      };\n    }\n    setSponsorFilters(tempFilters);\n  }\n\n  function renderSponsorsBasedOnFilters() {\n    let shouldLimitPrint = false;\n    for (const filterName in sponsorFilters) {\n      if (sponsorFilters[filterName].selected) {\n        shouldLimitPrint = true;\n        break;\n      }\n    }\n    if (!shouldLimitPrint) {\n      return getTheSponsors(sponsors || [], navigation);\n    } else {\n      let sponsorsToSend = [];\n      for (const filterName in sponsorFilters) {\n        if (sponsorFilters[filterName].selected) {\n          for (const sponsor of sponsors) {\n            if (sponsor.tags.includes(filterName)) {\n              sponsorsToSend.push(sponsor);\n            }\n          }\n        }\n      }\n      return getTheSponsors(sponsorsToSend || [], navigation);\n    }\n  }\n\n  return (\n    <Layout style={{ flex: 1 }}>\n      <Menu\n        setMenuItems={setSponsorFilters}\n        menuItems={Object.keys(sponsorFilters).length > 0}\n      />\n      <ScrollView\n        showsVerticalScrollIndicator={false}\n        contentContainerStyle={{ alignItems: 'center' }}>\n        {sponsors?.length === 0 ? (\n          <Text>Nothing to see here</Text>\n        ) : (\n          renderSponsorsBasedOnFilters()\n        )}\n      </ScrollView>\n    </Layout>\n  );\n}\n\nfunction getTheSponsors(sponsors, navigation) {\n  const isDarkMode = useAppSelector(selectDarkMode);\n  const listingStyles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n    },\n    cardContainer: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      width: '100%',\n      maxWidth: windowWidth / 2,\n      height: 130,\n      backgroundColor: isDarkMode ? '#464646' : '#fff',\n      borderRadius: 10,\n      borderWidth: 1,\n      borderColor: isDarkMode ? '#818181' : '#ddd',\n      borderBottomWidth: isDarkMode ? 1 : 0,\n      shadowColor: '#000',\n      shadowOffset: { width: 0, height: 2 },\n      shadowOpacity: 0.2,\n      shadowRadius: 2,\n      elevation: 1,\n      marginLeft: 5,\n      marginRight: 5,\n      marginTop: 10,\n    },\n    text: {\n      flex: 1,\n      color: isDarkMode ? 'white' : 'black',\n      fontSize: 20,\n      textAlign: 'center',\n      marginTop: 5,\n      marginBottom: 5,\n    },\n    image: {\n      width: 120,\n      height: 120,\n      marginLeft: 10,\n      borderRadius: 10,\n    },\n  });\n  if (sponsors.length === 0) {\n    return;\n  }\n  let final = [];\n  let starredFinal = [];\n  for (const sponsor of sponsors) {\n    if (sponsor.coupons && sponsor.coupons.length > 0) {\n      starredFinal.push(\n        <TouchableOpacity\n          onPress={() => {\n            navigation.navigate('SponsorPage', { data: sponsor });\n          }}\n          style={listingStyles.cardContainer}\n          key={sponsor._id}>\n          {sponsor.coupons?.length ? (\n            <FontAwesome5\n              name=\"star\"\n              color={'gold'}\n              style={{\n                alignSelf: 'flex-start',\n                top: 5,\n                left: 5,\n              }}\n            />\n          ) : null}\n\n          <View style={{ flex: 1 }}>\n            <Image\n              resizeMode={'contain'}\n              style={listingStyles.image}\n              source={{ uri: sponsor.logo }}\n            />\n          </View>\n\n          <Text style={listingStyles.text}>{sponsor.sponsorName}</Text>\n        </TouchableOpacity>\n      );\n    } else {\n      final.push(\n        <TouchableOpacity\n          onPress={() => {\n            navigation.navigate('SponsorPage', { data: sponsor });\n          }}\n          style={listingStyles.cardContainer}\n          key={sponsor._id}>\n          {sponsor.coupons?.length ? (\n            <FontAwesome5\n              name=\"star\"\n              color={'gold'}\n              style={{\n                position: 'absolute',\n                alignSelf: 'flex-start',\n                top: 5,\n                left: 5,\n              }}\n            />\n          ) : null}\n\n          <View style={{ flex: 1 }}>\n            <Image\n              resizeMode={'contain'}\n              style={listingStyles.image}\n              source={{ uri: sponsor.logo }}\n            />\n          </View>\n\n          <Text style={listingStyles.text}>{sponsor.sponsorName}</Text>\n        </TouchableOpacity>\n      );\n    }\n  }\n  for (const object of final) {\n    starredFinal.push(object);\n  }\n  return starredFinal;\n}\n","import { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport {\n    Image,\n    Platform,\n    TouchableOpacity,\n    TouchableWithoutFeedback,\n} from 'react-native';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport Header from '../../components/Header';\nimport PostsList from './PostsList';\nimport SinglePost from './SinglePost/SinglePostPage';\nimport { Divider, Layout, Text, useTheme } from '@ui-kitten/components';\nimport CreatePost from './CreatePost/CreatePost';\nimport SearchBar from '../../components/SearchBar';\nimport React, { useState } from 'react';\nimport { selectDarkMode } from '../../app/appDataSlice';\nimport { useAppSelector } from '../../app/hooks';\nimport SearchPage from './SearchPage';\nimport { SponsorPage } from '../sponsors/SponsorsList';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function Discover({ navigation }) {\n  const theme = useTheme();\n  const darkMode = useAppSelector(selectDarkMode);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const accessoryRight = (\n    <TouchableOpacity onPress={() => navigation.navigate('CreatePost')}>\n      <FontAwesome5 name=\"plus\" size={23} color={theme['color-primary-500']} />\n    </TouchableOpacity>\n  );\n\n  const accessoryLeft = (\n      <Image\n          style={{\n              height: 28,\n              width: 28,\n          }}\n          source={require('../../../assets/logos/app-logo-transparent.png')}\n      />\n  )\n\n  let searchBarBackgroundColor = '';\n  if (darkMode) {\n    searchBarBackgroundColor = theme['color-basic-800'];\n  } else {\n    searchBarBackgroundColor = theme['color-basic-100'];\n  }\n\n  return (\n    <Stack.Navigator>\n      <Stack.Screen\n        name=\"PostsList\"\n        initialParams={{ sponsor: true }}\n        component={PostsList}\n        options={{\n          title: 'Discover',\n          header: () => (\n            <Layout level=\"2\" style={{ paddingBottom: 15 }}>\n              <Header\n                level=\"2\"\n                title=\"Discover\"\n                accessoryLeft={accessoryLeft}\n                accessoryRight={accessoryRight}\n                center={\n                  <Layout level=\"2\" style={{ flex: 1, marginHorizontal: 10 }}>\n                    {Platform.OS === 'ios' ? (\n                      <SearchBar\n                        inputStyle={{\n                          opacity: 0.8,\n                          backgroundColor: searchBarBackgroundColor,\n                        }}\n                        searchTerm={searchTerm}\n                        onChangeText={setSearchTerm}\n                        placeholder=\"Search Posts...\"\n                        inputProps={{\n                          disabled: true,\n                          onPressIn: () => {\n                            navigation.navigate('SearchPage');\n                          },\n\n                          onBlur: () => {\n                            navigation.goBack();\n                          },\n                        }}\n                      />\n                    ) : (\n                      <Layout\n                        style={{\n                          minHeight: 35,\n                          paddingLeft: 15,\n                          borderRadius: 20,\n                          flex: 1,\n                          borderWidth: 1,\n                          borderColor: darkMode\n                            ? theme['color-basic-500']\n                            : theme['color-basic-100'],\n                          justifyContent: 'center',\n                        }}>\n                        <TouchableWithoutFeedback\n                          onPress={() => {\n                            navigation.navigate('SearchPage');\n                          }}>\n                          <Text\n                            style={{\n                              color: theme['color-basic-400'],\n                              fontSize: 14,\n                            }}>\n                            Search Posts...\n                          </Text>\n                        </TouchableWithoutFeedback>\n                      </Layout>\n                    )}\n                  </Layout>\n                }\n              />\n            </Layout>\n          ),\n        }}\n      />\n      <Stack.Screen\n        name=\"CreatePost\"\n        component={CreatePost}\n        options={{ headerTitle: 'Create a Post' }}\n      />\n      <Stack.Screen\n        name=\"SinglePost\"\n        component={SinglePost}\n        options={{\n          headerTitle: '',\n          title: 'Discover',\n        }}\n      />\n      <Stack.Screen\n        name=\"SearchPage\"\n        component={SearchPage}\n        options={{ headerShown: false, animation: 'fade', title: 'Discover' }}\n      />\n      <Stack.Screen\n        name=\"SponsorPageDiscover\"\n        component={SponsorPage}\n        options={{ headerTitle: '', title: 'Discover' }}\n      />\n    </Stack.Navigator>\n  );\n}\n","import {\n    Keyboard,\n    KeyboardAvoidingView,\n    Platform,\n    Text,\n    TouchableOpacity,\n    TouchableWithoutFeedback,\n    View\n} from 'react-native'\nimport React, {useEffect, useMemo, useState} from 'react'\nimport {\n    Button,\n    CheckBox,\n    Divider,\n    Input,\n    Layout,\n    NativeDateService,\n    Select,\n    SelectItem\n} from \"@ui-kitten/components\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport WrapItems from \"../../components/WrapItems\";\nimport {AntDesign} from \"@expo/vector-icons\";\nimport CreateImage from \"../discover/CreatePost/CreateImagePost\";\nimport {base_URL} from \"../notifications/constants\";\nimport {useEditUserMutation, useGetUserInfoQuery} from \"../api/usersApi\";\nimport {useAppSelector} from \"../../app/hooks\";\nimport {selectUserKey} from \"../../app/appDataSlice\";\nimport {useNavigation} from \"@react-navigation/native\";\nimport Toast from \"react-native-root-toast\";\nimport {SafeAreaView} from \"react-native-safe-area-context\";\nimport {KeyboardAwareView} from \"react-native-keyboard-aware-view\";\nimport {useAddClassMutation} from \"../api/classPagesApi\";\nimport Loader from \"react-native-three-dots-loader\";\n\nexport default function CreateCustomEvent() {\n    const [editUser] = useEditUserMutation();\n    const [ showDots, setShowDots ] = useState(false)\n    const navigation = useNavigation()\n    const dateToUse = new Date()\n    const [selectedDate, setSelectedDate] = useState(dateToUse)\n    const [ isOneDay, setIsOneDay ] = useState(false)\n    const [ allValuesPopulated, setAllValuesPopulated ] = useState(false)\n    const [ selectedIndex, setSelectedIndex ] = useState([]);\n    const [daysArray, setDaysArray] = useState([])\n    const [startTime, setStartTime] = useState(new Date())\n    const [endTime, setEndTime] = useState(new Date())\n    const [eventTitle, setEventTitle] = useState('')\n    const userKey = useAppSelector(selectUserKey)\n    const {data: userData} = useGetUserInfoQuery(userKey, {\n        skip: !userKey,\n    });\n\n    const daysOfWeek = [\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday',\n        'Sunday'\n    ]\n\n    useEffect(() => {\n        setAllValuesPopulated(\n            (isOneDay ? selectedDate.toISOString() !== (dateToUse).toISOString() : daysArray.length >= 1) &&\n            eventTitle !== '' &&\n            startTime < endTime\n        )\n    }, [daysArray, eventTitle, startTime, endTime, selectedDate, isOneDay])\n\n    function addEvent() {\n        setShowDots(true)\n        editUser({\n            userKey,\n            userName: userData.userName,\n            fields: JSON.stringify({\n                \"addCustomEvent\": {\n                    \"name\": eventTitle,\n                    \"startTime\": startTime.toTimeString().slice(0, 5),\n                    \"endTime\": endTime.toTimeString().slice(0, 5),\n                    \"days\": daysArray,\n                    \"date\": selectedDate.toISOString() !== dateToUse.toISOString() ? selectedDate.toISOString() : null\n                },\n            })\n        }).unwrap().then(async () => {\n            setTimeout(() => {\n                setShowDots(false)\n                navigation.goBack()\n            }, 2000)\n        }).catch(() => {\n            setShowDots(false)\n            Toast.show(\n                \"Failed to add event.\\nPlease try again later\",\n                {\n                    duration: Toast.durations.LONG,\n                    opacity: 1,\n                    position: -100,\n                    backgroundColor: 'grey',\n                    shadow: false,\n                }\n            );\n        })\n        /*\n        fetch(base_URL + '/users/' + userData.userName, {\n            method: 'PATCH',\n            body: JSON.stringify({\n                \"addCustomEvent\": {\n                    \"name\": eventTitle,\n                    \"startTime\": startTime.toTimeString().slice(0, 5),\n                    \"endTime\": endTime.toTimeString().slice(0, 5),\n                    \"days\": daysArray\n                },\n            }),\n            headers: {\n                'content-type': 'application/json',\n                userKey: userKey\n            }\n        }).then((res) => {\n            if (res.ok) {\n                navigation.goBack()\n            } else {\n                Toast.show(\n                    \"Failed to add event\\nStatus: \" + res.status,\n                    {\n                        duration: Toast.durations.LONG,\n                        opacity: 1,\n                        position: -100,\n                        backgroundColor: 'grey',\n                        shadow: false,\n                    }\n                );\n            }\n        })*/\n    }\n\n    // Needed because Android date picker uses a modal\n    const [showTimePickerAndroid, setShowTimePickerAndroid] = useState(false);\n\n    const timePickerOptions = useMemo(\n        () => ({\n            'Start Time': { time: startTime, setTime: setStartTime },\n            'End Time': { time: endTime, setTime: setEndTime },\n        }),\n        [startTime, setStartTime, endTime, setEndTime]\n    );\n\n    const formatAMPM = (date: Date) => {\n        let hours = date.getHours()\n        let minutes: string | number = date.getMinutes()\n        const ampm = hours >= 12 ? 'pm' : 'am';\n        hours = hours % 12;\n        hours = hours ? hours : 12;\n        minutes = minutes < 10 ? '0' + minutes : minutes;\n        return hours + ':' + minutes + ' ' + ampm;\n    };\n\n    const Title = (\n        <Layout\n            style={{\n                flexDirection: 'row',\n                justifyContent: 'space-evenly',\n                alignItems: 'center',\n                marginTop: 15,\n            }}>\n            <Input\n                label=\"Title\"\n                disabled={showDots}\n                placeholder=\"Title of Event\"\n                value={eventTitle}\n                style={{ flex: 5 }}\n                onChangeText={(title) => {\n                    setEventTitle(title)\n                }}\n            />\n        </Layout>\n    );\n\n    const TimePicker = () => {\n        if (Platform.OS === 'android') {\n            return (\n                <Layout\n                    style={{\n                        flexDirection: 'row',\n                        justifyContent: 'space-around',\n                    }}>\n                    {Object.entries(timePickerOptions).map(\n                        ([label, { time, setTime }], i) => (\n                            <Layout key={i} style={{ alignItems: 'center' }}>\n                                <Text category=\"label\" style={{ marginBottom: 5 }}>\n                                    {label}\n                                </Text>\n                                <Button\n                                    onPress={() => {\n                                        setShowTimePickerAndroid(true);\n                                    }}>\n                                    {formatAMPM(time)}\n                                </Button>\n                                {showTimePickerAndroid && (\n                                    <DateTimePicker\n                                        mode=\"time\"\n                                        onChange={(change, date) => {\n                                            setTime(date);\n                                            setShowTimePickerAndroid(false);\n                                        }}\n                                        value={time}\n                                    />\n                                )}\n                            </Layout>\n                        )\n                    )}\n                </Layout>\n            );\n        }\n        if (Platform.OS === 'ios') {\n            return (\n                <Layout\n                    style={{\n                        flexDirection: 'row',\n                        justifyContent: 'space-around',\n                    }}>\n                    {Object.entries(timePickerOptions).map(\n                        ([label, { time, setTime }], i) => (\n                            <Layout key={i} style={{ alignItems: 'center' }}>\n                                <Text category=\"label\" style={{ marginBottom: 5 }}>\n                                    {label}\n                                </Text>\n\n                                <DateTimePicker\n                                    mode=\"time\"\n                                    onChange={(change, date) => {\n                                        setTime(date);\n                                    }}\n                                    value={time}\n                                />\n                            </Layout>\n                        )\n                    )}\n                </Layout>\n            );\n        }\n    };\n\n    if (Platform.OS === 'web') {\n        return (\n            <Text>\n                Creating Events is not supported on the web. Download the app on\n                the App Store or Play Store to make a new Event.\n            </Text>\n        );\n    }\n\n    const renderMultiSelectDropDown = () => {\n        function renderEachDropItem() {\n            const final = []\n            for (const option of daysOfWeek) {\n                final.push(\n                    <SelectItem title={option}/>\n                )\n            }\n            return final\n        }\n        function toggleValue(index) {\n            setSelectedIndex(index)\n            const newSelection = index.map((littleIndex) => {\n                return daysOfWeek[littleIndex - 1]\n            })\n            setDaysArray(newSelection)\n        }\n        function calculateSelectedValues() {\n            let finalArray = selectedIndex.map((littleIndex) => {\n                return daysOfWeek[littleIndex - 1] + ', '\n            })\n            if (finalArray.length > 0){\n                let finalObject = finalArray.at(-1)\n                finalObject = finalObject.replace(', ', '')\n                finalArray.splice(-1, 1)\n                finalArray.push(finalObject)\n                return finalArray\n            }\n        }\n        return (\n            <Layout style={{\n                flexDirection: 'row',\n                justifyContent: 'space-evenly',\n                alignItems: 'center',\n                marginTop: 15,\n            }} level='1'>\n                <Select\n                    style={{flex: 5}}\n                    multiSelect={true}\n                    label={'Days'}\n                    disabled={showDots}\n                    value={daysArray.length > 0 ? calculateSelectedValues() : null}\n                    selectedIndex={selectedIndex}\n                    onSelect={index => toggleValue(index)}>\n                    {renderEachDropItem()}\n                </Select>\n            </Layout>\n        );\n    }\n\n    return (\n        <Layout style={{flex: 1}}>\n            <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n                <WrapItems childStyle={{ marginVertical: 10, marginHorizontal: 15 }}>\n                    {Title}\n                    <TimePicker />\n                    <CheckBox\n                        style={{alignSelf: 'center', marginTop: 20}}\n                        checked={isOneDay}\n                        onChange={(nextChecked) => {\n                            setDaysArray([])\n                            setSelectedIndex([])\n                            setSelectedDate(dateToUse)\n                            setIsOneDay(nextChecked)\n                        }}>\n                        One Time Event\n                    </CheckBox>\n                    {isOneDay ?\n                        <DateTimePicker\n                            testID=\"datePicker\"\n                            value={selectedDate}\n                            mode={'date'}\n                            style={{alignSelf: 'center', marginVertical: 15}}\n                            onChange={(event, date) => setSelectedDate(date)}\n                        /> : renderMultiSelectDropDown()}\n                    <TouchableOpacity\n                        style={{backgroundColor: allValuesPopulated ? \"#a245ee\" : \"rgba(162,69,238,0.34)\",\n                            width: \"35%\",\n                            alignSelf: 'center',\n                            height: 45,\n                            borderRadius: 3,\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                        }}\n                        onPress={addEvent}\n                        disabled={!allValuesPopulated || showDots}\n                    >\n                        <View>\n                            <Text style={{ color: \"#f2f0f1\", fontSize: 15 }}>Create Event</Text>\n                        </View>\n                    </TouchableOpacity>\n                    {\n                        showDots && (\n                            <Loader style={{position: 'absolute', marginTop: '30%', marginHorizontal: 'auto'}}/>\n                        )\n                    }\n                </WrapItems>\n            </TouchableWithoutFeedback>\n        </Layout>\n    );\n}","import {useAppSelector} from \"../../app/hooks\";\nimport {selectClassesList} from \"../classPages/classPagesSlice\";\nimport {Class} from \"../../app/types\";\n\nexport default class CalendarFunctions{\n    convertTo12HourTime(time) {\n        if (time.length !== 5) {\n            time = '0' + time;\n        }\n        let hours = time.slice(0, 2);\n        let minutes = time.slice(3, 5);\n        let ampm = Number.parseInt(hours) > 12 ? 'pm' : 'am';\n        hours = hours % 12;\n        if (hours === 0) {\n            hours = 12;\n            ampm = 'pm';\n        }\n        return hours + ':' + minutes + ampm;\n    }\n\n    getColor(string: String) {\n        let final = 0\n        for (let charIndex = 0; charIndex < string.length; charIndex++) {\n            final += string.charCodeAt(charIndex)\n        }\n        final -= Number(final.toString()[0]) * (10 ** (final.toString().length - 1))\n        final = final / (10 ** final.toString().length)\n        return \"hsl(\" + (180 * final + 90) + ',' +\n            (30 + 65 * final) + '%,' +\n            (50 + 15 * final) + '%)'\n    }\n\n    stringToColour(str: String) {\n        return this.getColor(str)\n    };\n\n    getMinutesDiff(startTime, endTime, minuteHeight) {\n        if (endTime > startTime) {\n            return (endTime - startTime) * minuteHeight;\n        } else if (startTime === endTime) {\n            return 0;\n        } else {\n            return (startTime - endTime) * -minuteHeight;\n        }\n    }\n\n    getFullClassData(courseCode: String, allClassData: any): Class {\n        const APIdata = allClassData\n        const generalCourseCode = courseCode.split('-').slice(0, -1).join('-');\n        return APIdata[generalCourseCode];\n    };\n\n}","import {Alert, Dimensions, Text, TouchableOpacity, View} from \"react-native\";\nimport React from \"react\";\nimport CalendarFunctions from \"./CalendarFunctions\";\nimport {useAppSelector} from \"../../app/hooks\";\nimport {useRemoveClassMutation} from \"../api/classPagesApi\";\nimport Toast from \"react-native-root-toast\";\nimport {useEditUserMutation} from \"../api/usersApi\";\nimport {selectUserKey} from \"../../app/appDataSlice\";\n\n\nexport default function renderCustomEvent(event, userData, userKey, editUser) {\n    const universalHeight = (Dimensions.get('window').height - 50) / 12\n    const minuteHeight = universalHeight / 60\n    const calendarFun = new CalendarFunctions()\n    const [startHour, startMinute] = event.startTime.split(':');\n    const [endHour, endMinute] = event.endTime.split(':');\n    let color = calendarFun.stringToColour(event.name);\n\n    function removeEvent(event: any) {\n        editUser({\n            userKey,\n            userName: userData.userName,\n            fields: JSON.stringify({\n                \"removeCustomEvent\": {\n                    \"name\": event.name,\n                    \"startTime\": event.startTime,\n                    \"endTime\": event.endTime,\n                    \"days\": event.days\n                },\n            })\n        }).unwrap().catch(() => {\n            Toast.show(\n                \"Failed to remove event.\\nPlease try again later\",\n                {\n                    duration: Toast.durations.SHORT,\n                    opacity: 1,\n                    position: -100,\n                    backgroundColor: 'grey',\n                    shadow: false,\n                }\n            );\n        })\n    }\n\n\n    return (\n        <TouchableOpacity onLongPress={() => {\n                Alert.alert(\n                    event.name,\n                    calendarFun.convertTo12HourTime(event.startTime) +\n                    ' - ' +\n                    calendarFun.convertTo12HourTime(event.endTime),\n                    [\n                        {\n                            text: 'Remove',\n                            onPress: () => {\n                                removeEvent(event);\n                            },\n                        },\n                        {\n                            text: 'Back',\n                            onPress: () => {},\n                            style: 'cancel',\n                        },\n                    ],\n                    { cancelable: true }\n                )\n            }}\n            key={event.name + event.days}\n            style={{\n                backgroundColor: color,\n                top: (universalHeight * startHour) + (startMinute * minuteHeight),\n                height:\n                    universalHeight * (endHour - startHour) + calendarFun.getMinutesDiff(startMinute, endMinute, minuteHeight),\n                width: '100%',\n                position: 'absolute',\n                justifyContent: 'center',\n            }}>\n            <Text\n                adjustsFontSizeToFit={true}\n                numberOfLines={endHour - startHour + 2}\n                style={{ color: 'white', textAlign: 'center' }}>\n                {event.name}\n            </Text>\n        </TouchableOpacity>\n    );\n};","import { useNavigation } from '@react-navigation/native';\nimport {Alert, Dimensions, Text, TouchableOpacity, View} from 'react-native';\nimport React from 'react';\nimport { useAppSelector } from '../../app/hooks';\nimport CalendarFunctions from './CalendarFunctions';\nimport {\n  useGetCurrentSectionQuery,\n  useRemoveClassMutation,\n} from '../api/classPagesApi';\n\nexport default function renderItem(\n  masterClassInfo,\n  courseCode,\n  handleClassSelected = (string: string) => {}\n) {\n  const calendarFun = new CalendarFunctions();\n    const universalHeight = (Dimensions.get('window').height - 50) / 12\n    const minuteHeight = universalHeight / 60\n  const thisTime = masterClassInfo.times.find(\n    (course) => course.courseCode === courseCode\n  );\n\n  const [startHour, startMinute] = thisTime.startTime.split(':');\n  const [endHour, endMinute] = thisTime.endTime.split(':');\n  let color = calendarFun.stringToColour(masterClassInfo.masterCourseCode);\n  let code = courseCode.split(' ');\n  return (\n    <View\n      key={thisTime._id}\n      style={{\n        backgroundColor: color,\n        top: universalHeight * startHour + startMinute * minuteHeight,\n        height:\n          universalHeight * (endHour - startHour) +\n          calendarFun.getMinutesDiff(startMinute, endMinute, minuteHeight),\n        width: '100%',\n        position: 'absolute',\n        margin: 0,\n        justifyContent: 'center',\n      }}>\n      <TouchableOpacity\n        onPress={() => {\n          handleClassSelected(masterClassInfo.masterCourseCode);\n        }}\n        onLongPress={\n          () => {} /*{\n                    Alert.alert(\n                        courseCode,\n                        null,\n                        [\n                            {\n                                text: 'Delete',\n                                onPress: () => {\n\n                                },\n                            },\n                            {\n                                text: 'Cancel',\n                                onPress: () => console.log('Cancel Pressed'),\n                                style: 'cancel',\n                            },\n                        ],\n                        { cancelable: true }\n                    );\n                }*/\n        }>\n        <Text\n          adjustsFontSizeToFit\n          numberOfLines={5}\n          style={{\n            color: parseInt(color.slice(1), 16) > 9079434 ? 'black' : 'white',\n            fontSize: 11,\n            marginHorizontal: 3,\n            textAlign: 'center',\n          }}>\n          {code[0]} {code[1]}\n          {'\\n'}\n          {code[2]}\n          {thisTime.classLocation ? '\\n(' + thisTime.classLocation + ')' : null}\n        </Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n","import { Button, Icon, Layout, Text, useTheme } from '@ui-kitten/components';\nimport Modal from 'react-native-modal';\nimport { selectDarkMode } from '../app/appDataSlice';\nimport { useAppSelector } from '../app/hooks';\n\ntype ModalContainerProps = {\n  children: React.ReactNode;\n  backDropVisible: boolean;\n  setBackDropVisible: React.Dispatch<React.SetStateAction<boolean>>;\n  title: string;\n};\n\nexport default function ModalContainer({\n  children,\n  backDropVisible,\n  setBackDropVisible,\n  title,\n}: ModalContainerProps) {\n  const theme = useTheme();\n  const darkMode = useAppSelector(selectDarkMode);\n\n  return (\n    <Modal\n      backdropOpacity={0}\n      onBackdropPress={() => setBackDropVisible(false)}\n      isVisible={backDropVisible}\n      style={{\n        backgroundColor: darkMode\n          ? theme['color-basic-900']\n          : theme['color-basic-50'],\n        borderRadius: 20,\n        flex: 1,\n        marginTop: 300,\n        marginBottom: 50,\n        shadowColor: '#000',\n        shadowOffset: {\n          width: 0,\n          height: 12,\n        },\n        shadowOpacity: 0.58,\n        shadowRadius: 16.0,\n\n        elevation: 11,\n      }}>\n      <Layout\n        style={{\n          flex: 1,\n          alignItems: 'center',\n          borderRadius: 20,\n          backgroundColor: darkMode\n            ? theme['color-basic-900']\n            : theme['color-basic-100'],\n        }}>\n        <Button\n          appearance=\"ghost\"\n          style={{\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            flex: 1,\n            borderRadius: 20,\n          }}\n          accessoryRight={(props) => (\n            <Icon pack=\"fontAwesome\" name=\"angle-down\" {...props} />\n          )}\n          onPress={() => setBackDropVisible(false)}\n        />\n        <Text category=\"h5\" style={{ marginVertical: 15 }}>\n          {title}\n        </Text>\n        {children}\n      </Layout>\n    </Modal>\n  );\n}\n","import {apiSlice} from \"../api/apiSlice\";\n\nexport const base_URL = \"https://api.athenaserver.com:5678/api\"","import {useEffect, useState} from \"react\";\nimport {base_URL} from \"../features/notifications/constants\";\nimport {useAppSelector} from \"../app/hooks\";\nimport {selectDarkMode, selectUserKey} from \"../app/appDataSlice\";\nimport {Autocomplete, AutocompleteItem} from \"@ui-kitten/components\";\n\n/**\n * Renders a dropdown with the names filtered as user types\n * @param setHasChosen set function of a useState which contains a boolean determining whether a user has been chosen\n * @param setRecipient set function of a useState which contains is either: 1. a string containing the userName of the user when one has been chosen, 2. null when a user has not been chosen\n * @constructor\n */\nexport default function UserNameSelectionDropDown({setHasChosen, setRecipient, placeholder}) {\n    const userKey = useAppSelector(selectUserKey)\n    const darkMode = useAppSelector(selectDarkMode)\n    const [names, setNames] = useState([]) // filtered list of names\n    const [users, setUsers] = useState([]) // clean list of users\n    const [ value, setValue ] = useState('') // typed name\n    const myStyles = {\n        modal: {\n            fontSize: 18, paddingBottom: 20, fontWeight: 'bold',\n            textAlign: 'center', width: '100%', color: darkMode ? 'rgb(255,255,255)' : 'rgb(0,0,0)'\n        },\n        backdrop: {\n            backgroundColor: darkMode ? 'rgba(141,141,141,0.5)' : 'rgba(0, 0, 0, 0.5)',\n        },\n        containerDrop: {\n            minWidth: 200,\n            paddingBottom: 15\n        },\n    }\n\n    useEffect(() => {\n        fetch(base_URL + '/users/userNamesAndNames', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'userKey': userKey\n            }\n        }).then(async (data) => {\n            if (data.ok) {\n                const userList = await data.json();\n                setNames(userList.map(user => {\n                    if (user) {\n                        return user.realName + ' (' + user.userName + ')'\n                    }\n                }))\n                setUsers(userList)\n            }\n        })\n    }, [])\n\n    function renderEachDropItem() {\n        let final = []\n        for (const option in names) {\n            final.push(\n                <AutocompleteItem\n                    title={names[option]}\n                    key={option}\n                />\n            )\n        }\n        return final\n    }\n\n    const onChangeText = (query) => {\n        setNames(\n            freshNames().filter(name =>\n                name?.toLowerCase().includes(query.toLowerCase())\n                || userNameContainsString(name, query))\n        );\n        setValue(query);\n    };\n\n    function freshNames() {\n        return users.map(user => {\n            if (user) {\n                return user.realName + ' (' + user.userName + ')'\n            }\n        })\n    }\n\n    const userNameContainsString = (name, query) => {\n        const user = users.find(auser => auser?.userName.toLowerCase().includes(query.toLowerCase()) && auser?.realName === name);\n        return user !== undefined;\n    }\n\n    function handleSelection(index) {\n        if (index === 0) {\n            setHasChosen(false)\n            setRecipient(null)\n            // @ts-ignore\n            setValue('')\n        } else {\n            setHasChosen(true)\n            setValue(names[index - 1])\n            setRecipient(findUserNameFromName(names[index - 1]))\n        }\n    }\n\n    function findUserNameFromName(name) {\n        const firstPar = name.indexOf('(')\n        const secondPar = name.indexOf(')')\n        return name.slice(firstPar + 1, secondPar)\n    }\n\n    return (\n        <Autocomplete\n            style={myStyles.containerDrop}\n            value={value}\n            placeholder={placeholder ? 'Recipient' : null}\n            onChangeText={onChangeText}\n            onSelect={handleSelection}>\n            <AutocompleteItem title={' '}/>\n            {renderEachDropItem()}\n        </Autocomplete>\n    );\n}","import {Alert, Button, TouchableOpacity, View} from \"react-native\";\nimport {FontAwesome5} from \"@expo/vector-icons\";\nimport {Card, Modal, Text} from \"@ui-kitten/components\";\nimport ModalContainer from \"../../../components/ModalContainer\";\nimport React, {useEffect, useState} from \"react\";\nimport {useAppSelector} from \"../../../app/hooks\";\nimport {selectDarkMode, selectIsGuest, selectUserKey} from \"../../../app/appDataSlice\";\nimport {useGetUserInfoQuery} from \"../../api/usersApi\";\nimport {useGetCurrentSectionQuery} from \"../../api/classPagesApi\";\nimport {base_URL} from \"../../notifications/constants\";\nimport UserNameSelectionDropDown from \"../../../components/UserNameSelectionDropDown\";\n\nexport default function ExportModalClass({classData}) {\n    const isGuest = useAppSelector(selectIsGuest)\n    const [ showGuestModal, setShowGuestModal ] = useState(false)\n    const [ showModal, setShowModal ] = useState(false)\n    const darkMode = useAppSelector(selectDarkMode)\n\n    return (\n        <View style={{alignSelf: 'flex-end', marginRight: '7%',  flexDirection: 'column-reverse', marginTop: -10, paddingBottom: 10}}>\n            <TouchableOpacity\n                onPress={() => {\n                    if (isGuest) {\n                        setShowGuestModal(true)\n                    } else {\n                        setShowModal(true);\n                    }\n                }}\n                style={{\n                    alignItems: 'center',\n                }}>\n                <View style={{ height: 45, flexDirection: 'column', justifyContent: 'center', paddingLeft: 5}}>\n                    <FontAwesome5\n                        name={'file-export'}\n                        size={20}\n                        color={darkMode ? 'white' : 'black'}\n                    />\n                </View>\n                <Text style={{marginTop: -10, fontSize: 10}}>\n                    Share Class\n                </Text>\n            </TouchableOpacity>\n            {\n                showGuestModal &&\n                <ModalContainer\n                    title=\"Wait!\"\n                    children={<Text style={{paddingHorizontal: 30}}>This feature is locked to our Guest Users. Please create a free account with us to take advantage this feature.</Text>}\n                    backDropVisible={showGuestModal}\n                    setBackDropVisible={setShowGuestModal}\n                />\n            }\n            {renderModal(setShowModal, showModal, classData)}\n        </View>\n    )\n}\n\nfunction renderModal(setShowModal, showModal, classData: any) {\n    const {data: userData} = useGetUserInfoQuery(useAppSelector(selectUserKey));\n\n    const [ value, setValue ] = useState('')\n    const darkMode = useAppSelector(selectDarkMode)\n    const userKey = useAppSelector(selectUserKey)\n    const [ recipient, setRecipient ] = useState(null)\n    const [ hasChosen, setHasChosen ] = useState(false)\n\n    const myStyles = {\n        modal: {\n            fontSize: 18, paddingBottom: 20, fontWeight: 'bold',\n            textAlign: 'center', width: '100%', color: darkMode ? 'rgb(255,255,255)' : 'rgb(0,0,0)'\n        },\n        backdrop: {\n            backgroundColor: darkMode ? 'rgba(141,141,141,0.5)' : 'rgba(0, 0, 0, 0.5)',\n        },\n        containerDrop: {\n            minWidth: 200,\n            paddingBottom: 15\n        },\n    }\n\n    const exportClass = async (recipient) => {\n        try {\n            let status = await fetch(base_URL + '/users/sendNotification', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'userKey': userKey\n                },\n                body: JSON.stringify({\n                    recipients: [recipient],\n                    text: JSON.stringify({masterCourseCode: classData.masterCourseCode, courseTerm: classData.courseTerm}),\n                    title: userData.realFirstName + \" shared a course\",\n                    isCourseData: true\n                })\n            })\n            return status.ok\n        } catch (e) {\n            console.log(e)\n            return false\n        }\n    }\n    return (\n        <Modal\n            visible={showModal}\n            backdropStyle={myStyles.backdrop}\n            style={{ width: '80%', height: '70%' }}\n            onBackdropPress={() => setShowModal(false)}>\n            <Card disabled={true}>\n                <Text style={myStyles.modal}>\n                    Share This Course\n                </Text>\n                {UserNameSelectionDropDown({setHasChosen, setRecipient, placeholder: true})}\n                <View>\n                    <Button disabled={recipient === null} title={'Send'} onPress={() => {\n                        exportClass(recipient).then((returnValue) => {\n                            setShowModal(false)\n                            returnValue ? Alert.alert('Message Sent') :\n                                Alert.alert('Error Sending Message', 'Please Try Again Later')\n                        })\n                    }} />\n                    <Button title={'Dismiss'} onPress={() => {\n                        setShowModal(false)\n                        setHasChosen(false)\n                        setValue('')\n                        setRecipient(null)\n                    }} />\n                </View>\n            </Card>\n        </Modal>\n    );\n}","import {Manager} from \"socket.io-client\";\n\nexport const base_URL = 'https://api.athenaserver.com:5678/api';\n\nexport const manager = new Manager(base_URL, {\n    randomizationFactor: 0.5,\n    addTrailingSlash: false,\n    autoConnect: false\n});","import {\n  Button,\n  Card,\n  Layout,\n  Modal,\n  Text, useTheme,\n  withStyles,\n} from '@ui-kitten/components';\nimport { useEffect, useRef, useState } from 'react';\nimport { StyleSheet, ScrollView, TouchableOpacity } from 'react-native';\n\nimport { useAppSelector } from '../../../app/hooks';\nimport { useIsAllowedToReviewQuery } from '../../api/classPagesApi';\nimport { selectDarkMode, selectUserKey } from '../../../app/appDataSlice';\nimport ExportModalClass from \"./exportModalClass\";\nimport {LinearGradient} from \"expo-linear-gradient\";\nimport {base_URL} from \"../../../constants/admin\";\nimport {useGetUserInfoQuery} from \"../../api/usersApi\";\n\nfunction SingleClassPage({ eva, navigation, selectedClass = null }) {\n  const [showModal, setShowModal] = useState(false);\n  const scrollViewRef = useRef(null);\n  const theme = useTheme();\n  const userKey = useAppSelector(selectUserKey);\n  const {data: userData} = useGetUserInfoQuery(userKey, {\n    skip: !userKey,\n  });\n  const darkMode = useAppSelector(selectDarkMode);\n  const [ professorReviewsObject, setProfessorReviewsObject ] = useState({})\n  const filters = useAppSelector((state) => state.appData.classPages.filters);\n  const isHMC = useAppSelector((state) => state.appData.classPages.isHMC);\n  if (!selectedClass) {\n    selectedClass = useAppSelector(\n        (state) => state.appData.classPages.selectedClass\n    );\n  }\n\n\n  const backgroundColor = darkMode ? eva.style.dark : eva.style.light;\n\n  const { data: isAllowedToReviewRes } = useIsAllowedToReviewQuery({\n    userKey,\n    masterCourseCode: selectedClass.masterCourseCode,\n  });\n\n  useEffect(() => {\n    if (scrollViewRef?.current) {\n      scrollViewRef.current.scrollTo({\n        y: 0,\n        animated: false,\n      });\n    }\n    if (selectedClass) {\n      for (const time of selectedClass.times) {\n        getReviewsFromProfessor(time)\n      }\n    }\n  }, [selectedClass]);\n\n  async function getReviewsFromProfessor(time) {\n    const name = time.professorName\n    let lastName\n    try {\n      lastName = time.professorName.split(' ')[1]\n    } catch (e) {\n      console.log('no last name')\n      lastName = time.professorName\n    }\n    let res = await fetch(base_URL + '/classes/reviews/getReviewsByProfessor' + '?professorName=' + lastName + '&collegeName=' + userData.collegeName, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        userKey: userKey,\n      },\n    })\n    if (res.ok) {\n      const reviews = await res.json()\n      if (reviews.length > 0) {\n        let newObject = {\n          ...professorReviewsObject\n        }\n        newObject[name] = reviews\n        setProfessorReviewsObject(newObject)\n      }\n    }\n  }\n\n  function buildTimeString(time) {\n    if (!time.startTime || time.startTime === '' || time.startTime === null) {\n      return 'closed';\n    }\n    return (\n      convertTo12HourTime(time.startTime) +\n      ' - ' +\n      convertTo12HourTime(time.endTime) +\n      '\\n'\n    );\n  }\n\n  function convertTo12HourTime(time) {\n    if (time.length !== 5) {\n      time = '0' + time;\n    }\n    let hours = time.slice(0, 2);\n    let minutes = time.slice(3, 5);\n    let ampm = Number.parseInt(hours) > 12 ? 'pm' : 'am';\n    hours = hours % 12;\n    if (hours === 0) {\n      hours = 12;\n      ampm = 'pm';\n    }\n    return hours + ':' + minutes + ampm;\n  }\n\n  function getProfessorReviewsList() {\n    const final = []\n    for (const professor of Object.keys(professorReviewsObject)) {\n      const reviews = professorReviewsObject[professor]\n      final.push(\n        <>\n          <Text style={styles.subHeader}>All Reviews: {professor}</Text>\n          {reviews.length === 0 ? (\n              <Text style={{ alignSelf: 'center', textAlign: 'center', marginBottom: 10 }}>\n                Something went wrong...\n              </Text>\n          ) : (\n              reviews.map((review, index) => (\n                  <Card key={index} disabled={true}>\n                    <Text>{review.text + '\\n\\nPosted: ' + review.date}</Text>\n                    <Text>{'Taught By: ' + review.professor}</Text>\n                  </Card>\n              ))\n          )}\n        </>\n      )\n    }\n    return final\n  }\n\n  const averageGradeMSGModal = (\n    <Modal\n      visible={showModal}\n      backdropStyle={styles.backdrop}\n      style={{ width: '75%' }}\n      onBackdropPress={() => setShowModal(false)}>\n      <Card disabled={true}>\n        <Text style={{ fontSize: 15, paddingTop: 5, paddingBottom: 10 }}>\n          The Athena Network collects and aggregates the data anonymously\n          submitted by the Course Review process and calculates what the average\n          student's experience in this course will look like. Given that it is\n          based on voluntarily submitted data, this information is to be used as\n          a reference only. Please consult your advisor before making any\n          impactful decisions.\n        </Text>\n        <Button onPress={() => setShowModal(false)}>Dismiss</Button>\n      </Card>\n    </Modal>\n  );\n\n  if (!selectedClass.times) {\n    return null;\n  }\n\n  return (\n      <LinearGradient\n          colors={\n            darkMode\n                ? [theme['color-basic-1100'], theme['color-basic-1100']]\n                : [theme['color-primary-500'], theme['color-success-500']]\n          }\n          style={{ width: '100%', margin: 0, alignItems: 'center', flex: 1 }}\n          start={{ x: 0, y: 0 }}\n          end={{ x: 1, y: 0.4 }}>\n    <ScrollView\n      contentContainerStyle={{ alignSelf: 'center', maxWidth: 700 }}\n      style={backgroundColor}\n      showsVerticalScrollIndicator={false}\n      ref={scrollViewRef}>\n      <Layout style={[{ alignItems: 'center' }, backgroundColor]}>\n        <ExportModalClass classData={selectedClass}/>\n        <Text style={styles.title}>{selectedClass.courseName}</Text>\n        <Text style={{ paddingTop: 30 }}>{selectedClass.masterCourseCode}</Text>\n\n        <Text style={styles.subtitle}>\n          {`${selectedClass.courseTerm} \\u2022 credits: ${\n            isHMC\n              ? selectedClass.creditWeightHM\n              : selectedClass.creditWeight\n          }`}\n        </Text>\n        {selectedClass.timeSpentOutOfClass && (\n          <Layout\n            style={[\n              {\n                flexDirection: 'row',\n                alignItems: 'flex-start',\n                paddingRight: 5,\n              },\n              backgroundColor,\n            ]}>\n            <Text style={styles.subtitle}>Time Spent Per Week</Text>\n            <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\n            <Text style={styles.subtitle}>\n              : {selectedClass.timeSpentOutOfClass} hours\n            </Text>\n          </Layout>\n        )}\n        {selectedClass.averageGrade && (\n          <Layout\n            style={[\n              {\n                flexDirection: 'row',\n                alignItems: 'flex-start',\n                paddingRight: 5,\n              },\n              backgroundColor,\n            ]}>\n            <Text style={styles.subtitle}>Average Grade</Text>\n            <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\n            <Text style={styles.subtitle}>: {selectedClass.averageGrade}</Text>\n          </Layout>\n        )}\n        {selectedClass.difficulty && (\n          <Layout\n            style={[\n              {\n                flexDirection: 'row',\n                alignItems: 'flex-start',\n                paddingRight: 5,\n              },\n              backgroundColor,\n            ]}>\n            <Text style={styles.subtitle}>Estimated Difficulty</Text>\n            <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\n            <Text style={styles.subtitle}>\n              : {selectedClass.difficulty} / 5\n            </Text>\n          </Layout>\n        )}\n        {selectedClass.rating && (\n          <Layout\n            style={[\n              {\n                flexDirection: 'row',\n                alignItems: 'flex-start',\n                paddingRight: 5,\n              },\n              backgroundColor,\n            ]}>\n            <Text style={styles.subtitle}>Average Rating</Text>\n            <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\n            <Text style={styles.subtitle}>: {selectedClass.rating} / 5</Text>\n          </Layout>\n        )}\n      </Layout>\n      <Layout style={backgroundColor}>\n        <Text style={styles.courseDescription}>{selectedClass.summary}</Text>\n      </Layout>\n      <Layout style={{ ...backgroundColor, ...styles.boxed }}>\n        <Text style={{ fontSize: 15, fontWeight: 'bold' }}>\n          Stated Prerequisites:\n        </Text>\n        <Text style={{ fontSize: 15 }}>\n          {selectedClass.prerequisites !== ''\n            ? selectedClass.prerequisites\n            : 'none'}\n        </Text>\n\n        <Text style={{ fontSize: 15, fontWeight: 'bold' }}>\n          Stated Corequisites:\n        </Text>\n        <Text style={{ fontSize: 15 }}>\n          {selectedClass.corequisites !== ''\n            ? selectedClass.corequisites\n            : 'none'}\n        </Text>\n      </Layout>\n      <Layout style={[{ alignItems: 'flex-end' }, backgroundColor]}>\n        {(selectedClass.timeSpentOutOfClass ||\n          selectedClass.averageGrade ||\n          selectedClass.difficulty ||\n          selectedClass.rating) && (\n          <TouchableOpacity onPress={() => setShowModal(!showModal)}>\n            <Layout\n              style={[\n                {\n                  flexDirection: 'row',\n                  alignItems: 'flex-start',\n                  paddingRight: 5,\n                },\n                backgroundColor,\n              ]}>\n              <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\n              <Text style={styles.disclaimer}>How Do We Estimate This?</Text>\n            </Layout>\n          </TouchableOpacity>\n        )}\n      </Layout>\n      <Layout style={backgroundColor}>\n        {selectedClass.times.length > 0 && (\n          <Layout style={backgroundColor}>\n            <Text style={styles.subHeader}>Sections</Text>\n            <Layout style={[styles.section, backgroundColor]}>\n              <Text style={styles.headerText}>Course Code</Text>\n              <Text style={styles.headerText}>SA/ST/PERM</Text>\n              <Text style={styles.headerText}>Professor</Text>\n              <Text style={styles.headerText}>Time</Text>\n              <Text style={styles.headerText}>Location</Text>\n            </Layout>\n          </Layout>\n        )}\n        {selectedClass.times.map((time) => {\n          return (\n            <Layout\n              key={time.courseCode}\n              style={{ backgroundColor, ...styles.section }}>\n              <Text style={styles.sectionText}>{time.courseCode}</Text>\n              <Text style={styles.sectionText}>\n                {time.seatsFilled} / {time.seatsFilled + time.seatsAvailable} / {time.permCount ? time.permCount : 0}\n              </Text>\n              <Text style={styles.sectionText}>{time.professorName}</Text>\n              <Text style={styles.sectionText}>\n                {buildTimeString(time)}\n                {time.daysOfTheWeek.join(', ')}\n              </Text>\n              <Text style={styles.sectionText}>\n                {time.classLocation ? time.classLocation : 'TBD'}\n              </Text>\n            </Layout>\n          );\n        })}\n        {averageGradeMSGModal}\n      </Layout>\n      {isAllowedToReviewRes?.isAllowed ? (\n        <Button\n          style={{ margin: 10 }}\n          onPress={() => {\n            navigation.navigate('PostReview');\n          }}>\n          Post Review\n        </Button>\n      ) : null}\n      <Text style={styles.subHeader}>Class Reviews</Text>\n      {selectedClass.reviews.length === 0 ? (\n        <Text style={{ alignSelf: 'center', textAlign: 'center', marginBottom: 10 }}>\n          No Class Reviews yet\n        </Text>\n      ) : (\n        selectedClass.reviews.map((review, index) => (\n          <Card key={index} disabled={true}>\n            <Text>{review.text + '\\n\\nPosted: ' + review.date}</Text>\n            {review.professor && (\n              <Text>{'Taught By: ' + review.professor}</Text>\n            )}\n          </Card>\n        ))\n      )}\n      {\n        Object.keys(professorReviewsObject).length !== 0 ? getProfessorReviewsList() : null\n      }\n    </ScrollView>\n      </LinearGradient>\n  );\n}\n\nexport default withStyles(SingleClassPage, (theme) => ({\n  dark: {\n    backgroundColor: theme['color-basic-900'],\n  },\n  light: {\n    backgroundColor: theme['color-basic-200'],\n  },\n}));\n\nconst styles = StyleSheet.create({\n  title: {\n    fontSize: 20,\n    marginTop: 20,\n    fontWeight: 'bold',\n  },\n  subtitle: {\n    fontSize: 16,\n  },\n  courseOpen: {\n    backgroundColor: 'green',\n    color: '#fff',\n    padding: 5,\n    marginRight: 10,\n  },\n  courseClosed: {\n    backgroundColor: 'red',\n    color: '#fff',\n    padding: 5,\n    borderRadius: 5,\n  },\n  header: {\n    alignItems: 'center',\n  },\n  details: {\n    flexDirection: 'row',\n    padding: 10,\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n  },\n  courseDescription: {\n    paddingRight: 20,\n    paddingLeft: 20,\n    paddingTop: 10,\n    paddingBottom: 5,\n    fontSize: 17,\n  },\n  BodyContainer: {\n    borderTopWidth: 1,\n    borderTopColor: 'black',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-evenly',\n    padding: 10,\n    paddingTop: 20,\n    paddingBottom: 20,\n  },\n  boxed: {\n    alignItems: 'center',\n    margin: 8,\n    borderColor: 'black',\n    borderWidth: 1,\n    padding: 7,\n  },\n  documentStyle: {\n    width: 150,\n    height: 190,\n    paddingTop: 100,\n  },\n  imageLabel: {\n    fontSize: 12,\n    color: 'black',\n    padding: 10,\n    textAlign: 'center',\n  },\n  schedule: {\n    paddingLeft: 20,\n    paddingTop: 10,\n  },\n  graphImage: {\n    width: '100%',\n    aspectRatio: 1,\n    resizeMode: 'contain',\n  },\n  grade: {\n    fontSize: 50,\n    fontWeight: 'bold',\n    color: 'green',\n  },\n  reviewText: {\n    fontSize: 16,\n    fontStyle: 'italic',\n  },\n  reviewBox: {\n    width: '95%',\n    padding: 10,\n    borderWidth: 1,\n    borderColor: 'black',\n    borderRadius: 5,\n    marginBottom: 10,\n  },\n  section: {\n    flexDirection: 'row',\n    paddingLeft: 5,\n    borderBottomWidth: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  headerText: {\n    fontWeight: 'bold',\n    fontSize: 13,\n    flex: 1,\n  },\n  sectionText: {\n    flex: 1,\n  },\n  disclaimer: {\n    fontSize: 14,\n    fontStyle: 'italic',\n  },\n  backdrop: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  input: {\n    height: 50,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n  },\n  containerDrop: {\n    height: 42,\n    margin: 12,\n    borderWidth: 1,\n  },\n  indentedInput: {\n    height: 50,\n    marginVertical: 12,\n    borderWidth: 1,\n    padding: 10,\n    marginRight: 12,\n    marginLeft: 30,\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white',\n  },\n  subHeader: {\n    fontSize: 20,\n    paddingLeft: 20,\n    paddingBottom: 20,\n    paddingTop: 20,\n    fontWeight: 'bold',\n  },\n});\n","export const RENDERED_RESULTS_LIMIT = 10;\nexport const NEW_REVIEW_FIELDS = [\n  {\n    label: 'Professor',\n    id: 'professor',\n    mandatory: false,\n    type: 'String',\n  },\n  {\n    label: 'Grade',\n    id: 'grade',\n    type: 'DropDown',\n    mandatory: false,\n    options: [\n      {\n        label: 'A+',\n        id: 'A',\n      },\n      {\n        label: 'A',\n        id: 'A',\n      },\n      {\n        label: 'A-',\n        id: 'A',\n      },\n      {\n        label: 'B+',\n        id: 'B',\n      },\n      {\n        label: 'B',\n        id: 'B',\n      },\n      {\n        label: 'B-',\n        id: 'B',\n      },\n      {\n        label: 'C+',\n        id: 'C',\n      },\n      {\n        label: 'C',\n        id: 'C',\n      },\n      {\n        label: 'C-',\n        id: 'C',\n      },\n      {\n        label: 'D+',\n        id: 'D',\n      },\n      {\n        label: 'D',\n        id: 'D',\n      },\n      {\n        label: 'D-',\n        id: 'D',\n      },\n      {\n        label: 'F+',\n        id: 'F',\n      },\n      {\n        label: 'F',\n        id: 'F',\n      },\n      {\n        label: 'F-',\n        id: 'F',\n      },\n    ],\n  },\n  {\n    label: 'Time Spent in Hours (ie: 7)',\n    id: 'timeSpent',\n    mandatory: false,\n    type: 'String',\n  },\n];\n","import {\n  IndexPath,\n  Layout,\n  Select,\n  SelectItem,\n  Text,\n  useTheme,\n  Button,\n  Spinner,\n  Input,\n} from '@ui-kitten/components';\nimport { useState } from 'react';\nimport { Alert, StyleSheet, ScrollView } from 'react-native';\nimport { selectUserKey } from '../../../app/appDataSlice';\nimport { useAppSelector } from '../../../app/hooks';\nimport { NEW_REVIEW_FIELDS as fields } from '../../../constants/classPages';\nimport { useSendReviewMutation } from '../../api/classPagesApi';\n\nexport default function NewReview({ navigation }) {\n  const [body, setBody] = useState({});\n  const userKey = useAppSelector(selectUserKey);\n  const darkMode = useAppSelector((state) => state.appData.secure.darkMode);\n  const selectedClass = useAppSelector(\n    (state) => state.appData.classPages.selectedClass\n  );\n  const [sendReview, { isLoading }] = useSendReviewMutation();\n\n  const theme = useTheme();\n\n  const backgroundColor = darkMode\n    ? theme['color-basic-900']\n    : theme['color-basic-200'];\n\n  const color = darkMode ? theme['color-basic-200'] : theme['color-basic-900'];\n\n  const handleReviewSubmitted = async () => {\n    try {\n      await sendReview({\n        body: {\n          ...body,\n          masterCourseCode: selectedClass.masterCourseCode,\n        },\n        userKey,\n      }).unwrap();\n      Alert.alert(\n        'Review Submitted',\n        `Your review of \"${selectedClass.courseName}\" has been submitted and is now pending approval.\\n\\nThank You!`,\n        [\n          {\n            text: 'OK',\n            onPress: () => {\n              navigation.goBack();\n            },\n          },\n        ]\n      );\n    } catch (error) {\n      Alert.alert(\n        'Error',\n        `There was an error submitting your review. Please try again later.`\n      );\n      console.warn('Error submitting review: ', error);\n    }\n  };\n\n  function renderTheFieldsNecessary(fields) {\n    const changeValue = (theValue, valueToChange) => {\n      let newBody = body;\n      for (const aspect in newBody) {\n        if (\n          newBody[aspect] === null ||\n          newBody[aspect] === undefined ||\n          newBody[aspect] === ''\n        ) {\n          delete newBody[aspect];\n        }\n      }\n      if (theValue !== undefined) {\n        newBody[valueToChange] = theValue;\n      } else {\n        if (newBody[valueToChange]) {\n          delete newBody[valueToChange];\n        }\n      }\n      setBody(newBody);\n    };\n    const renderFilterParameters = (fields) => {\n      if (fields.length === 0) {\n        return null;\n      }\n      return (\n        <Layout style={{ flexDirection: 'row', backgroundColor }}>\n          <Text\n            style={{\n              fontSize: 15,\n              paddingLeft: 12,\n              paddingBottom: 5,\n              paddingTop: 5,\n              alignContent: 'center',\n              fontWeight: 'bold',\n            }}>\n            Review Details\n          </Text>\n        </Layout>\n      );\n    };\n    let final = [];\n\n    const renderDropDown = (field) => {\n      const [selectedIndex, setSelectedIndex] = useState(new IndexPath(0));\n      const [hasChosen, setHasChosen] = useState(false);\n\n      function currentValue() {\n        return (\n          <Text key={'gal;fkdjsl;f'}>\n            {!hasChosen\n              ? 'Choose ' +\n                field.label +\n                (field.mandatory ? ' (mandatory)' : '')\n              : field.options[selectedIndex.row - 1].label}{' '}\n          </Text>\n        );\n      }\n\n      function handleSelection(index) {\n        setSelectedIndex(index);\n        changeValue(\n          index.row === 0 ? undefined : field.options[index.row - 1].id,\n          field.id\n        );\n        if (index.row === 0) {\n          setHasChosen(false);\n        } else {\n          setHasChosen(true);\n        }\n      }\n\n      return (\n        <Select\n          style={{ ...styles.containerDrop, backgroundColor }}\n          value={currentValue}\n          selectedIndex={selectedIndex}\n          onSelect={handleSelection}>\n          <SelectItem title={' '} />\n          {field.options.map(({ label }, index) => (\n            <SelectItem title={label} key={index} />\n          ))}\n        </Select>\n      );\n    };\n    final.push(\n      <Input\n        key={'lfjdsa;lfaj'}\n        autoCapitalize={'sentences'}\n        onChangeText={(theValue) => changeValue(theValue, 'text')}\n        style={{ ...styles.inputBig, backgroundColor, color }}\n        multiline={true}\n        placeholderTextColor={darkMode ? theme['color-basic-500'] : 'gray'}\n        placeholder={'Review Text (mandatory)'}\n      />\n    );\n    for (let i = 0; i < fields.length; i++) {\n      const type = fields[i].type;\n      if (type === 'String') {\n        final.push(\n          <Input\n            key={i}\n            autoCapitalize={'words'}\n            clearButtonMode={'always'}\n            onChangeText={(theValue) => changeValue(theValue, fields[i].id)}\n            style={{ ...styles.input, backgroundColor, color }}\n            placeholderTextColor={darkMode ? theme['color-basic-500'] : 'gray'}\n            placeholder={\n              fields[i].mandatory\n                ? fields[i].label + ' (mandatory)'\n                : fields[i].label\n            }\n          />\n        );\n      } else if (type === 'DropDown') {\n        final.push(renderDropDown(fields[i]));\n      }\n    }\n\n    return (\n      <Layout style={{ backgroundColor }}>\n        {renderFilterParameters(fields)}\n        <Layout style={{ backgroundColor }}>{final}</Layout>\n      </Layout>\n    );\n  }\n\n  return (\n    <ScrollView style={{ backgroundColor }}>\n      <Layout style={{ backgroundColor, ...styles.container }}>\n        <Layout style={{ backgroundColor }}>\n          {renderTheFieldsNecessary(fields)}\n        </Layout>\n        <Button style={{ margin: 12 }} onPress={handleReviewSubmitted}>\n          Post Review\n        </Button>\n      </Layout>\n      {isLoading ? (\n        <Layout\n          style={{\n            backgroundColor: 'transparent',\n            position: 'absolute',\n            right: '50%',\n            top: '50%',\n          }}>\n          <Spinner />\n        </Layout>\n      ) : null}\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  input: {\n    height: 50,\n    margin: 12,\n    padding: 10,\n    borderColor: '#B3B3B3',\n    borderRadius: 5,\n    borderWidth: 1,\n  },\n  inputBig: {\n    height: 200,\n    margin: 12,\n    padding: 10,\n    borderColor: '#B3B3B3',\n    borderRadius: 5,\n    borderWidth: 1,\n  },\n  containerDrop: {\n    height: 42,\n    margin: 12,\n  },\n  indentedInput: {\n    height: 50,\n    marginVertical: 12,\n    padding: 10,\n    marginRight: 12,\n    marginLeft: 30,\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n  },\n  container: {\n    flex: 1,\n    // alignItems: 'center',\n  },\n  header: {\n    marginTop: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n  },\n  address: {\n    alignItems: 'center',\n    margin: 10,\n    padding: 10,\n  },\n  video: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-start',\n  },\n  title: {\n    fontSize: 26,\n    marginLeft: 10,\n  },\n  logo: {\n    width: '100%',\n    height: 100,\n  },\n  couponContainer: {\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 20,\n    marginBottom: 20,\n  },\n  coupon: {\n    width: 400,\n    height: 267,\n  },\n  imageGallery: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    margin: 10,\n    marginBottom: 0,\n  },\n  imageStyle: {\n    width: 150,\n    height: 150,\n    paddingTop: 100,\n    margin: 5,\n  },\n  headerText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n});\n","import { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport InfoPage from './InfoPage';\nimport PostReview from './PostReview';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function SingleClassPage({ bottomSheetRef }) {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen\n        name=\"InfoPage\"\n        component={InfoPage}\n        options={{ title: 'ClassPages' }}\n      />\n      <Stack.Screen\n          name=\"PostReview\"\n          component={PostReview}\n          options={{ title: 'Post Review' }}\n        />\n    </Stack.Navigator>\n  );\n}\n","import { Layout, Text } from '@ui-kitten/components';\n\nexport default function Message({ title, item }) {\n  return (\n    <Layout\n      style={{\n        flex: 1,\n        marginTop: 10,\n        alignItems: 'center',\n        backgroundColor: 'transparent',\n      }}>\n      <Text style={{ margin: 20, color: '#fff' }}>{title}</Text>\n      {item}\n    </Layout>\n  );\n}\n","import { Layout, Text } from '@ui-kitten/components';\nimport {\n  StyleSheet,\n  Animated,\n  TouchableOpacity,\n} from 'react-native';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { useRef } from 'react';\n\nexport default function ClassListItemItem({\n  courseCode,\n  seatsAvailable,\n  seatsFilled,\n  handleAddClass,\n  handleRemoveClass,\n  darkMode,\n  added,\n  masterCourseCode,\n}) {\n  const selectedAnim = useRef(new Animated.Value(1)).current;\n\n  return (\n    <Layout style={styles.dropDownItem}>\n      <Text>{`\\u2022 ${courseCode}`}</Text>\n      <Text\n        style={seatsAvailable > 0 ? styles.isAvailable : styles.notAvailable}>\n        {seatsFilled} / {seatsFilled + seatsAvailable}\n      </Text>\n      {/* Add / Remove Class */}\n      <TouchableOpacity\n        activeOpacity={1}\n        onPress={() => {\n          if (added) {\n            handleRemoveClass(courseCode, masterCourseCode);\n          } else {\n            handleAddClass(courseCode, masterCourseCode);\n          }\n          Animated.sequence([\n            Animated.spring(selectedAnim, {\n              toValue: 0.0,\n              speed: 16,\n              useNativeDriver: true,\n            }),\n          ]).start(() => {\n            Animated.spring(selectedAnim, {\n              toValue: 1,\n              speed: 16,\n              useNativeDriver: true,\n            }).start();\n          });\n        }}>\n        <Animated.View\n          style={{\n            width: 50,\n            alignItems: 'center',\n            transform: [\n              {\n                scale: selectedAnim,\n              },\n            ],\n          }}>\n          <FontAwesome5\n            style={{ padding: 5 }}\n            size={24}\n            name={added ? 'times' : 'plus'}\n            color={darkMode ? 'white' : 'black'}\n          />\n        </Animated.View>\n      </TouchableOpacity>\n    </Layout>\n  );\n}\n\nconst styles = StyleSheet.create({\n  list__container: {\n    margin: 10,\n    marginLeft: 0,\n    height: '90%',\n    width: '100%',\n  },\n  addedClassesContainer: {\n    position: 'absolute',\n    zIndex: 1,\n    width: '60%',\n    borderTopRightRadius: 20,\n    borderBottomRightRadius: 20,\n    borderColor: '#c2c2c2',\n    backgroundColor: '#f7f7f7',\n    paddingTop: 5,\n    borderTopWidth: 1.5,\n    borderBottomWidth: 1.5,\n    borderRightWidth: 1.5,\n  },\n  addedClasses: {\n    position: 'absolute',\n    right: 3,\n    top: 3,\n    padding: 7,\n    margin: 5,\n    backgroundColor: '#c9c9c9',\n    borderRadius: 100,\n  },\n  item: {\n    marginBottom: 10,\n    marginTop: 10,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 5,\n  },\n  buttonContainer: {\n    right: 0,\n    position: 'absolute',\n    width: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n  },\n  button: {\n    padding: 5,\n    borderColor: 'grey',\n  },\n  dropDown: {\n    backgroundColor: '#f7f7f7',\n    paddingLeft: 30,\n    paddingBottom: 10,\n    paddingTop: 10,\n  },\n  dropDownItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    height: 54,\n  },\n  isAvailable: {\n    color: 'green',\n  },\n  notAvailable: {\n    color: 'red',\n  },\n  loadingMessage: {\n    fontSize: 20,\n    color: 'white',\n    alignSelf: 'center',\n    fontStyle: 'italic',\n  },\n  loadingMessageRefresh: {\n    fontSize: 15,\n    paddingTop: 20,\n    color: 'white',\n    alignSelf: 'center',\n    fontWeight: 'bold',\n  },\n  filters: {\n    backgroundColor: 'white',\n    alignItems: 'center',\n    padding: 10,\n  },\n});\n","import { Layout, Text } from '@ui-kitten/components';\nimport {\n  StyleSheet,\n  TouchableOpacity,\n  LayoutAnimation,\n  UIManager,\n  Platform,\n  Animated,\n} from 'react-native';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { useEffect, useMemo, useRef, useState } from 'react';\nimport useTraceUpdate from '../../hooks/useTraceUpdate';\nimport ClassListItemItem from './ClassListItemItem';\n\nif (\n  Platform.OS === 'android' &&\n  UIManager.setLayoutAnimationEnabledExperimental\n) {\n  UIManager.setLayoutAnimationEnabledExperimental(true);\n}\n\nexport default function Item({\n  courseName,\n  masterCourseCode,\n  schedule,\n  menuOpen,\n  setIsMenuOpen,\n  darkMode,\n  handleClassSelected,\n  handleAddClass,\n  handleRemoveClass,\n  inItem,\n}) {\n  \n\n  const memoizedItem = useMemo(() => {\n    return (\n      <Layout\n        style={{\n          borderRadius: 20,\n          opacity: 1,\n          marginTop: 7,\n          marginRight: 9,\n          marginLeft: 9,\n        }}>\n        {/* Name and master coursecode */}\n        <Layout style={{ marginHorizontal: 20 }}>\n          <Layout style={{ height: 67 }}>\n            <TouchableOpacity\n              onPress={() => {\n                handleClassSelected(masterCourseCode);\n              }}>\n              <Layout style={styles.item}>\n                <Text style={styles.title}>{courseName}</Text>\n                <Text>{masterCourseCode}</Text>\n              </Layout>\n            </TouchableOpacity>\n\n            {/* Dropdown Menu Toggle */}\n            <TouchableOpacity\n              style={styles.buttonContainer}\n              onPress={() => {\n                if (menuOpen === masterCourseCode) {\n                  setIsMenuOpen('');\n                  LayoutAnimation.configureNext({\n                    duration: 730,\n                    create: { type: 'easeInEaseOut', property: 'opacity' },\n                    update: { type: 'spring', springDamping: 0.8 },\n                  });\n                } else {\n                  setIsMenuOpen(masterCourseCode);\n                  LayoutAnimation.configureNext({\n                    duration: Platform.OS === \"android\" ? 500 : 730,\n                    create: { type: 'easeInEaseOut', property: 'opacity' },\n                    update: { type: 'spring', springDamping: 0.8 },\n                  });\n                }\n              }}>\n              <Layout style={styles.button}>\n                <FontAwesome5\n                  name={\n                    menuOpen === masterCourseCode\n                      ? 'chevron-up'\n                      : 'chevron-down'\n                  }\n                  size={20}\n                  color={darkMode ? 'white' : 'black'}\n                />\n              </Layout>\n            </TouchableOpacity>\n          </Layout>\n\n          {/* Dropdown Menu */}\n          {menuOpen === masterCourseCode && (\n            <Layout>\n              {schedule.map(\n                ({ _id, courseCode, seatsAvailable, seatsFilled, added }) => (\n                  <ClassListItemItem\n                    key={_id}\n                    courseCode={courseCode}\n                    seatsAvailable={seatsAvailable}\n                    seatsFilled={seatsFilled}\n                    handleAddClass={handleAddClass}\n                    handleRemoveClass={handleRemoveClass}\n                    darkMode={darkMode}\n                    added={added}\n                    masterCourseCode={masterCourseCode}\n                  />\n                )\n              )}\n            </Layout>\n          )}\n        </Layout>\n      </Layout>\n    );\n  }, [menuOpen, inItem, darkMode]);\n\n  // useTraceUpdate(memoizedItem);\n  return memoizedItem;\n}\n\nconst styles = StyleSheet.create({\n  list__container: {\n    margin: 10,\n    marginLeft: 0,\n    height: '90%',\n    width: '100%',\n  },\n  addedClassesContainer: {\n    position: 'absolute',\n    zIndex: 1,\n    width: '60%',\n    borderTopRightRadius: 20,\n    borderBottomRightRadius: 20,\n    borderColor: '#c2c2c2',\n    backgroundColor: '#f7f7f7',\n    paddingTop: 5,\n    borderTopWidth: 1.5,\n    borderBottomWidth: 1.5,\n    borderRightWidth: 1.5,\n  },\n  addedClasses: {\n    position: 'absolute',\n    right: 3,\n    top: 3,\n    padding: 7,\n    margin: 5,\n    backgroundColor: '#c9c9c9',\n    borderRadius: 100,\n  },\n  item: {\n    marginBottom: 10,\n    marginTop: 10,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 5,\n  },\n  buttonContainer: {\n    right: 0,\n    position: 'absolute',\n    width: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n  },\n  button: {\n    padding: 5,\n    borderColor: 'grey',\n  },\n  dropDown: {\n    backgroundColor: '#f7f7f7',\n    paddingLeft: 30,\n    paddingBottom: 10,\n    paddingTop: 10,\n  },\n  dropDownItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    height: 54,\n  },\n  isAvailable: {\n    color: 'green',\n  },\n  notAvailable: {\n    color: 'red',\n  },\n  loadingMessage: {\n    fontSize: 20,\n    color: 'white',\n    alignSelf: 'center',\n    fontStyle: 'italic',\n  },\n  loadingMessageRefresh: {\n    fontSize: 15,\n    paddingTop: 20,\n    color: 'white',\n    alignSelf: 'center',\n    fontWeight: 'bold',\n  },\n  addClassButton: {\n    padding: 15,\n  },\n  filters: {\n    backgroundColor: 'white',\n    alignItems: 'center',\n    padding: 10,\n  },\n});\n","import { Divider, Layout, Text, useTheme } from '@ui-kitten/components';\nimport { Entypo } from '@expo/vector-icons';\nimport { FlatList, TouchableOpacity } from 'react-native';\n\ntype AddedClassesProps = {\n  setAddedClassesVisible: (visible: boolean) => void;\n  addedClasses: { [masterCourseCode: string]: string[] };\n  handleRemoveClass: (courseCode: string, masterCourseCode: string) => void;\n  darkMode: boolean;\n};\n\nexport default function AddedClasses({\n  addedClasses,\n  handleRemoveClass,\n  darkMode,\n}: AddedClassesProps) {\n  const theme = useTheme();\n\n  let classes = [];\n  Object.entries(addedClasses).forEach(([masterCourseCode, courseCodes]) => {\n    courseCodes.forEach((courseCode) => {\n      classes.push([masterCourseCode, courseCode]);\n    });\n  });\n\n  const renderItem = ({ item }) => {\n    const [masterCourseCode, courseCode] = item;\n    return (\n      <Layout\n        style={{\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          paddingVertical: 7,\n          backgroundColor: darkMode\n            ? theme['color-basic-900']\n            : theme['color-basic-100'],\n        }}>\n        <Text style={{ fontSize: 18 }}>{courseCode}</Text>\n\n        <TouchableOpacity\n          onPress={() => handleRemoveClass(courseCode, masterCourseCode)}>\n          <Entypo name=\"cross\" size={28} color={'red'} />\n        </TouchableOpacity>\n      </Layout>\n    );\n  };\n\n  return (\n    <Layout\n      style={{\n        flex: 1,\n        paddingBottom: 10,\n        backgroundColor: darkMode\n          ? theme['color-basic-900']\n          : theme['color-basic-100'],\n      }}>\n      <FlatList\n        contentContainerStyle={{ width: 300 }}\n        ListEmptyComponent={\n          <Text>\n            No classes yet... Click the{' '}\n            <Text style={{ fontWeight: 'bold' }}>+</Text> next to a class to see\n            it here\n          </Text>\n        }\n        ItemSeparatorComponent={() => <Divider />}\n        data={classes}\n        renderItem={renderItem}\n      />\n    </Layout>\n  );\n}\n","import {\n  Button,\n  CheckBox,\n  Divider,\n  Layout,\n  Text,\n  Toggle,\n  useTheme,\n} from '@ui-kitten/components';\nimport { useState } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport {\n  classPagesSlice,\n  filtersReset,\n  filtersSaved,\n  isHMCUpdated,\n} from './classPagesSlice';\n\nexport default function FilterClasses({ darkMode, setFiltersMenuVisible }) {\n  const theme = useTheme();\n  const initialFilters = classPagesSlice.getInitialState().filters;\n  const filters = useAppSelector((state) => state.appData.classPages.filters);\n  const isHMC = useAppSelector((state) => state.appData.classPages.isHMC);\n\n  const [colleges, setColleges] = useState(filters.colleges);\n\n  const dispatch = useAppDispatch();\n\n  const onChangeIsHMC = (change: boolean) => {\n    dispatch(isHMCUpdated(change));\n  };\n\n  const onChangeFilterCollege = (college: string, change: boolean) => {\n    setColleges({ ...colleges, [college]: change });\n  };\n\n  const resetFilters = () => {\n    setColleges(initialFilters.colleges);\n    dispatch(filtersReset());\n  };\n\n  const saveFilters = () => {\n    dispatch(filtersSaved({ colleges }));\n    setFiltersMenuVisible(false);\n  };\n\n  return (\n    <Layout\n      style={{\n        backgroundColor: darkMode\n          ? theme['color-basic-900']\n          : theme['color-basic-100'],\n        alignItems: 'center',\n        padding: 10,\n      }}>\n      <Layout\n        style={{\n          flexDirection: 'row',\n          justifyContent: 'center',\n          alignItems: 'center',\n          marginBottom: 10,\n          backgroundColor: darkMode\n            ? theme['color-basic-900']\n            : theme['color-basic-100'],\n        }}>\n        <Text>4C Credits </Text>\n        <Toggle\n          checked={isHMC}\n          onChange={(change) => {\n            onChangeIsHMC(change);\n          }}\n        />\n        <Text> HMC Credits</Text>\n      </Layout>\n      <Divider />\n      <Text style={{ marginVertical: 5 }}>Colleges</Text>\n      <Layout\n        style={{\n          flexDirection: 'row',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}>\n        {Object.keys(colleges).map((college) => (\n          <CheckBox\n            style={{\n              backgroundColor: darkMode\n                ? theme['color-basic-900']\n                : theme['color-basic-100'],\n            }}\n            key={college}\n            checked={colleges[college]}\n            onChange={(change) => {\n              onChangeFilterCollege(college, change);\n            }}>\n            {college}\n          </CheckBox>\n        ))}\n      </Layout>\n      {/* <Layout style={{ width: '100%' }}>\n        <Text style={{ marginVertical: 5 }}>Semester</Text>\n        <Select\n          placeholder=\"Semester\"\n          value={Object.keys(semesterSelectVals)[semsesterSelectIndex.row]}\n          selectedIndex={semsesterSelectIndex}\n          onSelect={(index) => setSemesterSelectedIndex(index)}>\n          {Object.keys(semesterSelectVals).map((option, i) => (\n            <SelectItem\n              key={i}\n              disabled={semesterSelectVals[option].disabled}\n              title={option}\n            />\n          ))}\n        </Select>\n      </Layout> */}\n      <Button style={{ marginTop: 20 }} onPress={saveFilters}>\n        Update Results\n      </Button>\n      <Button\n        size=\"small\"\n        style={{ marginTop: 20 }}\n        status=\"info\"\n        onPress={resetFilters}>\n        Reset Filters\n      </Button>\n    </Layout>\n  );\n}\n","import {\n  Button,\n  Layout,\n  List,\n  Spinner,\n  Text,\n  useTheme,\n} from '@ui-kitten/components';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { useEffect, useRef, useState } from 'react';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport BottomSheet from '@gorhom/bottom-sheet/lib/typescript/components/bottomSheet/BottomSheet';\nimport {\n  Keyboard,\n  Platform,\n  RefreshControl,\n  TouchableOpacity,\n} from 'react-native';\nimport { selectDarkMode, selectUserKey } from '../../app/appDataSlice';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport Message from '../../components/Message';\nimport SearchBar from '../../components/SearchBar';\nimport {\n  useAddClassMutation,\n  useRemoveClassMutation,\n  useLazyGetAllClassesQuery,\n} from '../api/classPagesApi';\nimport { useGetUserInfoQuery, useLazyGetUserInfoQuery } from '../api/usersApi';\nimport {\n  classSelected,\n  endOfListReached,\n  resetClasses,\n  searchTermUpdated,\n  selectClassesList,\n} from './classPagesSlice';\nimport Item from './ClassListItem';\nimport { RENDERED_RESULTS_LIMIT } from '../../constants/classPages';\nimport SingleClassPage from './SingleClassPage';\nimport AddedClasses from './AddedClasses';\nimport FilterClasses from './FilterClasses';\nimport ModalContainer from '../../components/ModalContainer';\n\nexport const CurrentTermLabel = ({\n  navigation,\n  currentSection,\n  style = {},\n  textStyle = {},\n}) => {\n  return (\n    <TouchableOpacity\n      style={style}\n      onPress={() => navigation.navigate('SelectTerm')}>\n      <Text category=\"label\" style={textStyle}>\n        {`Term: ${currentSection}`}\n      </Text>\n    </TouchableOpacity>\n  );\n};\n\nexport default function ClassesList({ navigation }) {\n  const [menuOpen, setMenuOpen] = useState(null);\n  const [addedClassesVisible, setAddedClassesVisible] = useState(false);\n  const [filtersMenuVisible, setFiltersMenuVisible] = useState(false);\n  const [listRef, setListRef] = useState(null);\n\n  const [addClass] = useAddClassMutation();\n  const [removeClass] = useRemoveClassMutation();\n  const [fetchUserInfo] = useLazyGetUserInfoQuery();\n  const [getClasses, { isLoading: classListLoading, isError }] =\n    useLazyGetAllClassesQuery();\n  const currentSection = useAppSelector(\n    (state) => state.appData.classPages.currentSection\n  );\n\n  // Selectors\n  const filters = useAppSelector((state) => state.appData.classPages.filters);\n  const classes = useAppSelector(selectClassesList);\n  const userKey = useAppSelector(selectUserKey);\n  const page = useAppSelector((state) => state.appData.classPages.page);\n  const darkMode = useAppSelector(selectDarkMode);\n  const searchTerm = useAppSelector(\n    (state) => state.appData.classPages.searchTerm\n  );\n  const renderedClasses = useAppSelector(\n    (state) => state.appData.classPages.renderedClasses\n  );\n  const suggestedClasses = useAppSelector(\n    (state) => state.appData.classPages.suggestedClasses\n  );\n\n  const { data: userData, isSuccess: userInfoSuccess } = useGetUserInfoQuery(\n    userKey,\n    { skip: !userKey }\n  );\n  const collegeName = userData?.collegeName || 'claremontColleges';\n\n  const userName = userData?.userName;\n  const addedClasses = userData?.addedClasses?.classes;\n  const length = userData?.addedClasses?.classes?.[currentSection]\n    ? Object.keys(userData.addedClasses.classes?.[currentSection]).length\n    : 0;\n\n  // Other Hooks\n  const theme = useTheme();\n  const dispatch = useAppDispatch();\n  const bottomSheetRef = useRef<BottomSheet>(null);\n\n  useEffect(() => {\n    fetchClasses();\n  }, []);\n\n  const fetchClasses = () => {\n    if (Object.keys(classes).length === 0) {\n      try {\n        getClasses({\n          userKey,\n          collegeName,\n          courseTerm: currentSection,\n        }).unwrap();\n      } catch (e) {\n        console.warn('Error getting classes: ', e);\n      }\n    } else {\n      dispatch(resetClasses());\n    }\n  };\n\n  const handleRefresh = () => {\n    fetchUserInfo(userKey);\n    fetchClasses();\n  };\n\n  const handleSearch = (searchPhrase: string) => {\n    if (listRef) {\n      listRef.scrollToOffset({ animated: true, offset: 0 });\n    }\n    dispatch(searchTermUpdated(searchPhrase));\n  };\n\n  const handleClassSelected = (courseCode: string) => {\n    dispatch(classSelected(courseCode));\n    if (Platform.OS === 'web') {\n      navigation.navigate('SingleClassPage');\n    } else {\n      bottomSheetRef.current?.snapToIndex(0);\n    }\n  };\n\n  const handleAddClass = (courseCode: string, masterCourseCode: string) => {\n    try {\n      addClass({\n        userKey,\n        courseCode,\n        courseTerm: currentSection,\n        userName,\n        masterCourseCode,\n      }).unwrap();\n    } catch (e) {\n      console.warn('Add class error: ', e);\n    }\n  };\n\n  const handleRemoveClass = (courseCode: string, masterCourseCode: string) => {\n    try {\n      removeClass({\n        userKey,\n        courseCode,\n        courseTerm: currentSection,\n        userName,\n        masterCourseCode,\n      }).unwrap();\n    } catch (e) {\n      console.warn('Add class error: ', e);\n    }\n  };\n\n  const renderItem = ({ item: [masterCourseCode, courseInfo] }) => {\n    // check if course is in addedClasses set and set to true if it is\n    let inItem = [];\n    const schedule = courseInfo.times.map((time) => {\n      if (\n        currentSection in addedClasses &&\n        masterCourseCode in addedClasses[currentSection] &&\n        addedClasses[currentSection][masterCourseCode].includes(time.courseCode)\n      ) {\n        inItem.push(time.courseCode);\n        return { ...time, added: true };\n      } else {\n        inItem.push(time.courseCode);\n        return { ...time, added: false };\n      }\n    });\n\n    return (\n      <Item\n        courseName={courseInfo.courseName}\n        masterCourseCode={masterCourseCode}\n        schedule={schedule}\n        menuOpen={menuOpen}\n        setIsMenuOpen={setMenuOpen}\n        darkMode={darkMode}\n        handleClassSelected={handleClassSelected}\n        handleAddClass={handleAddClass}\n        handleRemoveClass={handleRemoveClass}\n        inItem={inItem}\n      />\n    );\n  };\n\n  const accessoryLeft = (\n    <Layout style={{ flexDirection: 'row', backgroundColor: 'transparent' }}>\n      <TouchableOpacity\n        onPress={() => setAddedClassesVisible(!addedClassesVisible)}\n        style={{ justifyContent: 'center', marginRight: 10 }}>\n        <FontAwesome5\n          name=\"list-ul\"\n          size={24}\n          color={darkMode ? theme['color-basic-500'] : theme['color-basic-200']}\n        />\n        {length > 0 ? (\n          <Layout\n            style={{\n              position: 'absolute',\n              backgroundColor: darkMode ? 'red' : '#fff',\n              borderRadius: 10,\n              paddingHorizontal: 3,\n              right: -7,\n              top: -3,\n            }}>\n            <Text>{length}</Text>\n          </Layout>\n        ) : null}\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={{ justifyContent: 'center', marginRight: 10 }}\n        onPress={() => setFiltersMenuVisible(!filtersMenuVisible)}>\n        <FontAwesome5\n          name={filtersMenuVisible ? 'chevron-up' : 'chevron-down'}\n          size={24}\n          color={darkMode ? theme['color-basic-500'] : theme['color-basic-200']}\n        />\n      </TouchableOpacity>\n    </Layout>\n  );\n\n  const renderFilteredCollegesList = () => {\n    const filteredColleges = Object.keys(filters.colleges).filter(\n      (c) => filters.colleges[c]\n    );\n\n    if (filteredColleges.length < 5) {\n      return (\n        <Text\n          category=\"label\"\n          style={{ fontStyle: 'italic', marginTop: 5, color: '#fff' }}>\n          {`Colleges: ${filteredColleges.join(', ')}`}\n        </Text>\n      );\n    } else {\n      return (\n        <Layout style={{ backgroundColor: 'transparent', marginTop: 20 }} />\n      );\n    }\n  };\n\n  // Decide what content to render\n  let content: keyof JSX.IntrinsicElements | JSX.Element;\n\n  let coursesToRender = Object.entries(renderedClasses).slice(\n    0,\n    RENDERED_RESULTS_LIMIT * page\n  );\n\n  if (classListLoading || !userInfoSuccess) {\n    content = <Message title=\"Loading Classes\" item={<Spinner />} />;\n  } else if (isError) {\n    content = (\n      <Message\n        title=\"Error Loading Classes\"\n        item={<Button onPress={fetchClasses}>Refresh</Button>}\n      />\n    );\n  } else {\n    content = (\n      <>\n        <List\n          style={{ backgroundColor: 'transparent' }}\n          contentContainerStyle={{ paddingBottom: 20 }}\n          ListHeaderComponent={\n            Object.entries(suggestedClasses).length > 0 &&\n            searchTerm.length === 0 && (\n              <List\n                ListHeaderComponent={\n                  <Text\n                    category=\"label\"\n                    style={{ color: '#fff', marginLeft: 20 }}>\n                    Suggested Electives\n                  </Text>\n                }\n                style={{\n                  backgroundColor: 'rgba(0,0,0,.2)',\n                  borderRadius: 20,\n                  margin: 10,\n                  paddingBottom: 10,\n                  paddingTop: 3,\n                }}\n                contentContainerStyle={{ paddingBottom: 100 }}\n                data={Object.entries(suggestedClasses)}\n                renderItem={renderItem}\n                keyExtractor={([courseCode, _]) => courseCode}\n                onScroll={Keyboard.dismiss}\n                scrollEventThrottle={16}\n              />\n            )\n          }\n          data={Object.entries(renderedClasses).slice(\n            0,\n            RENDERED_RESULTS_LIMIT * page\n          )}\n          renderItem={renderItem}\n          keyExtractor={([courseCode, _]) => courseCode}\n          maxToRenderPerBatch={10}\n          ListEmptyComponent={\n            <Message\n              title=\"No Classes Found\"\n              item={<Button onPress={fetchClasses}>Refresh</Button>}\n            />\n          }\n          initialNumToRender={10}\n          showsVerticalScrollIndicator={false}\n          // ListHeaderComponent={() => <Layout style={{minHeight: 67, opacity: 0}}/>}\n          onEndReachedThreshold={0.5}\n          onEndReached={() => dispatch(endOfListReached())}\n          refreshControl={\n            <RefreshControl\n              refreshing={classListLoading}\n              onRefresh={handleRefresh}\n              title=\"Pull to refresh\"\n              tintColor={theme['color-basic-100']}\n              titleColor={theme['color-basic-100']}\n            />\n          }\n          ref={(ref) => {\n            setListRef(ref);\n          }}\n          onScroll={Keyboard.dismiss}\n          scrollEventThrottle={16}\n        />\n      </>\n    );\n  }\n\n  return (\n    <Layout style={{ flex: 1 }}>\n      <LinearGradient\n        colors={\n          darkMode\n            ? [theme['color-basic-1100'], theme['color-basic-1100']]\n            : [theme['color-primary-500'], theme['color-success-500']]\n        }\n        style={{ width: '100%', margin: 0, flex: 1 }}\n        start={{ x: 0, y: 0 }}\n        end={{ x: 1, y: 0.4 }}>\n        <LinearGradient\n          colors={[\n            // 'rgba(219,76,113,1)',\n            // 'rgba(219,76,113,00)',\n\n            'rgba(225,78,106,0)',\n            'rgba(225,78,106,0)',\n            // 'rgba(225,78,106,.6)',\n            // 'rgba(225,78,106,0)',\n          ]}\n          locations={[0, 1]}\n          style={{\n            zIndex: 1,\n            width: '100%',\n            paddingHorizontal: 20,\n            paddingTop: 7,\n          }}>\n          <CurrentTermLabel\n            navigation={navigation}\n            currentSection={currentSection}\n            textStyle={{ color: '#fff', paddingBottom: 5, marginLeft: 80 }}\n          />\n          <SearchBar\n            accessoryLeft={accessoryLeft}\n            searchTerm={searchTerm}\n            onChangeText={handleSearch}\n            inputProps={{ autoCorrect: false }}\n            placeholder=\"Search classes...\"\n            alwaysShowCancelButton={Platform.OS === 'web'}\n            cancelButtonAction={\n              Platform.OS === 'web' ? handleRefresh : () => {}\n            }\n          />\n          {renderFilteredCollegesList()}\n        </LinearGradient>\n\n        {content}\n      </LinearGradient>\n\n      <ModalContainer\n        setBackDropVisible={setAddedClassesVisible}\n        backDropVisible={addedClassesVisible}\n        title=\"Added Classes\">\n        {addedClasses && currentSection ? (\n          <AddedClasses\n            setAddedClassesVisible={setAddedClassesVisible}\n            addedClasses={addedClasses[currentSection] || {}}\n            handleRemoveClass={handleRemoveClass}\n            darkMode={darkMode}\n          />\n        ) : (\n          <Layout\n            style={{\n              flex: 1,\n              alignItems: 'center',\n              borderRadius: 20,\n              paddingTop: 50,\n            }}>\n            <Text>Loading</Text>\n            <Spinner />\n          </Layout>\n        )}\n      </ModalContainer>\n\n      <ModalContainer\n        setBackDropVisible={setFiltersMenuVisible}\n        backDropVisible={filtersMenuVisible}\n        title=\"Filters\">\n        <FilterClasses\n          setFiltersMenuVisible={setFiltersMenuVisible}\n          darkMode={darkMode}\n        />\n      </ModalContainer>\n      {Platform.OS !== 'web' && (\n        <SingleClassPage bottomSheetRef={bottomSheetRef} />\n      )}\n    </Layout>\n  );\n}\n","import {\n  Alert,\n  Animated,\n  Dimensions,\n  LogBox,\n  Platform,\n  SafeAreaView,\n  ScrollView,\n  Text,\n  TouchableOpacity,\n  View,\n} from 'react-native';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport {\n  classSelected,\n  selectClassesList,\n} from '../classPages/classPagesSlice';\nimport {\n  appDataSlice,\n  selectDarkMode,\n  selectUserKey,\n} from '../../app/appDataSlice';\nimport { useNavigation } from '@react-navigation/native';\nimport renderCustomEvent from './customEvent';\nimport { useGetCurrentSectionQuery } from '../api/classPagesApi';\nimport renderItem from './ScheduledItem';\nimport CalendarFunctions from './CalendarFunctions';\nimport {\n  useEditUserMutation,\n  useGetUserInfoQuery,\n  usersApiSlice,\n} from '../api/usersApi';\nimport { Button, Layout, useTheme } from '@ui-kitten/components';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport BottomSheet from '@gorhom/bottom-sheet/lib/typescript/components/bottomSheet/BottomSheet';\nimport SingleClassPage from '../classPages/SingleClassPage';\nimport Toast from 'react-native-root-toast';\nimport { CurrentTermLabel } from '../classPages/ClassesList';\nimport moment from \"moment-timezone\";\n\nLogBox.ignoreAllLogs();\n\nexport default function CalendarPage({ navigation }) {\n  const isWeb = Platform.OS === 'web';\n  const [editUser] = useEditUserMutation();\n  const userKey = useAppSelector(selectUserKey);\n  const isThreeDay = useAppSelector(\n    (state) => state.appData.calendar.isThreeDay\n  );\n  const dispatch = useAppDispatch();\n  const bottomSheetRef = useRef<BottomSheet>(null);\n  const darkMode: Boolean = useAppSelector(selectDarkMode);\n  const calendarFun = new CalendarFunctions();\n  const universalHeight = (Dimensions.get('window').height - 50) / 12;\n  const threeDayWidth = (Dimensions.get('window').width - 75) / 3;\n  const fiveDayWidth = (Dimensions.get('window').width - 75) / 5;\n  const days = [\n    { day: 'Mon', id: 'Monday' },\n    { day: 'Tues', id: 'Tuesday' },\n    { day: 'Wed', id: 'Wednesday' },\n    { day: 'Thurs', id: 'Thursday' },\n    { day: 'Fri', id: 'Friday' },\n    { day: 'Sat', id: 'Saturday' },\n    { day: 'Sun', id: 'Sunday' },\n  ];\n  const times = [\n    '12:00 AM',\n    '1:00 AM',\n    '2:00 AM',\n    '3:00 AM',\n    '4:00 AM',\n    '5:00 AM',\n    '6:00 AM',\n    '7:00 AM',\n    '8:00 AM',\n    '9:00 AM',\n    '10:00 AM',\n    '11:00 AM',\n    '12:00 PM',\n    '1:00 PM',\n    '2:00 PM',\n    '3:00 PM',\n    '4:00 PM',\n    '5:00 PM',\n    '6:00 PM',\n    '7:00 PM',\n    '8:00 PM',\n    '9:00 PM',\n    '10:00 PM',\n    '11:00 PM',\n  ];\n\n  const { data: userData } =\n    usersApiSlice.endpoints.getUserInfo.useQueryState(userKey);\n  let addedClasses = userData?.addedClasses?.classes;\n  const allClassData = useAppSelector(selectClassesList);\n  const currentSection = useAppSelector(\n    (state) => state.appData.classPages.currentSection\n  );\n\n  const renderCustomEvents = (elem) => {\n    let finalRender = [];\n    if (!userData.customEvents) {\n      return null;\n    }\n    for (const event of userData.customEvents) {\n      if (event.days.includes(elem.id)) {\n        finalRender.push(renderCustomEvent(event, userData, userKey, editUser));\n      } else if (event.date && eventIsThisDay(elem.id, new Date(event.date)) && showThisWeek(new Date(event.date))) {\n        finalRender.push(renderCustomEvent(event, userData, userKey, editUser));\n      }\n    }\n    return finalRender;\n  };\n\n  function eventIsThisDay(dayString: String, date: Date) {\n    let dayOfWeek = adjustDays(date.getDay())\n    return dayString === days[dayOfWeek].id\n  }\n\n  function adjustDays(dayOfWeek) {\n    if (dayOfWeek === 0) {\n      dayOfWeek = 6\n    } else {\n      dayOfWeek -= 1\n    }\n    return dayOfWeek\n  }\n\n  function getMs(hours, minutes, seconds) {\n    let final = 0\n    final += hours * 3600000\n    final += minutes * 60000\n    final += seconds * 1000\n    return final\n  }\n\n\n  function showThisWeek(dateOfEvent: Date) {\n    const currentDate = new Date()\n    const currentDayOfWeek = adjustDays(currentDate.getDay())\n    const startOfWeek = new Date(currentDate.valueOf() - (currentDayOfWeek * 86400000) - getMs(currentDate.getHours(), currentDate.getMinutes(), currentDate.getSeconds()))\n    const endOfWeek = new Date(currentDate.valueOf() + ((6 - currentDayOfWeek) * 86400000) + getMs(23 - currentDate.getHours(), 59 - currentDate.getMinutes(), 59 - currentDate.getSeconds()))\n    return !(\n        dateOfEvent.valueOf() > endOfWeek.valueOf()\n          || dateOfEvent.valueOf() < startOfWeek.valueOf()\n    )\n  }\n\n  const handleClassSelected = (courseCode: string) => {\n    dispatch(classSelected(courseCode));\n    if (Platform.OS === 'web') {\n      navigation.navigate('SingleClassPage');\n    } else {\n      bottomSheetRef.current?.snapToIndex(0);\n    }\n  };\n\n  function renderDashes() {\n    let final = [];\n    for (let i = 0; i < 24; i++) {\n      final.push(\n        <View\n          style={{\n            width: (isThreeDay ? threeDayWidth : fiveDayWidth) * 0.73016,\n            marginLeft: (isThreeDay ? threeDayWidth : fiveDayWidth) * 0.14286,\n            top: universalHeight * i,\n            position: 'absolute',\n            height: universalHeight,\n            borderBottomWidth: Platform.OS === 'web' ? 1.2 : 0.7,\n            borderBottomColor: darkMode ? 'rgb(68,68,68)' : 'rgb(204,204,204)',\n          }}\n        />\n      );\n    }\n    return final;\n  }\n\n  const renderClasses = (elem) => {\n    let classes = [];\n    Object.keys(addedClasses).map((term) => {\n      if (term === currentSection) {\n        Object.keys(addedClasses[term]).map((masterCourseCode) => {\n          for (const courseCode of addedClasses[term][masterCourseCode]) {\n            try {\n              let data = calendarFun.getFullClassData(courseCode, allClassData);\n              let data2 = data.times.find(\n                (time) => time.courseCode === courseCode\n              );\n              for (const day in data2['daysOfTheWeek']) {\n                if (data2['daysOfTheWeek'][day] === elem.id) {\n                  classes.push(\n                    renderItem(data, courseCode, handleClassSelected)\n                  );\n                }\n              }\n            } catch (e) {\n              console.log(e);\n            }\n          }\n        });\n      }\n    });\n    return classes;\n  };\n\n  const topBar = useRef(null);\n  const [startingOffset, setStartingOffset] = useState({ x: 0, y: 292 });\n\n  return (\n    <View style={{ flex: 1, backgroundColor: darkMode ? null : 'white' }}>\n      {/* Times */}\n      <CurrentTermLabel navigation={navigation} currentSection={currentSection} style={{margin: 10}}/>\n      <ScrollView\n        horizontal={true}\n        snapToInterval={isThreeDay ? threeDayWidth : fiveDayWidth}\n        showsHorizontalScrollIndicator={false}\n        style={{ marginLeft: 75, height: isWeb ? 50 : undefined }}\n        ref={topBar}>\n        <View style={{ flexDirection: 'row' }}>\n          {days.map((elem) => {\n            return (\n              <View>\n                <View\n                  style={{\n                    borderColor: darkMode ? '#7a7a7a' : '#525252',\n                    borderBottomWidth: 1,\n                    width: '100%',\n                  }}>\n                  <Text\n                    style={{\n                      textAlign: 'center',\n                      color: darkMode ? '#7a7a7a' : '#525252',\n                      width: isThreeDay ? threeDayWidth : fiveDayWidth,\n                    }}>\n                    {elem.day}\n                  </Text>\n                </View>\n              </View>\n            );\n          })}\n        </View>\n      </ScrollView>\n      <ScrollView\n        contentOffset={startingOffset}\n        showsVerticalScrollIndicator={false}\n        bounces={false}>\n        <View style={{ flexDirection: 'row' }}>\n          <View\n            style={{\n              justifyContent: 'space-around',\n              //height: 1000,\n            }}>\n            {times.map((time) => {\n              return (\n                <Text\n                  style={{\n                    height: universalHeight,\n                    width: 75,\n                    borderWidth: 1,\n                    borderColor: darkMode ? '#7a7a7a' : '#525252',\n                    textAlign: 'center',\n                    color: darkMode ? '#7a7a7a' : '#525252',\n                  }}>\n                  {time}\n                </Text>\n              );\n            })}\n          </View>\n          {/* Classes */}\n          <ScrollView\n            horizontal={true}\n            snapToInterval={isThreeDay ? threeDayWidth : fiveDayWidth}\n            decelerationRate={'normal'}\n            showsHorizontalScrollIndicator={false}\n            bounces={false}\n            scrollEventThrottle={1}\n            onScroll={(e) =>\n              topBar.current.scrollTo({\n                x: e.nativeEvent.contentOffset.x,\n                animated: false,\n                useNativeDriver: true,\n              })\n            }\n            onMomentumScrollBegin={(e) =>\n              topBar.current.scrollTo({\n                x: e.nativeEvent.contentOffset.x,\n                animated: false,\n                useNativeDriver: true,\n              })\n            }>\n            <View style={{ flexDirection: 'row' }}>\n              {days.map((elem) => {\n                return (\n                  <View>\n                    {renderDashes()}\n                    <View\n                      key={elem.day}\n                      style={{\n                        width: isThreeDay ? threeDayWidth : fiveDayWidth,\n                      }}>\n                      {userData?.addedClasses && renderClasses(elem)}\n                      {userData?.addedClasses && renderCustomEvents(elem)}\n                    </View>\n                    <View\n                      style={{\n                        height: '100%',\n                        width: 1,\n                        backgroundColor: darkMode ? '#7a7a7a' : '#525252',\n                      }}\n                    />\n                  </View>\n                );\n              })}\n            </View>\n          </ScrollView>\n        </View>\n      </ScrollView>\n\n      {Platform.OS !== 'web' && (\n        <SingleClassPage bottomSheetRef={bottomSheetRef} />\n      )}\n    </View>\n  );\n}\n\nconst myStyles = {\n  input: {\n    height: 50,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n  },\n  indentedInput: {\n    height: 50,\n    marginVertical: 12,\n    borderWidth: 1,\n    padding: 10,\n    marginRight: 12,\n    marginLeft: 30,\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white',\n  },\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 12,\n    paddingHorizontal: 32,\n    borderRadius: 4,\n    elevation: 3,\n    backgroundColor: 'black',\n  },\n  timeButton: {\n    width: 100,\n    height: 50,\n    marginHorizontal: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 4,\n    backgroundColor: '#c45269',\n  },\n  timeText: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white',\n  },\n  actualTimeText: {\n    fontSize: 13,\n    lineHeight: 18,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white',\n  },\n};\n\nconst sponsorPageStyles = {\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    // alignItems: 'center',\n  },\n  header: {\n    marginTop: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n  },\n  address: {\n    alignItems: 'center',\n    margin: 10,\n    borderColor: 'black',\n    borderWidth: 1,\n    padding: 10,\n  },\n  video: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-start',\n  },\n  title: {\n    fontSize: 26,\n    marginLeft: 10,\n  },\n  logo: {\n    width: '100%',\n    height: 100,\n  },\n  description: {\n    borderWidth: 1,\n    margin: 10,\n    borderColor: '#5d5c5c',\n    borderRadius: 5,\n    width: '95%',\n    padding: 10,\n    backgroundColor: 'rgba(178,166,166,0.22)',\n  },\n  couponContainer: {\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 20,\n    marginBottom: 20,\n  },\n  coupon: {\n    width: 400,\n    height: 267,\n  },\n  imageGallery: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    margin: 10,\n    marginBottom: 0,\n  },\n  imageStyle: {\n    width: 150,\n    height: 150,\n    paddingTop: 100,\n    margin: 5,\n  },\n  headerText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n};\n","import {JSXElementConstructor, ReactElement, useEffect, useState} from \"react\";\nimport {base_URL} from \"../notifications/constants\";\nimport {useAppSelector} from \"../../app/hooks\";\nimport {selectDarkMode, selectUserKey} from \"../../app/appDataSlice\";\nimport {Autocomplete, AutocompleteItem, Card, Modal} from \"@ui-kitten/components\";\nimport {Alert, Button, View, Text} from \"react-native\";\nimport {useGetUserInfoQuery} from \"../api/usersApi\";\nimport {useGetCurrentSectionQuery} from \"../api/classPagesApi\";\nimport renderItem from \"./ScheduledItem\";\nimport UserNameSelectionDropDown from \"../../components/UserNameSelectionDropDown\";\n\nexport default function renderModal(setShowModal, showModal) {\n    const {data: userData} = useGetUserInfoQuery(useAppSelector(selectUserKey));\n    const {data: currentSection} = useGetCurrentSectionQuery();\n    const darkMode = useAppSelector(selectDarkMode)\n    const userKey = useAppSelector(selectUserKey)\n    const [ names, setNames ] = useState([])\n    const [ users, setUsers ] = useState([])\n    const [ value, setValue ] = useState('')\n    const [ hasChosen, setHasChosen ] = useState(false)\n    const [ recipient, setRecipient ] = useState(null)\n\n    const myStyles = {\n        modal: {\n            fontSize: 18, paddingBottom: 20, fontWeight: 'bold',\n            textAlign: 'center', width: '100%', color: darkMode ? 'rgb(255,255,255)' : 'rgb(0,0,0)'\n        },\n        backdrop: {\n            backgroundColor: darkMode ? 'rgba(141,141,141,0.5)' : 'rgba(0, 0, 0, 0.5)',\n        },\n        containerDrop: {\n            minWidth: 200,\n            paddingBottom: 15\n        },\n    }\n\n    useEffect(() => {\n        fetch(base_URL + '/users/userNamesAndNames', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'userKey': userKey\n            }\n        }).then(async (data) => {\n            if (data.ok) {\n                const userList = await data.json();\n                setNames(userList.map(user => {\n                    if (user) {\n                        return user.realName + ' (' + user.userName + ')'\n                    }\n                }))\n                setUsers(userList)\n            }\n        })\n    }, [])\n\n    const exportSchedule = async (recipient) => {\n        function convert(addedClasses) {\n            let final = []\n            Object.keys(addedClasses).map((term) => {\n                if (term === currentSection) {\n                    Object.keys(addedClasses[term]).map((masterCourseCode) => {\n                        for (const courseCode of addedClasses[term][masterCourseCode]) {\n                            final.push({\n                                courseCode,\n                                courseTerm: currentSection\n                            })\n                        }\n                    });\n                }\n            });\n            return final\n        }\n        let status = await fetch(base_URL + '/users/sendNotification', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'userKey': userKey\n            },\n            body: JSON.stringify({\n                recipients: [recipient],\n                text: JSON.stringify(convert(userData.addedClasses?.classes)),\n                title: userData.realFirstName + \"'s Schedule\",\n                isSchedule: true\n            })\n        })\n        return status.ok\n    }\n    return (\n        <Modal\n            visible={showModal}\n            backdropStyle={myStyles.backdrop}\n            style={{ width: '80%', height: '70%' }}\n            onBackdropPress={() => setShowModal(false)}>\n            <Card disabled={true}>\n                <Text style={myStyles.modal}>\n                    Share Your Schedule\n                </Text>\n                {UserNameSelectionDropDown({setHasChosen, setRecipient, placeholder: false})}\n                <View>\n                    <Button disabled={recipient === null} title={'Send'} onPress={() => {\n                        exportSchedule(recipient).then((returnValue) => {\n                            setShowModal(false)\n                            returnValue ? Alert.alert('Message Sent') :\n                                Alert.alert('Error Sending Message', 'Please Try Again Later')\n                        })\n                    }} />\n                    <Button title={'Dismiss'} onPress={() => {\n                        setShowModal(false)\n                    }} />\n                </View>\n            </Card>\n        </Modal>\n    );\n}","import { View } from 'react-native';\nimport React, { useState } from 'react';\nimport {\n  Button,\n  IndexPath,\n  Layout,\n  Select,\n  SelectItem,\n  Text,\n} from '@ui-kitten/components';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { TouchableOpacity } from 'react-native';\nimport { useLazyGetAllClassesQuery } from '../api/classPagesApi';\nimport { usersApiSlice } from '../api/usersApi';\nimport { currentSectionUpdated } from './classPagesSlice';\n\nexport default function SelectTerm({ navigation }) {\n  const dispatch = useAppDispatch();\n\n  const availableSections = useAppSelector(\n    (state) => state.appData.classPages.availableSections\n  );\n  const userKey = useAppSelector((state) => state.appData.secure.userKey);\n  const currentSection = useAppSelector(\n    (state) => state.appData.classPages.currentSection\n  );\n\n  const { data: userDataCache } =\n    usersApiSlice.endpoints.getUserInfo.useQueryState(userKey, {\n      skip: !userKey,\n    });\n  const [getAllClasses] = useLazyGetAllClassesQuery();\n\n  let startIndexValue =\n    availableSections.findIndex((term) => term == currentSection) || 0;\n\n  const [selectedSectionIndex, setSelectedSectionIndex] = useState<IndexPath>(\n    new IndexPath(startIndexValue)\n  );\n\n  const saveChanges = () => {\n    if (availableSections[selectedSectionIndex.row] !== currentSection) {\n      try {\n        getAllClasses({\n          userKey,\n          collegeName: userDataCache.collegeName,\n          courseTerm: availableSections[selectedSectionIndex.row],\n        }).unwrap();\n\n        dispatch(\n          currentSectionUpdated(availableSections[selectedSectionIndex.row])\n        );\n      } catch (e) {\n        console.log('Changing section: could not fetch classes', e);\n      }\n    }\n\n    navigation.goBack();\n  };\n\n  return (\n    <Layout style={{ flex: 1 }}>\n      <Layout\n        style={{\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          margin: 20,\n          marginTop: 60,\n        }}>\n        <TouchableOpacity\n          onPress={() => {\n            navigation.goBack();\n          }}>\n          <Text>Cancel</Text>\n        </TouchableOpacity>\n\n        <Text category=\"s1\">Select Term</Text>\n\n        <TouchableOpacity onPress={saveChanges}>\n          <Text>Save</Text>\n        </TouchableOpacity>\n      </Layout>\n\n      <Select\n        style={{ margin: 20 }}\n        label=\"Term\"\n        value={availableSections[selectedSectionIndex.row]}\n        selectedIndex={selectedSectionIndex}\n        onSelect={(index: IndexPath) => {\n          setSelectedSectionIndex(index);\n        }}>\n        {availableSections.map((term, index) => (\n          <SelectItem key={index} title={term} />\n        ))}\n      </Select>\n    </Layout>\n  );\n}\n","import React, { useState } from 'react';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Button, Layout, Text, useTheme } from '@ui-kitten/components';\nimport Toggle from 'react-native-toggle-element';\nimport CreateCustomEvent from './CreateCustomEvent';\nimport CalendarPage from './CalendarPage';\nimport Header from '../../components/Header';\nimport {\n  Dimensions,\n  Image,\n  Platform,\n  TouchableOpacity,\n  View,\n} from 'react-native';\nimport { FontAwesome5, MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport {\n  selectDarkMode,\n  selectIsGuest,\n  selectUserKey,\n} from '../../app/appDataSlice';\nimport { base_URL } from '../notifications/constants';\nimport renderModal from './exportModal';\nimport { isThreeDaySet } from './calendarSlice';\nimport ModalContainer from '../../components/ModalContainer';\nimport SingleClassPage from '../classPages/SingleClassPage';\nimport SelectTerm from '../classPages/SelectTerm';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function Calendar() {\n    const navigation = useNavigation()\n  const isThreeDay = useAppSelector(\n    (state) => state.appData.calendar.isThreeDay\n  );\n  const theme = useTheme();\n  const dispatch = useAppDispatch();\n  const isGuest = useAppSelector(selectIsGuest);\n  const darkMode = useAppSelector(selectDarkMode);\n  const userKey = useAppSelector(selectUserKey);\n  const [showModal, setShowModal] = useState(false);\n  const [showGuestModal, setShowGuestModal] = useState(false);\n  async function sendNotification(bodyTosend) {\n    await fetch(base_URL + '/users/sendNotification', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        userKey: userKey,\n      },\n      body: JSON.stringify(bodyTosend),\n    });\n  }\n  const accessoryLeft = (\n    <Image\n      style={{\n        height: 28,\n        width: 28,\n        alignItems: 'center',\n      }}\n      source={require('../../../assets/logos/app-logo-transparent.png')}\n    />\n  );\n\n  const title = (\n      <View\n          style={{\n              alignItems: 'center',\n              paddingRight: 20,\n          }}>\n          {Dimensions.get('window').width < 525 && (\n              <Toggle\n                  leftComponent={\n                      <MaterialCommunityIcons name=\"numeric-5\" size={25} color=\"#fff\" />\n                  }\n                  rightComponent={\n                      <MaterialCommunityIcons name=\"numeric-3\" size={25} color=\"#fff\" />\n                  }\n                  trackBar={{\n                      activeBackgroundColor: theme['color-primary-500'],\n                      inActiveBackgroundColor: theme['color-primary-500'],\n                      width: 60,\n                      height: 23,\n                  }}\n                  thumbButton={{\n                      width: 30,\n                      height: 30,\n                      activeBackgroundColor: theme['color-primary-800'],\n                      inActiveBackgroundColor: theme['color-primary-300'],\n                      activeColor: theme['color-primary-100'],\n                      inActiveColor: '#fff',\n                      borderWidth: 5,\n                  }}\n                  value={isThreeDay}\n                  onPress={(bool) => dispatch(isThreeDaySet(!bool))}\n              />\n          )}\n      </View>\n  )\n  const accessoryRight = (\n    <View\n      style={{\n        paddingHorizontal: 0,\n        alignItems: 'center',\n        flexDirection: 'row',\n      }}>\n        <TouchableOpacity\n            onPress={() => {\n                if (isGuest) {\n                    setShowGuestModal(true);\n                } else {\n                    // @ts-ignore\n                    navigation.navigate('CreateCustomEvent');\n                }\n            }}\n            style={{\n                marginRight: 10,\n                alignItems: 'center',\n            }}>\n            <View\n                style={{\n                    height: 45,\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    justifyContent: 'flex-end',\n                }}>\n                <FontAwesome5\n                    name={'plus'}\n                    size={20}\n                    color={darkMode ? 'white' : 'black'}\n                />\n                <Text style={{ paddingTop: 5, fontSize: 10 }}>Add Event</Text>\n            </View>\n        </TouchableOpacity>\n        { Platform.OS !== 'web' && <TouchableOpacity\n            onPress={() => {\n                if (isGuest) {\n                    setShowGuestModal(true);\n                } else {\n                    setShowModal(true);\n                }\n            }}\n            style={{\n                alignItems: 'center',\n            }}>\n            <View\n                style={{\n                    height: 45,\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    justifyContent: 'flex-end',\n                }}>\n                <FontAwesome5\n                    name={'file-export'}\n                    size={20}\n                    color={darkMode ? 'white' : 'black'}\n                />\n                <Text style={{paddingTop: 5, fontSize: 10}}>Share Schedule</Text>\n            </View>\n        </TouchableOpacity>}\n      {showGuestModal && (\n        <ModalContainer\n          title=\"Wait!\"\n          children={\n            <Text style={{ paddingHorizontal: 30 }}>\n              This feature is locked to our Guest Users. Please create a free\n              account with us to take advantage this feature.\n            </Text>\n          }\n          backDropVisible={showGuestModal}\n          setBackDropVisible={setShowGuestModal}\n        />\n      )}\n      {renderModal(setShowModal, showModal)}\n    </View>\n  );\n  return (\n    <Stack.Navigator>\n      <Stack.Screen\n        name=\"CalendarPage\"\n        component={CalendarPage}\n        options={{\n          header: () => {\n            return (\n              <Layout style={{ paddingBottom: 10 }}>\n                <Header center={title} accessoryRight={accessoryRight} accessoryLeft={accessoryLeft} title=\"Calendar\" />\n              </Layout>\n            );\n          },\n        }}\n      />\n      <Stack.Screen\n        name=\"CreateCustomEvent\"\n        component={CreateCustomEvent}\n        options={{ headerTitle: 'Add Event' }}\n      />\n      {Platform.OS === 'web' && (\n        <Stack.Screen\n          name=\"SingleClassPage\"\n          component={SingleClassPage}\n          options={{ headerShown: false, headerTitle: 'Class Pages' }}\n        />\n      )}\n       <Stack.Screen\n          name=\"SelectTerm\"\n          component={SelectTerm}\n          options={{\n            title: 'Select Term',\n            headerShown: false,\n            animation: 'slide_from_bottom',\n            gestureDirection: 'vertical',\n          }}\n        />\n    </Stack.Navigator>\n  );\n}\n","import { Input, Layout, Spinner, Text } from '@ui-kitten/components';\nimport { TouchableWithoutFeedback } from '@ui-kitten/components/devsupport';\nimport { useState } from 'react';\nimport {\n  Keyboard,\n  KeyboardAvoidingView,\n  Platform,\n  TouchableOpacity,\n} from 'react-native';\nimport { selectUserKey } from '../../app/appDataSlice';\nimport { useAppSelector } from '../../app/hooks';\nimport WrapItems from '../../components/WrapItems';\nimport { useEditUserMutation, useGetUserInfoQuery } from '../api/usersApi';\n\nconst EditProfileHeader = ({ navigation, saveChanges }) => {\n  return (\n    <Layout\n      style={{\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        margin: 20,\n        marginTop: Platform.OS !== 'ios' ? 40 : 20,\n      }}>\n      <TouchableOpacity\n        onPress={() => {\n          navigation.goBack();\n        }}>\n        <Text>Cancel</Text>\n      </TouchableOpacity>\n      <Text category=\"s1\">Edit Profile</Text>\n      <TouchableOpacity onPress={saveChanges}>\n        <Text>Save</Text>\n      </TouchableOpacity>\n    </Layout>\n  );\n};\n\nexport default function EditUser({ navigation }) {\n  const userKey = useAppSelector(selectUserKey);\n  const { data: userData } = useGetUserInfoQuery(userKey, {\n    skip: !userKey,\n  });\n\n  const inputs = [\n    {\n      placeholder: '*******',\n      label: 'password',\n      name: 'password',\n    },\n    {\n      placeholder: userData.realFirstName,\n      label: 'First Name',\n      name: 'realFirstName',\n    },\n    {\n      placeholder: userData.realLastName,\n      label: 'Last Name',\n      name: 'realLastName',\n    },\n    {\n      placeholder: userData.profileDescription,\n      label: 'Profile Description',\n      name: 'profileDescription',\n      propOptions: { multiline: true, textStyle: { minHeight: 64 } },\n    },\n    {\n      placeholder: userData.linkedin,\n      label: 'LinkedIn',\n      name: 'linkedin',\n    },\n    {\n      placeholder: userData.major,\n      label: 'Major',\n      name: 'major',\n    },\n  ];\n\n  const [fields, setFields] = useState(\n    Object.fromEntries(inputs.map((input) => [input.name, '']))\n  );\n  const [editUser, { isLoading }] = useEditUserMutation();\n\n  const saveChanges = async () => {\n    const changedFields = Object.entries(fields).filter(\n      ([_, value]) => value !== ''\n    );\n\n    try {\n      if (changedFields.length > 0) {\n        await editUser({\n          userKey,\n          userName: userData.userName,\n          fields: Object.fromEntries(changedFields),\n        }).unwrap();\n      }\n\n      navigation.goBack();\n    } catch (err) {\n      console.log('Error editing user', err);\n    }\n  };\n\n  return (\n    <Layout style={{ flex: 1 }}>\n      {isLoading ? (\n        <Layout\n          style={{\n            flex: 1,\n            backgroundColor: 'transparent',\n            position: 'absolute',\n            top: '30%',\n            right: '50%',\n            zIndex: 1,\n          }}>\n          <Spinner size=\"medium\" />\n        </Layout>\n      ) : null}\n\n      <EditProfileHeader navigation={navigation} saveChanges={saveChanges} />\n      <KeyboardAvoidingView\n        style={{ flex: 1 }}\n        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}>\n        <TouchableWithoutFeedback\n          style={{ flex: 1 }}\n          onPress={Keyboard.dismiss}>\n          <WrapItems\n            style={{ marginVertical: 20 }}\n            childStyle={{ marginHorizontal: 40, marginVertical: 10 }}>\n            {inputs.map(({ placeholder, label, name, propOptions }) => (\n              <Input\n                key={name}\n                placeholder={placeholder}\n                label={label}\n                onChangeText={(text) => setFields({ ...fields, [name]: text })}\n                {...propOptions}\n              />\n            ))}\n          </WrapItems>\n        </TouchableWithoutFeedback>\n      </KeyboardAvoidingView>\n    </Layout>\n  );\n}\n","import { Button, Divider, Layout, Text, Toggle } from '@ui-kitten/components';\nimport React, { useState } from 'react';\nimport Constants from 'expo-constants';\n\nimport {\n  deviceDarkModeSet,\n  selectDarkMode,\n  selectIsGuest,\n  selectUserKey,\n} from '../../app/appDataSlice';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { reset as resetClassPages } from '../classPages/classPagesSlice';\nimport { reset as resetDiscover } from '../discover/discoverSlice';\nimport {\n  reset as resetAppData,\n  useDeviceColorSchemeSet,\n} from '../../app/appDataSlice';\nimport { apiSlice } from '../api/apiSlice';\nimport { useDeleteAccountMutation, useGetUserInfoQuery } from '../api/usersApi';\nimport WrapItems from '../../components/WrapItems';\nimport { useColorScheme } from 'react-native';\nimport ModalContainer from '../../components/ModalContainer';\n\nexport default function SettingsPage({ navigation }) {\n  const darkMode = useAppSelector(selectDarkMode);\n  const useDeviceColorScheme = useAppSelector(\n    (state) => state.appData.secure.useDeviceColorScheme\n  );\n  const userKey = useAppSelector(selectUserKey);\n  const isGuest = useAppSelector(selectIsGuest);\n  const colorScheme = useColorScheme();\n  const { data: userData } = useGetUserInfoQuery(userKey, {\n    skip: !userKey,\n  });\n  const dispatch = useAppDispatch();\n  const [showGuestModal, setShowGuestModal] = useState(false);\n  const [deleteAccount, { isLoading }] = useDeleteAccountMutation();\n\n  const logOut = () => {\n    dispatch(resetClassPages());\n    dispatch(resetDiscover());\n    dispatch(resetAppData());\n    dispatch(apiSlice.util.resetApiState());\n  };\n\n  const handleDeleteAccount = async () => {\n    try {\n      await deleteAccount({ userKey, userName: userData.userName }).unwrap();\n      logOut();\n    } catch (e) {\n      console.warn('Error deleting account: ', e);\n    }\n  };\n\n  const handleUseDeviceSettingToggled = (checked: boolean) => {\n    dispatch(useDeviceColorSchemeSet(checked));\n    if (checked) {\n      dispatch(deviceDarkModeSet(colorScheme === 'dark'));\n    }\n  };\n\n  const handleDarkModeToggled = (checked: boolean) => {\n    dispatch(useDeviceColorSchemeSet(false));\n    dispatch(deviceDarkModeSet(checked));\n  };\n\n  return (\n    <Layout style={{ flex: 1 }}>\n      <Layout\n        style={{\n          flexDirection: 'row',\n          marginHorizontal: 20,\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          flex: 1,\n        }}>\n        <Layout>\n          <Text category=\"h2\">\n            {userData?.realFirstName} {userData?.realLastName}\n          </Text>\n          <Text category=\"h6\" status=\"success\">\n            @{userData?.userName}\n          </Text>\n        </Layout>\n        <Layout>\n          <Button\n            onPress={() => {\n              if (isGuest) {\n                setShowGuestModal(true);\n              } else {\n                navigation.navigate('EditUser');\n              }\n            }}>\n            Edit\n          </Button>\n        </Layout>\n      </Layout>\n      {showGuestModal && (\n        <ModalContainer\n          title=\"Wait!\"\n          children={\n            <Text style={{ paddingHorizontal: 30 }}>\n              This feature is locked to our Guest Users. Please create a free\n              account with us to take advantage this feature.\n            </Text>\n          }\n          backDropVisible={showGuestModal}\n          setBackDropVisible={setShowGuestModal}\n        />\n      )}\n\n      <Divider />\n\n      <Layout\n        style={{\n          flex: 5,\n          justifyContent: 'space-between',\n          marginHorizontal: 20,\n        }}>\n        <Layout>\n          <Text category=\"h6\" style={{ textAlign: 'center', marginTop: 20 }}>\n            Dark Mode\n          </Text>\n          <Layout\n            style={{\n              marginTop: 20,\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n            }}>\n            <Text>Use Device Setting</Text>\n            <Toggle\n              onChange={(checked) => handleUseDeviceSettingToggled(checked)}\n              checked={useDeviceColorScheme}\n            />\n          </Layout>\n          <Layout\n            style={{\n              marginTop: 20,\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              opacity: useDeviceColorScheme ? 0.4 : 1,\n            }}>\n            <Text>Dark Mode</Text>\n            <Toggle\n              onChange={(checked) => handleDarkModeToggled(checked)}\n              checked={darkMode}\n            />\n          </Layout>\n        </Layout>\n\n        <WrapItems\n          childStyle={{ marginVertical: 3 }}\n          style={{ alignItems: 'center', marginBottom: 10 }}>\n          <Button onPress={logOut} status=\"warning\" appearance=\"outline\">\n            Log Out\n          </Button>\n          <Button\n            onPress={handleDeleteAccount}\n            status=\"danger\"\n            appearance=\"ghost\">\n            Delete Account\n          </Button>\n          <Text>\n            {Constants?.manifest2?.extra?.expoClient?.version\n              ? `Version ${Constants.manifest2.extra.expoClient.version}`\n              : ''}\n          </Text>\n        </WrapItems>\n      </Layout>\n    </Layout>\n  );\n}\n","import { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { HeaderBackButton } from '@react-navigation/elements';\n\nimport { Platform, TouchableOpacity } from 'react-native';\nimport { Text, useTheme } from '@ui-kitten/components';\nimport { selectDarkMode } from '../../app/appDataSlice';\nimport { useAppSelector } from '../../app/hooks';\nimport EditUser from './EditUser';\nimport SettingsPage from './SettingsPage';\nimport BackButton from '../../components/BackButton';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function Settings() {\n  const theme = useTheme();\n  const darkMode = useAppSelector(selectDarkMode);\n\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerStyle: {\n          backgroundColor: darkMode ? theme['color-basic-800'] : '#fff',\n        },\n      }}>\n      <Stack.Screen\n        name=\"SettingsPage\"\n        component={SettingsPage}\n        options={({ navigation }) => ({\n          title: 'Settings',\n          headerLeft: (props) => (\n            <BackButton navigation={navigation} {...props} />\n          ),\n        })}\n      />\n      <Stack.Group screenOptions={{ presentation: 'modal' }}>\n        <Stack.Screen\n          name=\"EditUser\"\n          component={EditUser}\n          options={{ headerShown: false }}\n        />\n      </Stack.Group>\n    </Stack.Navigator>\n  );\n}\n","import {useEffect, useRef, useState} from \"react\";\nimport {useAppSelector} from \"../../app/hooks\";\nimport {selectDarkMode, selectUserKey} from \"../../app/appDataSlice\";\nimport {useIsAllowedToReviewQuery} from \"../api/classPagesApi\";\nimport {Button, Card, Layout, Modal, Text} from \"@ui-kitten/components\";\nimport {BottomSheetScrollView, TouchableOpacity} from \"@gorhom/bottom-sheet\";\nimport ExportModalClass from \"../classPages/SingleClassPage/exportModalClass\";\nimport {ScrollView, StyleSheet, View} from \"react-native\";\nimport {useNavigation} from \"@react-navigation/native\";\n\n\nexport default function SingleClassPage({ selectedClass }) {\n    const [showModal, setShowModal] = useState(false);\n    const darkMode = useAppSelector(selectDarkMode);\n    const filters = useAppSelector((state) => state.appData.classPages.filters);\n    const backgroundColor = darkMode ? {backgroundColor: '#1F1F1F'} : {backgroundColor: '#F5F5F5'};\n\n    useEffect(() => {\n        console.log('THE CLASS IS HERE: ' + selectedClass)\n    }, [])\n\n\n    function buildTimeString(time) {\n        if (!time.startTime || time.startTime === '' || time.startTime === null) {\n            return 'closed';\n        }\n        return (\n            convertTo12HourTime(time.startTime) +\n            ' - ' +\n            convertTo12HourTime(time.endTime) +\n            '\\n'\n        );\n    }\n\n    function convertTo12HourTime(time) {\n        if (time.length !== 5) {\n            time = '0' + time;\n        }\n        let hours = time.slice(0, 2);\n        let minutes = time.slice(3, 5);\n        let ampm = Number.parseInt(hours) > 12 ? 'pm' : 'am';\n        hours = hours % 12;\n        if (hours === 0) {\n            hours = 12;\n            ampm = 'pm';\n        }\n        return hours + ':' + minutes + ampm;\n    }\n\n    const averageGradeMSGModal = (\n        <Modal\n            visible={showModal}\n            backdropStyle={styles.backdrop}\n            style={{ width: '75%' }}\n            onBackdropPress={() => setShowModal(false)}>\n            <Card disabled={true}>\n                <Text style={{ fontSize: 15, paddingTop: 5, paddingBottom: 10 }}>\n                    The Athena Network collects and aggregates the data anonymously\n                    submitted by the Course Review process and calculates what the average\n                    student's experience in this course will look like. Given that it is\n                    based on voluntarily submitted data, this information is to be used as\n                    a reference only. Please consult your advisor before making any\n                    impactful decisions.\n                </Text>\n                <Button onPress={() => setShowModal(false)}>Dismiss</Button>\n            </Card>\n        </Modal>\n    );\n\n    if (!selectedClass?.times) {\n        return null;\n    }\n\n    return (\n        <ScrollView style={backgroundColor}>\n            <Layout style={[{ alignItems: 'center' }, backgroundColor]}>\n                <ExportModalClass classData={selectedClass}/>\n                <Text style={styles.title}>{selectedClass.courseName}</Text>\n                <Text style={{ paddingTop: 30 }}>{selectedClass.masterCourseCode}</Text>\n\n                <Text style={styles.subtitle}>\n                    {`${selectedClass.courseTerm} \\u2022 credits: ${\n                        filters.isHMC\n                            ? selectedClass.creditWeightHM\n                            : selectedClass.creditWeight\n                    }`}\n                </Text>\n                {selectedClass.timeSpentOutOfClass && (\n                    <Layout\n                        style={[\n                            {\n                                flexDirection: 'row',\n                                alignItems: 'flex-start',\n                                paddingRight: 5,\n                            },\n                            backgroundColor,\n                        ]}>\n                        <Text style={styles.subtitle}>Time Spent Per Week</Text>\n                        <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\n                        <Text style={styles.subtitle}>\n                            : {selectedClass.timeSpentOutOfClass} hours\n                        </Text>\n                    </Layout>\n                )}\n                {selectedClass.averageGrade && (\n                    <Layout\n                        style={[\n                            {\n                                flexDirection: 'row',\n                                alignItems: 'flex-start',\n                                paddingRight: 5,\n                            },\n                            backgroundColor,\n                        ]}>\n                        <Text style={styles.subtitle}>Average Grade</Text>\n                        <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\n                        <Text style={styles.subtitle}>: {selectedClass.averageGrade}</Text>\n                    </Layout>\n                )}\n                {selectedClass.difficulty && (\n                    <Layout\n                        style={[\n                            {\n                                flexDirection: 'row',\n                                alignItems: 'flex-start',\n                                paddingRight: 5,\n                            },\n                            backgroundColor,\n                        ]}>\n                        <Text style={styles.subtitle}>Estimated Difficulty</Text>\n                        <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\n                        <Text style={styles.subtitle}>\n                            : {selectedClass.difficulty} / 5\n                        </Text>\n                    </Layout>\n                )}\n                {selectedClass.rating && (\n                    <Layout\n                        style={[\n                            {\n                                flexDirection: 'row',\n                                alignItems: 'flex-start',\n                                paddingRight: 5,\n                            },\n                            backgroundColor,\n                        ]}>\n                        <Text style={styles.subtitle}>Average Rating</Text>\n                        <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\n                        <Text style={styles.subtitle}>: {selectedClass.rating} / 5</Text>\n                    </Layout>\n                )}\n            </Layout>\n            <Layout style={backgroundColor}>\n                <Text style={styles.courseDescription}>{selectedClass.summary}</Text>\n            </Layout>\n            <Layout style={{ ...backgroundColor, ...styles.boxed }}>\n                <Text style={{ fontSize: 15, fontWeight: 'bold' }}>\n                    Stated Prerequisites:\n                </Text>\n                <Text style={{ fontSize: 15 }}>\n                    {selectedClass.prerequisites !== ''\n                        ? selectedClass.prerequisites\n                        : 'none'}\n                </Text>\n\n                <Text style={{ fontSize: 15, fontWeight: 'bold' }}>\n                    Stated Corequisites:\n                </Text>\n                <Text style={{ fontSize: 15 }}>\n                    {selectedClass.corequisites !== ''\n                        ? selectedClass.corequisites\n                        : 'none'}\n                </Text>\n\n                <Text style={{ fontSize: 15, fontWeight: 'bold' }}>\n                    Number of PERMs:\n                </Text>\n                <Text style={{ fontSize: 15 }}>\n                    {selectedClass.permCount\n                        ? selectedClass.permCount.toString()\n                        : '0'}\n                </Text>\n            </Layout>\n            <Layout\n                style={[\n                    { alignItems: 'flex-end' },\n                    backgroundColor,\n                ]}>\n                {(selectedClass.timeSpentOutOfClass ||\n                    selectedClass.averageGrade ||\n                    selectedClass.difficulty ||\n                    selectedClass.rating) && (\n                    <TouchableOpacity onPress={() => setShowModal(!showModal)}>\n                        <Layout\n                            style={[\n                                {\n                                    flexDirection: 'row',\n                                    alignItems: 'flex-start',\n                                    paddingRight: 5,\n                                },\n                                backgroundColor,\n                            ]}>\n                            <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\n                            <Text style={styles.disclaimer}>How Do We Estimate This?</Text>\n                        </Layout>\n                    </TouchableOpacity>\n                )}\n            </Layout>\n            <Layout style={backgroundColor}>\n                {selectedClass.times.length > 0 && (\n                    <Layout style={backgroundColor}>\n                        <Text style={styles.subHeader}>Sections</Text>\n                        <Layout style={[styles.section, backgroundColor]}>\n                            <Text style={styles.headerText}>Course Code</Text>\n                            <Text style={styles.headerText}>Seats</Text>\n                            <Text style={styles.headerText}>Professor</Text>\n                            <Text style={styles.headerText}>Time</Text>\n                            <Text style={styles.headerText}>Location</Text>\n                        </Layout>\n                    </Layout>\n                )}\n                {selectedClass.times.map((time) => {\n                    return (\n                        <Layout\n                            key={time.courseCode}\n                            style={{ backgroundColor, ...styles.section }}>\n                            <Text style={styles.sectionText}>{time.courseCode}</Text>\n                            <Text style={styles.sectionText}>\n                                {time.seatsFilled} / {time.seatsFilled + time.seatsAvailable}\n                            </Text>\n                            <Text style={styles.sectionText}>{time.professorName}</Text>\n                            <Text style={styles.sectionText}>\n                                {buildTimeString(time)}\n                                {time.daysOfTheWeek.join(', ')}\n                            </Text>\n                            <Text style={styles.sectionText}>\n                                {time.classLocation ? time.classLocation : 'TBD'}\n                            </Text>\n                        </Layout>\n                    );\n                })}\n                {averageGradeMSGModal}\n            </Layout>\n            <Text style={styles.subHeader}>Reviews</Text>\n            {selectedClass.reviews.length === 0 ? (\n                <Text style={{ alignSelf: 'center', marginBottom: 10 }}>\n                    No Reviews yet\n                </Text>\n            ) : (\n                selectedClass.reviews.map((review, index) => (\n                    <Card key={index} disabled={true}>\n                        <Text>{review.text + '\\n\\nPosted: ' + review.date}</Text>\n                        {review.professor && (\n                            <Text>{'Taught By: ' + review.professor}</Text>\n                        )}\n                    </Card>\n                ))\n            )}\n        </ScrollView>\n    );\n}\n\nconst styles = StyleSheet.create({\n    title: {\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    subtitle: {\n        fontSize: 16,\n    },\n    courseOpen: {\n        backgroundColor: 'green',\n        color: '#fff',\n        padding: 5,\n        marginRight: 10,\n    },\n    courseClosed: {\n        backgroundColor: 'red',\n        color: '#fff',\n        padding: 5,\n        borderRadius: 5,\n    },\n    header: {\n        alignItems: 'center',\n    },\n    details: {\n        flexDirection: 'row',\n        padding: 10,\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n    },\n    courseDescription: {\n        paddingRight: 20,\n        paddingLeft: 20,\n        paddingTop: 10,\n        paddingBottom: 5,\n        fontSize: 17,\n    },\n    BodyContainer: {\n        borderTopWidth: 1,\n        borderTopColor: 'black',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'space-evenly',\n        padding: 10,\n        paddingTop: 20,\n        paddingBottom: 20,\n    },\n    boxed: {\n        alignItems: 'center',\n        margin: 8,\n        borderColor: 'black',\n        borderWidth: 1,\n        padding: 7,\n    },\n    documentStyle: {\n        width: 150,\n        height: 190,\n        paddingTop: 100,\n    },\n    imageLabel: {\n        fontSize: 12,\n        color: 'black',\n        padding: 10,\n        textAlign: 'center',\n    },\n    schedule: {\n        paddingLeft: 20,\n        paddingTop: 10,\n    },\n    graphImage: {\n        width: '100%',\n        aspectRatio: 1,\n        resizeMode: 'contain',\n    },\n    grade: {\n        fontSize: 50,\n        fontWeight: 'bold',\n        color: 'green',\n    },\n    reviewText: {\n        fontSize: 16,\n        fontStyle: 'italic',\n    },\n    reviewBox: {\n        width: '95%',\n        padding: 10,\n        borderWidth: 1,\n        borderColor: 'black',\n        borderRadius: 5,\n        marginBottom: 10,\n    },\n    section: {\n        flexDirection: 'row',\n        paddingLeft: 5,\n        borderBottomWidth: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    headerText: {\n        fontWeight: 'bold',\n        fontSize: 13,\n        flex: 1,\n    },\n    sectionText: {\n        flex: 1,\n    },\n    disclaimer: {\n        fontSize: 14,\n        fontStyle: 'italic',\n    },\n    backdrop: {\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    },\n    input: {\n        height: 50,\n        margin: 12,\n        borderWidth: 1,\n        padding: 10,\n    },\n    containerDrop: {\n        height: 42,\n        margin: 12,\n        borderWidth: 1,\n    },\n    indentedInput: {\n        height: 50,\n        marginVertical: 12,\n        borderWidth: 1,\n        padding: 10,\n        marginRight: 12,\n        marginLeft: 30,\n    },\n    text: {\n        fontSize: 16,\n        lineHeight: 21,\n        fontWeight: 'bold',\n        letterSpacing: 0.25,\n        color: 'white',\n    },\n    subHeader: {\n        fontSize: 20,\n        paddingLeft: 20,\n        paddingBottom: 20,\n        paddingTop: 20,\n        fontWeight: 'bold',\n    },\n});","import React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  Alert,\n  Animated,\n  Dimensions,\n  Image,\n  KeyboardAvoidingView,\n  Platform,\n  RefreshControl,\n  SafeAreaView,\n  ScrollView,\n  StyleSheet,\n  TextInput,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  View,\n} from 'react-native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport BackButton from '../../components/BackButton';\nimport {\n  IndexPath,\n  Select,\n  SelectItem,\n  Layout,\n  Text,\n  Button,\n  Input,\n  List,\n} from '@ui-kitten/components';\nimport { base_URL } from './constants';\nimport { useNavigation } from '@react-navigation/native';\nimport { FontAwesome5, FontAwesome } from '@expo/vector-icons';\nimport {useAppDispatch, useAppSelector} from '../../app/hooks';\nimport {selectDarkMode, selectIsGuest, selectUserKey} from '../../app/appDataSlice';\nimport { useGetCurrentSectionQuery } from '../api/classPagesApi';\nimport CalendarFunctions from '../calendar/CalendarFunctions';\nimport { useGetUserInfoQuery } from '../api/usersApi';\nimport {classSelected, selectClassesList} from '../classPages/classPagesSlice';\nimport renderCustomEvent from '../calendar/customEvent';\nimport renderItem from '../calendar/ScheduledItem';\nimport GestureRecognizer from 'react-native-swipe-gestures';\nimport { SwipeRow } from 'react-native-swipe-list-view';\nimport BottomSheet from \"@gorhom/bottom-sheet/lib/typescript/components/bottomSheet/BottomSheet\";\nimport ModalContainer from \"../../components/ModalContainer\";\nimport UserNameSelectionDropDown from \"../../components/UserNameSelectionDropDown\";\nimport {Class} from \"../../app/types\";\nimport SingleClassPage from \"./notificationSinglePage\";\n\nconst NotificationHomePage = createNativeStackNavigator();\n\nexport default function NotificationsNavigation({ navigation }) {\n  const [notifications, setNotifications] = useState([]);\n  const [selectedIndex, setSelectedIndex] = React.useState([]);\n  const [hasChosen, setHasChosen] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [showGuestModal, setShowGuestModal] = useState(false)\n  const [isOpen, setIsOpen] = useState(false);\n  const userKey = useAppSelector(selectUserKey);\n  const darkMode = useAppSelector(selectDarkMode);\n  const isGuest = useAppSelector(selectIsGuest)\n\n  useEffect(() => {\n    refreshNotifications();\n    fetch(base_URL + '/users/getUserNameList', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        userKey: userKey,\n      },\n    }).then(async (data) => {\n      if (data.ok) {\n        let newUsers = (await data.json()).map((userName) => {\n          return {\n            label: userName,\n            id: userName,\n          };\n        });\n        setUsers(newUsers);\n      }\n    });\n  }, []);\n  async function refreshNotifications() {\n    fetch(base_URL + '/users/getNotifications', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        userKey: userKey,\n      },\n    }).then((res) => {\n      res.text().then((notifications) => {\n        notifications = JSON.parse(notifications);\n        // @ts-ignore\n        setNotifications(notifications);\n      });\n    });\n  }\n  async function sendNotification(bodyTosend) {\n    await fetch(base_URL + '/users/sendNotification', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        userKey: userKey,\n      },\n      body: JSON.stringify(bodyTosend),\n    });\n  }\n  function createNotificationButton() {\n    navigation.navigate('CreateNotification');\n  }\n  function clearNotifications() {\n    fetch(base_URL + '/users/clearNotifications', {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        userKey: userKey,\n      },\n    }).then(() => {\n      refreshNotifications();\n    });\n  }\n  const navigationHeader = (navigation) => (\n    <Layout\n      style={{\n        width: '100%',\n        justifyContent: 'space-between',\n        flexDirection: 'row',\n        alignItems: 'center',\n        flex: 1,\n        backgroundColor: 'transparent',\n      }}>\n      {Platform.OS === 'ios' && <BackButton navigation={navigation} />}\n\n      <Layout\n        style={{\n          paddingBottom: 5,\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'center',\n          flex: 1,\n          backgroundColor: 'transparent',\n        }}>\n        {/* <Image\n          style={{\n            height: 28,\n            width: 28,\n          }}\n          source={require('../../../assets/logos/app-logo.png')}\n        /> */}\n        <Text\n          style={{\n            paddingTop: 3,\n            fontSize: 20,\n            fontWeight: '500',\n            color: darkMode ? '#fff' : '#000',\n          }}>\n          Notifications\n        </Text>\n      </Layout>\n      <Layout\n        style={{\n          alignSelf: 'flex-end',\n          paddingRight: 40,\n          paddingBottom: 10,\n          flexDirection: 'row',\n          backgroundColor: 'transparent',\n        }}>\n        <TouchableOpacity\n          style={{\n            paddingLeft: 20,\n            marginRight: Platform.OS == 'android' ? 50 : 0,\n          }}\n          onPress={() => {\n            if (isGuest) {\n              setShowGuestModal(true)\n            } else {\n              createNotificationButton();\n            }\n          }}>\n          <FontAwesome5 size={25} color={'#1E90FF'} name=\"plus\" />\n        </TouchableOpacity>\n        {\n            showGuestModal &&\n            <ModalContainer\n                title=\"Wait!\"\n                children={<Text style={{paddingHorizontal: 30}}>This feature is locked to our Guest Users. Please create a free account with us to take advantage this feature.</Text>}\n                backDropVisible={showGuestModal}\n                setBackDropVisible={setShowGuestModal}\n            />\n        }\n        {/*<TouchableOpacity\n\n          onPress={() => {\n            Alert.alert(\n              'Caution',\n              'Are you sure you want to clear your notifications?\\nThis action cannot be undone.',\n              [\n                {\n                  text: 'No',\n                  style: 'cancel',\n                },\n                {\n                  text: 'Yes',\n                  onPress: async () => {\n                    clearNotifications();\n                  },\n                },\n              ]\n            );\n          }}>\n          <FontAwesome5 size={25} color={'#d71717'} name=\"times\" />\n        </TouchableOpacity>\n        /* <TouchableOpacity\n          style={{ paddingLeft: 20 }}\n          onPress={() => {\n            refreshNotifications();\n          }}>\n          <FontAwesome size={25} color={'#1E90FF'} name=\"rotate-right\" />\n        </TouchableOpacity> */}\n      </Layout>\n    </Layout>\n  );\n  const Notifications = ({ navigation }) => {\n    const [refreshing, setRefreshing] = useState(false);\n    const [isMoving, setIsMoving] = useState(false);\n\n    const onRefresh = useCallback(() => {\n      setRefreshing(true);\n      refreshNotifications().then(() => {\n        setRefreshing(false);\n      });\n    }, []);\n    async function handleOnLeftSwipe(postId) {\n      const newNotifications = notifications.map((not) => {\n        if (not._id !== postId) {\n          return not;\n        }\n      });\n      console.log(newNotifications);\n      setNotifications(newNotifications);\n      let res = await fetch(base_URL + '/users/removeNotification', {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          userKey: userKey,\n        },\n        body: JSON.stringify({\n          id: postId,\n        }),\n        redirect: 'follow',\n      });\n      if (res.ok) {\n        refreshNotifications();\n      } else {\n        console.log(await res.json());\n      }\n      setIsOpen(false);\n      setIsMoving(false);\n    }\n\n    const renderItem = ({ item: notification }) => {\n      return (\n        <Layout>\n          {notification && (\n            // @ts-ignore\n            <SwipeRow\n              disableRightSwipe={true}\n              onSwipeValueChange={(status) => {\n                if (status.value < -Dimensions.get('window').width * (1/3)) {\n                  if (!isOpen) {\n                    setIsOpen(true);\n                    handleOnLeftSwipe(notification._id);\n                  }\n                } else if (status.value < -5) {\n                  setIsMoving(true);\n                } else {\n                  setIsMoving(false);\n                }\n              }}\n              useNativeDriver={true}>\n              <Layout\n                style={{\n                  alignItems: 'flex-end',\n                  justifyContent: 'center',\n                  alignSelf: 'center',\n                  width: '95%',\n                  height: 75,\n                  borderRadius: 11,\n                  backgroundColor: '#ce0f0f',\n                  marginLeft: 5,\n                  paddingRight: 20,\n                  marginRight: 5,\n                  marginTop: 10,\n                }}>\n                <Text style={{ color: '#fff' }}>Delete</Text>\n              </Layout>\n              <TouchableWithoutFeedback\n                style={{\n                  alignItems: 'center',\n                  alignSelf: 'center',\n                  width: '95%',\n                  height: 75,\n                  borderRadius: 10,\n                  marginLeft: 5,\n                  marginRight: 5,\n                  marginTop: 10,\n                }}\n                onPress={() => {\n                  navigation.navigate('SingleNotification', {\n                    data: notification,\n                  });\n                }}\n                key={notification?._id}>\n                <Layout\n                  style={{\n                    alignItems: 'center',\n                    alignSelf: 'center',\n                    width: '95%',\n                    height: 75,\n                    borderRadius: 10,\n                    backgroundColor: darkMode ? '#333333' : '#ebebeb',\n                    shadowColor: '#000',\n                    shadowOffset: { width: 0, height: 1 },\n                    shadowOpacity: 0.2,\n                    shadowRadius: 2,\n                    elevation: 1,\n                    marginLeft: 5,\n                    marginRight: 5,\n                    marginTop: 10,\n                  }}>\n                  <Text\n                    style={{\n                      paddingTop: 5,\n                      fontWeight: 'bold',\n                      fontSize: 20,\n                    }}>\n                    {notification?.title}\n                  </Text>\n                  <Text style={{}}>From: {notification?.from}</Text>\n                  {notification?.creationDate ? (\n                    <Text style={{ fontStyle: 'italic', fontSize: 12 }}>\n                      {notification?.creationDate}\n                    </Text>\n                  ) : null}\n                </Layout>\n              </TouchableWithoutFeedback>\n            </SwipeRow>\n          )}\n        </Layout>\n      );\n    };\n\n    return (\n      <Layout style={{ flex: 1 }}>\n        {notifications.length === 0 ? (\n          <Layout style={{ alignItems: 'center' }}>\n            <Text\n              style={{\n                paddingTop: '25%',\n                paddingBottom: 10,\n                textAlign: 'center',\n              }}>\n              No New Notifications\n            </Text>\n            <TouchableOpacity\n              onPress={() => {\n                refreshNotifications();\n              }}>\n              <FontAwesome size={25} color={'#1E90FF'} name=\"rotate-right\" />\n            </TouchableOpacity>\n          </Layout>\n        ) : null}\n        <List\n          style={{ backgroundColor: 'transparent' }}\n          contentContainerStyle={{ flex: 1 }}\n          data={notifications}\n          scrollEnabled={!isMoving}\n          renderItem={renderItem}\n          onRefresh={refreshNotifications}\n          refreshing={refreshing}\n        />\n      </Layout>\n    );\n  };\n\n  function getDateText(text) {\n    let spaceIndex = text.indexOf(' ');\n    let first = text.substring(0, spaceIndex);\n    let second = text.substring(spaceIndex + 1);\n    return second + ' |  ' + first;\n  }\n\n  const SingleNotification = ({\n    route: {\n      params: { data },\n    },\n  }) => {\n    navigation = useNavigation();\n    const { data: currentSection } = useGetCurrentSectionQuery();\n\n    let listToRemove = [];\n    if (data.isSchedule) {\n      let jsonSchedule = JSON.parse(data.message);\n      let thereIsAtLeastOne = false;\n      for (const index in jsonSchedule) {\n        if (jsonSchedule[index].courseTerm === currentSection) {\n          thereIsAtLeastOne = true;\n        } else {\n          listToRemove.push(index);\n        }\n      }\n      for (const index of listToRemove) {\n        jsonSchedule.splice(index, 1);\n      }\n      if (!thereIsAtLeastOne) {\n        Alert.alert(\n          'This schedule is either empty or contains outdated class information'\n        );\n        navigation.goBack();\n      }\n      return thereIsAtLeastOne ? (\n        <Layout>{Calendar(jsonSchedule)}</Layout>\n      ) : null;\n    } else if (data.isCourseData) {\n      const allClassData = useAppSelector(selectClassesList);\n      const courseSimpleData = JSON.parse(data.message);\n      if (courseSimpleData.courseTerm === currentSection) {\n        return <SingleClassPage\n            selectedClass={allClassData[courseSimpleData.masterCourseCode]}/>\n      } else {\n        Alert.alert(\n            'This course contains outdated information'\n        );\n        navigation.goBack();\n        return null\n      }\n    }\n    return (\n      <KeyboardAvoidingView\n        style={{ flex: 1 }}\n        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}>\n        <ScrollView contentContainerStyle={{ flex: 1 }}>\n          <Layout style={sponsorPageStyles.container}>\n            <Layout\n              style={{ width: '100%', alignItems: 'center', marginTop: 20 }}>\n              <Text style={sponsorPageStyles.title}>{data.title}</Text>\n            </Layout>\n\n            {data.from && (\n              <Layout style={sponsorPageStyles.address}>\n                <Layout style={{ flexDirection: 'row' }}>\n                  <Text style={{ fontSize: 15, fontWeight: 'bold' }}>\n                    From:{' '}\n                  </Text>\n                  <Text style={{ fontSize: 15 }}>{data.from}</Text>\n                </Layout>\n                <Layout style={{ flexDirection: 'row' }}>\n                  <Text style={{ fontSize: 15 }}>\n                    {getDateText(data.creationDate)}\n                  </Text>\n                </Layout>\n              </Layout>\n            )}\n            <Layout style={sponsorPageStyles.description}>\n              <Text>{data.message}</Text>\n            </Layout>\n            {data.repliable && (\n              <TouchableOpacity\n                onPress={() => {\n                  // TODO: reply\n                }}\n                style={myStyles.button}>\n                <Text style={myStyles.text}>Reply</Text>\n              </TouchableOpacity>\n            )}\n          </Layout>\n        </ScrollView>\n      </KeyboardAvoidingView>\n    );\n  };\n  const CreateNotification = ({ navigation }) => {\n    const [body, setBody] = useState({});\n    const [done, setDone] = useState(false);\n    const [recipient, setRecipient] = useState(null)\n    const [hasChosen, setHasChosen] = useState(false);\n\n    useEffect(() => {\n      changeValue(hasChosen ? [recipient] : null, 'recipients')\n    }, [recipient, hasChosen])\n\n    function checkForDone(tempBody) {\n      if (tempBody.recipients && tempBody.title && tempBody.text) {\n        setDone(true);\n      } else {\n        setDone(false);\n      }\n    }\n\n    const changeValue = (theValue, valueToChange) => {\n      let newBody = body;\n      for (const aspect in newBody) {\n        if (\n            newBody[aspect] === null ||\n            newBody[aspect] === undefined ||\n            newBody[aspect] === ''\n        ) {\n          delete newBody[aspect];\n        }\n      }\n      if (theValue !== undefined) {\n        newBody[valueToChange] = theValue;\n      } else {\n        if (newBody[valueToChange]) {\n          delete newBody[valueToChange];\n        }\n      }\n      console.log(JSON.stringify(newBody));\n      checkForDone(newBody);\n      setBody(newBody);\n    };\n\n    function renderInputFields() {\n      const renderHeader = () => {\n        return (\n          <Layout style={{ flexDirection: 'row' }}>\n            <Text\n              style={{\n                fontSize: 15,\n                paddingLeft: 12,\n                paddingBottom: 5,\n                paddingTop: 5,\n                alignContent: 'center',\n                fontWeight: 'bold',\n              }}>\n              Send Message\n            </Text>\n          </Layout>\n        );\n      };\n      let final = [];\n      final.push(\n          <View style={{\n            height: 50,\n            margin: 12,\n            padding: 10,\n          }}>\n            {UserNameSelectionDropDown({setHasChosen, setRecipient, placeholder: true})}\n          </View>\n      );\n      final.push(\n        <Input\n          autoCapitalize={'words'}\n          onChangeText={(theValue) => changeValue(theValue, 'title')}\n          style={myStyles.input}\n          placeholderTextColor={'gray'}\n          placeholder={'Title'}\n        />\n      );\n      final.push(\n        <Input\n          autoCapitalize={'sentences'}\n          onChangeText={(theValue) => changeValue(theValue, 'text')}\n          style={myStyles.inputBig}\n          multiline={true}\n          textStyle={{ minHeight: 150 }}\n          placeholderTextColor={'gray'}\n          placeholder={'Body'}\n        />\n      );\n\n      return (\n        <Layout style={{ flex: 1 }}>\n          {renderHeader()}\n          {final}\n        </Layout>\n      );\n    }\n    return (\n      <SafeAreaView style={{ flex: 1 }}>\n        <KeyboardAvoidingView\n          style={{ flex: 1 }}\n          behavior={Platform.OS === 'ios' ? 'padding' : 'height'}>\n          <ScrollView contentContainerStyle={{ flex: 1 }}>\n            <Layout style={sponsorPageStyles.container}>\n              <Layout style={sponsorPageStyles.description}>\n                {renderInputFields()}\n                <Button\n                  disabled={!done}\n                  onPress={async () => {\n                    // console.log(JSON.stringify(body));\n                    await sendNotification(body);\n                    navigation.navigate('Notifications');\n                  }}>\n                  <Text style={myStyles.text}>Send Message</Text>\n                </Button>\n              </Layout>\n            </Layout>\n          </ScrollView>\n        </KeyboardAvoidingView>\n      </SafeAreaView>\n    );\n  };\n  return (\n    <NotificationHomePage.Navigator initialRouteName=\"Notifications & Messages\">\n      <NotificationHomePage.Screen\n        options={({ navigation }) => ({\n          title: 'Notifications',\n          headerTitle: () => {\n            return navigationHeader(navigation);\n          },\n        })}\n        name=\"Notifications\"\n        component={Notifications}\n      />\n      <NotificationHomePage.Screen\n        name=\"SingleNotification\"\n        component={SingleNotification}\n        options={{ headerTitle: '' }}\n      />\n      <NotificationHomePage.Screen\n        name=\"CreateNotification\"\n        component={CreateNotification}\n        options={{ headerTitle: '' }}\n      />\n    </NotificationHomePage.Navigator>\n  );\n}\n\nfunction convertTo12HourTime(time) {\n  if (time.length !== 5) {\n    time = '0' + time;\n  }\n  let hours = time.slice(0, 2);\n  let minutes = time.slice(3, 5);\n  let ampm = Number.parseInt(hours) > 12 ? 'pm' : 'am';\n  hours = hours % 12;\n  if (hours === 0) {\n    hours = 12;\n    ampm = 'pm';\n  }\n  return hours + ':' + minutes + ampm;\n}\n\nfunction getMinutesDiff(startTime, endTime) {\n  if (endTime > startTime) {\n    return (endTime - startTime) * 0.7;\n  } else if (startTime === endTime) {\n    return 0;\n  } else {\n    return (startTime - endTime) * -0.7;\n  }\n}\n\nfunction Calendar(userData) {\n  const allClassData = useAppSelector(selectClassesList);\n  const { data: currentSection, isLoading: isCurrentSectionLoading } =\n    useGetCurrentSectionQuery();\n  const darkMode: Boolean = useAppSelector(selectDarkMode);\n  const calendarFun = new CalendarFunctions();\n  const days = [\n    { day: 'Mon', id: 'Monday' },\n    { day: 'Tues', id: 'Tuesday' },\n    { day: 'Wed', id: 'Wednesday' },\n    { day: 'Thurs', id: 'Thursday' },\n    { day: 'Fri', id: 'Friday' },\n    { day: 'Sat', id: 'Saturday' },\n    { day: 'Sun', id: 'Sunday' },\n  ];\n  const times = [\n    '12:00 AM',\n    '1:00 AM',\n    '2:00 AM',\n    '3:00 AM',\n    '4:00 AM',\n    '5:00 AM',\n    '6:00 AM',\n    '7:00 AM',\n    '8:00 AM',\n    '9:00 AM',\n    '10:00 AM',\n    '11:00 AM',\n    '12:00 PM',\n    '1:00 PM',\n    '2:00 PM',\n    '3:00 PM',\n    '4:00 PM',\n    '5:00 PM',\n    '6:00 PM',\n    '7:00 PM',\n    '8:00 PM',\n    '9:00 PM',\n    '10:00 PM',\n    '11:00 PM',\n  ];\n\n  function renderDashes() {\n    let final = [];\n    for (let i = 0; i < 24; i++) {\n      final.push(\n        <Layout\n          style={{\n            width: 46,\n            marginLeft: 9,\n            top: 41.7 * i,\n            position: 'absolute',\n            height: 41.7,\n            borderBottomWidth: 0.7,\n            borderBottomColor: darkMode ? 'rgb(68,68,68)' : 'rgb(204,204,204)',\n          }}\n        />\n      );\n    }\n    return final;\n  }\n\n  const renderClasses = (elem) => {\n    let classes = [];\n    for (const course of userData) {\n      if (course.courseTerm === currentSection) {\n        let data = calendarFun.getFullClassData(\n          course.courseCode,\n          allClassData\n        );\n        let data2 = data.times.find(\n          (time) => time.courseCode === course.courseCode\n        );\n        for (const day in data2['daysOfTheWeek']) {\n          if (data2['daysOfTheWeek'][day] === elem.id) {\n            classes.push(renderItem(data, course.courseCode, () => {}));\n          }\n        }\n      }\n    }\n\n    return classes;\n  };\n\n  const topBar = useRef(null);\n\n  return (\n    <SafeAreaView\n      style={{\n        marginTop: 0,\n        marginLeft: 0,\n        paddingBottom: 15,\n        marginBottom: 20,\n      }}>\n      {/* Times */}\n      <ScrollView\n        horizontal={true}\n        snapToInterval={63}\n        showsHorizontalScrollIndicator={false}\n        style={{ marginLeft: 75 }}\n        ref={topBar}>\n        <View style={{ flexDirection: 'row' }}>\n          {days.map((elem) => {\n            return (\n              <Layout>\n                <Layout\n                  style={{\n                    borderColor: darkMode ? '#7a7a7a' : '#525252',\n                    borderBottomWidth: 1,\n                    width: '100%',\n                  }}>\n                  <Text\n                    style={{\n                      textAlign: 'center',\n                      color: darkMode ? '#7a7a7a' : '#525252',\n                      width: 63,\n                    }}>\n                    {elem.day}\n                  </Text>\n                </Layout>\n              </Layout>\n            );\n          })}\n        </View>\n      </ScrollView>\n      <ScrollView\n        contentOffset={{ x: 0, y: 292 }}\n        showsVerticalScrollIndicator={false}\n        bounces={false}>\n        <View style={{ flexDirection: 'row' }}>\n          <View\n            style={{\n              justifyContent: 'space-around',\n              height: 1000,\n            }}>\n            {times.map((time) => {\n              return (\n                <Text\n                  style={{\n                    textAlign: 'center',\n                    color: darkMode ? '#7a7a7a' : '#525252',\n                    paddingTop: '15%',\n                    height: 43,\n                    width: 75,\n                    borderWidth: 1,\n                    borderColor: darkMode ? '#7a7a7a' : '#525252',\n                  }}>\n                  {time}\n                </Text>\n              );\n            })}\n          </View>\n          {/* Classes */}\n          <ScrollView\n            horizontal={true}\n            snapToInterval={63}\n            decelerationRate={'normal'}\n            showsHorizontalScrollIndicator={false}\n            bounces={false}\n            scrollEventThrottle={1}\n            onScroll={(e) =>\n              topBar.current.scrollTo({\n                x: e.nativeEvent.contentOffset.x,\n                animated: false,\n                useNativeDriver: true,\n              })\n            }\n            onMomentumScrollBegin={(e) =>\n              topBar.current.scrollTo({\n                x: e.nativeEvent.contentOffset.x,\n                animated: false,\n                useNativeDriver: true,\n              })\n            }>\n            <View style={{ flexDirection: 'row' }}>\n              {days.map((elem) => {\n                return (\n                  <Layout>\n                    {renderDashes()}\n                    <Layout key={elem.day} style={{ width: 63 }}>\n                      {renderClasses(elem)}\n                    </Layout>\n                    <Layout\n                      style={{\n                        height: '100%',\n                        width: 1,\n                        backgroundColor: darkMode ? '#7a7a7a' : '#525252',\n                      }}\n                    />\n                  </Layout>\n                );\n              })}\n            </View>\n          </ScrollView>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n}\n\nconst sponsorPageStyles = StyleSheet.create({\n  container: {\n    flex: 1,\n    // alignItems: 'center',\n  },\n  header: {\n    marginTop: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n  },\n  address: {\n    alignItems: 'center',\n    margin: 10,\n    borderColor: 'black',\n    borderWidth: 1,\n    padding: 10,\n  },\n  video: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-start',\n  },\n  title: {\n    fontSize: 26,\n    marginLeft: 10,\n  },\n  logo: {\n    width: '100%',\n    height: 100,\n  },\n  description: {\n    flex: 1,\n    margin: 10,\n    borderRadius: 5,\n    width: '95%',\n    padding: 10,\n  },\n  couponContainer: {\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 20,\n    marginBottom: 20,\n  },\n  coupon: {\n    width: 400,\n    height: 267,\n  },\n  imageGallery: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    margin: 10,\n    marginBottom: 0,\n  },\n  imageStyle: {\n    width: 150,\n    height: 150,\n    paddingTop: 100,\n    margin: 5,\n  },\n  headerText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n});\n\nconst myStyles = StyleSheet.create({\n  inputBig: {\n    height: 200,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n  },\n  input: {\n    height: 50,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n  },\n  indentedInput: {\n    height: 50,\n    marginVertical: 12,\n    borderWidth: 1,\n    padding: 10,\n    marginRight: 12,\n    marginLeft: 30,\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n  },\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 12,\n    paddingHorizontal: 32,\n    borderRadius: 4,\n    elevation: 3,\n  },\n  timeButton: {\n    width: 100,\n    height: 50,\n    marginHorizontal: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 4,\n  },\n  timeText: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white',\n  },\n  actualTimeText: {\n    fontSize: 13,\n    lineHeight: 18,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white',\n  },\n  timeStyle: {\n    flex: 0.3,\n    borderWidth: 2,\n    borderLeftColor: 'white',\n  },\n});\n\nconst listingStyles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  cardContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    alignSelf: 'center',\n    width: '95%',\n    height: 75,\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderBottomWidth: 0,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 2,\n    elevation: 1,\n    marginLeft: 5,\n    marginRight: 5,\n    marginTop: 10,\n  },\n  containerForNotifications: {\n    alignItems: 'center',\n    alignSelf: 'center',\n    width: '95%',\n    height: 75,\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderBottomWidth: 0,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 2,\n    elevation: 1,\n    marginLeft: 5,\n    marginRight: 5,\n    marginTop: 10,\n  },\n  text: {\n    flex: 1,\n    fontSize: 20,\n    textAlign: 'center',\n    marginTop: 5,\n    marginBottom: 5,\n  },\n  image: {\n    width: '100%',\n    height: '100%',\n    borderRadius: 10,\n  },\n});\n","export const departments = [\n  'All Departments',\n  'SPAN',\n  'CHST',\n  'MATH',\n  'HUM',\n  'CLAS',\n  'AFRI',\n  'FS',\n  'ECON',\n  'ID',\n  'MUS',\n  'MES',\n  'MCBI',\n  'ASTR',\n  'ARBT',\n  'DS',\n  'TEST',\n  'IR',\n  'AMST',\n  'ITAL',\n  'GEOL',\n  'PE',\n  'ANTH',\n  'GREK',\n  'FGSS',\n  'GOVT',\n  'ASIA',\n  'CHIN',\n  'BIOL',\n  'CREA',\n  'RLST',\n  'FREN',\n  'MS',\n  'RUSS',\n  'SPCH',\n  'ARCN',\n  'CORE',\n  'ENTR',\n  'PHYS',\n  'HIST',\n  'CHLT',\n  'ENGR',\n  'CHEM',\n  'LAMS',\n  'CGH',\n  'MOBI',\n  'GWS',\n  'GERM',\n  'CSCI',\n  'LAS',\n  'CASA',\n  'PPE',\n  'MCSI',\n  'THES',\n  'ENGL',\n  'SOC',\n  'EDUC',\n  'GRMT',\n  'LGST',\n  'RLIT',\n  'POLI',\n  'CLES',\n  'MSL',\n  'FHS',\n  'LGCS',\n  'POST',\n  'THEA',\n  'ASAM',\n  'RUST',\n  'SCI',\n  'LAST',\n  'ARBC',\n  'CHNT',\n  'DANC',\n  'KORE',\n  'HMSC',\n  'PHIL',\n  'LIT',\n  'GEOG',\n  'COGS',\n  'EURO',\n  'JPNT',\n  'PSYC',\n  'MLLC',\n  'FWS',\n  'JAPN',\n  'LATN',\n  'GLAS',\n  'KRNT',\n  'HSA',\n  'ARHI',\n  'EA',\n  'LEAD',\n  'WRIT',\n  'CSMT',\n  'STS',\n  'CGS',\n  'ORST',\n  'PPA',\n  'NEUR',\n  'PORT',\n  'ART',\n  'PONT',\n];\n","import {\n  Autocomplete,\n  AutocompleteItem,\n  Button,\n  Input,\n  Layout,\n  Text,\n} from '@ui-kitten/components';\nimport WrapItems from '../../../components/WrapItems';\nimport { useCallback, useEffect, useState } from 'react';\nimport { Keyboard, TouchableWithoutFeedback } from 'react-native';\nimport { departments } from '../../../constants/electiveGenerator';\nimport { selectUserKey } from '../../../app/appDataSlice';\nimport { useAppDispatch, useAppSelector } from '../../../app/hooks';\nimport {\n  electiveGeneratorSelected,\n  selectClassesList,\n  suggestedClassesUpdated,\n} from '../classPagesSlice';\nimport { showToast } from '../../../functions';\n\nexport default function ElectiveGenerator() {\n  const dispatch = useAppDispatch();\n  const [departmentQuery, setDepartmentQuery] = useState('');\n  const [departmentOptions, setDepartmentOptions] = useState(departments);\n  const [description, setDescription] = useState('');\n\n  const classes = useAppSelector(selectClassesList);\n\n  const getClassesByDepartment = useCallback((department: string) => {\n    if (department === 'All Departments') return Object.entries(classes);\n    return Object.entries(classes).filter(([key, _]) => {\n      const classDepartment = key.split(' ')[0];\n      return classDepartment === department;\n    });\n  }, []);\n\n  useEffect(() => {\n    dispatch(electiveGeneratorSelected());\n  }, []);\n\n  const onChangeDepartmentText = useCallback((query: string): void => {\n    setDepartmentQuery(query);\n    setDepartmentOptions(\n      departments.filter((department) =>\n        department.includes(query.toUpperCase())\n      )\n    );\n  }, []);\n\n  const onSubmit = () => {\n    Keyboard.dismiss();\n    const classesByDepartment = getClassesByDepartment(departmentQuery);\n    // Compare text in user input to class descriptions and return top 5 matches\n    classesByDepartment.sort((a, b) => {\n      const aWords = a[1].summary.split(' ');\n      const bWords = b[1].summary.split(' ');\n      const aMatches = aWords.filter((word) => description.includes(word));\n      const bMatches = bWords.filter((word) => description.includes(word));\n      return bMatches.length - aMatches.length;\n    });\n\n    const matches = Object.fromEntries(classesByDepartment.slice(0, 5));\n    dispatch(suggestedClassesUpdated(matches));\n\n    showToast('Suggested classes updated!', 'green');\n  };\n\n  return (\n    <TouchableWithoutFeedback onPress={Keyboard.dismiss} style={{ flex: 1 }}>\n      <Layout style={{ flex: 1 }}>\n        <WrapItems childStyle={{ margin: 20 }}>\n          <Autocomplete\n            label=\"Department\"\n            onSelect={(index) => setDepartmentQuery(departmentOptions[index])}\n            onChangeText={onChangeDepartmentText}\n            value={departmentQuery}>\n            {departmentOptions.map((option) => (\n              <AutocompleteItem title={option} key={option} />\n            ))}\n          </Autocomplete>\n          <Input\n            label=\"Description\"\n            multiline\n            textStyle={{ minHeight: 100 }}\n            value={description}\n            onChangeText={(text) => setDescription(text)}\n          />\n          <Button onPress={onSubmit}>Submit</Button>\n        </WrapItems>\n      </Layout>\n    </TouchableWithoutFeedback>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Image, Platform, TouchableOpacity } from 'react-native';\nimport { FontAwesome5, Ionicons, Foundation } from '@expo/vector-icons';\nimport { Button, Layout, Text, useTheme } from '@ui-kitten/components';\n\nimport ClassesList from './ClassesList';\nimport { SponsorsList, SponsorPage } from '../sponsors/SponsorsList';\nimport Header from '../../components/Header';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Settings from '../settings/index';\nimport { useAppSelector } from '../../app/hooks';\nimport {\n  selectDarkMode,\n  selectIsGuest,\n  selectUserKey,\n} from '../../app/appDataSlice';\nimport NotificationsNavigation from '../notifications/Notifications';\nimport { base_URL } from '../notifications/constants';\nimport SingleClassPage from './SingleClassPage/index';\nimport SelectTerm from './SelectTerm';\nimport ElectiveGenerator from './ElectiveGenerator';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function SearchClasses({ navigation }) {\n  const theme = useTheme();\n  const hasSelectedElectiveGenerator = useAppSelector(\n    (state) => state.appData.classPages.hasSelectedElectiveGen\n  );\n  const userKey = useAppSelector(selectUserKey);\n  const darkMode = useAppSelector(selectDarkMode);\n  const [numberOfNotifications, setNumberOfNotifications] = useState(0);\n\n  function refreshNotifications() {\n    fetch(base_URL + '/users/getNotifications', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        userKey: userKey,\n      },\n    }).then((res) => {\n      res.text().then((notifications) => {\n        notifications = JSON.parse(notifications);\n        setNumberOfNotifications(notifications.length);\n      });\n    });\n  }\n\n  useEffect(() => {\n    refreshNotifications();\n    setInterval(() => {\n      refreshNotifications();\n    }, 60000); // refresh every minute\n  }, []);\n\n  const accessoryLeft = (\n    <Image\n      style={{\n        height: 28,\n        width: 28,\n      }}\n      source={require('../../../assets/logos/app-logo-transparent.png')}\n    />\n  );\n\n  const accessoryRight = (\n    <Layout\n      style={{\n        flexDirection: 'row',\n        width: 120,\n        justifyContent: 'space-between',\n      }}>\n      <TouchableOpacity\n        onPress={() => {\n          navigation.navigate('ElectiveGenerator');\n        }}\n        style={{ flexDirection: 'row', alignItems: 'center' }}>\n        {hasSelectedElectiveGenerator ? (\n          <FontAwesome5\n            name=\"brain\"\n            size={23}\n            color={\n              darkMode ? theme['color-basic-200'] : theme['color-basic-800']\n            }\n          />\n        ) : (\n          <Foundation\n            name={'burst-new'}\n            size={30}\n            color={theme['color-warning-500']}\n          />\n        )}\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        onPress={() => {\n          navigation.navigate('SponsorsList');\n        }}\n        style={{ flexDirection: 'row', alignItems: 'center' }}>\n        <FontAwesome5\n          name=\"shopping-bag\"\n          size={23}\n          color={darkMode ? theme['color-basic-200'] : theme['color-basic-800']}\n        />\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        onPress={() => {\n          navigation.navigate('Settings');\n        }}\n        style={{ flexDirection: 'row', alignItems: 'center' }}>\n        <Ionicons\n          name=\"settings\"\n          size={23}\n          color={darkMode ? theme['color-basic-200'] : theme['color-basic-800']}\n        />\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        onPress={() => {\n          navigation.navigate('NotificationsPage');\n        }}\n        style={{ flexDirection: 'row', alignItems: 'center' }}>\n        <FontAwesome5\n          name=\"bell\"\n          size={23}\n          color={darkMode ? theme['color-basic-200'] : theme['color-basic-800']}\n        />\n        {numberOfNotifications > 0 ? (\n          <Layout\n            style={{\n              position: 'absolute',\n              backgroundColor: darkMode ? 'red' : '#fff',\n              borderRadius: 10,\n              paddingHorizontal: 3,\n              right: -7,\n              top: -3,\n            }}>\n            <Text>{numberOfNotifications}</Text>\n          </Layout>\n        ) : null}\n      </TouchableOpacity>\n    </Layout>\n  );\n\n  return (\n    <Stack.Navigator>\n      <Stack.Screen\n        name=\"ClassesList\"\n        component={ClassesList}\n        options={{\n          header: () => (\n            <Layout style={{ paddingBottom: 10 }}>\n              <Header\n                accessoryLeft={accessoryLeft}\n                accessoryRight={accessoryRight}\n                title=\"Athena\"\n              />\n            </Layout>\n          ),\n          title: 'ClassPages',\n        }}\n      />\n      <Stack.Screen\n        name=\"Settings\"\n        component={Settings}\n        options={{\n          headerShown: false,\n        }}\n      />\n      <Stack.Group screenOptions={{ headerTitle: 'Sponsors' }}>\n        <Stack.Screen\n          name=\"SponsorsList\"\n          component={SponsorsList}\n          options={{ title: 'Sponsors' }}\n        />\n        <Stack.Screen\n          name=\"SponsorPage\"\n          component={SponsorPage}\n          options={{ title: 'Sponsors' }}\n        />\n      </Stack.Group>\n      <Stack.Screen\n        name=\"NotificationsPage\"\n        component={NotificationsNavigation}\n        options={{ headerShown: false, title: 'Notifications' }}\n      />\n      <Stack.Screen\n        name=\"SelectTerm\"\n        component={SelectTerm}\n        options={{\n          title: 'Select Term',\n          headerShown: false,\n          animation: 'slide_from_bottom',\n          gestureDirection: 'vertical',\n        }}\n      />\n      <Stack.Screen\n        name=\"ElectiveGenerator\"\n        component={ElectiveGenerator}\n        options={{\n          title: 'Elective Generator',\n          animation: 'slide_from_bottom',\n          gestureDirection: 'vertical',\n        }}\n      />\n      {Platform.OS === 'web' && (\n        <Stack.Screen\n          name=\"SingleClassPage\"\n          component={SingleClassPage}\n          options={{\n            headerShown: false,\n            title: 'ClassPages',\n          }}\n        />\n      )}\n    </Stack.Navigator>\n  );\n}\n","export default {\n  'color-basic-100': '#FFFFFF',\n  'color-basic-200': '#F5F5F5',\n  'color-basic-300': '#D4D4D4',\n  'color-basic-400': '#B3B3B3',\n  'color-basic-500': '#808080',\n  'color-basic-600': '#4A4A4A',\n  'color-basic-700': '#383838',\n  'color-basic-800': '#292929',\n  'color-basic-900': '#1F1F1F',\n  'color-basic-1000': '#141414',\n  'color-basic-1100': '#000000',\n  'color-primary-100': '#FFE0D8',\n  'color-primary-200': '#FFBBB2',\n  'color-primary-300': '#FF8E8B',\n  'color-primary-400': '#FF6F78',\n  'color-primary-500': '#FF3F5E',\n  'color-primary-600': '#DB2E5A',\n  'color-primary-700': '#B71F54',\n  'color-primary-800': '#93144C',\n  'color-primary-900': '#7A0C47',\n  'color-success-100': '#FBD4F0',\n  'color-success-200': '#F8ABE8',\n  'color-success-300': '#EA7EDC',\n  'color-success-400': '#D55AD0',\n  'color-success-500': '#b42bba',\n  'color-success-600': '#8F1F9F',\n  'color-success-700': '#6E1585',\n  'color-success-800': '#500D6B',\n  'color-success-900': '#3A0859',\n  'color-info-100': '#CDFDFE',\n  'color-info-200': '#9CF4FE',\n  'color-info-300': '#6AE4FC',\n  'color-info-400': '#45D0FA',\n  'color-info-500': '#09B0F7',\n  'color-info-600': '#0689D4',\n  'color-info-700': '#0466B1',\n  'color-info-800': '#02498F',\n  'color-info-900': '#013476',\n  'color-warning-100': '#FFF6CC',\n  'color-warning-200': '#FFEA99',\n  'color-warning-300': '#FFDC66',\n  'color-warning-400': '#FFCD3F',\n  'color-warning-500': '#FFB600',\n  'color-warning-600': '#DB9600',\n  'color-warning-700': '#B77800',\n  'color-warning-800': '#935C00',\n  'color-warning-900': '#7A4800',\n  'color-danger-100': '#FEE5DE',\n  'color-danger-200': '#FEC6BE',\n  'color-danger-300': '#FEA09D',\n  'color-danger-400': '#FD858D',\n  'color-danger-500': '#FC5D77',\n  'color-danger-600': '#D8436A',\n  'color-danger-700': '#B52E5E',\n  'color-danger-800': '#921D51',\n  'color-danger-900': '#781149',\n  'color-grey-800': '#1F1F1F',\n  'color-grey-700': '#2F2F2F',\n  'color-grey-600': '#3F3F3F',\n  'color-grey-500': '#4F4F4F',\n  'color-grey-400': '#5F5F5F',\n  'color-grey-300': '#6F6F6F',\n  'color-grey-200': '#7F7F7F',\n  'color-grey-100': '#8F8F8F',\n  'color-grey-50': '#9F9F9F',\n};\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FontAwesome5 } from '@expo/vector-icons';\n\nexport const FontAwesomeIconsPack = {\n  name: 'fontAwesome',\n  icons: createIconsMap(),\n};\n\nfunction createIconsMap() {\n  return new Proxy(\n    {},\n    {\n      get(target, name) {\n        return IconProvider(name);\n      },\n    }\n  );\n}\n\nconst IconProvider = (name) => ({\n  toReactElement: (props) => FontAwesomeIcon({ name, ...props }),\n});\n\nfunction FontAwesomeIcon({ name, style }) {\n  const { height, tintColor, ...iconStyle } = StyleSheet.flatten(style);\n  return (\n    <FontAwesome5\n      name={name}\n      size={height}\n      color={tintColor}\n      style={iconStyle}\n    />\n  );\n}\n\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Feather } from '@expo/vector-icons';\n\nexport const FeatherIconsPack = {\n  name: 'feather',\n  icons: createIconsMap(),\n};\n\nfunction createIconsMap() {\n  return new Proxy(\n    {},\n    {\n      get(target, name) {\n        return IconProvider(name);\n      },\n    }\n  );\n}\n\nconst IconProvider = (name) => ({\n  toReactElement: (props) => FeatherIcon({ name, ...props }),\n});\n\nfunction FeatherIcon({ name, style }) {\n  const { height, tintColor, ...iconStyle } = StyleSheet.flatten(style);\n  return (\n    <Feather name={name} size={height} color={tintColor} style={iconStyle} />\n  );\n}\n","import {useCallback, useEffect, useState} from \"react\";\nimport {base_URL} from \"../../constants/admin\";\nimport {useAppSelector} from \"../../app/hooks\";\nimport {selectUserKey} from \"../../app/appDataSlice\";\nimport {\n    View,\n    Image,\n    Text,\n    TouchableOpacity,\n    ScrollView,\n    TextInput,\n    RefreshControl,\n    KeyboardAvoidingView,\n    Platform,\n    Dimensions\n} from \"react-native\";\nimport { FontAwesome } from '@expo/vector-icons';\nimport {createNativeStackNavigator} from \"@react-navigation/native-stack\";\nimport {Card, IndexPath, Layout, Select, SelectItem} from \"@ui-kitten/components\";\nimport moment from \"moment-timezone\";\nimport {LineChart} from \"react-native-chart-kit\";\nimport {Divider} from \"@ui-kitten/components\";\nimport * as ImagePicker from \"expo-image-picker\";\n\nconst AdminHomePage = createNativeStackNavigator();\n\nexport default function AdminHomeNavigation() {\n    const [ adminCommands, setAdminCommands ] = useState([])\n    const userKey = useAppSelector(selectUserKey)\n    useEffect(() => {\n        getAdminCommands()\n    }, [])\n    async function getAdminCommands() {\n        const adminURL = base_URL + '/adminCommands'\n        let res = await fetch(adminURL + '/getAdminCommands', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'userKey': userKey\n            },\n        })\n        let commands: Array<any> = await res.json()\n        let filter = await fetch(adminURL + '/toggleAdminCommands', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'userKey': userKey\n            },\n            body: '{}',\n        })\n        const filterObject = (await filter.json()).currentAdminCommandsStatus\n        console.log(filterObject)\n        commands = commands.sort(function(a, b) {\n            const textA = a.label.toUpperCase();\n            const textB = b.label.toUpperCase();\n            return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\n        });\n        let finalCommandList = []\n        for (const command of commands) {\n            if (filterObject[command.label]) {\n                finalCommandList.push(command)\n            }\n        }\n        // @ts-ignore\n        setAdminCommands(finalCommandList)\n        return commands\n    }\n\n    const [refreshing, setRefreshing] = useState(false);\n\n    const onRefresh = useCallback(() => {\n        setRefreshing(true);\n        setAdminCommands([])\n        getAdminCommands().then(commands => setRefreshing(false))\n    }, []);\n\n    const AdminHome = ({ navigation }) => {\n        return (\n            <ScrollView refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} />}>\n                {adminCommands?.length === 0 ? <Text>No Commands Yet. Rip</Text> : null}\n                {adminCommands?.map((command) => {\n                    return (\n                        <TouchableOpacity\n                            onPress={() => {\n                                navigation.navigate('AdminCommand', { data: command });\n                            }}\n                            style={listingStyles.cardContainer}\n                            key={command.url}>\n                            <Text style={listingStyles.text}>{command.label}</Text>\n                        </TouchableOpacity>\n                    );\n                })}\n            </ScrollView>\n        );\n    };\n\n    return (\n        <AdminHomePage.Navigator initialRouteName=\"AdminHome\">\n            <AdminHomePage.Screen\n                options={{\n                    //title: 'Admin Home',\n                    /*headerTitle: () => {\n                        return adminControlPanelHeader;\n                    },*/\n                    headerShown: false\n                }}\n                name=\"AdminHome\"\n                component={AdminHome}\n            />\n            <AdminHomePage.Screen\n                name=\"AdminCommand\"\n                component={AdminCommand}\n                options={{ headerTitle: '' }}\n            />\n        </AdminHomePage.Navigator>\n    );\n}\n\n\nconst AdminCommand = ({route: {params: { data }}}) => {\n    const [ info, setInfo ] = useState({});\n    const [ isFileUpload, setIsFileUpload ] = useState(false);\n    const [ body, setBody ] = useState({})\n    const [ users, setUsers ] = useState([])\n    const [ fileUploads, setFileUploads ] = useState([])\n    const [ sponsors, setSponsors ] = useState([])\n    const [ status, setStatus ] = useState('0')\n    const [ allFieldsFilled, setAllFieldsFilled ] = useState(false)\n    const [ buttonPushed, setButtonPushed ] = useState(false) // refresh button\n    const userKey = useAppSelector(selectUserKey)\n\n    useEffect(() => {\n        // Check for first button render\n        checkForFieldsFilled(body)\n        // Fetch User List\n        fetch(base_URL + '/users/getUserNameList', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'userKey': userKey\n            }\n        }).then(async (data) => {\n            if (data.ok) {\n                let newUsers = (await data.json()).map(userName => {\n                    return {\n                        label: userName,\n                        id: userName\n                    }\n                })\n                setUsers(newUsers)\n            }\n        })\n        // Fetch Sponsor List\n        fetch(base_URL + '/sponsors/', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'userKey': userKey\n            }\n        }).then(async (data) => {\n            if (data.ok) {\n                let sponsors = (await data.json()).map(sponsor => {\n                    return {\n                        label: sponsor.sponsorName,\n                        id: sponsor._id\n                    }\n                })\n                setSponsors(sponsors)\n            }\n        })\n        // Fetch File upload List\n        fetch(base_URL + '/adminCommands/getReferenceImages', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'userKey': userKey\n            }\n        }).then(async (data) => {\n            if (data.ok) {\n                let images = (await data.json()).map(imageName => {\n                    return {\n                        label: imageName,\n                        id: imageName\n                    }\n                })\n                setFileUploads(images)\n            }\n        })\n    }, [])\n\n    function checkForFieldsFilled(body) {\n        for (const field of data.fields) {\n            if (field.mandatory) {\n                if (body[field.id] === undefined || body[field.id] === null) {\n                    setAllFieldsFilled(false)\n                    return\n                }\n            }\n        }\n        setAllFieldsFilled(true)\n    }\n\n    const sendApiData = (data, userKey) => {\n        let additionToUrl = ''\n        for (const aspect in body) {\n            if (body[aspect].paramOverride) {\n                additionToUrl += body[aspect]\n                break\n            }\n        }\n        if (JSON.stringify(body,null,2) !== '{}' && data.apiType === 'GET') {\n            for (const aspect in body) {\n                if (additionToUrl === '') {\n                    additionToUrl = '?'\n                } else {\n                    additionToUrl += '&'\n                }\n                additionToUrl += aspect + '=' + body[aspect]\n            }\n        }\n        const newUrl = data.url + additionToUrl\n        console.log('isFileUpload: ' + isFileUpload)\n        if (!isFileUpload) {\n            fetch(\n                newUrl,\n                {\n                    method: data.apiType,\n                    headers: {\n                        'Content-Type': 'application/json',\n                        userKey: userKey\n                    },\n                    body: JSON.stringify(body,null,2) !== '{}' && data.apiType !== 'GET' ? JSON.stringify(body) : undefined\n                }\n            ).then((res) => {\n                // @ts-ignore\n                setStatus(res.status)\n                res.text().then((text) => {\n                    try {\n                        const text2 = JSON.parse(text)\n                        setInfo(text2)\n                    } catch (err) {\n                        setInfo(text)\n                    }\n                })\n            })\n        } else {\n            let formdata = new FormData();\n            for (const item in body) {\n                if (!item.includes('picture')) {\n                    formdata.append(item, body[item]);\n                } else {\n                    formdata.append(item, {\n                        // @ts-ignore\n                        uri: body[item].uri,\n                        name: item,\n                        type: 'image/jpg',\n                    });\n                }\n            }\n            fetch(newUrl, {\n                body: formdata,\n                redirect: 'follow',\n                method: data.apiType,\n                headers: {\n                    userKey: userKey\n                },\n            }).then((res) => {\n                // @ts-ignore\n                setStatus(res.status)\n                res.text().then((text) => {\n                    try {\n                        const text2 = JSON.parse(text)\n                        setInfo(text2)\n                    } catch (err) {\n                        setInfo(text)\n                    }\n                })\n            })\n        }\n    }\n\n    if (buttonPushed) {\n        setButtonPushed(false)\n        sendApiData(data, userKey)\n    }\n\n    function renderEachDropItem(field) {\n        if (field['data']) {\n            // This is where we can add preset lists if we can't use something hardcoded on the server\n            switch (field['data']) {\n                case 'users' : {\n                    field.options = users\n                    break\n                }\n                case 'sponsors' : {\n                    field.options = sponsors\n                    break\n                }\n                case 'fileUploads' : {\n                    field.options = fileUploads\n                    break\n                }\n            }\n        }\n        let final = []\n        for (const option of field.options) {\n            final.push(\n                <SelectItem title={option.label}/>\n            )\n        }\n        return final\n    }\n\n    function renderTheFieldsNecessary(fields) {\n        const changeValue = (theValue, valueToChange) => {\n            let newBody = body\n            for (const aspect in newBody) {\n                if (newBody[aspect] === null || newBody[aspect] === undefined || newBody[aspect] === '') {\n                    delete newBody[aspect]\n                }\n            }\n            if (theValue !== undefined) {\n                newBody[valueToChange] = theValue\n            } else {\n                if (newBody[valueToChange]) {\n                    delete newBody[valueToChange]\n                }\n            }\n            console.log(newBody)\n            setBody(newBody)\n            checkForFieldsFilled(newBody)\n        }\n\n        const fileUploadTemplate = (field) => {\n            const pickImage = async () => {\n                let result = await ImagePicker.launchImageLibraryAsync({\n                    allowsEditing: false,\n                });\n                if (!result.cancelled) {\n                    changeValue(result, field.id);\n                }\n            };\n\n            return (\n                <View>\n                    {/* Image Picker */}\n                    <TouchableOpacity\n                        onPress={() => {\n                            pickImage();\n                        }}\n                        style={{\n                            height: 80,\n                            justifyContent: 'center',\n                            alignItems: 'center',\n                            borderRadius: 8,\n                            paddingVertical: 8,\n                            flexDirection: 'row',\n                            backgroundColor: '#dbdbdb',\n                            marginVertical: 15,\n                            marginHorizontal: 5,\n                        }}>\n                        <Layout\n                            style={{\n                                flex: 1,\n                                flexDirection: 'row',\n                                height: '100%',\n                                marginHorizontal: 10,\n                                backgroundColor: '#dbdbdb',\n                            }}>\n                            <Layout\n                                style={{\n                                    flex: 1,\n                                    justifyContent: 'center',\n                                    alignItems: 'center',\n                                    height: '100%',\n                                    borderRadius: 10,\n                                    backgroundColor: '#bfbfbf',\n                                }}>\n                                {body && body[field?.id] ? (\n                                    <Image\n                                        source={{ uri: body[field.id].uri }}\n                                        style={{ width: '90%', height: '90%', borderRadius: 10 }}\n                                    />\n                                ) : (\n                                  <FontAwesome name=\"image\" size={40} color={'grey'} />\n                                )}\n                            </Layout>\n                            <Layout\n                                style={{\n                                    backgroundColor: '#dbdbdb',\n                                    flex: 4,\n                                    height: '100%',\n                                    justifyContent: 'center',\n                                    alignItems: 'center',\n                                }}>\n                                <Text\n                                    style={{\n                                        fontSize: 17,\n                                    }}>\n                                    {body && body[field?.id]\n                                        ? 'Select Another Image'\n                                        : 'Select Image'}\n                                </Text>\n                            </Layout>\n                        </Layout>\n                    </TouchableOpacity>\n                </View>\n            );\n        }\n        const renderFilterParameters = (fields) => {\n            if (fields.length === 0) {\n                return null\n            }\n            return (\n                <View style={{flexDirection:'row'}}>\n                    <Text\n                        style={{\n                            fontSize: 15,\n                            paddingLeft: 12,\n                            paddingBottom: 5,\n                            paddingTop: 5,\n                            alignContent:'center',\n                            fontWeight: 'bold',\n                        }}>\n                        Filters/Parameters\n                    </Text>\n                </View>\n            )\n        }\n        let final = [];\n\n        function renderStringArray(field) {\n            const valuesToSend = {}\n            function changeStringValue(theValue, miniField, field) {\n                valuesToSend[miniField] = theValue\n                let newFieldForBody = []\n                for (const value of Object.values(valuesToSend)) {\n                    newFieldForBody.push(value)\n                }\n                changeValue(newFieldForBody, field.id)\n            }\n            let tempFinal = []\n            tempFinal.push(\n                <Text\n                    style={{\n                        fontSize: 14,\n                        paddingLeft: 5,\n                        paddingBottom: 3,\n                        paddingTop: 3,\n                    }}>\n                    {field.mandatory ? field.label + ' (mandatory)' : field.label}\n                </Text>\n            )\n            for (const eachOne in field.stringArray) {\n                tempFinal.push(\n                    <TextInput\n                        autoCapitalize={'none'}\n                        onChangeText={(theValue) => changeStringValue(theValue, field.stringArray[eachOne].label, field)}\n                        style={myStyles.indentedInput}\n                        placeholderTextColor={'gray'}\n                        placeholder={field.stringArray[eachOne].mandatory ? field.stringArray[eachOne].label + ' (mandatory)' : field.stringArray[eachOne].label}\n                    />\n                )\n            }\n            return tempFinal;\n        }\n\n        const renderMultiSelectDropDown = (field) => {\n            const [ selectedIndex, setSelectedIndex ] = useState([]);\n            const [ hasChosen, setHasChosen ] = useState(false)\n            function toggleValue(index) {\n                setHasChosen(true)\n                setSelectedIndex(index)\n                const newSelection = Array.isArray(index) ? index.map((littleIndex) => {\n                    return field.options[littleIndex.row].id\n                }) : field.options[index.row].id\n                changeValue(newSelection, field.id)\n            }\n            function calculateSelectedValues() {\n                let finalArray = selectedIndex.map((littleIndex) => {\n                    return field.options[littleIndex.row].label + ', '\n                })\n                if (finalArray.length > 0){\n                    let finalObject = finalArray.at(-1)\n                    finalObject = finalObject.replace(', ', '')\n                    finalArray.splice( -1, 1)\n                    finalArray.push(finalObject)\n                    return finalArray\n                } else {\n                    return field.mandatory ? field.label + ' (mandatory)' : field.label\n                }\n            }\n            return (\n                <Layout style={myStyles.containerDrop} level='1'>\n                    <Select\n                        multiSelect={true}\n                        value={hasChosen ? calculateSelectedValues() : field.label}\n                        selectedIndex={selectedIndex}\n                        onSelect={index => toggleValue(index)}>\n                        {renderEachDropItem(field)}\n                    </Select>\n                </Layout>\n            );\n        }\n\n        const renderDropDown = (field) => {\n            const [ selectedIndex, setSelectedIndex ] = useState(new IndexPath(0));\n            const [ hasChosen, setHasChosen ] = useState(false)\n\n            function currentValue() {\n                return <Text>{!hasChosen ? ('Choose ' + field.label + (field.mandatory ? ' (mandatory)' : '')) : field.options[selectedIndex.row - 1].label} </Text>\n            }\n\n            function handleSelection(index) {\n                setSelectedIndex(index)\n                changeValue(index.row === 0 ? undefined : field.options[index.row - 1].id, field.id)\n                if (index.row === 0) {\n                    setHasChosen( false)\n                } else {\n                    setHasChosen(true)\n                }\n\n            }\n\n            return (\n                <Select\n                    style={myStyles.containerDrop}\n                    value={currentValue}\n                    selectedIndex={selectedIndex}\n                    onSelect={handleSelection}>\n                    <SelectItem title={' '}/>\n                    {renderEachDropItem(field)}\n                </Select>\n            );\n        };\n\n        for (let i = 0; i < fields.length; i++) {\n            const type = fields[i].type\n            if (type === 'Boolean') {\n                final.push(\n                    trueFalseTemplate(fields[i])\n                )\n            } else if (type === 'String') {\n                final.push(\n                    <TextInput\n                        autoCapitalize={'none'}\n                        clearButtonMode={'always'}\n                        onChangeText={(theValue) => changeValue(theValue, fields[i].id)}\n                        style={myStyles.input}\n                        placeholderTextColor={'gray'}\n                        placeholder={fields[i].mandatory ? fields[i].label + ' (mandatory)' : fields[i].label}\n                    />\n                )\n            } else if (type === 'ArrayString') {\n                final.push(renderStringArray(fields[i]))\n            } else if (type === 'DropDown') {\n                final.push(renderDropDown(fields[i]))\n            } else if (type === 'MultiSelectDropDown') {\n                final.push(renderMultiSelectDropDown(fields[i]))\n            } else if (type === 'BigString') {\n                final.push(\n                    <TextInput\n                        autoCapitalize={'sentences'}\n                        clearButtonMode={'always'}\n                        onChangeText={(theValue) => changeValue(theValue, fields[i].id)}\n                        style={myStyles.inputBig}\n                        multiline={true}\n                        placeholderTextColor={'gray'}\n                        placeholder={fields[i].mandatory ? fields[i].label + ' (mandatory)' : fields[i].label}\n                    />\n                )\n            } else if (type === 'FileUpload') {\n                if (!isFileUpload) {\n                    setIsFileUpload(true);\n                }\n                final.push(fileUploadTemplate(fields[i]))\n            }\n        }\n        return (\n            <View>\n                {renderFilterParameters(fields)}\n                <View>\n                    {final}\n                </View>\n            </View>\n        )\n    }\n\n    const trueFalseTemplate = (field) => {\n        const [selectedIndex, setSelectedIndex] = useState();\n        const boolValues = ['false', 'true']\n        // @ts-ignore\n        const displayValue = boolValues[selectedIndex - 1]\n        const renderOption = (displayValue) => (\n            <SelectItem title={displayValue}/>\n        );\n        const changeEverything = (value) => {\n            setSelectedIndex(value)\n            if (value.row === 0) {\n                let newBody = body\n                newBody[field.id] = false\n                setBody(newBody)\n            } else if (value.row === 1) {\n                let newBody = body\n                newBody[field.id] = true\n                setBody(newBody)\n            }\n        }\n        return (\n            <Layout style={styles.container} level='1'>\n                <Select\n                    label={field.label}\n                    selectedIndex={selectedIndex}\n                    value={displayValue}\n                    onSelect={index => changeEverything(index)}\n                    placeholder={field.mandatory ? field.label + \" (mandatory)\" : field.label + \"\"}>\n                    {boolValues.map(renderOption)}\n                </Select>\n            </Layout>\n        );\n    };\n\n    function showResponseData(actions) {\n        if (JSON.stringify(info,null,2) === '{}') {\n            return null\n        }\n        let informationToShow = [];\n\n        // use this one for displaying everything pretty\n        if (Array.isArray(info)) {\n            if (data.isDateGraph) { // check for need for rendering graphs\n                const timeFrames = [\n                    '2week-unique',\n                    '2week-total',\n                    'month-unique',\n                    '6month-total'\n                ]\n                for (const item of timeFrames) {\n                    const dataToShow = {\n                        labels: getDates(item),\n                        datasets: [\n                            {\n                                data: getData(item)\n                            }\n                        ]\n                    }\n                    informationToShow.push(renderOneGraph(dataToShow, item))\n                }\n            }\n            for (const oneElement of info) {\n                informationToShow.push(\n                    renderOneCard(oneElement, actions ? actions : [])\n                );\n            }\n        } else {\n            informationToShow.push(\n                <Text style={{ flexShrink: 1 }}>\n                    {typeof info === 'string' ? info : JSON.stringify(info,null,2)}\n                </Text>\n            );\n        }\n\n        function getData(timeFrame) {\n            let final = [];\n            switch (timeFrame) {\n                case '2week-unique': {\n                    for (let i = 13; i >= 0; i--) {\n                        let day = moment().tz(\"America/Los_Angeles\").subtract(i, 'days').format('YYYY-MM-DD');\n                        let counter = 0;\n                        let usersToday = []\n                        // @ts-ignore\n                        for (const instance of info) {\n                            let userName = instance.userName\n                            if (instance.date === day && !usersToday.includes(userName)) {\n                                usersToday.push(userName)\n                                counter++;\n                            }\n                        }\n                        final.push(counter);\n                    }\n                    break;\n                }\n                case '2week-total': {\n                    for (let i = 13; i >= 0; i--) {\n                        let day = moment().tz(\"America/Los_Angeles\").subtract(i, 'days').format('YYYY-MM-DD');\n                        let counter = 0;\n                        let usersToday = []\n                        // @ts-ignore\n                        for (const instance of info) {\n                            let userName = instance.userName\n                            if (instance.date === day) {\n                                usersToday.push(userName)\n                                counter++;\n                            }\n                        }\n                        final.push(counter);\n                    }\n                    break;\n                }\n                case 'month-unique': {\n                    for (let i = 4; i > 0; i--) {\n                        let weekStart = moment().tz(\"America/Los_Angeles\").subtract(i, 'weeks').format('YYYY-MM-DD')\n                        let weekEnd = moment().tz(\"America/Los_Angeles\").subtract(i - 1, 'weeks').format('YYYY-MM-DD')\n                        let counter = 0;\n                        let usersMonth = []\n                        // @ts-ignore\n                        for (const instance of info) {\n                            if (instance.date > weekStart && instance.date <= weekEnd && !usersMonth.includes(instance.userName)) {\n                                counter++;\n                                usersMonth.push(instance.userName)\n                            }\n                        }\n                        final.push(counter);\n                    }\n                    break;\n                }\n                case '6month-total': {\n                    for (let i = 6; i > 0; i--) {\n                        let monthStart = moment().tz(\"America/Los_Angeles\").subtract(i, 'months').format('YYYY-MM-DD')\n                        let monthEnd = moment().tz(\"America/Los_Angeles\").subtract(i - 1, 'months').format('YYYY-MM-DD')\n                        let counter = 0;\n                        // @ts-ignore\n                        for (const instance of info) {\n                            if (instance.date > monthStart && instance.date <= monthEnd) {\n                                counter++;\n                            }\n                        }\n                        final.push(counter);\n                    }\n                    break;\n                }\n            }\n            return final;\n        }\n\n        function getDates(timeFrame) {\n            let final = []\n            switch (timeFrame) {\n                case '2week-unique': {\n                    for (let i = 13; i >= 0; i--) {\n                        final.push(moment().tz(\"America/Los_Angeles\").subtract(i, 'days').format('MM/DD'))\n                    }\n                    break;\n                }\n                case '2week-total': {\n                    for (let i = 13; i >= 0; i--) {\n                        final.push(moment().tz(\"America/Los_Angeles\").subtract(i, 'days').format('MM/DD'))\n                    }\n                    break;\n                }\n                case 'month-unique': {\n                    for (let i = 4; i > 0; i--) {\n                        final.push(moment().tz(\"America/Los_Angeles\").subtract(i, 'weeks').add(1, 'days').format('MM/DD')\n                            + '-' +\n                            moment().tz(\"America/Los_Angeles\").subtract(i - 1, 'weeks').format('MM/DD'))\n                    }\n                    break;\n                }\n                case '6month-total': {\n                    for (let i = 6; i > 0; i--) {\n                        final.push(moment().tz(\"America/Los_Angeles\").subtract(i, 'months').add(1, 'days').format('MM/DD')\n                            + '-' +\n                            moment().tz(\"America/Los_Angeles\").subtract(i - 1, 'months').format('MM/DD'))\n                    }\n                    break;\n                }\n            }\n            return final;\n        }\n\n        function renderOneGraph(graphData, timeFrame) {\n            return (\n                <View style={{paddingBottom: 10}}>\n                    <Text>Timeframe: {timeFrame}</Text>\n                    <LineChart\n                        data={graphData}\n                        width={Dimensions.get(\"window\").width}\n                        height={400}\n                        verticalLabelRotation={60}\n                        fromZero={true}\n                        xLabelsOffset={-10}\n                        segments={8}\n                        chartConfig={{\n                            backgroundColor: \"#bdbdbd\",\n                            decimalPlaces: 0,\n                            color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n                            labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n                            style: {\n                                borderRadius: 16\n                            },\n                            propsForDots: {\n                                r: \"6\",\n                                strokeWidth: \"2\",\n                                stroke: \"#333333\"\n                            }\n                        }}\n                    />\n                </View>\n            )\n        }\n\n        function renderOneCard(cardInfo, actions) {\n            let finalText = []\n            for (const aspect in cardInfo) {\n                if (aspect !== '_id' && aspect !== '__v'){\n                    finalText.push(\n                        <View style={{flexDirection: 'row', flexWrap:'wrap'}}>\n                            <Text style={{fontWeight: 'bold'}}>\n                                {aspect + ' : '}\n                            </Text>\n                            <Text>\n                                {JSON.stringify(cardInfo[aspect],null,'\\t')}\n                            </Text>\n                        </View>\n                    )\n                }\n            }\n            let renderedActions = null\n            // @ts-ignore\n            if (actions !== []) {\n                renderedActions = []\n                for (const action of actions) {\n                    renderedActions.push(\n                        renderButtonForCard(action, cardInfo)\n                    )\n                }\n            }\n\n            function renderButtonForCard(action, cardInfo) {\n                return (\n                    <View style={{marginHorizontal: 20}}>\n                        <TouchableOpacity style={{\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            width: 100,\n                            height: 40,\n                            backgroundColor: action.color ? action.color : 'gray',\n                            elevation: 3,\n                        }} onPress={() => {\n                            let params = {}\n                            for (const parameter of action.params) {\n                                params[parameter] = cardInfo[parameter] ? cardInfo[parameter] : undefined\n                            }\n                            fetch(\n                                action.url,\n                                {\n                                    method: action.method,\n                                    headers: {\n                                        'Content-Type': 'application/json',\n                                        'userKey': userKey\n                                    },\n                                    body: JSON.stringify(params)\n                                }\n                            ).then(res => {\n                                if (res.ok) {\n                                    setButtonPushed(true)\n                                }\n                                // res.text().then(final => console.log(final))\n                            })\n                        }}>\n                            {/* @ts-ignore */}\n                            <Text style={myStyles.buttonText}>{action.label}</Text>\n                        </TouchableOpacity>\n                    </View>\n                )\n            }\n\n\n            return (\n                <View>\n                    <Card>\n                        {finalText}\n                        <View style={{paddingTop: 15, width:'95%', flexDirection: 'row', alignSelf:'center', alignContent: 'center', justifyContent: 'center'}}>\n                            {renderedActions}\n                        </View>\n                    </Card>\n                    <Divider/>\n                </View>\n            )\n\n        }\n\n        return (\n            <View style={{ flexShrink: 1 }}>\n                <Text\n                    style={{\n                        fontSize: 20,\n                        paddingLeft: 20,\n                        paddingBottom: 0,\n                        paddingTop: 20,\n                        fontWeight: 'bold',\n                    }}>\n                    Server Response\n                </Text>\n                <Text\n                    style={{\n                        fontSize: 13,\n                        paddingLeft: 20,\n                        paddingBottom: 10,\n                        paddingTop: 5,\n                        fontStyle: 'italic',\n                    }}>\n                    Status Code: {status}\n                </Text>\n                <View style={{paddingTop: 10, backgroundColor: 'lightgray'}}>\n                    {informationToShow}\n                </View>\n            </View>\n        );\n    }\n\n\n    return (\n        <KeyboardAvoidingView\n            behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}>\n            <ScrollView style={{height: '100%'}}>\n                <View style={sponsorPageStyles.container}>\n                    <View style={{ width: '100%', display: 'flex', alignItems: 'center' }}>\n                        <Text style={sponsorPageStyles.title}>{data.label}</Text>\n                    </View>\n\n                    {data.url && (\n                        // @ts-ignore\n                        <View style={sponsorPageStyles.address}>\n                            <Text style={{ fontSize: 18 }}>{data.url}</Text>\n                        </View>\n                    )}\n                    <View style={sponsorPageStyles.description}>\n                        {renderTheFieldsNecessary(data.fields)}\n                    </View>\n                    {allFieldsFilled && <TouchableOpacity onPress={() => {\n                        sendApiData(data, userKey)\n                        // @ts-ignore\n                    }} style={myStyles.button}><Text style={myStyles.text}>Send Call</Text></TouchableOpacity>}\n                    {showResponseData(data.actions)}\n                </View>\n            </ScrollView>\n        </KeyboardAvoidingView>\n    );\n};\n\nconst sponsorPageStyles = {\n    container: {\n        flex: 1,\n        backgroundColor: 'white',\n        // alignItems: 'center',\n    },\n    header: {\n        marginTop: 20,\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%',\n    },\n    address: {\n        alignItems: 'center',\n        margin: 10,\n        borderColor: 'black',\n        borderWidth: 1,\n        padding: 10,\n    },\n    video: {\n        marginTop: 20,\n        display: 'flex',\n        justifyContent: 'flex-start',\n    },\n    title: {\n        fontSize: 26,\n        marginLeft: 10,\n    },\n    logo: {\n        width: '100%',\n        height: 100,\n    },\n    description: {\n        borderWidth: 1,\n        margin: 10,\n        borderColor: '#5d5c5c',\n        borderRadius: 5,\n        width: '95%',\n        padding: 10,\n        backgroundColor: 'rgba(178,166,166,0.22)',\n    },\n    couponContainer: {\n        width: '100%',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    coupon: {\n        width: 400,\n        height: 267,\n    },\n    imageGallery: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        margin: 10,\n        marginBottom: 0,\n    },\n    imageStyle: {\n        width: 150,\n        height: 150,\n        paddingTop: 100,\n        margin: 5,\n    },\n    headerText: {\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n}\n\nconst myStyles = {\n    inputBig: {\n        height: 200,\n        backgroundColor: 'white',\n        margin: 12,\n        borderWidth: 1,\n        padding: 10,\n    },\n    input: {\n        backgroundColor: '#ffffff',\n        height: 50,\n        margin: 12,\n        borderWidth: 1,\n        padding: 10,\n    },\n    containerDrop: {\n        backgroundColor: '#ffffff',\n        height: 42,\n        margin: 12,\n        borderWidth: 1,\n    },\n    indentedInput: {\n        backgroundColor: '#ffffff',\n        height: 50,\n        marginVertical: 12,\n        borderWidth: 1,\n        padding: 10,\n        marginRight: 12,\n        marginLeft: 30\n    },\n    text: {\n        fontSize: 16,\n        lineHeight: 21,\n        fontWeight: 'bold',\n        letterSpacing: 0.25,\n        color: 'white',\n    },\n    buttonText: {\n        fontSize: 13,\n        flexWrap: 'wrap',\n        lineHeight: 15,\n        fontWeight: 'bold',\n        letterSpacing: 0.25,\n        color: 'white',\n    },\n    button: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        paddingVertical: 12,\n        paddingHorizontal: 32,\n        borderRadius: 4,\n        elevation: 3,\n        backgroundColor: 'black',\n    }\n}\n\n\nconst listingStyles = {\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n    },\n    cardContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        alignSelf: 'center',\n        width: '95%',\n        height: 75,\n        backgroundColor: '#bbbbbb',\n        borderRadius: 10,\n        borderWidth: 1,\n        borderColor: '#ddd',\n        borderBottomWidth: 0,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.2,\n        shadowRadius: 2,\n        elevation: 1,\n        marginLeft: 5,\n        marginRight: 5,\n        marginTop: 10,\n    },\n    text: {\n        flex: 1,\n        fontSize: 20,\n        textAlign: 'center',\n        marginTop: 5,\n        marginBottom: 5,\n    },\n    image: {\n        width: '100%',\n        height: '100%',\n        borderRadius: 10,\n    },\n}\n\nconst styles = {\n    imagesContainer: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between',\n        padding: 10,\n        paddingTop: 20,\n    },\n    imageContainer: {\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    imageLabel: {\n        fontSize: 12,\n        color: 'black',\n        padding: 10,\n        textAlign: 'center',\n    },\n    cardContainer: {\n        backgroundColor: '#FFF',\n        borderWidth: 0,\n        flex: 1,\n        justifyContent: 'center',\n        margin: 0,\n        padding: 0,\n    },\n    container: {\n        flex: 1,\n\n    }\n}","import {createNativeStackNavigator} from \"@react-navigation/native-stack\";\nimport {useAppSelector} from \"../../app/hooks\";\nimport {selectDarkMode, selectUserKey} from \"../../app/appDataSlice\";\nimport React, {useState} from \"react\";\nimport {base_URL} from \"../notifications/constants\";\nimport {Image, TouchableOpacity} from \"react-native\";\nimport {Layout} from \"@ui-kitten/components\";\nimport Header from \"../../components/Header\";\nimport AdminHomeNavigation from \"./adminPanel\";\n\n\nconst AdminStack = createNativeStackNavigator();\nexport default function AdminPanel() {\n    const accessoryLeft = (\n        <Image\n            style={{\n                height: 28,\n                width: 28,\n                alignItems: 'center',\n            }}\n            source={require('../../../assets/logos/app-logo-transparent.png')}\n        />\n    );\n\n    return (\n        <AdminStack.Navigator>\n            <AdminStack.Screen\n                options={{\n                    header: () => {\n                        return (\n                            <Layout style={{paddingBottom: 10}}>\n                                <Header\n                                    accessoryLeft={accessoryLeft}\n                                    title=\"Admin Panel\"\n                                />\n                            </Layout>\n                        )\n                    },\n                }}\n                name={'AdminStack'}\n                component={AdminHomeNavigation}\n            />\n        </AdminStack.Navigator>\n    );\n}","import { Image, View } from 'react-native';\n\nexport default function WebSplashScreen() {\n  return (\n    <View\n      style={{\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}>\n      <Image\n        source={require('../../assets/logos/splash-logo.png')}\n        style={{ width: 300, height: 300 }}\n      />\n    </View>\n  );\n}\n","import { useIsFocused, useNavigation } from '@react-navigation/native';\nimport { useGetCurrentSectionQuery } from '../../api/classPagesApi';\nimport {\n  Alert,\n  Dimensions,\n  FlatList,\n  Image,\n  Keyboard,\n  KeyboardAvoidingView,\n  LogBox,\n  Platform,\n  SafeAreaView,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from 'react-native';\nimport { Text } from '@ui-kitten/components';\nimport { useAppSelector } from '../../../app/hooks';\nimport { io } from 'socket.io-client';\nimport React, { useEffect, useState } from 'react';\nimport { base_URL } from '../../../constants/admin';\nimport { selectUserKey } from '../../../app/appDataSlice';\nimport { useGetUserInfoQuery } from '../../api/usersApi';\nimport Loader from 'react-native-three-dots-loader';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport * as ImagePicker from 'expo-image-picker';\nimport Toast from 'react-native-root-toast';\nimport SearchBar from '../../../components/SearchBar';\n\nexport default function SingleChatRoom({\n  route: {\n    params: { data },\n  },\n}) {\n  const [imagePickerStatus, requestImagePickerPermission] =\n    ImagePicker.useMediaLibraryPermissions();\n  const [cameraStatus, requestCameraPermission] =\n    ImagePicker.useCameraPermissions();\n  const [filter, setFilter] = useState('');\n  const [showSearch, setShowSearch] = useState(false);\n  const [photoSelected, setPhotoSelected] = useState({\n    date: null,\n    id: null,\n    contentImage: null,\n  });\n  const [keyboardShown, setKeyboardShown] = useState(false);\n  const [retryNumber, setRetryNumber] = useState(0);\n  const [failedConnection, setFailedConnection] = useState(false);\n  const [hardDisableSend, setHardDisableSend] = useState(false);\n  const navigation = useNavigation();\n  const [message, setMessage] = useState('');\n  const [filteredMessageList, setFilteredMessageList] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const userKey = useAppSelector(selectUserKey);\n  const { data: userData } = useGetUserInfoQuery(userKey, {\n    skip: !userKey,\n  });\n  const { data: currentSection, isLoading: isCurrentSectionLoading } =\n    useGetCurrentSectionQuery();\n  const [messageList, setMessageList] = useState([]);\n  const socket = io(base_URL + '/realTimeChat/' + data.id, {\n    auth: {\n      userKey,\n    },\n  });\n\n  useEffect(() => {\n    // Bug with some component i guess cause i didn't use animated anything, yet expo has a seizure and spams warnings\n    LogBox.ignoreLogs(['Animated: `useNativeDriver`']);\n\n    // Keyboard listeners\n    const showListener = Keyboard.addListener('keyboardWillShow', () => {\n      setKeyboardShown(true);\n    });\n    const hideListener = Keyboard.addListener('keyboardWillHide', () => {\n      setKeyboardShown(false);\n    });\n\n    return () => {\n      showListener.remove();\n      hideListener.remove();\n    };\n  }, []);\n\n  useEffect(() => {\n    navigation.setOptions({\n      headerTitle:\n        data.id === 'public'\n          ? 'Public'\n          : data.id === 'admin'\n          ? 'Admin'\n          : data.id,\n      headerRight: () => (\n        <TouchableOpacity\n          onPress={() => {\n            setFilter('');\n            setShowSearch(!showSearch);\n          }}>\n          <FontAwesome5 name=\"search\" size={20} color={'black'} />\n        </TouchableOpacity>\n      ),\n    });\n  }, [showSearch]);\n\n  useEffect(() => {\n    // maintenance\n\n    // socket logic\n    socket.connect();\n    const timer = setTimeout(function () {\n      socket.off('connect');\n      socket.off('newMessage');\n      socket.disconnect();\n      socket.close();\n      setFailedConnection(true);\n    }, 10000);\n    socket.on('connect', () => {\n      console.log('connected');\n      clearTimeout(timer);\n      getMessages();\n    });\n    return () => {\n      setLoaded(false);\n      socket.disconnect();\n      socket.off('connect');\n      socket.off('newMessage');\n    };\n  }, [useIsFocused(), retryNumber]);\n\n  // Add all new message changes here\n  useEffect(() => {\n    socket.on('imageMessageServer', (msg) => {\n      addMessage(msg);\n    });\n    socket.on('newMessage', (msg) => {\n      addMessage(msg);\n    });\n    socket.on('deleteMessage', (msg) => {\n      const index = messageList.findIndex((mess) => isEqualTo(mess, msg));\n      if (index !== -1) {\n        setMessageList([...messageList].splice(index, 1));\n      }\n    });\n    return () => {\n      socket.off('imageMessageServer');\n      socket.off('newMessage');\n      socket.off('deleteMessage');\n    };\n  }, [messageList]);\n\n  function getMessages() {\n    fetch(base_URL + '/chatRooms/getMessages?roomId=' + data.id, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        userKey: userKey,\n      },\n    }).then(async (data) => {\n      if (!data.ok) {\n        setFailedConnection(true);\n      } else {\n        data.json().then(async (array) => {\n          setMessageList(array);\n          setLoaded(true);\n        });\n      }\n    });\n  }\n\n  useEffect(() => {\n    setFilteredMessageList(\n      messageList.filter((mess) =>\n        (mess.user + mess.message).toLowerCase().includes(filter.toLowerCase())\n      )\n    );\n  }, [filter]);\n\n  function addMessage(messageToAdd) {\n    let myMessage = messageList.find((mess) => isEqualTo(mess, messageToAdd));\n    if (myMessage) {\n      delete myMessage.isUnsent;\n      setMessageList(\n        [...messageList]\n          .filter((mess) => !isEqualTo(mess, messageToAdd))\n          .concat(myMessage)\n      );\n    } else {\n      setMessageList([...messageList].concat(messageToAdd));\n    }\n  }\n\n  function isEqualTo(message1, message2) {\n    try {\n      return message1.user === message2.user && message1.date === message2.date;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  async function activateCamera() {\n    const date = new Date().toISOString();\n    const response = await requestCameraPermission();\n    if (response.granted || cameraStatus.granted) {\n      let result = await ImagePicker.launchCameraAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      });\n      if (!result.canceled) {\n        setMessage('');\n        setPhotoSelected({\n          id: userData.userName + date + data.id + currentSection,\n          contentImage: result.assets[0],\n          date: date,\n        });\n      }\n    } else {\n      Alert.alert(\n        \"Permission to access camera is required. Please enable it in your phone's settings.\"\n      );\n    }\n  }\n\n  async function selectPhoto() {\n    const date = new Date().toISOString();\n    const response = await requestImagePickerPermission();\n    if (response.granted || imagePickerStatus.granted) {\n      let result = await ImagePicker.launchImageLibraryAsync({\n        allowsEditing: false,\n      });\n      if (!result.canceled) {\n        setMessage('');\n        setPhotoSelected({\n          id: userData.userName + date + data.id + currentSection,\n          contentImage: result.assets[0],\n          date: date,\n        });\n\n        if (Platform.OS === 'android') {\n          Toast.show(\"Don't worry if the image seems blurry on the sides.\", {\n            duration: Toast.durations.LONG,\n            opacity: 1,\n            position: -100,\n            backgroundColor: 'grey',\n            shadow: false,\n          });\n        }\n      }\n    } else {\n      Alert.alert(\n        \"Permission to access camera roll is required. Please enable it in your phone's settings.\"\n      );\n    }\n  }\n\n  function deleteTheMessage(messageToDelete) {\n    if (messageToDelete.user === userData.userName) {\n      socket.emit('deleteMyMessage', messageToDelete);\n      setMessageList(\n        messageList.filter((mess) => !isEqualTo(mess, messageToDelete))\n      );\n      Toast.show('Message Deleted', {\n        duration: Toast.durations.SHORT,\n        opacity: 0.7,\n        position: Toast.positions.CENTER,\n        backgroundColor: 'grey',\n        shadow: false,\n      });\n    }\n  }\n\n  async function sendNewMessage() {\n    setHardDisableSend(true); // basically a semaphore lol\n    if (message !== '') {\n      let newMessage = {\n        message: message,\n        date: new Date().toISOString(),\n        user: userData.userName,\n        isUnsent: true,\n      };\n      setMessageList([...messageList].concat(newMessage));\n      delete newMessage.isUnsent;\n      socket.emit('newMessageClient', newMessage);\n      setMessage('');\n    }\n    if (photoSelected.id !== null) {\n      const date = photoSelected.date;\n      setMessageList(\n        [...messageList].concat({\n          isImage: true,\n          isUnsent: true,\n          message: photoSelected.contentImage.uri,\n          user: userData.userName,\n          date: date,\n        })\n      );\n\n      const photo = photoSelected;\n      setPhotoSelected({ date: null, id: null, contentImage: null });\n\n      let formdata = new FormData();\n      formdata.append('picture', {\n        // @ts-ignore\n        uri: photo.contentImage.uri,\n        name: 'picture',\n        type: 'image/jpg',\n      });\n      formdata.append('id', photo.id);\n      formdata.append('date', date);\n      const res = await fetch(base_URL + '/chatRooms/uploadImage', {\n        method: 'POST',\n        redirect: 'follow',\n        headers: {\n          'Content-Type': 'application/json',\n          userKey: userKey,\n        },\n        body: formdata,\n      });\n      if (res.ok) {\n        const newMessage = {\n          date: date,\n          user: userData.userName,\n          message: photo.id,\n        };\n        socket.emit('imageMessageClient', newMessage);\n      }\n    }\n    setHardDisableSend(false);\n  }\n\n  function deletionAlert(messageToDelete) {\n    if (messageToDelete.user === userData.userName) {\n      Alert.alert(\n        'Delete Message',\n        'This action cannot be undone',\n        [\n          {\n            text: 'Confirm',\n            onPress: () => {\n              deleteTheMessage(messageToDelete);\n            },\n          },\n          {\n            text: 'Cancel',\n            style: 'cancel',\n          },\n        ],\n        { cancelable: true }\n      );\n    }\n  }\n\n  const renderItem = ({ item }) => (\n    <TouchableOpacity\n      disabled={item?.isUnsent}\n      onLongPress={() => deletionAlert(item)}\n      style={{\n        opacity: item?.isUnsent ? 0.4 : 1,\n        flexDirection: 'row',\n        marginVertical: 5,\n        minHeight: item.isImage ? windowHeight * 0.25 : undefined,\n        width: '100%',\n      }}>\n      <Text style={{ paddingRight: 10, fontWeight: 'bold' }}>{item.user}:</Text>\n      {item.isImage ? (\n        <Image\n          source={{ uri: item.message }}\n          style={{ flex: 1, resizeMode: 'contain' }}\n        />\n      ) : (\n        <Text style={{ flex: 1, flexWrap: 'wrap' }}>{item.message}</Text>\n      )}\n    </TouchableOpacity>\n  );\n  const windowHeight = Dimensions.get('screen').height;\n\n  return (\n    <SafeAreaView style={{ flex: 1 }}>\n      <KeyboardAvoidingView style={{ flex: 1 }}>\n        <View\n          style={[\n            styles.messagingScreen,\n            { paddingVertical: 5, paddingHorizontal: 10 },\n          ]}>\n          {messageList.length > 0 ? (\n            <View style={{ flex: 1 }}>\n              {showSearch && (\n                <SearchBar\n                  searchTerm={filter}\n                  onChangeText={setFilter}\n                  inputProps={{ autoCorrect: false }}\n                  placeholder=\"Search\"\n                />\n              )}\n              <FlatList\n                style={{}}\n                data={\n                  filter === ''\n                    ? [...messageList].reverse()\n                    : [...filteredMessageList].reverse()\n                }\n                renderItem={renderItem}\n                keyExtractor={(item) => item?.date + item?.user}\n                inverted\n              />\n            </View>\n          ) : failedConnection ? (\n            <TouchableOpacity\n              onPress={() => {\n                setFailedConnection(false);\n                setRetryNumber(retryNumber + 1);\n              }}>\n              <Text style={{ marginTop: '10%', textAlign: 'center' }}>\n                Connection Failed{'\\n'}Press to Reload\n              </Text>\n            </TouchableOpacity>\n          ) : loaded ? (\n            <Text style={{ textAlign: 'center' }}>No chats yet :/</Text>\n          ) : (\n            <View style={{ marginTop: '20%' }}>\n              <Loader />\n            </View>\n          )}\n        </View>\n\n        <View style={styles.messagingInputContainer}>\n          {!keyboardShown && (\n            <TouchableOpacity\n              onPress={activateCamera}\n              disabled={\n                hardDisableSend ||\n                !loaded ||\n                messageList.some((msg) => msg.isUnsent)\n              }\n              style={{\n                alignSelf: 'center',\n                paddingRight: 5,\n              }}>\n              <FontAwesome5\n                name=\"camera\"\n                size={20}\n                color={\n                  !hardDisableSend &&\n                  loaded &&\n                  !messageList.some((msg) => msg.isUnsent)\n                    ? 'black'\n                    : 'gray'\n                }\n              />\n            </TouchableOpacity>\n          )}\n          {!photoSelected.contentImage ? (\n            <View style={styles.messagingInput}>\n              <TextInput\n                placeholder={'Begin Typing...'}\n                placeholderTextColor={'gray'}\n                editable={loaded}\n                value={message}\n                multiline={true}\n                onChangeText={(value) => setMessage(value)}\n              />\n            </View>\n          ) : (\n            <View\n              style={{\n                ...styles.messagingInput,\n                paddingHorizontal: 10,\n                height: 150,\n              }}>\n              <Image\n                source={{ uri: photoSelected.contentImage?.uri }}\n                style={{ flex: 1, borderRadius: 10 }}\n              />\n              <TouchableOpacity\n                onPress={() => {\n                  setPhotoSelected({\n                    id: null,\n                    contentImage: null,\n                    date: null,\n                  });\n                }}\n                style={{ position: 'absolute', marginLeft: 15, marginTop: 10 }}>\n                <FontAwesome5\n                  name=\"times\"\n                  size={25}\n                  color={'#ff2e2e'}\n                  style={{}}\n                />\n              </TouchableOpacity>\n            </View>\n          )}\n          {!keyboardShown && (\n            <TouchableOpacity\n              onPress={selectPhoto}\n              disabled={\n                hardDisableSend ||\n                !loaded ||\n                messageList.some((msg) => msg.isUnsent)\n              }\n              style={{\n                width: '15%',\n                alignSelf: 'center',\n                paddingRight: 10,\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}>\n              <FontAwesome5\n                name=\"image\"\n                size={30}\n                color={\n                  !hardDisableSend &&\n                  loaded &&\n                  !messageList.some((msg) => msg.isUnsent)\n                    ? 'black'\n                    : 'gray'\n                }\n              />\n            </TouchableOpacity>\n          )}\n          <TouchableOpacity\n            style={{\n              ...styles.messagingButtonContainer,\n              backgroundColor:\n                !hardDisableSend &&\n                loaded &&\n                !messageList.some((msg) => msg.isUnsent)\n                  ? '#a245ee'\n                  : 'rgba(162,69,238,0.34)',\n            }}\n            onPress={sendNewMessage}\n            disabled={\n              hardDisableSend ||\n              !loaded ||\n              messageList.some((msg) => msg.isUnsent)\n            }>\n            <View>\n              <Text style={{ color: '#f2f0f1', fontSize: 15 }}>Send</Text>\n            </View>\n          </TouchableOpacity>\n        </View>\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = {\n  messagingScreen: {\n    flex: 1,\n  },\n  messagingInputContainer: {\n    width: '100%',\n    minHeight: 30,\n    backgroundColor: 'white',\n    paddingVertical: 15,\n    paddingHorizontal: 15,\n    justifyContent: 'center',\n    flexDirection: 'row',\n  },\n  messagingInput: {\n    borderWidth: 1,\n    padding: 10,\n    paddingTop: 5,\n    paddingHorizontal: 15,\n    flex: 1,\n    marginHorizontal: 10,\n    borderRadius: 20,\n  },\n  messagingButtonContainer: {\n    width: '20%',\n    alignSelf: 'center',\n    height: 40,\n    borderRadius: 3,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Image, ScrollView, StyleSheet, TouchableOpacity } from 'react-native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Layout, Text, List } from '@ui-kitten/components';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { useAppSelector } from '../../app/hooks';\nimport {\n  selectDarkMode,\n  selectIsGuest,\n  selectUserKey,\n} from '../../app/appDataSlice';\nimport { usersApiSlice } from '../api/usersApi';\nimport ModalContainer from '../../components/ModalContainer';\nimport SingleChatRoom from './singleChatPage/SingleChatRoom.native';\nimport { useIsFocused } from '@react-navigation/native';\nimport SelectTerm from '../classPages/SelectTerm';\nimport { CurrentTermLabel } from '../classPages/ClassesList';\n\nconst ChatRoomsNavigator = createNativeStackNavigator();\n\nexport default function ChatsRoomNavigation({ navigation }) {\n  const darkMode = useAppSelector(selectDarkMode);\n  const navigationHeader = (navigation) => (\n    <Layout\n      style={{\n        width: '100%',\n        justifyContent: 'space-between',\n        flexDirection: 'row',\n        alignItems: 'center',\n        flex: 1,\n        backgroundColor: 'transparent',\n      }}>\n      <Layout\n        style={{\n          paddingBottom: 5,\n          flexDirection: 'row',\n          alignContent: 'center',\n          flex: 1,\n          backgroundColor: 'transparent',\n        }}>\n        <Image\n          style={{\n            height: 28,\n            width: 28,\n          }}\n          source={require('../../../assets/logos/app-logo.png')}\n        />\n        <Text\n          style={{\n            paddingTop: 3,\n            paddingLeft: 10,\n            fontSize: 20,\n            fontWeight: '500',\n            color: darkMode ? '#fff' : '#000',\n          }}>\n          Chats\n        </Text>\n      </Layout>\n      <Layout\n        style={{\n          alignSelf: 'flex-end',\n          paddingRight: 40,\n          paddingBottom: 10,\n          flexDirection: 'row',\n          backgroundColor: 'transparent',\n        }}></Layout>\n    </Layout>\n  );\n\n  return (\n    <ChatRoomsNavigator.Navigator initialRouteName={'Chats'}>\n      <ChatRoomsNavigator.Screen\n        options={({ navigation }) => ({\n          title: 'Chats',\n          headerTitle: () => {\n            return navigationHeader(navigation);\n          },\n        })}\n        name=\"Chats\"\n        component={Chats}\n      />\n      <ChatRoomsNavigator.Screen\n        name=\"SingleChatRoom\"\n        component={SingleChatRoom}\n        options={{ headerTitle: '' }}\n      />\n      <ChatRoomsNavigator.Screen\n        name=\"SelectTerm\"\n        component={SelectTerm}\n        options={{\n          title: 'Select Term',\n          headerShown: false,\n          animation: 'slide_from_bottom',\n          gestureDirection: 'vertical',\n        }}\n      />\n    </ChatRoomsNavigator.Navigator>\n  );\n}\n\nconst Chats = ({ navigation }) => {\n  const [showGuestModal, setShowGuestModal] = useState(false);\n  const userKey = useAppSelector(selectUserKey);\n  const isGuest = useAppSelector(selectIsGuest);\n  const darkMode = useAppSelector(selectDarkMode);\n  const [refreshing, setRefreshing] = useState(false);\n  const [isMoving, setIsMoving] = useState(false);\n  const currentSection = useAppSelector(\n    (state) => state.appData.classPages.currentSection\n  );\n  const [availableChats, setAvailableChats] = useState([]);\n  const { data: userData } =\n    usersApiSlice.endpoints.getUserInfo.useQueryState(userKey);\n\n  function generateChatRooms() {\n    let chats = [];\n    if (userData.permissionLevel === 'admin') {\n      chats.push({\n        title: 'Admin Chatroom',\n        lastModifiedDate: '',\n        id: 'admin',\n      });\n    }\n    try {\n      for (const section of Object.entries(userData.addedClasses.classes)) {\n        if (section[0] === currentSection) {\n          for (const course of Object.values(section[1])) {\n            chats.push({\n              title: course[0],\n              lastModifiedDate: '',\n              id: course[0].replace(' ', ''),\n            });\n          }\n        }\n      }\n    } catch (e) {\n      console.log(e.message);\n    }\n    setAvailableChats(chats);\n  }\n\n  useEffect(() => {\n    setRefreshing(true);\n    generateChatRooms();\n    setRefreshing(false);\n  }, [useIsFocused, currentSection]);\n\n  const onRefresh = useCallback(() => {\n    setRefreshing(true);\n    generateChatRooms();\n    setRefreshing(false);\n  }, []);\n\n  const renderItem = ({ item }) => {\n    return (\n      <Layout>\n        <ScrollView>\n          <TouchableOpacity\n            style={{\n              alignItems: 'center',\n              alignSelf: 'center',\n              width: '95%',\n              borderRadius: 10,\n              marginLeft: 5,\n              marginRight: 5,\n              marginTop: 10,\n            }}\n            onPress={() => {\n              if (isGuest) {\n                setShowGuestModal(true);\n              } else {\n                navigation.navigate('SingleChatRoom', {\n                  data: item,\n                });\n              }\n            }}\n            key={item?.id}>\n            <Layout\n              style={{\n                alignItems: 'center',\n                alignSelf: 'center',\n                width: '95%',\n                height: 75,\n                borderRadius: 10,\n                backgroundColor: darkMode ? '#333333' : '#ebebeb',\n                shadowColor: '#000',\n                shadowOffset: { width: 0, height: 1 },\n                shadowOpacity: 0.2,\n                shadowRadius: 2,\n                elevation: 1,\n                marginLeft: 5,\n                marginRight: 5,\n                marginTop: 10,\n                justifyContent: 'center',\n              }}>\n              <Text\n                style={{\n                  fontWeight: 'bold',\n                  fontSize: 20,\n                }}>\n                {item?.title}\n              </Text>\n              {item?.lastModifiedDate ? (\n                <Text style={{ fontStyle: 'italic', fontSize: 12 }}>\n                  {item?.lastModifiedDate}\n                </Text>\n              ) : null}\n            </Layout>\n          </TouchableOpacity>\n        </ScrollView>\n        {showGuestModal && (\n          <ModalContainer\n            title=\"Wait!\"\n            children={\n              <Text style={{ paddingHorizontal: 30 }}>\n                This feature is locked to our Guest Users. Please create a free\n                account with us to take advantage this feature.\n              </Text>\n            }\n            backDropVisible={showGuestModal}\n            setBackDropVisible={setShowGuestModal}\n          />\n        )}\n      </Layout>\n    );\n  };\n\n  return (\n    <Layout style={{ flex: 1 }}>\n      <CurrentTermLabel\n        navigation={navigation}\n        currentSection={currentSection}\n        style={{ marginTop: 20, marginLeft: 20 }}\n      />\n      {availableChats.length === 0 ? (\n        <Layout style={{ alignItems: 'center' }}>\n          <Text\n            style={{\n              paddingTop: '25%',\n              paddingBottom: 10,\n              textAlign: 'center',\n            }}>\n            No Available Chat Rooms\n          </Text>\n          <TouchableOpacity\n            onPress={() => {\n              refreshAvailableChats();\n            }}>\n            <FontAwesome size={25} color={'#1E90FF'} name=\"rotate-right\" />\n          </TouchableOpacity>\n        </Layout>\n      ) : null}\n      <List\n        style={{ backgroundColor: 'transparent' }}\n        contentContainerStyle={{ flex: 1 }}\n        data={availableChats}\n        scrollEnabled={!isMoving}\n        renderItem={renderItem}\n        onRefresh={onRefresh}\n        refreshing={refreshing}\n      />\n    </Layout>\n  );\n};\n\nconst sponsorPageStyles = StyleSheet.create({\n  container: {\n    flex: 1,\n    // alignItems: 'center',\n  },\n  header: {\n    marginTop: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n  },\n  address: {\n    alignItems: 'center',\n    margin: 10,\n    borderColor: 'black',\n    borderWidth: 1,\n    padding: 10,\n  },\n  video: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-start',\n  },\n  title: {\n    fontSize: 26,\n    marginLeft: 10,\n  },\n  logo: {\n    width: '100%',\n    height: 100,\n  },\n  description: {\n    flex: 1,\n    margin: 10,\n    borderRadius: 5,\n    width: '95%',\n    padding: 10,\n  },\n  couponContainer: {\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 20,\n    marginBottom: 20,\n  },\n  coupon: {\n    width: 400,\n    height: 267,\n  },\n  imageGallery: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    margin: 10,\n    marginBottom: 0,\n  },\n  imageStyle: {\n    width: 150,\n    height: 150,\n    paddingTop: 100,\n    margin: 5,\n  },\n  headerText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n});\n\nconst myStyles = StyleSheet.create({\n  inputBig: {\n    height: 200,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n  },\n  input: {\n    height: 50,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n  },\n  indentedInput: {\n    height: 50,\n    marginVertical: 12,\n    borderWidth: 1,\n    padding: 10,\n    marginRight: 12,\n    marginLeft: 30,\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n  },\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 12,\n    paddingHorizontal: 32,\n    borderRadius: 4,\n    elevation: 3,\n  },\n  timeButton: {\n    width: 100,\n    height: 50,\n    marginHorizontal: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 4,\n  },\n  timeText: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white',\n  },\n  actualTimeText: {\n    fontSize: 13,\n    lineHeight: 18,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white',\n  },\n  timeStyle: {\n    flex: 0.3,\n    borderWidth: 2,\n    borderLeftColor: 'white',\n  },\n});\n\nconst listingStyles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  cardContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    alignSelf: 'center',\n    width: '95%',\n    height: 75,\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderBottomWidth: 0,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 2,\n    elevation: 1,\n    marginLeft: 5,\n    marginRight: 5,\n    marginTop: 10,\n  },\n  containerForNotifications: {\n    alignItems: 'center',\n    alignSelf: 'center',\n    width: '95%',\n    height: 75,\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderBottomWidth: 0,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 2,\n    elevation: 1,\n    marginLeft: 5,\n    marginRight: 5,\n    marginTop: 10,\n  },\n  text: {\n    flex: 1,\n    fontSize: 20,\n    textAlign: 'center',\n    marginTop: 5,\n    marginBottom: 5,\n  },\n  image: {\n    width: '100%',\n    height: '100%',\n    borderRadius: 10,\n  },\n});\n","import React, { useEffect, useRef, useState } from 'react';\nimport { store } from './src/app/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { persistStore } from 'redux-persist';\nimport * as eva from '@eva-design/eva';\nimport {\n  ApplicationProvider,\n  IconRegistry,\n  Text,\n  useTheme,\n} from '@ui-kitten/components';\nimport {\n  DarkTheme,\n  DefaultTheme,\n  NavigationContainer,\n} from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as ExpoSplashScreen from 'expo-splash-screen';\nimport { Ionicons } from '@expo/vector-icons';\nimport { StatusBar } from 'expo-status-bar';\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { RootSiblingParent } from 'react-native-root-siblings';\nimport Constants from 'expo-constants';\nimport { isDevice } from 'expo-device';\nimport * as Notifications from 'expo-notifications';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport {\n  Alert,\n  Linking,\n  Platform,\n  useColorScheme,\n  Dimensions,\n} from 'react-native';\nimport { BottomSheetModalProvider } from '@gorhom/bottom-sheet';\n\nimport Auth from './src/features/authentication';\nimport Discover from './src/features/discover';\nimport Calendar from './src/features/calendar';\nimport ClassPages from './src/features/classPages';\nimport { useAppDispatch, useAppSelector } from './src/app/hooks';\nimport {\n  deviceDarkModeSet,\n  mobileSiteSet,\n  selectDarkMode,\n  selectUserKey,\n  userKeyUpdated,\n} from './src/app/appDataSlice';\nimport Theme from './src/theme/custom-theme';\nimport {\n  useGetUserInfoQuery,\n  useLazyGetUserInfoQuery,\n  usersApiSlice,\n  useTrackLoginMutation,\n} from './src/features/api/usersApi';\nimport {\n  useLazyGetAllClassesQuery,\n  useLazyGetAllSectionsQuery,\n} from './src/features/api/classPagesApi';\nimport { FontAwesomeIconsPack } from './src/theme/font-awesome-icons';\nimport { useLazyGetCurrentVersionQuery } from './src/features/api/apiSlice';\nimport { FeatherIconsPack } from './src/theme/feather-icons';\nimport AdminPanel from './src/features/adminPanel';\nimport WebSplashScreen from './src/components/WebSplashScreen';\nimport { versionCompare } from './src/functions';\nimport {\n  availableSectionsListUpdated,\n  currentSectionUpdated,\n  resetClasses,\n} from './src/features/classPages/classPagesSlice';\nimport ChatsRoomNavigation from './src/features/chats/ChatRooms';\n\nconst windowWidth = Dimensions.get('window').width;\nconst persistor = persistStore(store);\nconst Stack = createNativeStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nExpoSplashScreen.preventAutoHideAsync();\n\nNotifications.setNotificationHandler({\n  handleNotification: async () => ({\n    shouldShowAlert: true,\n    shouldPlaySound: false,\n    shouldSetBadge: false,\n  }),\n});\n\nasync function registerForPushNotificationsAsync() {\n  let token;\n  if (isDevice && Platform.OS !== 'web') {\n    const { status: existingStatus } =\n      await Notifications.getPermissionsAsync();\n    let finalStatus = existingStatus;\n    if (existingStatus !== 'granted') {\n      const { status } = await Notifications.requestPermissionsAsync();\n      finalStatus = status;\n    }\n    if (finalStatus !== 'granted') {\n      alert('Failed to get push token for push notification!');\n      return;\n    }\n    token = (await Notifications.getExpoPushTokenAsync()).data;\n    console.log(token);\n  }\n\n  if (Platform.OS === 'android') {\n    Notifications.setNotificationChannelAsync('default', {\n      name: 'default',\n      importance: Notifications.AndroidImportance.MAX,\n      vibrationPattern: [0, 250, 250, 250],\n      lightColor: '#FF231F7C',\n    });\n  }\n\n  return token;\n}\n\nexport default function Entry() {\n  return (\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <RootSiblingParent>\n          <GestureHandlerRootView style={{ flex: 1 }}>\n            <BottomSheetModalProvider>\n              <App />\n            </BottomSheetModalProvider>\n          </GestureHandlerRootView>\n        </RootSiblingParent>\n      </PersistGate>\n    </Provider>\n  );\n}\n\nfunction App() {\n  const colorScheme = useColorScheme();\n  const dispatch = useAppDispatch();\n  const userKey = useAppSelector(selectUserKey);\n  const darkMode = useAppSelector(selectDarkMode);\n  const useDeviceColorScheme = useAppSelector(\n    (state) => state.appData.secure.useDeviceColorScheme\n  );\n  const localCurrentSection = useAppSelector(\n    (state) => state.appData.classPages.currentSection\n  );\n  const [isReady, setIsReady] = useState(false);\n  const [trackLogin] = useTrackLoginMutation();\n  const [getAllSections] = useLazyGetAllSectionsQuery();\n  const [getAllClasses] = useLazyGetAllClassesQuery();\n  const [getCurrentVersion] = useLazyGetCurrentVersionQuery();\n  const [getUserInfo, { data: userData, isError }] = useLazyGetUserInfoQuery();\n  const { data: userDataCache } =\n    usersApiSlice.endpoints.getUserInfo.useQueryState(userKey, {\n      skip: !userKey,\n    });\n\n  const [expoPushToken, setExpoPushToken] = useState('');\n  const [notification, setNotification] = useState(false);\n  const notificationListener = useRef();\n  const responseListener = useRef();\n\n  useEffect(() => {\n    const prepare = async () => {\n      try {\n        let fetchedCurrentSection = await getAllSections().unwrap();\n\n        // Check for user key\n        if (userKey) {\n          await getUserInfo(userKey).unwrap();\n          await trackLogin(userKey);\n\n          dispatch(\n            availableSectionsListUpdated(fetchedCurrentSection.availableTerms)\n          );\n\n          // Check for current section and update class list if outdated\n          if (fetchedCurrentSection.currentTerm !== localCurrentSection) {\n            dispatch(currentSectionUpdated(fetchedCurrentSection.currentTerm));\n            try {\n              getAllClasses({\n                userKey,\n                collegeName: userDataCache.collegeName,\n                courseTerm: fetchedCurrentSection,\n              }).unwrap();\n            } catch (e) {\n              console.log('Section is outdated: could not fetch classes', e);\n            }\n          }\n        }\n\n        // Attempt to register for push notifications\n\n        let token = await registerForPushNotificationsAsync();\n        setExpoPushToken(token);\n\n        notificationListener.current =\n          Notifications.addNotificationReceivedListener((notification) => {\n            setNotification(notification);\n          });\n\n        responseListener.current =\n          Notifications.addNotificationResponseReceivedListener((response) => {\n            console.log(response);\n          });\n\n        checkForUpdates();\n      } catch (e) {\n        dispatch(userKeyUpdated('')); // Clear userKey if login fails\n        console.warn('Login Fail', e);\n      } finally {\n        setIsReady(true);\n        await ExpoSplashScreen.hideAsync();\n      }\n    };\n    console.log('Preparing app');\n\n    prepare();\n\n    return () => {\n      if (notificationListener.current) {\n        Notifications.removeNotificationSubscription(\n          notificationListener.current\n        );\n      }\n\n      if (responseListener.current) {\n        Notifications.removeNotificationSubscription(responseListener.current);\n      }\n    };\n  }, [userKey]);\n\n  useEffect(() => {\n    if (useDeviceColorScheme) {\n      dispatch(deviceDarkModeSet(colorScheme === 'dark'));\n    }\n  }, [colorScheme]);\n\n  useEffect(() => {\n    dispatch(mobileSiteSet(windowWidth < 768));\n  }, [windowWidth]);\n\n  const checkForUpdates = async () => {\n    try {\n      // Check for current version\n      const currentVersion = Constants.manifest2.extra.expoClient.version;\n\n      const res = await getCurrentVersion().unwrap();\n      const currentFrontEndVersion =\n        res?.currentFrontEndVersion.currentFrontEndVersion;\n\n      if (\n        Platform.OS !== 'web' &&\n        versionCompare(currentFrontEndVersion, currentVersion) > 0\n      ) {\n        Alert.alert('There is a new version available!', '', [\n          {\n            text:\n              Platform.OS === 'android'\n                ? 'Update on the Play Store'\n                : 'Update on the App Store',\n            onPress: () =>\n              Linking.openURL(\n                Platform.OS === 'android'\n                  ? 'market://details?id=com.theathenanetwork.app'\n                  : 'https://apps.apple.com/us/app/athena-network/id1628317342'\n              ),\n          },\n          {\n            text: 'Cancel',\n            style: 'cancel',\n          },\n        ]);\n      }\n    } catch (e) {\n      console.warn('Update check failed', e);\n    }\n  };\n\n  if (!isReady) {\n    if (Platform.OS === 'web') {\n      return <WebSplashScreen />;\n    } else {\n      return null;\n    }\n  }\n\n  return (\n    <NavigationContainer\n      documentTitle={{\n        formatter: (options, route) =>\n          `${options?.title ?? route?.name} - Athena Network`,\n      }}\n      theme={darkMode ? DarkTheme : DefaultTheme}>\n      <ApplicationProvider\n        {...eva}\n        theme={{ ...(darkMode ? eva.dark : eva.light), ...Theme }}>\n        <StatusBar style={darkMode ? 'light' : 'dark'} />\n        <IconRegistry icons={[FontAwesomeIconsPack, FeatherIconsPack]} />\n\n        <Stack.Navigator screenOptions={{ headerShown: false }}>\n          {userDataCache && !isError ? (\n            <Stack.Screen name=\"Tabs\" component={TabsPage} />\n          ) : (\n            <Stack.Screen name=\"Auth\" component={Auth} />\n          )}\n        </Stack.Navigator>\n      </ApplicationProvider>\n    </NavigationContainer>\n  );\n}\n\nconst TabsPage = () => {\n  const theme = useTheme();\n  const userKey = useAppSelector(selectUserKey);\n  const { data: userData } = useGetUserInfoQuery(userKey, {\n    skip: !userKey,\n  });\n  const [isDev] = useState(__DEV__ ? true : false);\n\n  return (\n    <Tab.Navigator\n      initialRouteName={'ClassPages'}\n      screenOptions={({ route }) => ({\n        // detachInactiveScreens: false,\n        // unmountOnBlur: false,\n        tabBarHideOnKeyboard: Platform.OS === 'android',\n        tabBarIcon: ({ focused }) => {\n          // Create type for icon name\n          type IoniconsIconName = React.ComponentProps<typeof Ionicons>['name'];\n          let iconName: IoniconsIconName = 'ios-home';\n\n          if (route.name === 'ClassPages') {\n            iconName = focused ? 'book' : 'book-outline';\n          } else if (route.name === 'Discover') {\n            iconName = focused ? 'compass' : 'compass-outline';\n          } else if (route.name === 'Calendar') {\n            iconName = focused ? 'calendar' : 'calendar-outline';\n          } else if (route.name === 'ChatsRoomNavigation') {\n            iconName = focused ? 'chatbubbles' : 'chatbubbles-outline';\n          }\n\n          return (\n            <Ionicons\n              name={iconName}\n              size={25}\n              color={\n                focused ? theme['color-primary-500'] : theme['color-basic-500']\n              }\n            />\n          );\n        },\n        tabBarStyle: { paddingTop: 5 },\n        tabBarItemStyle: {},\n        headerShown: false,\n      })}>\n      <Tab.Screen\n        name=\"ClassPages\"\n        component={ClassPages}\n        options={{\n          unmountOnBlur: true,\n          tabBarLabel: () => (\n            <Text\n              style={{\n                margin: Platform.OS === 'web' ? 15 : undefined,\n                fontSize: 12,\n              }}>\n              Class Pages\n            </Text>\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"Calendar\"\n        component={Calendar}\n        options={{\n          unmountOnBlur: true,\n          tabBarLabel: () => (\n            <Text\n              style={{\n                margin: Platform.OS === 'web' ? 15 : undefined,\n                fontSize: 12,\n              }}>\n              Calendar\n            </Text>\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"ChatsRoomNavigation\"\n        component={ChatsRoomNavigation}\n        options={{\n          unmountOnBlur: true,\n          tabBarLabel: () => (\n            <Text\n              style={{\n                margin: Platform.OS === 'web' ? 15 : undefined,\n                fontSize: 12,\n              }}>\n              Chats\n            </Text>\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"Discover\"\n        component={Discover}\n        options={{\n          unmountOnBlur: false,\n          tabBarLabel: () => (\n            <Text\n              style={{\n                margin: Platform.OS === 'web' ? 15 : undefined,\n                fontSize: 12,\n              }}>\n              Discover\n            </Text>\n          ),\n        }}\n      />\n      {userData?.permissionLevel === 'admin' && (\n        <Tab.Screen\n          name=\"Admin\"\n          component={AdminPanel}\n          options={{\n            unmountOnBlur: false,\n            tabBarLabel: () => (\n              <Text\n                style={{\n                  margin: Platform.OS === 'web' ? 15 : undefined,\n                  fontSize: 12,\n                }}>\n                Admin\n              </Text>\n            ),\n          }}\n        />\n      )}\n    </Tab.Navigator>\n  );\n};\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}