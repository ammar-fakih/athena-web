{"version":3,"sources":["assets/logos/app-logo-transparent.png","assets/sponsorPage/coupon.png","assets/sponsorPage/become-sponsor.png","assets/logos/splash-logo.png","node_modules/moment/locale sync /^/.//.*$","assets/logos/owl-black-text.png","assets/logos/owl-white-text.png","src/app/appDataSlice.ts","src/app/SecureStorage.ts","src/features/calendar/calendarSlice.ts","src/functions.ts","src/features/api/apiSlice.ts","src/features/api/usersApi.ts","src/features/api/classPagesApi.ts","src/features/classPages/classPagesSlice.ts","src/features/discover/discoverSlice.ts","src/app/storage.ts","src/app/store.ts","src/app/hooks.ts","src/components/WebSplashScreen.tsx","src/constants/admin.ts","src/features/adminPanel/adminPanel.tsx","src/components/Header.tsx","src/features/adminPanel/index.tsx","src/features/authentication/ForgotPassword/EnterCodePage.tsx","src/features/authentication/ForgotPassword/EnterEmailPage.tsx","src/features/authentication/ForgotPassword/index.tsx","src/features/authentication/Login.tsx","src/features/authentication/Signup/SignupForm.tsx","src/features/authentication/Signup/VerifyEmail.tsx","src/components/BackButton.tsx","src/features/authentication/Signup/index.tsx","src/features/authentication/index.tsx","src/components/ModalContainer.tsx","src/features/classPages/SelectTerm.tsx","src/features/notifications/constants.tsx","src/components/Message.tsx","src/components/SearchBar.tsx","src/constants/classPages.ts","src/features/classPages/AddedClasses.tsx","src/features/classPages/ClassListItemItem.tsx","src/features/classPages/ClassListItem.tsx","src/features/classPages/FilterClasses.tsx","src/constants/map.ts","src/components/UserNameSelectionDropDown.tsx","src/features/classPages/SingleClassPage/exportModalClass.tsx","src/features/classPages/SingleClassPage/InfoPage.tsx","src/features/classPages/SingleClassPage/PostReview.tsx","src/features/classPages/SingleClassPage/index.tsx","src/features/classPages/StarredClasses.tsx","src/features/classPages/ClassesList.tsx","src/features/combinedCalender/classList/index.tsx","src/features/calendar/CalendarFunctions.ts","src/features/calendar/ScheduledItem.tsx","src/features/calendar/customEvent.tsx","src/features/calendar/CalendarRender.tsx","src/features/calendar/CalendarPage.tsx","src/components/WrapItems.tsx","src/features/calendar/CreateCustomEvent.tsx","src/features/calendar/exportModal.tsx","src/features/calendar/index.tsx","src/features/chats/singleChatPage/SingleChatRoom.tsx","src/features/chats/CreateChatRoom.tsx","src/features/chats/ChatRooms.tsx","src/features/notifications/notificationSinglePage.tsx","src/features/notifications/Notifications.tsx","src/features/settings/EditUser.tsx","src/features/settings/SettingsPage.tsx","src/features/settings/index.tsx","src/components/Menu.tsx","src/features/api/sponsorsApi.ts","src/features/sponsors/SponsorsList.tsx","src/constants/electiveGenerator.ts","src/features/classPages/ElectiveGenerator/index.tsx","src/constants/discover.ts","src/features/classPages/index.tsx","src/features/combinedCalender/index.tsx","src/features/discover/CreatePost/CreateImagePost.tsx","src/features/api/discoverApi.ts","src/features/discover/CreatePost/CreatePost.tsx","src/components/withPreventDoubleClick.tsx","src/features/discover/BottomBar.tsx","src/components/DoubleTap.tsx","src/components/DoubleTapHeart.tsx","src/features/discover/EventBody.tsx","src/features/discover/Cards/EventCard.tsx","src/features/discover/Cards/ImageCard.tsx","src/features/discover/Cards/SponsorCard.tsx","src/components/DisabledOptionModal.tsx","src/features/discover/SinglePost/SinglePostBody.tsx","src/features/discover/index.tsx","src/theme/custom-theme.ts","src/theme/feather-icons.tsx","src/theme/font-awesome-icons.tsx","App.tsx","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","initialState","userKey","isGuest","isMobile","darkMode","useDeviceColorScheme","isCacheReset","appDataSlice","createSlice","name","reducers","reset","cacheReset","state","userKeyUpdated","action","payload","setIsGuest","deviceDarkModeSet","useDeviceColorSchemeSet","deleteAllAppData","mobileSiteSet","extraReducers","selectDarkMode","appData","secure","selectUserKey","selectIsGuest","actions","defaultReplacer","key","replaceCharacter","replace","isThreeDay","calendarSlice","isThreeDaySet","showToast","message","backgroundColor","Toast","show","duration","durations","LONG","opacity","position","shadow","exportToICal","events","dayMapping","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","icsEvents","event","schedule","courseSchedule","days","daysOfTheWeek","day","join","summary","courseName","courseCode","description","professorName","seatsFilled","courseStatus","location","classLocation","startDateTime","startTime","endDateTime","endTime","vevent","_id","Date","toISOString","split","push","getMasterCourseCodeFromCourseCode","courseCodeParts","slice","length","getTimeAsNumberOfMinutes","time","timeParts","parseInt","apiSlice","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getCurrentVersion","query","useLazyGetCurrentVersionQuery","usersApiSlice","injectEndpoints","overrideExisting","getUserInfo","providesTags","url","headers","transformErrorResponse","response","status","error","transformResponse","classes","starredClasses","rest","addedClasses","orderedClasses","forEach","courseTerm","schoolParts","school","masterCourseCode","login","mutation","userName","password","params","trackLogin","method","responseHandler","text","deleteAccount","editUser","invalidatesTags","body","fields","getCollegeList","getChatRooms","json","createChatRoom","recipients","nameOfChatRoom","JSON","stringify","userList","addOrRemoveUserFromChatRoom","chatRoomId","signupUser","verifySignup","resetPassword","email","addExpoPushToken","expoPushToken","useAddOrRemoveUserFromChatRoomMutation","useCreateChatRoomMutation","useGetChatRoomsMutation","useTrackLoginMutation","useGetUserInfoQuery","useLazyGetUserInfoQuery","useLoginMutation","useDeleteAccountMutation","useEditUserMutation","useGetCollegeListQuery","useSignupUserMutation","useVerifySignupMutation","useResetPasswordMutation","useAddExpoPushTokenMutation","classPagesApi","getAllClasses","pageNumber","collegeName","getRatingFromReviews","reviews","totalAverage","counter","review","rating","toFixed","getDifficultyFromReviews","difficulty","fromEntries","entries","value","sort","getCurrentSection","currentTerm","getAllSections","addClass","classesToAdd","onQueryStarted","dispatch","queryFulfilled","patchResult","util","updateQueryData","draft","undo","addMultipleClasses","courseCodePairs","courseCodePair","removeClass","classesToRemove","filter","classCode","addStarredClass","starredClassesToAdd","some","course","removeStarredClass","starredClassesToRemove","isAllowedToReview","sendReview","swapCoursePriority","firstPosition","secondPosition","termToUpdate","temp","i","useGetCurrentSectionQuery","useGetAllClassesQuery","useAddClassMutation","useAddMultipleClassesMutation","useRemoveClassMutation","useIsAllowedToReviewQuery","useSendReviewMutation","useLazyGetAllClassesQuery","useLazyGetAllSectionsQuery","useRemoveStarredClassMutation","useAddStarredClassMutation","useSwapCoursePriorityMutation","filteredClasses","renderedClasses","currentSection","availableSections","selectedClass","searchTerm","page","isHMC","filters","filterConflicts","colleges","HM","CM","PO","PZ","SC","hasSelectedElectiveGen","suggestedClasses","orderedAddedClasses","totalCredits","credits","hmcCredits","classPagesSlice","currentSectionUpdated","availableSectionsListUpdated","endOfListReached","resetClasses","caseReducers","creditsRecalculated","searchResultsFiltered","suggestedClassesUpdated","suggestedClassesDimissed","electiveGeneratorSelected","classSelected","selectedClassCleared","filtersSaved","isHMCUpdated","recalculateTotalCredits","allClasses","filtersReset","newResultsArray","collegeAbr","substring","newResultsObject","times","timeWindow","doesClassConflict","searchTermUpdated","matchDepartmentName","searchCourseCode","findSearchTermShortcuts","searchTerms","filterBySearchTerm","addMatcher","matchFulfilled","getOrderedClassesFromApiRes","userData","numCourses","creditWeight","creditWeightHM","searchPhrase","match","p1","p2","p3","p4","p5","padStart","coursePhrase","trim","includes","toUpperCase","addedClass","addedTimes","addedTime","addedSchedule","addedTimeStart","addedTimeEnd","scheduleTimeStart","scheduleTimeEnd","selectClassesList","classPages","submittedSearchTerm","tag","recentSearches","discoverSlice","searchTermSubmitted","unshift","searchTermChanged","recentSearchTermSelected","tagSelected","recentSearchTermRemoved","term","SecureStorage","options","replacer","getItem","SecureStore","setItem","removeItem","createSecureStorage","securePersistConfig","storage","Platform","OS","AsyncStorage","cpPersistConfig","ExpoFileSystemStorage","whitelist","discoverPersistConfig","rootReducer","combineReducers","persistReducer","classPagesReducer","appDataReducer","discover","discoverReducer","calendar","calendarReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","immutableCheck","concat","useAppDispatch","useDispatch","useAppSelector","useSelector","WebSplashScreen","View","style","flex","justifyContent","alignItems","Image","source","require","width","height","base_URL","AdminHomePage","Manager","randomizationFactor","addTrailingSlash","autoConnect","createNativeStackNavigator","AdminHomeNavigation","useState","adminCommands","setAdminCommands","getAdminCommands","adminURL","res","fetch","commands","filterObject","currentAdminCommandsStatus","a","b","textA","label","textB","finalCommandList","command","useEffect","refreshing","setRefreshing","onRefresh","useCallback","then","Navigator","initialRouteName","Screen","headerShown","component","navigation","ScrollView","refreshControl","RefreshControl","Text","TouchableOpacity","onPress","navigate","data","listingStyles","cardContainer","AdminCommand","headerTitle","route","info","setInfo","isFileUpload","setIsFileUpload","setBody","users","setUsers","fileUploads","setFileUploads","sponsors","setSponsors","setStatus","allFieldsFilled","setAllFieldsFilled","buttonPushed","setButtonPushed","checkForFieldsFilled","field","mandatory","undefined","ok","newUsers","sponsor","sponsorName","images","imageName","sendApiData","additionToUrl","aspect","paramOverride","apiType","newUrl","formdata","FormData","item","append","uri","type","redirect","text2","parse","err","renderEachDropItem","final","option","title","trueFalseTemplate","selectedIndex","setSelectedIndex","boolValues","displayValue","styles","container","level","onSelect","index","row","newBody","changeEverything","placeholder","KeyboardAvoidingView","behavior","sponsorPageStyles","display","address","fontSize","changeValue","theValue","valueToChange","renderStringArray","valuesToSend","tempFinal","paddingLeft","paddingBottom","paddingTop","TextInput","autoCapitalize","onChangeText","miniField","newFieldForBody","values","changeStringValue","stringArray","eachOne","myStyles","indentedInput","placeholderTextColor","renderMultiSelectDropDown","hasChosen","setHasChosen","containerDrop","multiSelect","finalArray","littleIndex","finalObject","at","splice","calculateSelectedValues","newSelection","Array","isArray","toggleValue","clearButtonMode","input","IndexPath","renderDropDown","inputBig","multiline","pickImage","result","ImagePicker","allowsEditing","cancelled","borderRadius","paddingVertical","flexDirection","marginVertical","marginHorizontal","FontAwesome","size","color","fileUploadTemplate","alignContent","fontWeight","renderFilterParameters","renderTheFieldsNecessary","button","graphData","timeFrame","informationToShow","isDateGraph","dataToShow","labels","getDates","datasets","getData","Dimensions","get","verticalLabelRotation","fromZero","xLabelsOffset","segments","chartConfig","decimalPlaces","labelColor","propsForDots","r","strokeWidth","stroke","oneElement","renderOneCard","flexShrink","moment","tz","subtract","format","usersToday","instance","date","weekStart","weekEnd","usersMonth","monthStart","monthEnd","add","cardInfo","finalText","flexWrap","renderedActions","renderButtonForCard","elevation","parameter","buttonText","alignSelf","fontStyle","showResponseData","header","marginTop","margin","borderColor","borderWidth","padding","video","marginLeft","logo","couponContainer","marginBottom","coupon","imageGallery","imageStyle","headerText","marginRight","lineHeight","letterSpacing","paddingHorizontal","borderBottomWidth","shadowColor","shadowOffset","shadowOpacity","shadowRadius","textAlign","image","imagesContainer","imageContainer","imageLabel","Header","accessoryLeft","accessoryRight","center","Constants","statusBarHeight","AdminStack","AdminPanel","EnterCodePage","category","routes","EnterEmailPage","setEmail","inputRef","useRef","isLoading","isError","netInfo","useNetInfo","current","focus","onSubmit","isConnected","unwrap","alert","ref","onSubmitEditing","Keyboard","dismiss","disabled","Stack","ForgotPassword","screenOptions","LightModeLogo","DarkModeLogo","Login","setUserName","setPassword","loginError","setLoginError","loadingUserInfo","passwordRef","React","handleLogin","NetInfo","allSections","availableTerms","guestLogin","TouchableWithoutFeedback","inputView","autoComplete","keyboardType","blurOnSubmit","secureTextEntry","forgot_button","loginBtn","maxWidth","signupBtn","StyleSheet","create","guestButton","Signup","realFirstName","setRealFirstName","realLastName","setRealLastName","major","setMajor","simplifiedSignup","setSimplifiedSignUp","humanReadableCollegeName","userCollege","setUserCollege","collegeList","signupLoading","firstNameInputRef","lastNameInputRef","passwordInputRef","majorInputRef","handleSubmitButton","validateInput","responseUnwrapped","goBack","SectionStyle","labelSection","inputStyle","underlineColorAndroid","defaultValue","returnKeyType","onFocus","newObject","college","zIndex","top","left","checked","onChange","nextChecked","buttonStyle","buttonTextStyle","paddingRight","errorTextStyle","successTextStyle","minHeight","minWidth","VerifyEmail","verificationCode","setVerificationCode","verifyCode","getUserInfoLoading","handleVerifyCodeButton","BackButton","props","HeaderBackButton","labelVisible","theme","useTheme","headerStyle","headerLeft","SignupForm","Auth","ModalContainer","children","backDropVisible","setBackDropVisible","clickBackdropToClose","modalStyle","modalProps","backdropOpacity","onBackdropPress","isVisible","appearance","right","pack","SelectTerm","userDataCache","useQueryState","skip","startIndexValue","findIndex","selectedSectionIndex","setSelectedSectionIndex","Message","SearchBar","inputProps","cancelButtonAction","cancelButtonStatus","showCancelButton","alwaysShowCancelButton","selected","setSelected","searchbarWidth","setSearchbarWidth","onLayout","nativeEvent","layout","LayoutAnimation","configureNext","onBlur","autoCorrect","NEW_REVIEW_FIELDS","AddedClasses","setAddedClassesVisible","handleRemoveClass","handleSwapAddedClasses","bottomSheetRef","useNavigation","useWindowDimensions","allClassesList","addedClassesList","renderItem","drag","isActive","getIndex","onLongPress","Ionicons","snapToIndex","handleClassSelected","Entypo","renderFlatList","contentContainerStyle","automaticallyAdjustsScrollIndicatorInsets","indicatorStyle","showsVerticalScrollIndicator","ListEmptyComponent","ItemSeparatorComponent","onDragEnd","from","to","keyExtractor","ClassListItemItem","seatsAvailable","handleAddClass","added","selectedAnim","Animated","Value","dropDownItem","isAvailable","notAvailable","activeOpacity","sequence","spring","toValue","speed","useNativeDriver","start","transform","scale","FontAwesome5","list__container","addedClassesContainer","borderTopRightRadius","borderBottomRightRadius","borderTopWidth","borderRightWidth","buttonContainer","dropDown","loadingMessage","loadingMessageRefresh","Item","menuOpen","setIsMenuOpen","inItem","useMemo","property","update","springDamping","UIManager","setLayoutAnimationEnabledExperimental","addClassButton","FilterClasses","setFiltersMenuVisible","initialFilters","getInitialState","setColleges","setFilterConflicts","change","onChangeIsHMC","bool","onChangeFilterCollege","locations","ClaremontColleges","Brackett","Carnegie","Edmunds","Honnold","Lincoln","Online","PAC","Pearsons","Stauffer","KSPC","TBD","removeNumbersAndSpaces","char","UserNameSelectionDropDown","setRecipient","names","setNames","setValue","modal","backdrop","user","realName","userNameContainsString","find","auser","toLowerCase","firstPar","indexOf","secondPar","findUserNameFromName","ExportModalClass","classData","showGuestModal","setShowGuestModal","showModal","setShowModal","showWebModal","setShowWebModal","renderModal","recipient","exportClass","isCourseData","visible","backdropStyle","Button","returnValue","Alert","withStyles","eva","scrollViewRef","showCourseModal","setShowCourseModal","courseModalChildren","setCourseModalChildren","professorReviewsObject","setProfessorReviewsObject","daysOfWeek","dark","light","isAllowedToReviewRes","isStarred","userHasCourse","courseToggleChildren","courseForToggle","toggleStarCourse","getReviewsFromProfessor","buildTimeString","convertTo12HourTime","hours","minutes","ampm","Number","scrollTo","y","animated","averageGradeMSGModal","getProfessorsList","list","schedulePopup","setSchedulePopup","allTheChildren","setAllTheChildren","toggleSchedulePopUp","finalDays","realTime","addition","daysObject","daysActive","stringArrays","generateTable","LinearGradient","colors","x","end","subtitle","timeSpentOutOfClass","averageGrade","courseDescription","boxed","prerequisites","corequisites","disclaimer","subHeader","section","sectionText","textDecorationLine","permCount","openMap","waypoints","provider","number","toString","zoom","isAllowed","professorList","professor","getProfessorReviewsList","courseOpen","courseClosed","details","BodyContainer","borderTopColor","documentStyle","graphImage","aspectRatio","resizeMode","grade","reviewText","reviewBox","NewReview","showConfirmationModal","setShowConfirmationModal","showErrorModal","setShowErrorModal","handleReviewSubmitted","successChildren","errorChildren","SingleClassPage","InfoPage","PostReview","StarredClasses","isWeb","starredCourses","setStarredCourses","FlatList","courseData","handleRemoveStarredClass","CurrentTermLabel","textStyle","ClassesList","setMenuOpen","addedClassesVisible","filtersMenuVisible","listRef","setListRef","swapAddedClasses","fetchUserInfo","getClasses","classListLoading","userInfoSuccess","isSuccess","fetchClasses","content","isClassAdded","handleRefresh","handleMassImport","courseCodes","matchAll","reduce","accumulator","matches","collegeParts","newCourseCode","courseInfo","inItemSize","ListHeaderComponent","Presets","easeInEaseOut","onScroll","scrollEventThrottle","maxToRenderPerBatch","initialNumToRender","onEndReachedThreshold","onEndReached","tintColor","titleColor","scrollToOffset","offset","filteredColleges","c","renderFilteredCollegesList","ClassListPage","CalendarFunctions","string","charIndex","charCodeAt","str","this","getColor","minuteHeight","allClassData","masterClassInfo","meetingTime","setMenuCourseCode","disableLongPress","extraTransparency","calendarFun","universalHeight","startHour","startMinute","endHour","endMinute","stringToColour","getMinutesDiff","adjustsFontSizeToFit","numberOfLines","Math","random","renderCustomEvent","setMenuEvent","CalendarRender","overrideData","showOverlay","setShowOverlay","topBar","verticalRef","isRightWindowOpen","setIsRightWindowOpen","setCurrentTime","startingOffset","dimensions","rightWidth","setRightWidth","menuCourseCode","menuCustomEvent","setMenuCustomEvent","leftWidth","_panResponder","getPanResponder","isDividerClicked","setIsDividerClicked","threeDayWidth","fiveDayWidth","overrideClassesToRender","setOverrideClassesToRender","today","getDay","stringOverrideData","getOverrideCourseData","setInterval","renderCustomEvents","elem","disableInteractions","finalRender","customEvents","eventIsThisDay","showThisWeek","PanResponder","onMoveShouldSetResponderCapture","onMoveShouldSetPanResponderCapture","onPanResponderGrant","gestureState","onPanResponderMove","newRight","moveX","onPanResponderRelease","dayString","dayOfWeek","adjustDays","getMs","seconds","dateOfEvent","currentDate","currentDayOfWeek","startOfWeek","valueOf","getHours","getMinutes","getSeconds","endOfWeek","renderDashes","borderBottomColor","renderClasses","toReversed","getFullClassData","data2","renderClassesForOverride","courseTime","renderDeleteModal","onRemove","onCancel","maxHeight","animationOut","masterRender","horizontal","snapToInterval","showsHorizontalScrollIndicator","contentOffset","bounces","decelerationRate","onMomentumScrollBegin","panHandlers","removeCustomEvent","catch","bottom","CalendarPage","LogBox","ignoreAllLogs","WrapItems","childStyle","LayoutProps","Children","child","CreateCustomEvent","showDots","setShowDots","dateToUse","selectedDate","setSelectedDate","isOneDay","setIsOneDay","allValuesPopulated","setAllValuesPopulated","daysArray","setDaysArray","setStartTime","setEndTime","eventTitle","setEventTitle","showTimePickerAndroid","setShowTimePickerAndroid","timePickerOptions","setTime","formatAMPM","Title","mode","testID","addCustomEvent","toTimeString","setTimeout","exportSchedule","convert","isSchedule","Calendar","leftComponent","rightComponent","trackBar","activeBackgroundColor","inActiveBackgroundColor","thumbButton","activeColor","inActiveColor","animationDuration","flatMap","animation","gestureDirection","SingleChatRoom","imagePickerStatus","requestImagePickerPermission","cameraStatus","requestCameraPermission","setFilter","showSearch","setShowSearch","contentImage","photoSelected","setPhotoSelected","addOrRemoveUser","isCustomRoom","keyboardShown","setKeyboardShown","retryNumber","setRetryNumber","failedConnection","setFailedConnection","hardDisableSend","setHardDisableSend","showUserList","setShowUserList","setMessage","filteredMessageList","setFilteredMessageList","loaded","setLoaded","messageList","setMessageList","socket","io","auth","isUserBlocked","dataToUse","blockedUsers","addMessage","messageToAdd","myMessage","mess","isEqualTo","isUnsent","message1","message2","granted","mediaTypes","Images","canceled","assets","newMessage","emit","isImage","photo","deletionAlert","messageToDelete","SHORT","positions","CENTER","deleteTheMessage","cancelable","ignoreLogs","showListener","addListener","hideListener","remove","setOptions","headerRight","connect","timer","off","disconnect","close","on","clearTimeout","array","useIsFocused","msg","toSpliced","windowHeight","SafeAreaView","messagingScreen","toSorted","unblockUser","blockUser","newUserData","reverse","inverted","messagingInputContainer","messagingInput","editable","messagingButtonContainer","CreateChatRoom","isDisabled","setIsDisabled","setNameOfChatRoom","setRecipients","nameToAdd","handleAddValue","ChatRoomsNavigator","ChatsRoomNavigation","Chats","availableChats","setAvailableChats","generateChatRooms","realPayload","chats","permissionLevel","lastModifiedDate","useFocusEffect","chat","timeButton","timeText","actualTimeText","timeStyle","borderLeftColor","containerForNotifications","NotificationHomePage","NotificationsNavigation","notifications","setNotifications","isOpen","setIsOpen","refreshNotifications","bodyTosend","createNotificationButton","getDateText","spaceIndex","first","isMoving","setIsMoving","postId","newNotifications","not","scrollEnabled","notification","disableRightSwipe","onSwipeValueChange","handleOnLeftSwipe","creationDate","courseSimpleData","repliable","done","setDone","tempBody","renderInputFields","sendNotification","EditProfileHeader","saveChanges","EditUser","inputs","profileDescription","propOptions","linkedin","setFields","changedFields","SettingsPage","settingsDisabled","setSettingsDisabled","colorScheme","useColorScheme","currentVersion","manifest2","extra","expoClient","version","manifest","logOut","resetClassPages","resetDiscover","resetAppData","resetApiState","handleDeleteAccount","handleSettingsChange","settingName","settings","handleUseDeviceSettingToggled","handleDarkModeToggled","newReview","alertNotifications","chatNotifications","displayNames","Settings","Group","presentation","Menu","menuItems","setMenuItems","Feather","sponsorsApiSlice","refreshSponsors","postSponsorVisit","sponsorId","useLazyRefreshSponsorsQuery","usePostSponsorVisitMutation","windowWidth","SponsorPage","isDarkMode","setImageIndex","setIsVisible","canOpenLink","setCanOpenLink","postSponsorVisitQuery","videoLinkArray","videoLink","Linking","canOpenURL","website","funct","phoneNumber","openURL","img","coupons","couponDescription","dayOfTheWeek","openTime","closeTime","SponsorsList","sponsorFilters","setSponsorFilters","gotSponsors","setGotSponsors","refreshSponsorsQuery","tabNames","tags","tempFilters","getFilters","shouldLimitPrint","filterName","getTheSponsors","sponsorsToSend","renderSponsorsBasedOnFilters","starredFinal","object","departments","ElectiveGenerator","departmentQuery","setDepartmentQuery","departmentOptions","setDepartmentOptions","setDescription","getClassesByDepartment","department","onChangeDepartmentText","getWords","wordList","wordListWithSynonyms","word","synonyms","cleanedDescription","classesByDepartment","aWords","bWords","aMatches","SearchClasses","hasSelectedElectiveGenerator","numberOfNotifications","setNumberOfNotifications","Foundation","CombinedClassPages","postsAdapter","createEntityAdapter","selectId","post","tranformComments","comments","comment","numLikes","likes","hasLiked","discoverApiSlice","getDiscoverPosts","keepUnusedDataFor","pageLength","_","addMany","hasMorePages","ids","postsSelectors","selectAll","createDiscoverPost","emoji","postBody","pinned","newPost","addOne","deleteDiscoverPost","searchPatchResult","removeOne","getPostById","updatedPost","updateFunction","updateOne","changes","likePost","postAuthor","selectById","addComment","initiate","likeComment","commentId","deleteComment","getSelectors","useLazyGetDiscoverPostsQuery","useCreateDiscoverPostMutation","useDeleteDiscoverPostMutation","useLikePostMutation","useAddCommentMutation","useLazyGetPostByIdQuery","useLikeCommentMutation","useDeleteCommentMutation","WrappedComponent","PreventDoubleClick","debouncedOnPress","debounce","leading","trailing","PureComponent","displayName","withPreventDoubleClick","DoubleTap","lastTap","handleDoubleTap","now","delay","onDoubleTap","Component","defaultProps","forwardRef","iconStyle","useImperativeHandle","animate","opacityAnim","scaleAnim","heartRotation","setHeartRotation","floor","pickRandomDegree","parallel","timing","easing","Easing","bounce","rotate","icons","Proxy","target","IconProvider","toReactElement","flatten","FeatherIcon","FontAwesomeIcon","persistor","persistStore","Tab","createBottomTabNavigator","ExpoSplashScreen","Notifications","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","registerForPushNotificationsAsync","token","isDevice","existingStatus","finalStatus","importance","MAX","vibrationPattern","lightColor","App","localCurrentSection","isReady","setIsReady","setNotification","notificationListener","responseListener","fetchedCurrentSection","fetchedUserData","checkForUpdates","prepare","currentFrontEndVersion","v1","v2","lexicographical","zeroExtend","v1parts","v2parts","isValidPart","test","every","NaN","versionCompare","NavigationContainer","documentTitle","formatter","DarkTheme","DefaultTheme","fallback","Theme","StatusBar","FontAwesomeIconsPack","FeatherIconsPack","overflow","TabsPage","tabBarHideOnKeyboard","tabBarIcon","focused","iconName","tabBarStyle","ClassPages","tabBarLabel","unmountOnBlur","registerRootComponent"],"mappings":"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","file":"static/js/app.46c4a576.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/app-logo-transparent.1ede614a.png\";","module.exports = __webpack_public_path__ + \"static/media/coupon.84c88381.png\";","module.exports = __webpack_public_path__ + \"static/media/become-sponsor.513cb6e7.png\";","module.exports = __webpack_public_path__ + \"static/media/splash-logo.2b1029f0.png\";","var map = {\n\t\"./af\": 412,\n\t\"./af.js\": 412,\n\t\"./ar\": 413,\n\t\"./ar-dz\": 414,\n\t\"./ar-dz.js\": 414,\n\t\"./ar-kw\": 415,\n\t\"./ar-kw.js\": 415,\n\t\"./ar-ly\": 416,\n\t\"./ar-ly.js\": 416,\n\t\"./ar-ma\": 417,\n\t\"./ar-ma.js\": 417,\n\t\"./ar-sa\": 418,\n\t\"./ar-sa.js\": 418,\n\t\"./ar-tn\": 419,\n\t\"./ar-tn.js\": 419,\n\t\"./ar.js\": 413,\n\t\"./az\": 420,\n\t\"./az.js\": 420,\n\t\"./be\": 421,\n\t\"./be.js\": 421,\n\t\"./bg\": 422,\n\t\"./bg.js\": 422,\n\t\"./bm\": 423,\n\t\"./bm.js\": 423,\n\t\"./bn\": 424,\n\t\"./bn-bd\": 425,\n\t\"./bn-bd.js\": 425,\n\t\"./bn.js\": 424,\n\t\"./bo\": 426,\n\t\"./bo.js\": 426,\n\t\"./br\": 427,\n\t\"./br.js\": 427,\n\t\"./bs\": 428,\n\t\"./bs.js\": 428,\n\t\"./ca\": 429,\n\t\"./ca.js\": 429,\n\t\"./cs\": 430,\n\t\"./cs.js\": 430,\n\t\"./cv\": 431,\n\t\"./cv.js\": 431,\n\t\"./cy\": 432,\n\t\"./cy.js\": 432,\n\t\"./da\": 433,\n\t\"./da.js\": 433,\n\t\"./de\": 434,\n\t\"./de-at\": 435,\n\t\"./de-at.js\": 435,\n\t\"./de-ch\": 436,\n\t\"./de-ch.js\": 436,\n\t\"./de.js\": 434,\n\t\"./dv\": 437,\n\t\"./dv.js\": 437,\n\t\"./el\": 438,\n\t\"./el.js\": 438,\n\t\"./en-au\": 439,\n\t\"./en-au.js\": 439,\n\t\"./en-ca\": 440,\n\t\"./en-ca.js\": 440,\n\t\"./en-gb\": 441,\n\t\"./en-gb.js\": 441,\n\t\"./en-ie\": 442,\n\t\"./en-ie.js\": 442,\n\t\"./en-il\": 443,\n\t\"./en-il.js\": 443,\n\t\"./en-in\": 444,\n\t\"./en-in.js\": 444,\n\t\"./en-nz\": 445,\n\t\"./en-nz.js\": 445,\n\t\"./en-sg\": 446,\n\t\"./en-sg.js\": 446,\n\t\"./eo\": 447,\n\t\"./eo.js\": 447,\n\t\"./es\": 448,\n\t\"./es-do\": 449,\n\t\"./es-do.js\": 449,\n\t\"./es-mx\": 450,\n\t\"./es-mx.js\": 450,\n\t\"./es-us\": 451,\n\t\"./es-us.js\": 451,\n\t\"./es.js\": 448,\n\t\"./et\": 452,\n\t\"./et.js\": 452,\n\t\"./eu\": 453,\n\t\"./eu.js\": 453,\n\t\"./fa\": 454,\n\t\"./fa.js\": 454,\n\t\"./fi\": 455,\n\t\"./fi.js\": 455,\n\t\"./fil\": 456,\n\t\"./fil.js\": 456,\n\t\"./fo\": 457,\n\t\"./fo.js\": 457,\n\t\"./fr\": 458,\n\t\"./fr-ca\": 459,\n\t\"./fr-ca.js\": 459,\n\t\"./fr-ch\": 460,\n\t\"./fr-ch.js\": 460,\n\t\"./fr.js\": 458,\n\t\"./fy\": 461,\n\t\"./fy.js\": 461,\n\t\"./ga\": 462,\n\t\"./ga.js\": 462,\n\t\"./gd\": 463,\n\t\"./gd.js\": 463,\n\t\"./gl\": 464,\n\t\"./gl.js\": 464,\n\t\"./gom-deva\": 465,\n\t\"./gom-deva.js\": 465,\n\t\"./gom-latn\": 466,\n\t\"./gom-latn.js\": 466,\n\t\"./gu\": 467,\n\t\"./gu.js\": 467,\n\t\"./he\": 468,\n\t\"./he.js\": 468,\n\t\"./hi\": 469,\n\t\"./hi.js\": 469,\n\t\"./hr\": 470,\n\t\"./hr.js\": 470,\n\t\"./hu\": 471,\n\t\"./hu.js\": 471,\n\t\"./hy-am\": 472,\n\t\"./hy-am.js\": 472,\n\t\"./id\": 473,\n\t\"./id.js\": 473,\n\t\"./is\": 474,\n\t\"./is.js\": 474,\n\t\"./it\": 475,\n\t\"./it-ch\": 476,\n\t\"./it-ch.js\": 476,\n\t\"./it.js\": 475,\n\t\"./ja\": 477,\n\t\"./ja.js\": 477,\n\t\"./jv\": 478,\n\t\"./jv.js\": 478,\n\t\"./ka\": 479,\n\t\"./ka.js\": 479,\n\t\"./kk\": 480,\n\t\"./kk.js\": 480,\n\t\"./km\": 481,\n\t\"./km.js\": 481,\n\t\"./kn\": 482,\n\t\"./kn.js\": 482,\n\t\"./ko\": 483,\n\t\"./ko.js\": 483,\n\t\"./ku\": 484,\n\t\"./ku.js\": 484,\n\t\"./ky\": 485,\n\t\"./ky.js\": 485,\n\t\"./lb\": 486,\n\t\"./lb.js\": 486,\n\t\"./lo\": 487,\n\t\"./lo.js\": 487,\n\t\"./lt\": 488,\n\t\"./lt.js\": 488,\n\t\"./lv\": 489,\n\t\"./lv.js\": 489,\n\t\"./me\": 490,\n\t\"./me.js\": 490,\n\t\"./mi\": 491,\n\t\"./mi.js\": 491,\n\t\"./mk\": 492,\n\t\"./mk.js\": 492,\n\t\"./ml\": 493,\n\t\"./ml.js\": 493,\n\t\"./mn\": 494,\n\t\"./mn.js\": 494,\n\t\"./mr\": 495,\n\t\"./mr.js\": 495,\n\t\"./ms\": 496,\n\t\"./ms-my\": 497,\n\t\"./ms-my.js\": 497,\n\t\"./ms.js\": 496,\n\t\"./mt\": 498,\n\t\"./mt.js\": 498,\n\t\"./my\": 499,\n\t\"./my.js\": 499,\n\t\"./nb\": 500,\n\t\"./nb.js\": 500,\n\t\"./ne\": 501,\n\t\"./ne.js\": 501,\n\t\"./nl\": 502,\n\t\"./nl-be\": 503,\n\t\"./nl-be.js\": 503,\n\t\"./nl.js\": 502,\n\t\"./nn\": 504,\n\t\"./nn.js\": 504,\n\t\"./oc-lnc\": 505,\n\t\"./oc-lnc.js\": 505,\n\t\"./pa-in\": 506,\n\t\"./pa-in.js\": 506,\n\t\"./pl\": 507,\n\t\"./pl.js\": 507,\n\t\"./pt\": 508,\n\t\"./pt-br\": 509,\n\t\"./pt-br.js\": 509,\n\t\"./pt.js\": 508,\n\t\"./ro\": 510,\n\t\"./ro.js\": 510,\n\t\"./ru\": 511,\n\t\"./ru.js\": 511,\n\t\"./sd\": 512,\n\t\"./sd.js\": 512,\n\t\"./se\": 513,\n\t\"./se.js\": 513,\n\t\"./si\": 514,\n\t\"./si.js\": 514,\n\t\"./sk\": 515,\n\t\"./sk.js\": 515,\n\t\"./sl\": 516,\n\t\"./sl.js\": 516,\n\t\"./sq\": 517,\n\t\"./sq.js\": 517,\n\t\"./sr\": 518,\n\t\"./sr-cyrl\": 519,\n\t\"./sr-cyrl.js\": 519,\n\t\"./sr.js\": 518,\n\t\"./ss\": 520,\n\t\"./ss.js\": 520,\n\t\"./sv\": 521,\n\t\"./sv.js\": 521,\n\t\"./sw\": 522,\n\t\"./sw.js\": 522,\n\t\"./ta\": 523,\n\t\"./ta.js\": 523,\n\t\"./te\": 524,\n\t\"./te.js\": 524,\n\t\"./tet\": 525,\n\t\"./tet.js\": 525,\n\t\"./tg\": 526,\n\t\"./tg.js\": 526,\n\t\"./th\": 527,\n\t\"./th.js\": 527,\n\t\"./tk\": 528,\n\t\"./tk.js\": 528,\n\t\"./tl-ph\": 529,\n\t\"./tl-ph.js\": 529,\n\t\"./tlh\": 530,\n\t\"./tlh.js\": 530,\n\t\"./tr\": 531,\n\t\"./tr.js\": 531,\n\t\"./tzl\": 532,\n\t\"./tzl.js\": 532,\n\t\"./tzm\": 533,\n\t\"./tzm-latn\": 534,\n\t\"./tzm-latn.js\": 534,\n\t\"./tzm.js\": 533,\n\t\"./ug-cn\": 535,\n\t\"./ug-cn.js\": 535,\n\t\"./uk\": 536,\n\t\"./uk.js\": 536,\n\t\"./ur\": 537,\n\t\"./ur.js\": 537,\n\t\"./uz\": 538,\n\t\"./uz-latn\": 539,\n\t\"./uz-latn.js\": 539,\n\t\"./uz.js\": 538,\n\t\"./vi\": 540,\n\t\"./vi.js\": 540,\n\t\"./x-pseudo\": 541,\n\t\"./x-pseudo.js\": 541,\n\t\"./yo\": 542,\n\t\"./yo.js\": 542,\n\t\"./zh-cn\": 543,\n\t\"./zh-cn.js\": 543,\n\t\"./zh-hk\": 544,\n\t\"./zh-hk.js\": 544,\n\t\"./zh-mo\": 545,\n\t\"./zh-mo.js\": 545,\n\t\"./zh-tw\": 546,\n\t\"./zh-tw.js\": 546\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 869;","module.exports = __webpack_public_path__ + \"static/media/owl-black-text.6f7231df.png\";","module.exports = __webpack_public_path__ + \"static/media/owl-white-text.9861cc3f.png\";","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Appearance } from 'react-native';\n\nimport type { RootState } from './store';\n\n// Define a type for the slice state\ninterface AppDataState {\n  userKey: string;\n  isGuest: boolean;\n  isMobile: boolean;\n  darkMode: boolean;\n  useDeviceColorScheme: boolean;\n  isCacheReset: boolean; // Remove after 1/1/2024\n}\n\n// Define the initial state using that type\nconst initialState: AppDataState = {\n  userKey: '',\n  isGuest: false,\n  isMobile: false,\n  darkMode: false,\n  useDeviceColorScheme: false,\n  isCacheReset: false\n};\n\nexport const appDataSlice = createSlice({\n  name: 'appData',\n  initialState,\n  reducers: {\n    reset: () => initialState,\n    cacheReset: (state) => {\n      state.isCacheReset = true;\n    },\n    userKeyUpdated: (state, action: PayloadAction<string>) => {\n      state.userKey = action.payload;\n    },\n    setIsGuest: (state, action: PayloadAction<boolean>) => {\n      state.isGuest = action.payload;\n    },\n    deviceDarkModeSet: (state, action: PayloadAction<boolean>) => {\n      state.darkMode = action.payload;\n    },\n    useDeviceColorSchemeSet: (state, action: PayloadAction<boolean>) => {\n      state.useDeviceColorScheme = action.payload;\n    },\n    deleteAllAppData: (state) => {\n      state.userKey = '';\n      state.isGuest = false;\n      state.darkMode = true;\n    },\n    mobileSiteSet: (state, action: PayloadAction<boolean>) => {\n      state.isMobile = action.payload;\n    }\n  },\n  extraReducers: () => {}\n});\n\n// Selectors\nexport const selectDarkMode = (state: RootState) => state.appData.secure.darkMode;\n\nexport const selectUserKey = (state: RootState) => state.appData.secure.userKey;\n\nexport const selectIsGuest = (state: RootState) => state.appData.secure.isGuest;\n\nexport const selectMobile = (state: RootState) => state.appData.secure.isMobile;\n\n// Actions\nexport const {\n  userKeyUpdated,\n  setIsGuest,\n  deleteAllAppData,\n  reset,\n  deviceDarkModeSet,\n  useDeviceColorSchemeSet,\n  mobileSiteSet,\n  cacheReset\n} = appDataSlice.actions;\n\nexport default appDataSlice.reducer;\n","import * as SecureStore from 'expo-secure-store';\n\nexport default function createSecureStorage(options: any = {}) {\n  const replaceCharacter = options.replaceCharacter || '_';\n  const replacer = options.replacer || defaultReplacer;\n\n  return {\n    getItem: (key: string) => SecureStore.getItemAsync(replacer(key, replaceCharacter), options),\n    setItem: (key: string, value: string) => SecureStore.setItemAsync(replacer(key, replaceCharacter), value, options),\n    removeItem: (key: string) => SecureStore.deleteItemAsync(replacer(key, replaceCharacter), options)\n  };\n}\n\nfunction defaultReplacer(key: string, replaceCharacter: string) {\n  return key.replace(/[^a-z0-9.\\-_]/gi, replaceCharacter);\n}\n","import { createSlice } from '@reduxjs/toolkit';\nimport type { PayloadAction } from '@reduxjs/toolkit';\n\ninterface CalendarState {\n  isThreeDay: boolean;\n}\n\nconst initialState: CalendarState = {\n  isThreeDay: false\n};\n\nexport const calendarSlice = createSlice({\n  name: 'discover',\n  initialState,\n  reducers: {\n    reset: (state) => (state = initialState),\n    isThreeDaySet: (state, action: PayloadAction<boolean>) => {\n      state.isThreeDay = action.payload;\n    }\n  }\n});\n\nexport const { reset, isThreeDaySet } = calendarSlice.actions;\n\nexport default calendarSlice.reducer;\n","import Toast from 'react-native-root-toast';\n\nimport { ClassTime } from './app/types';\nimport { EMOJI_LIST, IMAGE_BUCKET_URL } from './constants/discover';\n\nexport function getRndInteger(min: number, max: number) {\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nexport function getImageUrl(imageId: string) {\n  return `${IMAGE_BUCKET_URL}/${imageId}.jpg`;\n}\n\nexport function nFormatter(num: number, digits: number) {\n  const lookup = [\n    { value: 1, symbol: '' },\n    { value: 1e3, symbol: 'k' },\n    { value: 1e6, symbol: 'M' },\n    { value: 1e9, symbol: 'G' },\n    { value: 1e12, symbol: 'T' },\n    { value: 1e15, symbol: 'P' },\n    { value: 1e18, symbol: 'E' }\n  ];\n  const rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\n  const item = lookup\n    .slice()\n    .reverse()\n    .find((item) => {\n      return num >= item.value;\n    });\n  return item\n    ? (num / item.value).toFixed(digits).replace(rx, '$1') + item.symbol\n    : '0';\n}\n\nexport function versionCompare(v1: string, v2: string, options?: any) {\n  const lexicographical = options && options.lexicographical;\n  const zeroExtend = options && options.zeroExtend;\n  let v1parts = v1.split('.') as any[];\n  let v2parts = v2.split('.') as any[];\n\n  function isValidPart(x) {\n    return (lexicographical ? /^\\d+[A-Za-z]*$/ : /^\\d+$/).test(x);\n  }\n\n  if (!v1parts.every(isValidPart) || !v2parts.every(isValidPart)) {\n    return NaN;\n  }\n\n  if (zeroExtend) {\n    while (v1parts.length < v2parts.length) v1parts.push('0');\n    while (v2parts.length < v1parts.length) v2parts.push('0');\n  }\n\n  if (!lexicographical) {\n    v1parts = v1parts.map(Number);\n    v2parts = v2parts.map(Number);\n  }\n\n  for (let i = 0; i < v1parts.length; ++i) {\n    if (v2parts.length === i) {\n      return 1;\n    }\n\n    if (v1parts[i] === v2parts[i]) {\n      continue;\n    } else if (v1parts[i] > v2parts[i]) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n\n  if (v1parts.length !== v2parts.length) {\n    return -1;\n  }\n\n  return 0;\n}\n\nexport const stringToEmoji = (str: string) => {\n  if (!str) {\n    return '';\n  }\n  let dec = 0;\n  for (let i = 0; i < str.length; ++i) {\n    dec += str.charCodeAt(i) << i;\n  }\n  const emoji = EMOJI_LIST[dec % EMOJI_LIST.length];\n  return emoji;\n};\n\nexport function validURL(str: string) {\n  const pattern = new RegExp(\n    '^(https?:\\\\/\\\\/)?' + // protocol\n      '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n      '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n      '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n      '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n      '(\\\\#[-a-z\\\\d_]*)?$',\n    'i'\n  ); // fragment locator\n  return !!pattern.test(str);\n}\n\nexport function showToast(message: string, backgroundColor = '#000') {\n  Toast.show(message, {\n    duration: Toast.durations.LONG,\n    opacity: 1,\n    position: -100,\n    backgroundColor,\n    shadow: false\n  });\n}\n\n// Format range with 12 hour time\nexport const FormatTimeRange = (start: string, end: string) => {\n  const startDate = new Date(start);\n  const endDate = new Date(end);\n\n  const startHours = startDate.getHours() % 12 || 12;\n  const startMinutes = startDate.getMinutes();\n  const startAmPm = startDate.getHours() >= 12 ? 'pm' : 'am';\n  const endHours = endDate.getHours() % 12 || 12;\n  const endMinutes = endDate.getMinutes();\n  const endAmPm = endDate.getHours() >= 12 ? 'pm' : 'am';\n  return `${startHours}:${startMinutes}${startAmPm} - ${endHours}:${endMinutes}${endAmPm}`;\n};\n\nconst weekDayNumberToName = {\n  0: 'Sunday',\n  1: 'Monday',\n  2: 'Tuesday',\n  3: 'Wednesday',\n  4: 'Thursday',\n  5: 'Friday',\n  6: 'Saturday'\n};\n\nexport const FormatDate = (date: string) => {\n  const newDate = new Date(date);\n\n  const weekDay = newDate.getDay();\n  const month = newDate.getMonth() + 1;\n  const day = newDate.getDate();\n  return `${weekDayNumberToName[weekDay]}, ${month}/${day}`;\n};\n\nexport const exportToICal = (events: ClassTime[]): string => {\n  const formatDate = (date: Date) => {\n    return date.toISOString().replace(/[-:]/g, '').split('.')[0] + 'Z';\n  };\n\n  const dayMapping: { [key: string]: string } = {\n    Sunday: 'SU',\n    Monday: 'MO',\n    Tuesday: 'TU',\n    Wednesday: 'WE',\n    Thursday: 'TH',\n    Friday: 'FR',\n    Saturday: 'SA'\n  };\n\n  let icsEvents = [];\n\n  for (const event of events) {\n    for (const schedule of event.courseSchedule) {\n      const days = schedule.daysOfTheWeek\n        .map((day) => dayMapping[day])\n        .join(',');\n\n      const summary = `${event.courseName} (${event.courseCode})`;\n      const description = `Professor: ${event.professorName}\\nSeats Filled: ${event.seatsFilled}\\nCourse Status: ${event.courseStatus}`;\n      const location = schedule.classLocation;\n\n      const startDateTime = `T${schedule.startTime.replace(':', '')}00Z`;\n      const endDateTime = `T${schedule.endTime.replace(':', '')}00Z`;\n\n      const vevent = `\nBEGIN:VEVENT\nUID:${event._id}-${schedule._id}\nDTSTAMP:${formatDate(new Date())}\nDTSTART:${startDateTime}\nDTEND:${endDateTime}\nRRULE:FREQ=WEEKLY;BYDAY=${days}\nSUMMARY:${summary}\nLOCATION:${location}\nDESCRIPTION:${description}\nEND:VEVENT\n`;\n\n      icsEvents.push(vevent);\n    }\n  }\n\n  return `\nBEGIN:VCALENDAR\nVERSION:2.0\nPRODID:-//AthenaNetwork//Event Calendar//EN\n${icsEvents.join('\\n')}\nEND:VCALENDAR\n`;\n};\n\nexport const getMasterCourseCodeFromCourseCode = (courseCode: string) => {\n  const courseCodeParts = courseCode.split('-');\n  return courseCodeParts.slice(0, courseCodeParts.length - 1).join('-');\n};\n\nexport const getTimeAsNumberOfMinutes = (time: string) => {\n  var timeParts = time.split(':');\n\n  var timeInMinutes = parseInt(timeParts[0]) * 60 + parseInt(timeParts[1]);\n\n  return timeInMinutes;\n};\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport const apiSlice = createApi({\n  reducerPath: 'api',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://api.athenaserver.com:5678/api'\n  }),\n  tagTypes: ['User', 'Posts'],\n  endpoints: (builder) => ({\n    getCurrentVersion: builder.query<any, void>({\n      query: () => '/randomShit/getCurrentVersion'\n    })\n  })\n});\n\nexport const { useLazyGetCurrentVersionQuery } = apiSlice;\n","import {\n  AddedClasses,\n  UserData,\n  UserDataApiRes\n} from '../../app/types';\nimport { apiSlice } from './apiSlice';\n\nexport const usersApiSlice = apiSlice.injectEndpoints({\n  overrideExisting: true,\n  endpoints: (builder) => ({\n    getUserInfo: builder.query({\n      providesTags: ['User'],\n      query: (userKey: string) => ({\n        url: '/users/me',\n        headers: {\n          userKey\n        }\n      }),\n      transformErrorResponse: (response) => {\n        if (response.status === 401) {\n          return { error: 'Unauthorized' };\n        }\n        return response;\n      },\n      transformResponse: ({\n        classes,\n        starredClasses,\n        ...rest\n      }: UserDataApiRes) => {\n        const addedClasses = {\n          length: 0,\n          classes: {},\n          orderedClasses: {},\n          starredClasses: {}\n        } as AddedClasses;\n\n        // Add classes to orderedClasses\n        classes.forEach(({ courseCode, courseTerm }) => {\n          if (courseTerm in addedClasses.orderedClasses) {\n            addedClasses.orderedClasses[courseTerm].push(courseCode);\n          } else {\n            addedClasses.orderedClasses[courseTerm] = [courseCode];\n          }\n        });\n        // Add classes to unordered classes\n        for (const { courseCode, courseTerm } of classes) {\n          try {\n            let schoolParts = courseCode.split('-');\n            schoolParts = schoolParts[schoolParts.length - 2].split(' ');\n            const school = schoolParts[schoolParts.length - 1];\n            const masterCourseCode = `${courseCode\n              .split(' ')\n              .slice(0, 2)\n              .join(' ')} ${school}`;\n            if (courseTerm in addedClasses.classes) {\n              if (masterCourseCode in addedClasses.classes[courseTerm]) {\n                addedClasses.classes[courseTerm][masterCourseCode].push(\n                  courseCode\n                );\n              } else {\n                addedClasses.classes[courseTerm][masterCourseCode] = [\n                  courseCode\n                ];\n              }\n            } else {\n              addedClasses.classes[courseTerm] = {\n                [masterCourseCode]: [courseCode]\n              };\n            }\n\n            addedClasses.length++;\n          } catch (e) {\n            console.warn('Error Adding Classes To State', e);\n          }\n        }\n        // Add classes to starred classes\n        for (const { courseCode, courseTerm } of starredClasses) {\n          try {\n            let schoolParts = courseCode.split('-');\n            schoolParts = schoolParts[schoolParts.length - 2].split(' ');\n            const school = schoolParts[schoolParts.length - 1];\n            const masterCourseCode = `${courseCode\n              .split(' ')\n              .slice(0, 2)\n              .join(' ')} ${school}`;\n            if (courseTerm in addedClasses.starredClasses) {\n              if (masterCourseCode in addedClasses.starredClasses[courseTerm]) {\n                addedClasses.starredClasses[courseTerm][masterCourseCode].push(\n                  courseCode\n                );\n              } else {\n                addedClasses.starredClasses[courseTerm][masterCourseCode] = [\n                  courseCode\n                ];\n              }\n            } else {\n              addedClasses.starredClasses[courseTerm] = {\n                [masterCourseCode]: [courseCode]\n              };\n            }\n          } catch (e) {\n            console.warn('Error Adding Starred Classes To State', e);\n          }\n        }\n\n        return { addedClasses, starredClasses, ...rest } as UserData;\n      }\n    }),\n    login: builder.mutation({\n      query: ({ userName, password, isGuest }) => ({\n        url: `/users/login`,\n        params: isGuest\n          ? {\n              userName,\n              password,\n              isGuest\n            }\n          : {\n              userName,\n              password\n            }\n      })\n    }),\n    trackLogin: builder.mutation({\n      query: (userKey) => ({\n        url: `/analytics/login/openedApp`,\n        method: 'POST',\n        headers: {\n          userKey\n        },\n        responseHandler: (response) => response.text()\n      })\n    }),\n    deleteAccount: builder.mutation({\n      query: ({ userKey, userName }) => ({\n        url: '/users',\n        method: 'DELETE',\n        headers: {\n          userKey\n        },\n        params: {\n          userName\n        }\n      })\n    }),\n    editUser: builder.mutation({\n      invalidatesTags: ['User'],\n      query: ({ userKey, userName, fields }) => ({\n        url: `/users/${userName}`,\n        method: 'PATCH',\n        headers: {\n          'content-type': 'application/json',\n          userKey\n        },\n        body: fields\n      })\n    }),\n    getCollegeList: builder.query<any, void>({\n      query: () => '/randomShit/getCollegeList'\n    }),\n    getChatRooms: builder.mutation({\n      query: ({ userKey }) => ({\n        url: `/chatRooms/listOfChatRooms`,\n        method: 'GET',\n        headers: {\n          'content-type': 'application/json',\n          userKey\n        },\n        responseHandler: (response) => response.json()\n      })\n    }),\n    createChatRoom: builder.mutation({\n      query: ({ userKey, recipients, nameOfChatRoom }) => ({\n        url: `/chatRooms/newChatRoom`,\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json',\n          userKey\n        },\n        body: JSON.stringify({\n          userList: recipients,\n          name: nameOfChatRoom\n        }),\n        responseHandler: (response) => response.text()\n      })\n    }),\n    addOrRemoveUserFromChatRoom: builder.mutation({\n      query: ({ userKey, chatRoomId, userName }) => ({\n        url: `/chatRooms/addOrRemoveUser`,\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json',\n          userKey\n        },\n        body: JSON.stringify({\n          chatRoomId: chatRoomId,\n          userName: userName\n        })\n      })\n    }),\n    signupUser: builder.mutation({\n      query: (body) => ({\n        url: '/users',\n        method: 'POST',\n        body,\n        responseHandler: (response) => response.text()\n      })\n    }),\n    verifySignup: builder.mutation({\n      query: (code) => ({\n        url: '/users/verification',\n        method: 'POST',\n        body: { code }\n      })\n    }),\n    resetPassword: builder.mutation({\n      query: (email) => ({\n        url: '/users/forgotPassword',\n        params: {\n          email\n        },\n        responseHandler: (response) => response.text()\n      })\n    }),\n    addExpoPushToken: builder.mutation({\n      query: ({ userName, expoPushToken, userKey }) => ({\n        url: `/users/addExpoPushKey/${userName}`,\n        method: 'PATCH',\n        headers: {\n          userKey\n        },\n        body: {\n          expoPushToken\n        }\n      })\n    })\n  })\n});\n\nexport const {\n  useAddOrRemoveUserFromChatRoomMutation,\n  useCreateChatRoomMutation,\n  useGetChatRoomsMutation,\n  useTrackLoginMutation,\n  useGetUserInfoQuery,\n  useLazyGetUserInfoQuery,\n  useLoginMutation,\n  useDeleteAccountMutation,\n  useEditUserMutation,\n  useGetCollegeListQuery,\n  useSignupUserMutation,\n  useVerifySignupMutation,\n  useResetPasswordMutation,\n  useAddExpoPushTokenMutation\n} = usersApiSlice;\n","import { apiSlice } from './apiSlice';\nimport { usersApiSlice } from './usersApi';\nimport {\n  AllSectionsResponse,\n  Class,\n  SwapCoursePriorityInput,\n  UserData\n} from '../../app/types';\n\nexport const classPagesApi = apiSlice.injectEndpoints({\n  overrideExisting: true,\n  endpoints: (builder) => ({\n    getAllClasses: builder.query({\n      query: ({ userKey, pageNumber, courseTerm, collegeName }) => ({\n        url: `/classes/masterClassList/${collegeName}`,\n        headers: {\n          userKey\n        },\n        params: {\n          pageNumber,\n          courseTerm\n        }\n      }),\n      transformResponse: (response: { [masterCourseCode: string]: Class }) => {\n        const getRatingFromReviews = (reviews) => {\n          if (reviews.length === 0) {\n            return null;\n          }\n          let totalAverage = 0;\n          let counter = 0;\n          for (const review of reviews) {\n            if (review.rating) {\n              totalAverage += review.rating;\n              counter++;\n            }\n          }\n          if (counter > 0) {\n            return (totalAverage / counter).toFixed(2);\n          }\n          return null;\n        };\n\n        const getDifficultyFromReviews = (reviews) => {\n          if (reviews.length === 0) {\n            return null;\n          }\n          let totalAverage = 0;\n          let counter = 0;\n          for (const review of reviews) {\n            if (review.difficulty) {\n              totalAverage += review.difficulty;\n              counter++;\n            }\n          }\n          if (counter > 0) {\n            return (totalAverage / counter).toFixed(2);\n          }\n          return null;\n        };\n\n        return Object.fromEntries(\n          Object.entries(response).map(([key, value]) => {\n            return [\n              key,\n              {\n                ...value,\n                reviews: value.reviews.sort(),\n                rating: getRatingFromReviews(value.reviews),\n                difficulty: getDifficultyFromReviews(value.reviews)\n              }\n            ];\n          })\n        );\n      }\n    }),\n    getCurrentSection: builder.query<string, void>({\n      query: () => '/randomShit/currentTerm',\n      transformResponse: (response: { currentTerm: string }) =>\n        response.currentTerm\n    }),\n    getAllSections: builder.query<AllSectionsResponse, void>({\n      query: () => '/randomShit/getAllTerms'\n    }),\n    addClass: builder.mutation({\n      query: ({ userKey, courseCode, courseTerm, userName }) => ({\n        url: `/users/${userName}`,\n        method: 'PATCH',\n        headers: {\n          userKey\n        },\n        body: {\n          classesToAdd: [{ courseCode, courseTerm }]\n        }\n      }),\n      async onQueryStarted(\n        { userKey, courseCode, masterCourseCode, courseTerm },\n        { dispatch, queryFulfilled }\n      ) {\n        const patchResult = dispatch(\n          usersApiSlice.util.updateQueryData(\n            'getUserInfo',\n            userKey,\n            (draft) => {\n              // Add to ordered Added Classes\n              if (!(courseTerm in draft.addedClasses.orderedClasses)) {\n                draft.addedClasses.orderedClasses[courseTerm] = [courseCode];\n              } else {\n                draft.addedClasses.orderedClasses[courseTerm].push(courseCode);\n              }\n\n              // Add to unordered Added Classes\n              if (!(courseTerm in draft.addedClasses.classes)) {\n                draft.addedClasses.classes[courseTerm] = {\n                  [masterCourseCode]: [courseCode]\n                };\n              } else if (\n                !(masterCourseCode in draft.addedClasses.classes[courseTerm])\n              ) {\n                draft.addedClasses.classes[courseTerm][masterCourseCode] = [\n                  courseCode\n                ];\n              } else {\n                draft.addedClasses.classes[courseTerm][masterCourseCode].push(\n                  courseCode\n                );\n              }\n              draft.addedClasses.length++;\n            }\n          )\n        );\n\n        try {\n          await queryFulfilled;\n        } catch {\n          patchResult.undo();\n        }\n      }\n    }),\n    addMultipleClasses: builder.mutation<\n      { userData: UserData },\n      {\n        userKey: string;\n        courseTerm: string;\n        userName: string;\n        courseCodePairs: {\n          courseCode: string;\n          masterCourseCode: string;\n        }[];\n      }\n    >({\n      query: ({ userKey, courseCodePairs, courseTerm, userName }) => ({\n        url: `/users/${userName}`,\n        method: 'PATCH',\n        headers: {\n          userKey\n        },\n        body: {\n          classesToAdd: courseCodePairs.map((courseCodePair) => ({\n            courseCode: courseCodePair.courseCode,\n            courseTerm\n          }))\n        }\n      }),\n      async onQueryStarted(\n        { userKey, courseCodePairs, courseTerm },\n        { dispatch, queryFulfilled }\n      ) {\n        const patchResult = dispatch(\n          usersApiSlice.util.updateQueryData(\n            'getUserInfo',\n            userKey,\n            (draft) => {\n              for (const { masterCourseCode, courseCode } of courseCodePairs) {\n                if (!(courseTerm in draft.addedClasses.classes)) {\n                  draft.addedClasses.classes[courseTerm] = {\n                    [masterCourseCode]: [courseCode]\n                  };\n                } else if (\n                  !(masterCourseCode in draft.addedClasses.classes[courseTerm])\n                ) {\n                  draft.addedClasses.classes[courseTerm][masterCourseCode] = [\n                    courseCode\n                  ];\n                } else {\n                  draft.addedClasses.classes[courseTerm][masterCourseCode].push(\n                    courseCode\n                  );\n                }\n                draft.addedClasses.length++;\n              }\n            }\n          )\n        );\n\n        try {\n          await queryFulfilled;\n        } catch {\n          patchResult.undo();\n        }\n      }\n    }),\n    removeClass: builder.mutation({\n      query: ({ userKey, courseCode, courseTerm, userName }) => ({\n        url: `/users/${userName}`,\n        method: 'PATCH',\n        headers: {\n          userKey\n        },\n        body: {\n          classesToRemove: [{ courseCode, courseTerm }]\n        }\n      }),\n      async onQueryStarted(\n        { userKey, courseCode, masterCourseCode, courseTerm },\n        { dispatch, queryFulfilled }\n      ) {\n        const patchResult = dispatch(\n          usersApiSlice.util.updateQueryData(\n            'getUserInfo',\n            userKey,\n            (draft) => {\n              // Delete from ordered Added Classes\n              draft.addedClasses.orderedClasses[courseTerm] =\n                draft.addedClasses.orderedClasses[courseTerm].filter(\n                  (classCode) => classCode !== courseCode\n                );\n\n              // Delete from unordered Added Classes\n\n              draft.addedClasses.classes[courseTerm][masterCourseCode] =\n                draft.addedClasses.classes[courseTerm][masterCourseCode].filter(\n                  (classCode) => classCode !== courseCode\n                );\n              // Delete the master course code if there are no more classes\n              if (\n                draft.addedClasses.classes[courseTerm][masterCourseCode]\n                  .length === 0\n              ) {\n                delete draft.addedClasses.classes[courseTerm][masterCourseCode];\n              }\n              draft.addedClasses.length--;\n            }\n          )\n        );\n\n        try {\n          await queryFulfilled;\n        } catch {\n          patchResult.undo();\n        }\n      }\n    }),\n\n    addStarredClass: builder.mutation({\n      query: ({ userKey, courseCode, courseTerm, userName }) => ({\n        url: `/users/${userName}`,\n        method: 'PATCH',\n        headers: {\n          userKey\n        },\n        body: {\n          starredClassesToAdd: [{ courseCode, courseTerm }]\n        }\n      }),\n      async onQueryStarted(\n        { userKey, courseCode, masterCourseCode, courseTerm },\n        { dispatch, queryFulfilled }\n      ) {\n        const patchResult = dispatch(\n          usersApiSlice.util.updateQueryData(\n            'getUserInfo',\n            userKey,\n            (draft) => {\n              if (\n                !draft.starredClasses.some(\n                  (course) =>\n                    course.courseTerm === courseTerm &&\n                    course.courseCode === courseCode\n                )\n              ) {\n                draft.starredClasses.push({\n                  courseCode: courseCode,\n                  courseTerm: courseTerm\n                });\n              }\n            }\n          )\n        );\n\n        try {\n          await queryFulfilled;\n        } catch {\n          patchResult.undo();\n        }\n      }\n    }),\n    removeStarredClass: builder.mutation({\n      query: ({ userKey, courseCode, courseTerm, userName }) => ({\n        url: `/users/${userName}`,\n        method: 'PATCH',\n        headers: {\n          userKey\n        },\n        body: {\n          starredClassesToRemove: [{ courseCode, courseTerm }]\n        }\n      }),\n      async onQueryStarted(\n        { userKey, courseCode, masterCourseCode, courseTerm },\n        { dispatch, queryFulfilled }\n      ) {\n        const patchResult = dispatch(\n          usersApiSlice.util.updateQueryData(\n            'getUserInfo',\n            userKey,\n            (draft) => {\n              draft.starredClasses = draft.starredClasses.filter(\n                (course) =>\n                  course.courseCode !== courseCode ||\n                  course.courseTerm !== courseTerm\n              );\n            }\n          )\n        );\n\n        try {\n          await queryFulfilled;\n        } catch {\n          patchResult.undo();\n        }\n      }\n    }),\n\n    isAllowedToReview: builder.query({\n      query: ({ masterCourseCode, userKey }) => ({\n        url: '/users/isAllowedToReview',\n        method: 'GET',\n        params: {\n          masterCourseCode\n        },\n        headers: {\n          userKey\n        }\n      })\n    }),\n    sendReview: builder.mutation({\n      query: ({ userKey, body }) => ({\n        url: '/classes/userReview',\n        method: 'PATCH',\n        headers: {\n          userKey\n        },\n        body,\n        responseHandler: (response) => response.text()\n      })\n    }),\n    swapCoursePriority: builder.mutation<any, SwapCoursePriorityInput>({\n      query: ({\n        userName,\n        firstPosition,\n        secondPosition,\n        termToUpdate,\n        userKey\n      }) => ({\n        url: '/users/' + userName,\n        method: 'PATCH',\n        headers: {\n          userKey\n        },\n        body: {\n          swapCoursePriority: {\n            firstPosition,\n            secondPosition,\n            termToUpdate\n          }\n        }\n      }),\n      async onQueryStarted(\n        { firstPosition, secondPosition, termToUpdate, userKey },\n        { dispatch, queryFulfilled }\n      ) {\n        const patchResult = dispatch(\n          usersApiSlice.util.updateQueryData(\n            'getUserInfo',\n            userKey,\n            (draft) => {\n              // move classes around in list\n              if (firstPosition > secondPosition) {\n                const temp =\n                  draft.addedClasses.orderedClasses[termToUpdate][\n                    firstPosition\n                  ];\n\n                for (let i = firstPosition; i > secondPosition; i--) {\n                  draft.addedClasses.orderedClasses[termToUpdate][i] =\n                    draft.addedClasses.orderedClasses[termToUpdate][i - 1];\n                }\n\n                draft.addedClasses.orderedClasses[termToUpdate][\n                  secondPosition\n                ] = temp;\n              } else {\n                const temp =\n                  draft.addedClasses.orderedClasses[termToUpdate][\n                    firstPosition\n                  ];\n\n                for (let i = firstPosition; i < secondPosition; i++) {\n                  draft.addedClasses.orderedClasses[termToUpdate][i] =\n                    draft.addedClasses.orderedClasses[termToUpdate][i + 1];\n                }\n\n                draft.addedClasses.orderedClasses[termToUpdate][\n                  secondPosition\n                ] = temp;\n              }\n            }\n          )\n        );\n\n        try {\n          await queryFulfilled;\n        } catch {\n          patchResult.undo();\n        }\n      }\n    })\n  })\n});\n\nexport const {\n  useGetAllClassesQuery,\n  useGetCurrentSectionQuery,\n  useAddClassMutation,\n  useAddMultipleClassesMutation,\n  useRemoveClassMutation,\n  useIsAllowedToReviewQuery,\n  useSendReviewMutation,\n  useLazyGetAllClassesQuery,\n  useLazyGetAllSectionsQuery,\n  useRemoveStarredClassMutation,\n  useAddStarredClassMutation,\n  useSwapCoursePriorityMutation\n} = classPagesApi;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport type { RootState } from '../../app/store';\nimport { AddedClasses, Class, CourseSchedule, Filters } from '../../app/types';\nimport {\n  getMasterCourseCodeFromCourseCode,\n  getTimeAsNumberOfMinutes\n} from '../../functions';\nimport { classPagesApi } from '../api/classPagesApi';\nimport { usersApiSlice } from '../api/usersApi';\n\n// Define a type for the slice state\ninterface ClassPagesState {\n  classes: { [masterCourseCode: string]: Class };\n  filteredClasses: { [masterCourseCode: string]: Class };\n  renderedClasses: { [masterCourseCode: string]: Class };\n  currentSection: string;\n  availableSections: string[];\n  searchTerm: string;\n  selectedClass: any;\n  page: number;\n  filters: Filters;\n  isHMC: boolean;\n  hasSelectedElectiveGen: boolean;\n  suggestedClasses: { [masterCourseCode: string]: Class };\n  orderedAddedClasses: AddedClasses['orderedClasses'];\n  totalCredits: { credits: number; hmcCredits: number };\n}\n\n// Define the initial state using that type\nconst initialState: ClassPagesState = {\n  classes: {},\n  filteredClasses: {},\n  renderedClasses: {},\n  currentSection: '',\n  availableSections: [],\n  selectedClass: {},\n  searchTerm: '',\n  page: 1,\n  isHMC: false,\n  filters: {\n    filterConflicts: false,\n    colleges: { HM: true, CM: true, PO: true, PZ: true, SC: true }\n  },\n  hasSelectedElectiveGen: false,\n  suggestedClasses: {},\n  orderedAddedClasses: {},\n  totalCredits: { credits: 0, hmcCredits: 0 }\n};\n\nexport const classPagesSlice = createSlice({\n  name: 'classPages',\n  initialState,\n  reducers: {\n    reset: () => initialState,\n    currentSectionUpdated: (state, action: PayloadAction<string>) => {\n      state.currentSection = action.payload;\n    },\n    availableSectionsListUpdated: (state, action: PayloadAction<string[]>) => {\n      state.availableSections = action.payload;\n    },\n    endOfListReached: (state) => {\n      state.page++;\n    },\n    resetClasses: (state) => {\n      state.page = 1;\n      state.searchTerm = '';\n\n      classPagesSlice.caseReducers.creditsRecalculated(state);\n      classPagesSlice.caseReducers.searchResultsFiltered(state);\n    },\n    suggestedClassesUpdated: (\n      state,\n      action: PayloadAction<{ [masterCourseCode: string]: Class }>\n    ) => {\n      state.suggestedClasses = action.payload;\n    },\n    suggestedClassesDimissed: (state) => {\n      state.suggestedClasses = {};\n    },\n    electiveGeneratorSelected: (state) => {\n      state.hasSelectedElectiveGen = true;\n    },\n    classSelected: (state, action: PayloadAction<string>) => {\n      state.selectedClass = state.classes[action.payload];\n    },\n    selectedClassCleared: (state) => {\n      state.selectedClass = {};\n    },\n    filtersSaved: (state, action: PayloadAction<Filters>) => {\n      state.filters = action.payload;\n      classPagesSlice.caseReducers.searchResultsFiltered(state);\n    },\n    isHMCUpdated: (state, action: PayloadAction<boolean>) => {\n      state.isHMC = action.payload;\n    },\n    creditsRecalculated: (state) => {\n      state.totalCredits = recalculateTotalCredits({\n        orderedAddedClasses: state.orderedAddedClasses[state.currentSection],\n        allClasses: state.classes\n      });\n    },\n    filtersReset: (state) => {\n      state.filters = initialState.filters;\n\n      classPagesSlice.caseReducers.searchResultsFiltered(state);\n    },\n    searchResultsFiltered: (state) => {\n      // Update the renderedClasses object with the new filters\n      let newResultsArray = Object.entries(state.classes);\n\n      newResultsArray = newResultsArray.filter(([masterCourseCode, _]) => {\n        // filter by college\n        const collegeAbr = masterCourseCode.substring(\n          masterCourseCode.length - 2,\n          masterCourseCode.length\n        );\n        return state.filters.colleges[collegeAbr];\n      });\n\n      const newResultsObject = Object.fromEntries(newResultsArray);\n      // filter conflicting times\n      if (\n        state.filters.filterConflicts &&\n        state.orderedAddedClasses[state.currentSection] &&\n        state.orderedAddedClasses[state.currentSection].length\n      ) {\n        newResultsArray.forEach(([masterCourseCode, _]) => {\n          newResultsObject[masterCourseCode].times = newResultsObject[\n            masterCourseCode\n          ].times.filter((time) => {\n            for (const timeWindow of time.courseSchedule) {\n              if (\n                doesClassConflict(\n                  timeWindow,\n                  state.orderedAddedClasses[state.currentSection],\n                  state.classes\n                )\n              ) {\n                return false;\n              }\n            }\n            return true;\n          });\n\n          if (newResultsObject[masterCourseCode].times.length == 0) {\n            delete newResultsObject[masterCourseCode];\n          }\n        });\n      }\n\n      state.filteredClasses = newResultsObject;\n      state.renderedClasses = { ...state.filteredClasses };\n    },\n    searchTermUpdated: (state, action: PayloadAction<string>) => {\n      let newResultsArray = Object.entries(state.filteredClasses);\n      state.searchTerm = action.payload;\n      state.page = 1;\n\n      if (state.searchTerm === '') {\n        classPagesSlice.caseReducers.resetClasses(state);\n      } else {\n        const searchTerm = matchDepartmentName(state.searchTerm);\n\n        // Check for courseCode shortcuts\n        const searchCourseCode = findSearchTermShortcuts(searchTerm);\n\n        const searchTerms = searchTerm.split(' ');\n\n        newResultsArray = newResultsArray.filter(\n          ([_, { courseName, times, masterCourseCode }]) =>\n            filterBySearchTerm(\n              courseName,\n              times,\n              masterCourseCode,\n              searchCourseCode,\n              searchTerms\n            )\n        );\n\n        const newResultsObject = Object.fromEntries(newResultsArray);\n\n        state.renderedClasses = { ...newResultsObject };\n      }\n    }\n  },\n  extraReducers: (builder) => {\n    builder.addMatcher(\n      classPagesApi.endpoints.getAllClasses.matchFulfilled,\n      (state, { payload }) => {\n        state.classes = payload;\n        state.filteredClasses = payload;\n        state.renderedClasses = payload;\n\n        if (state.orderedAddedClasses[state.currentSection]) {\n          state.totalCredits = recalculateTotalCredits({\n            allClasses: state.classes,\n            orderedAddedClasses: state.orderedAddedClasses[state.currentSection]\n          });\n        }\n      }\n    );\n    builder.addMatcher(\n      usersApiSlice.endpoints.getUserInfo.matchFulfilled,\n      (state, { payload }) => {\n        state.orderedAddedClasses = payload.addedClasses.orderedClasses;\n\n        if (Object.keys(state.classes).length) {\n          state.totalCredits = recalculateTotalCredits({\n            orderedAddedClasses:\n              state.orderedAddedClasses[state.currentSection],\n            allClasses: state.classes\n          });\n        }\n      }\n    );\n    builder.addMatcher(\n      classPagesApi.endpoints.addClass.matchFulfilled,\n      (state, { payload }) => {\n        state.orderedAddedClasses = getOrderedClassesFromApiRes(\n          payload.userData.classes\n        );\n\n        state.totalCredits = recalculateTotalCredits({\n          orderedAddedClasses: state.orderedAddedClasses[state.currentSection],\n          allClasses: state.classes\n        });\n      }\n    );\n    builder.addMatcher(\n      classPagesApi.endpoints.removeClass.matchFulfilled,\n      (state, { payload }) => {\n        state.orderedAddedClasses = getOrderedClassesFromApiRes(\n          payload.userData.classes\n        );\n\n        state.totalCredits = recalculateTotalCredits({\n          orderedAddedClasses: state.orderedAddedClasses[state.currentSection],\n          allClasses: state.classes\n        });\n      }\n    );\n    builder.addMatcher(\n      classPagesApi.endpoints.swapCoursePriority.matchFulfilled,\n      (state, { payload }) => {\n        state.orderedAddedClasses = getOrderedClassesFromApiRes(\n          payload.userData.classes\n        );\n      }\n    );\n  }\n});\n\n/**\n *\n * Helper Functions\n *\n */\n\nconst recalculateTotalCredits = ({\n  addedClasses,\n  orderedAddedClasses,\n  allClasses\n}: {\n  addedClasses?: AddedClasses['classes']['term'];\n  orderedAddedClasses?: AddedClasses['orderedClasses']['term'];\n  allClasses: ClassPagesState['classes'];\n}): ClassPagesState['totalCredits'] => {\n  let totalCredits = {\n    credits: 0,\n    hmcCredits: 0\n  } as ClassPagesState['totalCredits'];\n\n  try {\n\n  if (addedClasses && Object.keys(addedClasses).length) {\n    for (const masterCourseCode in addedClasses) {\n      const course = allClasses[masterCourseCode];\n\n      const numCourses = addedClasses[masterCourseCode].length;\n\n      totalCredits.credits += course.creditWeight * numCourses;\n      totalCredits.hmcCredits += course.creditWeightHM * numCourses;\n    }\n  } else if (orderedAddedClasses) {\n    for (const courseCode of orderedAddedClasses) {\n      const masterCourseCode = getMasterCourseCodeFromCourseCode(courseCode);\n      const course = allClasses[masterCourseCode];\n\n      totalCredits.credits += course.creditWeight;\n      totalCredits.hmcCredits += course.creditWeightHM;\n    }\n  }\n  } catch (e) {\n    console.warn(\"Error calculating credits\", e)\n  }\n\n  return totalCredits;\n};\n\nconst findSearchTermShortcuts = (searchPhrase: string) => {\n  return searchPhrase\n    .replace(/(csci *|cs *)(\\d+)/i, (match, p1, p2) => `csci ${p2}`)\n    .replace(\n      /((e *)|(eng *)|(engr *))(\\d+)/i,\n      (match, p1, p2, p3, p4, p5) => `engr ${p5}`\n    )\n    .replace(/(bio *|biol *)(\\d+)/i, (match, p1, p2) => `biol ${p2}`)\n    .replace(\n      // pad 0s for courseCode search\n      /([a-z]+ *)(\\d+)/i,\n      (match, p1, p2) => p1 + p2.padStart(3, '0')\n    );\n};\n\n// convert full department name search phrase to the department code\n// TODO: add more departments\nconst matchDepartmentName = (searchPhrase: string) => {\n  return searchPhrase\n    .replace(/(computer science)/i, 'csci')\n    .replace(/(engineering)/i, 'engr')\n    .replace(/(biology)/i, 'biol');\n};\n\nconst filterBySearchTerm = (\n  courseName: string,\n  times: any[],\n  masterCourseCode: string,\n  searchCourseCode?: string,\n  searchTerms?: string[]\n) => {\n  const coursePhrase = `${masterCourseCode} ${courseName} ${\n    times[0]?.professorName ? times[0].professorName : ''\n  }`;\n\n  // Return true if any of the searchCourseCodes are found in the masterCourseCode\n  if (\n    masterCourseCode\n      .trim()\n      .replace(/\\s+/g, ' ')\n      .includes(searchCourseCode.toUpperCase().trim().replace(/\\s+/g, ' '))\n  ) {\n    return true;\n  }\n\n  // Return true if all of the searchPhrases are found in the coursePhrase\n  for (const searchTerm of searchTerms) {\n    if (\n      !coursePhrase\n        .toUpperCase()\n        .trim()\n        .replace(/\\s+/g, ' ')\n        .includes(searchTerm.toUpperCase().trim().replace(/\\s+/g, ' '))\n    ) {\n      return false;\n    }\n  }\n\n  return searchTerms.length > 0;\n};\n\nconst doesClassConflict = (\n  schedule: CourseSchedule,\n  orderedAddedClasses: string[],\n  classes: { [masterCourseCode: string]: Class }\n) => {\n  for (const addedClass of orderedAddedClasses) {\n    const masterCourseCode = getMasterCourseCodeFromCourseCode(addedClass);\n    const addedTimes = classes[masterCourseCode].times;\n\n    for (const addedTime of addedTimes) {\n      for (const addedSchedule of addedTime.courseSchedule) {\n        const addedTimeStart = getTimeAsNumberOfMinutes(\n          addedSchedule.startTime\n        );\n        const addedTimeEnd = getTimeAsNumberOfMinutes(addedSchedule.endTime);\n        const scheduleTimeStart = getTimeAsNumberOfMinutes(schedule.startTime);\n        const scheduleTimeEnd = getTimeAsNumberOfMinutes(schedule.endTime);\n        if (\n          addedSchedule.daysOfTheWeek.filter((day) =>\n            schedule.daysOfTheWeek.includes(day)\n          ).length > 0 &&\n          ((scheduleTimeStart >= addedTimeStart &&\n            scheduleTimeStart < addedTimeEnd) ||\n            (scheduleTimeEnd > addedTimeStart &&\n              scheduleTimeEnd <= addedTimeEnd) ||\n            (scheduleTimeStart <= addedTimeStart &&\n              scheduleTimeEnd >= addedTimeEnd))\n        ) {\n          return true;\n        }\n      }\n    }\n  }\n\n  return false;\n};\n\nconst getOrderedClassesFromApiRes = (\n  classes: { courseCode: string; courseTerm: string }[]\n) => {\n  let orderedClasses: AddedClasses['orderedClasses'] = {};\n  classes.forEach(({ courseCode, courseTerm }) => {\n    if (!orderedClasses[courseTerm]) {\n      orderedClasses[courseTerm] = [];\n    }\n    orderedClasses[courseTerm].push(courseCode);\n  });\n  return orderedClasses;\n};\n\n// Selectors\nexport const selectClassesList = (state: RootState) =>\n  state.appData.classPages.classes;\n\nexport const selectRenderedClassesList = (state: RootState) =>\n  state.appData.classPages.renderedClasses;\n\n// Actions\nexport const {\n  currentSectionUpdated,\n  endOfListReached,\n  searchTermUpdated,\n  resetClasses,\n  classSelected,\n  selectedClassCleared,\n  reset,\n  filtersSaved,\n  filtersReset,\n  isHMCUpdated,\n  availableSectionsListUpdated,\n  electiveGeneratorSelected,\n  suggestedClassesUpdated,\n  suggestedClassesDimissed,\n  creditsRecalculated\n} = classPagesSlice.actions;\n\nexport default classPagesSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport type { PayloadAction } from '@reduxjs/toolkit';\n\nimport { RootState } from '../../app/store';\n\ninterface DiscoverState {\n  searchTerm: string;\n  submittedSearchTerm: string;\n  tag: string;\n  recentSearches: string[];\n}\nconst initialState: DiscoverState = {\n  searchTerm: '',\n  submittedSearchTerm: '',\n  tag: '',\n  recentSearches: []\n};\n\nexport const discoverSlice = createSlice({\n  name: 'discover',\n  initialState,\n  reducers: {\n    reset: () => initialState,\n    searchTermSubmitted: (state, action: PayloadAction<string>) => {\n      state.submittedSearchTerm = action.payload;\n      if (action.payload && !state.recentSearches.includes(action.payload)) {\n        state.recentSearches.unshift(action.payload);\n      }\n    },\n    searchTermChanged: (state, action: PayloadAction<string>) => {\n      state.searchTerm = action.payload;\n      if (action.payload === '') {\n        state.submittedSearchTerm = '';\n      }\n    },\n    recentSearchTermSelected: (state, action: PayloadAction<string>) => {\n      state.searchTerm = action.payload;\n      state.submittedSearchTerm = action.payload;\n    },\n    tagSelected: (state, action: PayloadAction<string>) => {\n      state.tag = action.payload;\n    },\n    recentSearchTermRemoved: (state, action: PayloadAction<string>) => {\n      state.recentSearches = state.recentSearches.filter(\n        (term) => term !== action.payload\n      );\n    }\n  }\n});\n\nexport const {\n  reset,\n  searchTermChanged,\n  searchTermSubmitted,\n  tagSelected,\n  recentSearchTermSelected,\n  recentSearchTermRemoved\n} = discoverSlice.actions;\n\nexport const selectSearchTerm = (state: RootState) => state.appData.discover.searchTerm;\nexport const selectSubmittedSearchTerm = (state: RootState) => state.appData.discover.submittedSearchTerm;\nexport const selectTag = (state: RootState) => state.appData.discover.tag;\nexport const selectRecentSearches = (state: RootState) => state.appData.discover.recentSearches;\n\nexport default discoverSlice.reducer;\n","// import createSecureStore from \"redux-persist-expo-securestore\"\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as ExpoSecureStorage from 'expo-secure-store';\nimport { Platform } from 'react-native';\nimport { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\nimport ExpoFileSystemStorage from 'redux-persist-expo-filesystem';\n\nimport createSecureStorage from './SecureStorage';\nimport appDataReducer from '../app/appDataSlice';\nimport calendarReducer from '../features/calendar/calendarSlice';\nimport classPagesReducer from '../features/classPages/classPagesSlice';\nimport discoverReducer from '../features/discover/discoverSlice';\n\n// Secure storage\n\n// const SecureStorage = createSecureStore();\nconst SecureStorage = createSecureStorage();\n\nconst securePersistConfig = {\n  key: 'secure',\n  storage: Platform.OS === 'web' ? AsyncStorage : SecureStorage\n};\n\n// Non-secure (AsyncStorage) storage\nconst cpPersistConfig = {\n  key: 'classPages',\n  storage: Platform.OS === 'android' ? ExpoFileSystemStorage : AsyncStorage,\n  whitelist:\n    Platform.OS === 'web'\n      ? ['currentSection', 'hasSelectedElectiveGen']\n      : ['classes', 'currentSection', 'isHMC', 'hasSelectedElectiveGen']\n};\n\nconst discoverPersistConfig = {\n  key: 'discover',\n  storage: Platform.OS === 'android' ? ExpoFileSystemStorage : AsyncStorage,\n  whitelist: ['recentSearches']\n};\n\n// Combine them together\nexport const rootReducer = combineReducers({\n  classPages: persistReducer(cpPersistConfig, classPagesReducer),\n  secure: persistReducer(securePersistConfig, appDataReducer),\n  discover: persistReducer(discoverPersistConfig, discoverReducer),\n  calendar: calendarReducer\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER\n} from 'redux-persist';\n\nimport { rootReducer } from './storage';\nimport { apiSlice } from '../features/api/apiSlice';\n\nexport const store = configureStore({\n  reducer: {\n    appData: rootReducer,\n    [apiSlice.reducerPath]: apiSlice.reducer\n  },\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware({\n    serializableCheck: false,\n    immutableCheck: false\n  }).concat(apiSlice.middleware)\n});\n\n// serializableCheck: {\n//   ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//   ignoredPaths: [\n//     'appData.classPages.classes',\n//     'addData.classPages.renderedClasses',\n//   ],\n// },\n// immutableCheck: {\n//   ignoredPaths: [\n//     'appData.classPages.classes',\n//     'addData.classPages.renderedClasses',\n//   ],\n// },\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\n\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { Image, View } from 'react-native';\n\nexport default function WebSplashScreen() {\n  return (\n    <View\n      style={{\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      }}\n    >\n      <Image\n        source={require('../../assets/logos/splash-logo.png')}\n        style={{ width: 300, height: 300 }}\n      />\n    </View>\n  );\n}\n","import { Manager } from 'socket.io-client';\n\nexport const base_URL = 'https://api.athenaserver.com:5678/api';\n\nexport const manager = new Manager(base_URL, {\n  randomizationFactor: 0.5,\n  addTrailingSlash: false,\n  autoConnect: false\n});\n","import { FontAwesome } from '@expo/vector-icons';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport {\n  Card,\n  Divider,\n  IndexPath,\n  Layout,\n  Select,\n  SelectItem\n} from '@ui-kitten/components';\nimport * as ImagePicker from 'expo-image-picker';\nimport moment from 'moment-timezone';\nimport { useCallback, useEffect, useState } from 'react';\nimport {\n  Dimensions,\n  Image,\n  KeyboardAvoidingView,\n  Platform,\n  RefreshControl,\n  ScrollView,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View\n} from 'react-native';\nimport { LineChart } from 'react-native-chart-kit';\n\nimport { selectUserKey } from '../../app/appDataSlice';\nimport { useAppSelector } from '../../app/hooks';\nimport { base_URL } from '../../constants/admin';\n\nconst AdminHomePage = createNativeStackNavigator();\n\nexport default function AdminHomeNavigation() {\n  const [adminCommands, setAdminCommands] = useState([]);\n  const userKey = useAppSelector(selectUserKey);\n  useEffect(() => {\n    getAdminCommands();\n  }, []);\n  async function getAdminCommands() {\n    const adminURL = `${base_URL}/adminCommands`;\n    const res = await fetch(`${adminURL}/getAdminCommands`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        userKey\n      }\n    });\n    let commands: any[] = await res.json();\n    const filter = await fetch(`${adminURL}/toggleAdminCommands`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        userKey\n      },\n      body: '{}'\n    });\n    const filterObject = (await filter.json()).currentAdminCommandsStatus;\n    commands = commands.sort((a, b) => {\n      const textA = a.label.toUpperCase();\n      const textB = b.label.toUpperCase();\n      return textA < textB ? -1 : textA > textB ? 1 : 0;\n    });\n    const finalCommandList = [];\n    for (const command of commands) {\n      if (filterObject[command.label]) {\n        finalCommandList.push(command);\n      }\n    }\n    // @ts-ignore\n    setAdminCommands(finalCommandList);\n    return commands;\n  }\n\n  const [refreshing, setRefreshing] = useState(false);\n\n  const onRefresh = useCallback(() => {\n    setRefreshing(true);\n    setAdminCommands([]);\n    getAdminCommands().then((commands) => setRefreshing(false));\n  }, []);\n\n  function AdminHome({ navigation }) {\n    return (\n      <ScrollView\n        refreshControl={\n          <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n        }\n      >\n        {adminCommands?.length === 0 ? <Text>No Commands Yet. Rip</Text> : null}\n        {adminCommands?.map((command) => {\n          return (\n            <TouchableOpacity\n              onPress={() => {\n                navigation.navigate('AdminCommand', { data: command });\n              }}\n              style={listingStyles.cardContainer}\n              key={command.url}\n            >\n              <Text style={listingStyles.text}>{command.label}</Text>\n            </TouchableOpacity>\n          );\n        })}\n      </ScrollView>\n    );\n  }\n\n  return (\n    <AdminHomePage.Navigator initialRouteName=\"AdminHome\">\n      <AdminHomePage.Screen\n        options={{\n          // title: 'Admin Home',\n          /* headerTitle: () => {\n                        return adminControlPanelHeader;\n                    }, */\n          headerShown: false\n        }}\n        name=\"AdminHome\"\n        component={AdminHome}\n      />\n      <AdminHomePage.Screen\n        name=\"AdminCommand\"\n        component={AdminCommand}\n        options={{ headerTitle: '' }}\n      />\n    </AdminHomePage.Navigator>\n  );\n}\n\nfunction AdminCommand({\n  route: {\n    params: { data }\n  }\n}) {\n  const [info, setInfo] = useState({});\n  const [isFileUpload, setIsFileUpload] = useState(false);\n  const [body, setBody] = useState({});\n  const [users, setUsers] = useState([]);\n  const [fileUploads, setFileUploads] = useState([]);\n  const [sponsors, setSponsors] = useState([]);\n  const [status, setStatus] = useState('0');\n  const [allFieldsFilled, setAllFieldsFilled] = useState(false);\n  const [buttonPushed, setButtonPushed] = useState(false); // refresh button\n  const userKey = useAppSelector(selectUserKey);\n\n  useEffect(() => {\n    // Check for first button render\n    checkForFieldsFilled(body);\n    // Fetch User List\n    fetch(`${base_URL}/users/getUserNameList`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        userKey\n      }\n    }).then(async (data) => {\n      if (data.ok) {\n        const newUsers = (await data.json()).map((userName) => {\n          return {\n            label: userName,\n            id: userName\n          };\n        });\n        setUsers(newUsers);\n      }\n    });\n    // Fetch Sponsor List\n    fetch(`${base_URL}/sponsors/`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        userKey\n      }\n    }).then(async (data) => {\n      if (data.ok) {\n        const sponsors = (await data.json()).map((sponsor) => {\n          return {\n            label: sponsor.sponsorName,\n            id: sponsor._id\n          };\n        });\n        setSponsors(sponsors);\n      }\n    });\n    // Fetch File upload List\n    fetch(`${base_URL}/adminCommands/getReferenceImages`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        userKey\n      }\n    }).then(async (data) => {\n      if (data.ok) {\n        const images = (await data.json()).map((imageName) => {\n          return {\n            label: imageName,\n            id: imageName\n          };\n        });\n        setFileUploads(images);\n      }\n    });\n  }, []);\n\n  function checkForFieldsFilled(body) {\n    for (const field of data.fields) {\n      if (field.mandatory) {\n        if (body[field.id] === undefined || body[field.id] === null) {\n          setAllFieldsFilled(false);\n          return;\n        }\n      }\n    }\n    setAllFieldsFilled(true);\n  }\n\n  const sendApiData = (data, userKey) => {\n    let additionToUrl = '';\n    for (const aspect in body) {\n      if (body[aspect].paramOverride) {\n        additionToUrl += body[aspect];\n        break;\n      }\n    }\n    if (JSON.stringify(body, null, 2) !== '{}' && data.apiType === 'GET') {\n      for (const aspect in body) {\n        if (additionToUrl === '') {\n          additionToUrl = '?';\n        } else {\n          additionToUrl += '&';\n        }\n        additionToUrl += `${aspect}=${body[aspect]}`;\n      }\n    }\n    const newUrl = data.url + additionToUrl;\n    if (!isFileUpload) {\n      fetch(newUrl, {\n        method: data.apiType,\n        headers: {\n          'Content-Type': 'application/json',\n          userKey\n        },\n        body:\n          JSON.stringify(body, null, 2) !== '{}' && data.apiType !== 'GET'\n            ? JSON.stringify(body)\n            : undefined\n      }).then((res) => {\n        // @ts-ignore\n        setStatus(res.status);\n        res.text().then((text) => {\n          try {\n            const text2 = JSON.parse(text);\n            setInfo(text2);\n          } catch (err) {\n            setInfo(text);\n          }\n        });\n      });\n    } else {\n      const formdata = new FormData();\n      for (const item in body) {\n        if (!item.includes('picture')) {\n          formdata.append(item, body[item]);\n        } else {\n          formdata.append(item, {\n            // @ts-ignore\n            uri: body[item].uri,\n            name: item,\n            type: 'image/jpg'\n          });\n        }\n      }\n      fetch(newUrl, {\n        body: formdata,\n        redirect: 'follow',\n        method: data.apiType,\n        headers: {\n          userKey\n        }\n      }).then((res) => {\n        // @ts-ignore\n        setStatus(res.status);\n        res.text().then((text) => {\n          try {\n            const text2 = JSON.parse(text);\n            setInfo(text2);\n          } catch (err) {\n            setInfo(text);\n          }\n        });\n      });\n    }\n  };\n\n  if (buttonPushed) {\n    setButtonPushed(false);\n    sendApiData(data, userKey);\n  }\n\n  function renderEachDropItem(field) {\n    if (field.data) {\n      // This is where we can add preset lists if we can't use something hardcoded on the server\n      switch (field.data) {\n        case 'users': {\n          field.options = users;\n          break;\n        }\n        case 'sponsors': {\n          field.options = sponsors;\n          break;\n        }\n        case 'fileUploads': {\n          field.options = fileUploads;\n          break;\n        }\n      }\n    }\n    const final = [];\n    for (const option of field.options) {\n      final.push(<SelectItem title={option.label} />);\n    }\n    return final;\n  }\n\n  function renderTheFieldsNecessary(fields) {\n    const changeValue = (theValue, valueToChange) => {\n      const newBody = body;\n      for (const aspect in newBody) {\n        if (\n          newBody[aspect] === null ||\n          newBody[aspect] === undefined ||\n          newBody[aspect] === ''\n        ) {\n          delete newBody[aspect];\n        }\n      }\n      if (theValue !== undefined) {\n        newBody[valueToChange] = theValue;\n      } else if (newBody[valueToChange]) {\n        delete newBody[valueToChange];\n      }\n      setBody(newBody);\n      checkForFieldsFilled(newBody);\n    };\n\n    const fileUploadTemplate = (field) => {\n      const pickImage = async () => {\n        const result = await ImagePicker.launchImageLibraryAsync({\n          allowsEditing: false\n        });\n        if (!result.cancelled) {\n          changeValue(result, field.id);\n        }\n      };\n\n      return (\n        <View>\n          {/* Image Picker */}\n          <TouchableOpacity\n            onPress={() => {\n              pickImage();\n            }}\n            style={{\n              height: 80,\n              justifyContent: 'center',\n              alignItems: 'center',\n              borderRadius: 8,\n              paddingVertical: 8,\n              flexDirection: 'row',\n              backgroundColor: '#dbdbdb',\n              marginVertical: 15,\n              marginHorizontal: 5\n            }}\n          >\n            <Layout\n              style={{\n                flex: 1,\n                flexDirection: 'row',\n                height: '100%',\n                marginHorizontal: 10,\n                backgroundColor: '#dbdbdb'\n              }}\n            >\n              <Layout\n                style={{\n                  flex: 1,\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  height: '100%',\n                  borderRadius: 10,\n                  backgroundColor: '#bfbfbf'\n                }}\n              >\n                {body && body[field?.id] ? (\n                  <Image\n                    source={{ uri: body[field.id].uri }}\n                    style={{ width: '90%', height: '90%', borderRadius: 10 }}\n                  />\n                ) : (\n                  <FontAwesome name=\"image\" size={40} color=\"grey\" />\n                )}\n              </Layout>\n              <Layout\n                style={{\n                  backgroundColor: '#dbdbdb',\n                  flex: 4,\n                  height: '100%',\n                  justifyContent: 'center',\n                  alignItems: 'center'\n                }}\n              >\n                <Text\n                  style={{\n                    fontSize: 17\n                  }}\n                >\n                  {body && body[field?.id]\n                    ? 'Select Another Image'\n                    : 'Select Image'}\n                </Text>\n              </Layout>\n            </Layout>\n          </TouchableOpacity>\n        </View>\n      );\n    };\n    const renderFilterParameters = (fields) => {\n      if (fields.length === 0) {\n        return null;\n      }\n      return (\n        <View style={{ flexDirection: 'row' }}>\n          <Text\n            style={{\n              fontSize: 15,\n              paddingLeft: 12,\n              paddingBottom: 5,\n              paddingTop: 5,\n              alignContent: 'center',\n              fontWeight: 'bold'\n            }}\n          >\n            Filters/Parameters\n          </Text>\n        </View>\n      );\n    };\n    const final = [];\n\n    function renderStringArray(field) {\n      const valuesToSend = {};\n      function changeStringValue(theValue, miniField, field) {\n        valuesToSend[miniField] = theValue;\n        const newFieldForBody = [];\n        for (const value of Object.values(valuesToSend)) {\n          newFieldForBody.push(value);\n        }\n        changeValue(newFieldForBody, field.id);\n      }\n      const tempFinal = [];\n      tempFinal.push(\n        <Text\n          style={{\n            fontSize: 14,\n            paddingLeft: 5,\n            paddingBottom: 3,\n            paddingTop: 3\n          }}\n        >\n          {field.mandatory ? `${field.label} (mandatory)` : field.label}\n        </Text>\n      );\n      for (const eachOne in field.stringArray) {\n        tempFinal.push(\n          <TextInput\n            autoCapitalize=\"none\"\n            onChangeText={(theValue) =>\n              changeStringValue(\n                theValue,\n                field.stringArray[eachOne].label,\n                field\n              )\n            }\n            style={myStyles.indentedInput}\n            placeholderTextColor=\"gray\"\n            placeholder={\n              field.stringArray[eachOne].mandatory\n                ? `${field.stringArray[eachOne].label} (mandatory)`\n                : field.stringArray[eachOne].label\n            }\n          />\n        );\n      }\n      return tempFinal;\n    }\n\n    const renderMultiSelectDropDown = (field) => {\n      const [selectedIndex, setSelectedIndex] = useState([]);\n      const [hasChosen, setHasChosen] = useState(false);\n      function toggleValue(index) {\n        setHasChosen(true);\n        setSelectedIndex(index);\n        const newSelection = Array.isArray(index)\n          ? index.map((littleIndex) => {\n              return field.options[littleIndex.row].id;\n            })\n          : field.options[index.row].id;\n        changeValue(newSelection, field.id);\n      }\n      function calculateSelectedValues() {\n        const finalArray = selectedIndex.map((littleIndex) => {\n          return `${field.options[littleIndex.row].label}, `;\n        });\n        if (finalArray.length > 0) {\n          let finalObject = finalArray.at(-1);\n          finalObject = finalObject.replace(', ', '');\n          finalArray.splice(-1, 1);\n          finalArray.push(finalObject);\n          return finalArray;\n        }\n        return field.mandatory ? `${field.label} (mandatory)` : field.label;\n      }\n      return (\n        <Layout style={myStyles.containerDrop} level=\"1\">\n          <Select\n            multiSelect\n            value={hasChosen ? calculateSelectedValues() : field.label}\n            selectedIndex={selectedIndex}\n            onSelect={(index) => toggleValue(index)}\n          >\n            {renderEachDropItem(field)}\n          </Select>\n        </Layout>\n      );\n    };\n\n    const renderDropDown = (field) => {\n      const [selectedIndex, setSelectedIndex] = useState(new IndexPath(0));\n      const [hasChosen, setHasChosen] = useState(false);\n\n      function currentValue() {\n        return (\n          <Text>\n            {!hasChosen\n              ? `Choose ${field.label}${field.mandatory ? ' (mandatory)' : ''}`\n              : field.options[selectedIndex.row - 1].label}{' '}\n          </Text>\n        );\n      }\n\n      function handleSelection(index) {\n        setSelectedIndex(index);\n        changeValue(\n          index.row === 0 ? undefined : field.options[index.row - 1].id,\n          field.id\n        );\n        if (index.row === 0) {\n          setHasChosen(false);\n        } else {\n          setHasChosen(true);\n        }\n      }\n\n      return (\n        <Select\n          style={myStyles.containerDrop}\n          value={currentValue}\n          selectedIndex={selectedIndex}\n          onSelect={handleSelection}\n        >\n          <SelectItem title={' '} />\n          {renderEachDropItem(field)}\n        </Select>\n      );\n    };\n\n    for (let i = 0; i < fields.length; i++) {\n      const { type } = fields[i];\n      if (type === 'Boolean') {\n        final.push(trueFalseTemplate(fields[i]));\n      } else if (type === 'String') {\n        final.push(\n          <TextInput\n            autoCapitalize=\"none\"\n            clearButtonMode=\"always\"\n            onChangeText={(theValue) => changeValue(theValue, fields[i].id)}\n            style={myStyles.input}\n            placeholderTextColor=\"gray\"\n            placeholder={\n              fields[i].mandatory\n                ? `${fields[i].label} (mandatory)`\n                : fields[i].label\n            }\n          />\n        );\n      } else if (type === 'ArrayString') {\n        final.push(renderStringArray(fields[i]));\n      } else if (type === 'DropDown') {\n        final.push(renderDropDown(fields[i]));\n      } else if (type === 'MultiSelectDropDown') {\n        final.push(renderMultiSelectDropDown(fields[i]));\n      } else if (type === 'BigString') {\n        final.push(\n          <TextInput\n            autoCapitalize=\"sentences\"\n            clearButtonMode=\"always\"\n            onChangeText={(theValue) => changeValue(theValue, fields[i].id)}\n            style={myStyles.inputBig}\n            multiline\n            placeholderTextColor=\"gray\"\n            placeholder={\n              fields[i].mandatory\n                ? `${fields[i].label} (mandatory)`\n                : fields[i].label\n            }\n          />\n        );\n      } else if (type === 'FileUpload') {\n        if (!isFileUpload) {\n          setIsFileUpload(true);\n        }\n        final.push(fileUploadTemplate(fields[i]));\n      }\n    }\n    return (\n      <View>\n        {renderFilterParameters(fields)}\n        <View>{final}</View>\n      </View>\n    );\n  }\n\n  const trueFalseTemplate = (field) => {\n    const [selectedIndex, setSelectedIndex] = useState();\n    const boolValues = ['false', 'true'];\n    // @ts-ignore\n    const displayValue = boolValues[selectedIndex - 1];\n    const renderOption = (displayValue) => <SelectItem title={displayValue} />;\n    const changeEverything = (value) => {\n      setSelectedIndex(value);\n      if (value.row === 0) {\n        const newBody = body;\n        newBody[field.id] = false;\n        setBody(newBody);\n      } else if (value.row === 1) {\n        const newBody = body;\n        newBody[field.id] = true;\n        setBody(newBody);\n      }\n    };\n    return (\n      <Layout style={styles.container} level=\"1\">\n        <Select\n          label={field.label}\n          selectedIndex={selectedIndex}\n          value={displayValue}\n          onSelect={(index) => changeEverything(index)}\n          placeholder={\n            field.mandatory ? `${field.label} (mandatory)` : `${field.label}`\n          }\n        >\n          {boolValues.map(renderOption)}\n        </Select>\n      </Layout>\n    );\n  };\n\n  function showResponseData(actions) {\n    if (JSON.stringify(info, null, 2) === '{}') {\n      return null;\n    }\n    const informationToShow = [];\n\n    // use this one for displaying everything pretty\n    if (Array.isArray(info)) {\n      if (data.isDateGraph) {\n        // check for need for rendering graphs\n        const timeFrames = [\n          '2week-unique',\n          '2week-total',\n          'month-unique',\n          '6month-total'\n        ];\n        for (const item of timeFrames) {\n          const dataToShow = {\n            labels: getDates(item),\n            datasets: [\n              {\n                data: getData(item)\n              }\n            ]\n          };\n          informationToShow.push(renderOneGraph(dataToShow, item));\n        }\n      }\n      for (const oneElement of info) {\n        informationToShow.push(renderOneCard(oneElement, actions || []));\n      }\n    } else {\n      informationToShow.push(\n        <Text style={{ flexShrink: 1 }}>\n          {typeof info === 'string' ? info : JSON.stringify(info, null, 2)}\n        </Text>\n      );\n    }\n\n    function getData(timeFrame) {\n      const final = [];\n      switch (timeFrame) {\n        case '2week-unique': {\n          for (let i = 13; i >= 0; i--) {\n            const day = moment()\n              .tz('America/Los_Angeles')\n              .subtract(i, 'days')\n              .format('YYYY-MM-DD');\n            let counter = 0;\n            const usersToday = [];\n            // @ts-ignore\n            for (const instance of info) {\n              const { userName } = instance;\n              if (instance.date === day && !usersToday.includes(userName)) {\n                usersToday.push(userName);\n                counter++;\n              }\n            }\n            final.push(counter);\n          }\n          break;\n        }\n        case '2week-total': {\n          for (let i = 13; i >= 0; i--) {\n            const day = moment()\n              .tz('America/Los_Angeles')\n              .subtract(i, 'days')\n              .format('YYYY-MM-DD');\n            let counter = 0;\n            const usersToday = [];\n            // @ts-ignore\n            for (const instance of info) {\n              const { userName } = instance;\n              if (instance.date === day) {\n                usersToday.push(userName);\n                counter++;\n              }\n            }\n            final.push(counter);\n          }\n          break;\n        }\n        case 'month-unique': {\n          for (let i = 4; i > 0; i--) {\n            const weekStart = moment()\n              .tz('America/Los_Angeles')\n              .subtract(i, 'weeks')\n              .format('YYYY-MM-DD');\n            const weekEnd = moment()\n              .tz('America/Los_Angeles')\n              .subtract(i - 1, 'weeks')\n              .format('YYYY-MM-DD');\n            let counter = 0;\n            const usersMonth = [];\n            // @ts-ignore\n            for (const instance of info) {\n              if (\n                instance.date > weekStart &&\n                instance.date <= weekEnd &&\n                !usersMonth.includes(instance.userName)\n              ) {\n                counter++;\n                usersMonth.push(instance.userName);\n              }\n            }\n            final.push(counter);\n          }\n          break;\n        }\n        case '6month-total': {\n          for (let i = 6; i > 0; i--) {\n            const monthStart = moment()\n              .tz('America/Los_Angeles')\n              .subtract(i, 'months')\n              .format('YYYY-MM-DD');\n            const monthEnd = moment()\n              .tz('America/Los_Angeles')\n              .subtract(i - 1, 'months')\n              .format('YYYY-MM-DD');\n            let counter = 0;\n            // @ts-ignore\n            for (const instance of info) {\n              if (instance.date > monthStart && instance.date <= monthEnd) {\n                counter++;\n              }\n            }\n            final.push(counter);\n          }\n          break;\n        }\n      }\n      return final;\n    }\n\n    function getDates(timeFrame) {\n      const final = [];\n      switch (timeFrame) {\n        case '2week-unique': {\n          for (let i = 13; i >= 0; i--) {\n            final.push(\n              moment()\n                .tz('America/Los_Angeles')\n                .subtract(i, 'days')\n                .format('MM/DD')\n            );\n          }\n          break;\n        }\n        case '2week-total': {\n          for (let i = 13; i >= 0; i--) {\n            final.push(\n              moment()\n                .tz('America/Los_Angeles')\n                .subtract(i, 'days')\n                .format('MM/DD')\n            );\n          }\n          break;\n        }\n        case 'month-unique': {\n          for (let i = 4; i > 0; i--) {\n            final.push(\n              `${moment()\n                .tz('America/Los_Angeles')\n                .subtract(i, 'weeks')\n                .add(1, 'days')\n                .format('MM/DD')}-${moment()\n                .tz('America/Los_Angeles')\n                .subtract(i - 1, 'weeks')\n                .format('MM/DD')}`\n            );\n          }\n          break;\n        }\n        case '6month-total': {\n          for (let i = 6; i > 0; i--) {\n            final.push(\n              `${moment()\n                .tz('America/Los_Angeles')\n                .subtract(i, 'months')\n                .add(1, 'days')\n                .format('MM/DD')}-${moment()\n                .tz('America/Los_Angeles')\n                .subtract(i - 1, 'months')\n                .format('MM/DD')}`\n            );\n          }\n          break;\n        }\n      }\n      return final;\n    }\n\n    function renderOneGraph(graphData, timeFrame) {\n      return (\n        <View style={{ paddingBottom: 10 }}>\n          <Text>\n            Timeframe:\n            {timeFrame}\n          </Text>\n          <LineChart\n            data={graphData}\n            width={Dimensions.get('window').width}\n            height={400}\n            verticalLabelRotation={60}\n            fromZero\n            xLabelsOffset={-10}\n            segments={8}\n            chartConfig={{\n              backgroundColor: '#bdbdbd',\n              decimalPlaces: 0,\n              color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n              labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n              style: {\n                borderRadius: 16\n              },\n              propsForDots: {\n                r: '6',\n                strokeWidth: '2',\n                stroke: '#333333'\n              }\n            }}\n          />\n        </View>\n      );\n    }\n\n    function renderOneCard(cardInfo, actions) {\n      const finalText = [];\n      for (const aspect in cardInfo) {\n        if (aspect !== '_id' && aspect !== '__v') {\n          finalText.push(\n            <View style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n              <Text style={{ fontWeight: 'bold' }}>{`${aspect} : `}</Text>\n              <Text>{JSON.stringify(cardInfo[aspect], null, '\\t')}</Text>\n            </View>\n          );\n        }\n      }\n      let renderedActions = null;\n      // @ts-ignore\n      if (actions !== []) {\n        renderedActions = [];\n        for (const action of actions) {\n          renderedActions.push(renderButtonForCard(action, cardInfo));\n        }\n      }\n\n      function renderButtonForCard(action, cardInfo) {\n        return (\n          <View style={{ marginHorizontal: 20 }}>\n            <TouchableOpacity\n              style={{\n                alignItems: 'center',\n                justifyContent: 'center',\n                width: 100,\n                height: 40,\n                backgroundColor: action.color ? action.color : 'gray',\n                elevation: 3\n              }}\n              onPress={() => {\n                const params = {};\n                for (const parameter of action.params) {\n                  params[parameter] = cardInfo[parameter]\n                    ? cardInfo[parameter]\n                    : undefined;\n                }\n                fetch(action.url, {\n                  method: action.method,\n                  headers: {\n                    'Content-Type': 'application/json',\n                    userKey\n                  },\n                  body: JSON.stringify(params)\n                }).then((res) => {\n                  if (res.ok) {\n                    setButtonPushed(true);\n                  }\n                });\n              }}\n            >\n              {/* @ts-ignore */}\n              <Text style={myStyles.buttonText}>{action.label}</Text>\n            </TouchableOpacity>\n          </View>\n        );\n      }\n\n      return (\n        <View>\n          <Card>\n            {finalText}\n            <View\n              style={{\n                paddingTop: 15,\n                width: '95%',\n                flexDirection: 'row',\n                alignSelf: 'center',\n                alignContent: 'center',\n                justifyContent: 'center'\n              }}\n            >\n              {renderedActions}\n            </View>\n          </Card>\n          <Divider />\n        </View>\n      );\n    }\n\n    return (\n      <View style={{ flexShrink: 1 }}>\n        <Text\n          style={{\n            fontSize: 20,\n            paddingLeft: 20,\n            paddingBottom: 0,\n            paddingTop: 20,\n            fontWeight: 'bold'\n          }}\n        >\n          Server Response\n        </Text>\n        <Text\n          style={{\n            fontSize: 13,\n            paddingLeft: 20,\n            paddingBottom: 10,\n            paddingTop: 5,\n            fontStyle: 'italic'\n          }}\n        >\n          Status Code: {status}\n        </Text>\n        <View style={{ paddingTop: 10, backgroundColor: 'lightgray' }}>\n          {informationToShow}\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <KeyboardAvoidingView\n      behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n    >\n      <ScrollView style={{ height: '100%' }}>\n        <View style={sponsorPageStyles.container}>\n          <View\n            style={{ width: '100%', display: 'flex', alignItems: 'center' }}\n          >\n            <Text style={sponsorPageStyles.title}>{data.label}</Text>\n          </View>\n\n          {data.url && (\n            // @ts-ignore\n            <View style={sponsorPageStyles.address}>\n              <Text style={{ fontSize: 18 }}>{data.url}</Text>\n            </View>\n          )}\n          <View style={sponsorPageStyles.description}>\n            {renderTheFieldsNecessary(data.fields)}\n          </View>\n          {allFieldsFilled && (\n            <TouchableOpacity\n              onPress={() => {\n                sendApiData(data, userKey);\n                // @ts-ignore\n              }}\n              style={myStyles.button}\n            >\n              <Text style={myStyles.text}>Send Call</Text>\n            </TouchableOpacity>\n          )}\n          {showResponseData(data.actions)}\n        </View>\n      </ScrollView>\n    </KeyboardAvoidingView>\n  );\n}\n\nconst sponsorPageStyles = {\n  container: {\n    flex: 1,\n    backgroundColor: 'white'\n    // alignItems: 'center',\n  },\n  header: {\n    marginTop: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%'\n  },\n  address: {\n    alignItems: 'center',\n    margin: 10,\n    borderColor: 'black',\n    borderWidth: 1,\n    padding: 10\n  },\n  video: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-start'\n  },\n  title: {\n    fontSize: 26,\n    marginLeft: 10\n  },\n  logo: {\n    width: '100%',\n    height: 100\n  },\n  description: {\n    borderWidth: 1,\n    margin: 10,\n    borderColor: '#5d5c5c',\n    borderRadius: 5,\n    width: '95%',\n    padding: 10,\n    backgroundColor: 'rgba(178,166,166,0.22)'\n  },\n  couponContainer: {\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 20,\n    marginBottom: 20\n  },\n  coupon: {\n    width: 400,\n    height: 267\n  },\n  imageGallery: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    margin: 10,\n    marginBottom: 0\n  },\n  imageStyle: {\n    width: 150,\n    height: 150,\n    paddingTop: 100,\n    margin: 5\n  },\n  headerText: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  }\n};\n\nconst myStyles = {\n  inputBig: {\n    height: 200,\n    backgroundColor: 'white',\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  },\n  input: {\n    backgroundColor: '#ffffff',\n    height: 50,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  },\n  containerDrop: {\n    backgroundColor: '#ffffff',\n    height: 42,\n    margin: 12,\n    borderWidth: 1\n  },\n  indentedInput: {\n    backgroundColor: '#ffffff',\n    height: 50,\n    marginVertical: 12,\n    borderWidth: 1,\n    padding: 10,\n    marginRight: 12,\n    marginLeft: 30\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white'\n  },\n  buttonText: {\n    fontSize: 13,\n    flexWrap: 'wrap',\n    lineHeight: 15,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white'\n  },\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 12,\n    paddingHorizontal: 32,\n    borderRadius: 4,\n    elevation: 3,\n    backgroundColor: 'black'\n  }\n};\n\nconst listingStyles = {\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center'\n  },\n  cardContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    alignSelf: 'center',\n    width: '95%',\n    height: 75,\n    backgroundColor: '#bbbbbb',\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderBottomWidth: 0,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 2,\n    elevation: 1,\n    marginLeft: 5,\n    marginRight: 5,\n    marginTop: 10\n  },\n  text: {\n    flex: 1,\n    fontSize: 20,\n    textAlign: 'center',\n    marginTop: 5,\n    marginBottom: 5\n  },\n  image: {\n    width: '100%',\n    height: '100%',\n    borderRadius: 10\n  }\n};\n\nconst styles = {\n  imagesContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    padding: 10,\n    paddingTop: 20\n  },\n  imageContainer: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  imageLabel: {\n    fontSize: 12,\n    color: 'black',\n    padding: 10,\n    textAlign: 'center'\n  },\n  cardContainer: {\n    backgroundColor: '#FFF',\n    borderWidth: 0,\n    flex: 1,\n    justifyContent: 'center',\n    margin: 0,\n    padding: 0\n  },\n  container: {\n    flex: 1\n  }\n};\n","import { Layout, Text } from '@ui-kitten/components';\nimport Constants from 'expo-constants';\n\ntype HeaderProps = {\n  accessoryLeft?: keyof JSX.IntrinsicElements | JSX.Element;\n  accessoryRight?: keyof JSX.IntrinsicElements | JSX.Element;\n  center?: keyof JSX.IntrinsicElements | JSX.Element;\n  title: string;\n  level?: '1' | '2' | '3' | '4';\n};\n\nexport default function Header({\n  accessoryLeft,\n  accessoryRight,\n  title,\n  center,\n  level = '1'\n}: HeaderProps) {\n  return (\n    <Layout\n      level={level}\n      style={{\n        paddingTop: Constants.statusBarHeight + 10,\n        width: '100%',\n        justifyContent: 'space-between',\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingHorizontal: 20\n      }}\n    >\n      <Layout level={level} style={{ flexDirection: 'row' }}>\n        {accessoryLeft}\n        <Text style={{ marginLeft: 10, fontSize: 20, fontWeight: '500' }}>\n          {title}\n        </Text>\n      </Layout>\n      {center}\n\n      {accessoryRight}\n    </Layout>\n  );\n}\n","import { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Layout } from '@ui-kitten/components';\nimport React, { useState } from 'react';\nimport { Image, TouchableOpacity } from 'react-native';\n\nimport AdminHomeNavigation from './adminPanel';\nimport { selectDarkMode, selectUserKey } from '../../app/appDataSlice';\nimport { useAppSelector } from '../../app/hooks';\nimport Header from '../../components/Header';\nimport { base_URL } from '../notifications/constants';\n\nconst AdminStack = createNativeStackNavigator();\nexport default function AdminPanel() {\n  const accessoryLeft = (\n    <Image\n      style={{\n        height: 28,\n        width: 28,\n        alignItems: 'center'\n      }}\n      source={require('../../../assets/logos/app-logo-transparent.png')}\n    />\n  );\n\n  return (\n    <AdminStack.Navigator>\n      <AdminStack.Screen\n        options={{\n          header: () => {\n            return (\n              <Layout style={{ paddingBottom: 10 }}>\n                <Header accessoryLeft={accessoryLeft} title=\"Admin Panel\" />\n              </Layout>\n            );\n          }\n        }}\n        name=\"AdminStack\"\n        component={AdminHomeNavigation}\n      />\n    </AdminStack.Navigator>\n  );\n}\n","import { Button, Layout, Text } from '@ui-kitten/components';\n\nexport default function EnterCodePage({ navigation }) {\n  return (\n    <Layout style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Text\n        style={{\n          margin: 10\n        }}\n        category=\"s1\"\n      >\n        An email has been sent to you with a temporary password. Login to set\n        your new password.\n      </Text>\n      <Button\n        style={{ margin: 10 }}\n        onPress={() => {\n          navigation.reset({ index: 0, routes: [{ name: 'Login' }] });\n        }}\n      >\n        Back to Login\n      </Button>\n    </Layout>\n  );\n}\n","import { useNetInfo } from '@react-native-community/netinfo';\nimport { Button, Input, Layout, Spinner, Text } from '@ui-kitten/components';\nimport { useEffect, useRef, useState } from 'react';\nimport { Keyboard } from 'react-native';\n\nimport { useResetPasswordMutation } from '../../api/usersApi';\n\nexport default function EnterEmailPage({ navigation }) {\n  const [email, setEmail] = useState('');\n  const inputRef = useRef<Input>(null);\n  const [resetPassword, { isLoading, isError }] = useResetPasswordMutation();\n  const netInfo = useNetInfo();\n\n  useEffect(() => {\n    if (inputRef.current) inputRef.current.focus();\n  }, [inputRef.current]);\n\n  const onSubmit = async () => {\n    if (!netInfo.isConnected) {\n      alert('Connect to the internet to reset your password');\n      return;\n    }\n\n    try {\n      await resetPassword(email).unwrap();\n      navigation.navigate('EnterCodePage');\n    } catch (e) {\n      console.warn('Error submitting forgot password email', e);\n    }\n  };\n\n  return (\n    <Layout style={{ flex: 1, paddingTop: 30, alignItems: 'center' }}>\n      <Text style={{ margin: 10 }} category=\"s1\">\n        Enter your email to get started\n      </Text>\n\n      <Input\n        autoCapitalize=\"none\"\n        placeholder=\"Email\"\n        ref={inputRef}\n        style={{ margin: 10 }}\n        onChangeText={setEmail}\n        value={email}\n        onSubmitEditing={Keyboard.dismiss}\n      />\n      {isError && (\n        <Text style={{ color: 'red' }}>Email is invalid. Try again</Text>\n      )}\n      <Button\n        style={{ margin: 10 }}\n        onPress={onSubmit}\n        disabled={isLoading}\n        accessoryRight={() => (isLoading ? <Spinner status=\"basic\" /> : null)}\n      >\n        Submit\n      </Button>\n    </Layout>\n  );\n}\n","import { createNativeStackNavigator } from '@react-navigation/native-stack';\n\nimport EnterCodePage from './EnterCodePage';\nimport EnterEmailPage from './EnterEmailPage';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function ForgotPassword() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false\n      }}\n    >\n      <Stack.Screen name=\"EnterEmailPage\" component={EnterEmailPage} />\n      <Stack.Screen name=\"EnterCodePage\" component={EnterCodePage} />\n    </Stack.Navigator>\n  );\n}\n","import NetInfo from '@react-native-community/netinfo';\nimport { Input, Layout, Spinner, Text } from '@ui-kitten/components';\nimport React, { useState } from 'react';\nimport {\n  Image,\n  Keyboard,\n  KeyboardAvoidingView,\n  Platform,\n  StyleSheet,\n  TouchableOpacity,\n  TouchableWithoutFeedback\n} from 'react-native';\n\nimport {\n  selectDarkMode,\n  setIsGuest,\n  userKeyUpdated\n} from '../../app/appDataSlice';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { useLazyGetAllSectionsQuery } from '../api/classPagesApi';\nimport {\n  useLazyGetUserInfoQuery,\n  useLoginMutation,\n  useTrackLoginMutation\n} from '../api/usersApi';\nimport {\n  availableSectionsListUpdated,\n  currentSectionUpdated\n} from '../classPages/classPagesSlice';\n\nconst LightModeLogo = require('../../../assets/logos/owl-black-text.png');\nconst DarkModeLogo = require('../../../assets/logos/owl-white-text.png');\n\nexport default function Login({ navigation }) {\n  const [userName, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const [loginError, setLoginError] = useState('');\n\n  const [login, { isLoading }] = useLoginMutation();\n  const [getUserInfo, { isLoading: loadingUserInfo }] =\n    useLazyGetUserInfoQuery();\n  const [trackLogin] = useTrackLoginMutation();\n  const [getAllSections] = useLazyGetAllSectionsQuery();\n  const darkMode = useAppSelector(selectDarkMode);\n  // const apiUserKey = useAppSelector((state) => state.appData.secure);\n  const dispatch = useAppDispatch();\n\n  const passwordRef = React.useRef(null);\n\n  const handleLogin = async () => {\n    Keyboard.dismiss();\n\n    // Check for internet connection\n    const netInfo = await NetInfo.fetch();\n    if (!netInfo.isConnected) {\n      setLoginError('No internet connection');\n      return;\n    }\n\n    // Validate input\n    if (!userName) {\n      setLoginError(\"Username can't be empty\");\n    } else if (!password) {\n      setLoginError(\"Password can't be empty\");\n    } else {\n      try {\n        const { userKey } = await login({\n          userName,\n          password\n        }).unwrap();\n        // Save user key and data to redux store\n        dispatch(userKeyUpdated(userKey));\n        dispatch(setIsGuest(false));\n\n        // Get current section\n        const allSections = await getAllSections().unwrap();\n\n        dispatch(currentSectionUpdated(allSections.currentTerm));\n        dispatch(availableSectionsListUpdated(allSections.availableTerms));\n\n        // Get user info\n        getUserInfo(userKey)\n          .unwrap()\n          .then(async () => {\n            await trackLogin(userKey);\n          });\n\n        // Reset login form\n        setUserName('');\n        setPassword('');\n        setLoginError('');\n      } catch (e) {\n        setLoginError('Invalid username or password');\n        console.error('Failed to Login: ', e);\n      }\n    }\n  };\n\n  const guestLogin = async () => {\n    Keyboard.dismiss();\n\n    // Check for internet connection\n    const netInfo = await NetInfo.fetch();\n    if (!netInfo.isConnected) {\n      setLoginError('No internet connection');\n      return;\n    }\n\n    try {\n      const { userKey } = await login({\n        userName: '',\n        password: '',\n        isGuest: true\n      }).unwrap();\n      // Save user key and data to redux store\n      dispatch(userKeyUpdated(userKey));\n      dispatch(setIsGuest(true));\n\n      // Get user info\n      getUserInfo(userKey)\n        .unwrap()\n        .then(async () => {\n          await trackLogin(userKey);\n        });\n\n      // Reset login form\n      setUserName('');\n      setPassword('');\n      setLoginError('');\n    } catch (e) {\n      setLoginError('Invalid username or password');\n      console.error('Failed to Login: ', e);\n    }\n  };\n\n  return (\n    <TouchableWithoutFeedback\n      style={{ flex: 1 }}\n      onPress={() => {\n        Keyboard.dismiss();\n      }}\n    >\n      <KeyboardAvoidingView\n        style={styles.container}\n        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n      >\n        <Layout\n          style={{\n            flex: 1,\n            alignItems: 'center',\n            justifyContent: 'center'\n          }}\n        >\n          {darkMode ? (\n            <Image source={DarkModeLogo} style={styles.logo} />\n          ) : (\n            <Image source={LightModeLogo} style={styles.logo} />\n          )}\n\n          <Layout style={styles.inputView}>\n            <Input\n              autoCapitalize=\"none\"\n              status=\"control\"\n              autoComplete=\"username\"\n              style={styles.TextInput}\n              placeholder=\"username / email\"\n              placeholderTextColor=\"white\"\n              keyboardType=\"email-address\"\n              onChangeText={(userName) => setUserName(userName)}\n              value={userName}\n              onSubmitEditing={() => passwordRef.current.focus()}\n              blurOnSubmit={false}\n            />\n          </Layout>\n          <Layout style={styles.inputView}>\n            <Input\n              style={styles.TextInput}\n              autoComplete=\"password\"\n              placeholder=\"password\"\n              placeholderTextColor=\"white\"\n              secureTextEntry\n              onChangeText={(password) => setPassword(password)}\n              value={password}\n              ref={passwordRef}\n            />\n          </Layout>\n          <TouchableOpacity\n            onPress={() => {\n              navigation.navigate('ForgotPassword');\n            }}\n          >\n            <Text style={styles.forgot_button}>Forgot Password?</Text>\n          </TouchableOpacity>\n          {isLoading || loadingUserInfo ? (\n            <Layout\n              style={{ position: 'absolute', backgroundColor: 'transparent' }}\n            >\n              <Spinner />\n            </Layout>\n          ) : null}\n\n          <TouchableOpacity\n            style={styles.loginBtn}\n            onPress={() => {\n              handleLogin();\n            }}\n          >\n            <Text style={{ color: '#fff' }}>LOGIN</Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={{\n              width: '50%',\n              borderRadius: 25,\n              height: 40,\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginTop: 20,\n              backgroundColor: darkMode ? '#8b31e3' : 'rgb(98,111,187)',\n              maxWidth: 300\n            }}\n            onPress={() => {\n              guestLogin();\n            }}\n          >\n            <Text style={{ color: '#fff' }}>Try As Guest</Text>\n          </TouchableOpacity>\n          <Text style={styles.error}>{loginError}</Text>\n          <TouchableOpacity\n            style={{ width: '100%' }}\n            onPress={() => {\n              navigation.navigate('Signup');\n            }}\n          >\n            <Layout level=\"2\" style={styles.signupBtn}>\n              <Text>SIGN UP</Text>\n            </Layout>\n          </TouchableOpacity>\n        </Layout>\n      </KeyboardAvoidingView>\n    </TouchableWithoutFeedback>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  image: {\n    marginBottom: 40\n  },\n\n  inputView: {\n    flexDirection: 'row',\n    height: 40,\n    marginTop: 20,\n    marginLeft: 50,\n    marginRight: 50,\n    margin: 10\n  },\n\n  TextInput: {\n    backgroundColor: '#b42bba',\n    borderColor: '#b42bba',\n    color: '#fff',\n    borderWidth: 1,\n    borderRadius: 30,\n    width: '100%',\n    maxWidth: 300\n  },\n\n  forgot_button: {\n    height: 30,\n    marginBottom: 30\n  },\n\n  loginBtn: {\n    width: '80%',\n    borderRadius: 25,\n    height: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 10,\n    backgroundColor: '#ff3f5e',\n    maxWidth: 300\n  },\n  guestButton: {\n    width: '60%',\n    borderRadius: 25,\n    height: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 20\n  },\n  signupBtn: {\n    marginTop: 60,\n    width: '100%',\n    height: 50,\n    alignItems: 'center',\n    alignSelf: 'center',\n    justifyContent: 'center',\n    maxWidth: 800\n  },\n  error: {\n    color: 'red',\n    fontSize: 15\n  },\n  logo: {\n    width: 178,\n    height: 197,\n    marginBottom: 20\n  }\n});\n","import {\n  CheckBox,\n  IndexPath,\n  Input,\n  Layout,\n  Select,\n  SelectItem,\n  Spinner,\n  Text\n} from '@ui-kitten/components';\nimport React, { useRef, useState } from 'react';\nimport {\n  Keyboard,\n  KeyboardAvoidingView,\n  Platform,\n  ScrollView,\n  StyleSheet,\n  TouchableOpacity\n} from 'react-native';\n\nimport { userKeyUpdated } from '../../../app/appDataSlice';\nimport { useAppDispatch } from '../../../app/hooks';\nimport { base_URL } from '../../../constants/admin';\nimport {\n  useGetCollegeListQuery,\n  useSignupUserMutation\n} from '../../api/usersApi';\n\nfunction Signup({ navigation }) {\n  const [realFirstName, setRealFirstName] = useState('');\n  const [realLastName, setRealLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [major, setMajor] = useState('');\n  const dispatch = useAppDispatch();\n  const [selectedIndex, setSelectedIndex] = useState(new IndexPath(0));\n  const [simplifiedSignup, setSimplifiedSignUp] = useState(false);\n  const [userCollege, setUserCollege] = useState({\n    collegeName: '',\n    humanReadableCollegeName: null\n  });\n\n  const { data: collegeList } = useGetCollegeListQuery();\n  const [signupUser, { isLoading: signupLoading }] = useSignupUserMutation();\n\n  const firstNameInputRef = useRef<Input>();\n  const lastNameInputRef = useRef<Input>();\n  const passwordInputRef = useRef<Input>();\n  const majorInputRef = useRef<Input>();\n\n  const validateInput = () => {\n    if (!simplifiedSignup) {\n      if (!realFirstName) {\n        alert('Please fill First Name');\n        return false;\n      }\n      if (!realLastName) {\n        alert('Please fill Last Name');\n        return false;\n      }\n\n      if (!userCollege.collegeName) {\n        alert('Please fill College Name');\n        return false;\n      }\n\n      if (!major) {\n        alert('Please fill Major');\n        return false;\n      }\n    }\n\n    if (!email) {\n      alert('Please fill Email');\n      return false;\n    }\n\n    if (!password) {\n      alert('Please fill Password');\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleSubmitButton = async () => {\n    if (validateInput()) {\n      try {\n        const body = {\n          email,\n          password,\n          realFirstName,\n          realLastName,\n          collegeName: userCollege.collegeName,\n          major\n        };\n\n        // Uncomment this stuff when we get the email working again\n        // await signupUser(body).unwrap();\n        // navigation.navigate('VerifyEmail');\n        const response = await fetch(`${base_URL}/users/noEmailUserCreation`, {\n          method: 'POST',\n          headers: {\n            'content-type': 'application/json'\n          },\n          body: JSON.stringify(body)\n        });\n        if (response.ok) {\n          const responseUnwrapped = await response.json();\n          dispatch(userKeyUpdated(responseUnwrapped.password));\n          navigation.goBack();\n        } else {\n          throw `${(await response.json()).message}`;\n        }\n      } catch (e) {\n        console.warn('Signup error: ', e.message);\n      }\n    }\n  };\n\n  const renderCollegeDropDown = () => {\n    function handleSelection(index) {\n      setSelectedIndex(index);\n      const newObject = {\n        collegeName: collegeList[index.row].id,\n        humanReadableCollegeName: collegeList[index.row].label\n      };\n      setUserCollege(newObject);\n    }\n\n    return (\n      <Layout style={styles.containerDrop}>\n        <Select\n          placeholder=\"Choose A College\"\n          value={\n            !userCollege.humanReadableCollegeName\n              ? 'Selection'\n              : userCollege.humanReadableCollegeName\n          }\n          onFocus={Keyboard.dismiss}\n          selectedIndex={selectedIndex}\n          onSelect={handleSelection}\n        >\n          {collegeList &&\n            collegeList.map((college, index) => (\n              <SelectItem title={college.label} key={index} />\n            ))}\n        </Select>\n      </Layout>\n    );\n  };\n\n  const fields = [];\n  fields.push(\n    <Layout key=\"1\">\n      <Layout style={styles.SectionStyle}>\n        <Layout style={styles.labelSection}>\n          <Text style={styles.label}>Email</Text>\n        </Layout>\n        <Input\n          style={styles.inputStyle}\n          onChangeText={(email) => setEmail(email)}\n          underlineColorAndroid=\"#f000\"\n          placeholder=\"Enter Email\"\n          placeholderTextColor=\"#8b9cb5\"\n          defaultValue=\"\"\n          autoCapitalize=\"none\"\n          returnKeyType=\"next\"\n          onSubmitEditing={() =>\n            passwordInputRef.current ? passwordInputRef.current.focus() : null\n          }\n          blurOnSubmit={false}\n        />\n      </Layout>\n      <Layout style={styles.SectionStyle}>\n        <Layout style={styles.labelSection}>\n          <Text style={styles.label}>Password</Text>\n        </Layout>\n        <Input\n          style={styles.inputStyle}\n          onChangeText={(password) => setPassword(password)}\n          underlineColorAndroid=\"#f000\"\n          placeholder=\"Enter Password\"\n          placeholderTextColor=\"#8b9cb5\"\n          defaultValue=\"\"\n          ref={passwordInputRef}\n          returnKeyType=\"next\"\n          secureTextEntry\n          onSubmitEditing={() =>\n            firstNameInputRef.current ? firstNameInputRef.current.focus() : null\n          }\n          blurOnSubmit={false}\n        />\n      </Layout>\n    </Layout>\n  );\n\n  if (!simplifiedSignup) {\n    fields.push(\n      <Layout key=\"2\">\n        <Layout style={styles.SectionStyle}>\n          <Layout style={styles.labelSection}>\n            <Text style={styles.label}>First Name</Text>\n          </Layout>\n          <Input\n            style={styles.inputStyle}\n            onChangeText={setRealFirstName}\n            ref={firstNameInputRef}\n            underlineColorAndroid=\"#f000\"\n            placeholder=\"Enter First Name\"\n            placeholderTextColor=\"#8b9cb5\"\n            defaultValue=\"\"\n            autoCapitalize=\"sentences\"\n            returnKeyType=\"next\"\n            onSubmitEditing={() =>\n              lastNameInputRef?.current\n                ? lastNameInputRef.current.focus()\n                : null\n            }\n            blurOnSubmit={false}\n          />\n        </Layout>\n\n        <Layout style={styles.SectionStyle}>\n          <Layout style={styles.labelSection}>\n            <Text style={styles.label}>Last Name</Text>\n          </Layout>\n          <Input\n            style={styles.inputStyle}\n            onChangeText={setRealLastName}\n            underlineColorAndroid=\"#f000\"\n            placeholder=\"Enter Last Name\"\n            placeholderTextColor=\"#8b9cb5\"\n            defaultValue=\"\"\n            ref={lastNameInputRef}\n            autoCapitalize=\"sentences\"\n            returnKeyType=\"next\"\n            onSubmitEditing={() =>\n              majorInputRef.current ? majorInputRef.current.focus() : null\n            }\n            blurOnSubmit={false}\n          />\n        </Layout>\n\n        <Layout style={styles.SectionStyle}>\n          <Layout style={styles.labelSection}>\n            <Text style={styles.label}>Intended Major</Text>\n          </Layout>\n          <Input\n            style={styles.inputStyle}\n            onChangeText={setMajor}\n            underlineColorAndroid=\"#f000\"\n            placeholder=\"Enter Intended Major\"\n            placeholderTextColor=\"#8b9cb5\"\n            defaultValue=\"\"\n            ref={majorInputRef}\n            blurOnSubmit\n          />\n        </Layout>\n\n        <Layout style={styles.SectionStyle}>\n          <Layout style={styles.labelSection}>\n            <Text style={styles.label}>College Name</Text>\n          </Layout>\n          {renderCollegeDropDown()}\n        </Layout>\n      </Layout>\n    );\n  }\n\n  return (\n    // Registration Page\n    <Layout style={{ flex: 1 }}>\n      <ScrollView style={{ flex: 1 }}>\n        {/* Spinner */}\n        {signupLoading && (\n          <Layout\n            style={{\n              flex: 1,\n              position: 'absolute',\n              zIndex: 1,\n              top: '50%',\n              left: '50%',\n              backgroundColor: 'transparent'\n            }}\n          >\n            <Spinner />\n          </Layout>\n        )}\n\n        <Layout style={{ paddingVertical: 30, paddingHorizontal: 40 }}>\n          <CheckBox\n            checked={simplifiedSignup}\n            onChange={(nextChecked) => setSimplifiedSignUp(nextChecked)}\n          >\n            Simplified Signup\n          </CheckBox>\n        </Layout>\n\n        <KeyboardAvoidingView\n          style={{ flex: 1 }}\n          behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n        >\n          {fields}\n\n          <TouchableOpacity\n            style={styles.buttonStyle}\n            onPress={handleSubmitButton}\n          >\n            <Text style={styles.buttonTextStyle}>Register</Text>\n          </TouchableOpacity>\n        </KeyboardAvoidingView>\n      </ScrollView>\n    </Layout>\n  );\n}\nexport default Signup;\n\nconst styles = StyleSheet.create({\n  SectionStyle: {\n    flexDirection: 'row',\n    height: 40,\n    marginTop: 20,\n    marginLeft: 35,\n    marginRight: 35,\n    margin: 10\n  },\n  buttonStyle: {\n    backgroundColor: '#b42bba',\n    borderWidth: 0,\n    color: '#FFFFFF',\n    borderColor: '#7DE24E',\n    height: 40,\n    alignItems: 'center',\n    borderRadius: 30,\n    marginLeft: 35,\n    marginRight: 35,\n    marginTop: 20,\n    marginBottom: 20\n  },\n  buttonTextStyle: {\n    color: '#FFFFFF',\n    paddingVertical: 10,\n    fontSize: 16\n  },\n  inputStyle: {\n    flex: 1,\n    paddingLeft: 15,\n    paddingRight: 15,\n    borderWidth: 1,\n    borderRadius: 30,\n    borderColor: '#dadae8'\n  },\n  errorTextStyle: {\n    color: 'red',\n    textAlign: 'center',\n    fontSize: 14\n  },\n  successTextStyle: {\n    color: 'black',\n    textAlign: 'center',\n    fontSize: 18,\n    padding: 30\n  },\n  label: {\n    textAlign: 'center',\n    fontSize: 15,\n    paddingLeft: 10,\n    paddingRight: 10\n  },\n  labelSection: {\n    justifyContent: 'center'\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center'\n  },\n\n  text: {\n    fontSize: 20,\n    margin: 20\n  },\n  input: {\n    width: '80%',\n    margin: 20,\n    borderWidth: 1,\n    borderColor: 'black',\n    borderRadius: 20,\n    height: 40,\n    padding: 10\n  },\n  button: {\n    width: '80%',\n    margin: 20,\n    alignItems: 'center',\n    backgroundColor: '#b42bba',\n    height: 40,\n    borderRadius: 20,\n    borderColor: '#b42bba',\n    justifyContent: 'center'\n  },\n  buttonText: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: 'white'\n  },\n  containerDrop: {\n    minHeight: 128,\n    minWidth: 200\n  }\n});\n","import { Layout, Text, Input, Spinner } from '@ui-kitten/components';\nimport React from 'react';\nimport { StyleSheet, TouchableOpacity } from 'react-native';\n\nimport { userKeyUpdated } from '../../../app/appDataSlice';\nimport { useAppDispatch } from '../../../app/hooks';\nimport {\n  useVerifySignupMutation,\n  useLazyGetUserInfoQuery\n} from '../../api/usersApi';\n\nexport default function VerifyEmail() {\n  const [verificationCode, setVerificationCode] = React.useState('');\n  const [verifyCode, { isError }] = useVerifySignupMutation();\n  const [getUserInfo, { isLoading: getUserInfoLoading }] =\n    useLazyGetUserInfoQuery();\n  const dispatch = useAppDispatch();\n\n  const handleVerifyCodeButton = async () => {\n    try {\n      const { password } = await verifyCode(verificationCode).unwrap();\n      dispatch(userKeyUpdated(password));\n      await getUserInfo(password).unwrap();\n    } catch (error) {\n      console.warn(\"Couldn't verify code\", error);\n    }\n  };\n\n  return (\n    <Layout style={styles.container}>\n      <Text style={styles.text}>\n        A verification code has been sent to your email. Please check your email\n        and enter the code below.\n      </Text>\n      {getUserInfoLoading && <Spinner />}\n      {isError && <Text>Error verifying code</Text>}\n      <Input\n        style={styles.input}\n        placeholder=\"Verification Code\"\n        keyboardType=\"numeric\"\n        onChangeText={(text) => setVerificationCode(text)}\n      />\n      <TouchableOpacity style={styles.button} onPress={handleVerifyCodeButton}>\n        <Text style={styles.buttonText}>Finish Signup</Text>\n      </TouchableOpacity>\n    </Layout>\n  );\n}\n\nconst styles = StyleSheet.create({\n  SectionStyle: {\n    flexDirection: 'row',\n    height: 40,\n    marginTop: 20,\n    marginLeft: 35,\n    marginRight: 35,\n    margin: 10\n  },\n  buttonStyle: {\n    backgroundColor: '#b42bba',\n    borderWidth: 0,\n    color: '#FFFFFF',\n    borderColor: '#7DE24E',\n    height: 40,\n    alignItems: 'center',\n    borderRadius: 30,\n    marginLeft: 35,\n    marginRight: 35,\n    marginTop: 20,\n    marginBottom: 20\n  },\n  buttonTextStyle: {\n    color: '#FFFFFF',\n    paddingVertical: 10,\n    fontSize: 16\n  },\n  inputStyle: {\n    flex: 1,\n    color: 'black',\n    paddingLeft: 15,\n    paddingRight: 15,\n    borderWidth: 1,\n    borderRadius: 30,\n    borderColor: '#dadae8'\n  },\n  errorTextStyle: {\n    color: 'red',\n    textAlign: 'center',\n    fontSize: 14\n  },\n  successTextStyle: {\n    color: 'black',\n    textAlign: 'center',\n    fontSize: 18,\n    padding: 30\n  },\n  description: {\n    color: 'black',\n    textAlign: 'center',\n    fontSize: 18,\n    padding: 30\n  },\n  label: {\n    color: 'black',\n    textAlign: 'center',\n    fontSize: 15,\n    paddingLeft: 10,\n    paddingRight: 10\n  },\n  labelSection: {\n    justifyContent: 'center'\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center'\n  },\n\n  text: {\n    fontSize: 20,\n    margin: 20\n  },\n  input: {\n    width: '80%',\n    margin: 20,\n    borderWidth: 1,\n    borderColor: 'black',\n    borderRadius: 20,\n    height: 40,\n    padding: 10\n  },\n  button: {\n    width: '80%',\n    margin: 20,\n    alignItems: 'center',\n    backgroundColor: '#b42bba',\n    height: 40,\n    borderRadius: 20,\n    borderColor: '#b42bba',\n    justifyContent: 'center'\n  },\n  buttonText: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: 'white'\n  },\n  containerDrop: {\n    minHeight: 128,\n    minWidth: 200\n  }\n});\n","import { HeaderBackButton } from '@react-navigation/elements';\nimport { Platform } from 'react-native';\n\nexport default function BackButton({ navigation, ...props }) {\n  return (\n    <HeaderBackButton\n      {...props}\n      onPress={navigation.goBack}\n      label=\"Back\"\n      labelVisible={Platform.OS === 'ios'}\n    />\n  );\n}\n","import { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { useTheme } from '@ui-kitten/components';\n\nimport SignupForm from './SignupForm';\nimport VerifyEmail from './VerifyEmail';\nimport { selectDarkMode } from '../../../app/appDataSlice';\nimport { useAppSelector } from '../../../app/hooks';\nimport BackButton from '../../../components/BackButton';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function Signup() {\n  const theme = useTheme();\n  const darkMode = useAppSelector(selectDarkMode);\n\n  return (\n    <Stack.Navigator\n      screenOptions={({ navigation }) => ({\n        headerStyle: {\n          backgroundColor: darkMode ? theme['color-basic-800'] : '#fff'\n        },\n        headerLeft: (props) => <BackButton {...props} navigation={navigation} />\n      })}\n    >\n      <Stack.Screen\n        name=\"SignupForm\"\n        component={SignupForm}\n        options={{ title: 'Signup' }}\n      />\n      <Stack.Screen\n        name=\"VerifyEmail\"\n        component={VerifyEmail}\n        options={{ title: 'Verify Email' }}\n      />\n    </Stack.Navigator>\n  );\n}\n","import { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { useTheme } from '@ui-kitten/components';\n\nimport ForgotPassword from './ForgotPassword/index';\nimport Login from './Login';\nimport Signup from './Signup/index';\nimport { selectDarkMode } from '../../app/appDataSlice';\nimport { useAppSelector } from '../../app/hooks';\nimport BackButton from '../../components/BackButton';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function Auth() {\n  const theme = useTheme();\n  const darkMode = useAppSelector(selectDarkMode);\n\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerStyle: {\n          backgroundColor: darkMode ? theme['color-basic-800'] : '#fff'\n        }\n      }}\n    >\n      <Stack.Screen\n        name=\"Login\"\n        component={Login}\n        options={{ headerShown: false }}\n      />\n      <Stack.Screen\n        name=\"Signup\"\n        component={Signup}\n        options={{ headerShown: false }}\n      />\n      <Stack.Screen\n        name=\"ForgotPassword\"\n        component={ForgotPassword}\n        options={{ title: 'Reset Password' }}\n      />\n    </Stack.Navigator>\n  );\n}\n","import { Button, Icon, Layout, Text, useTheme } from '@ui-kitten/components';\nimport Modal from 'react-native-modal';\n\nimport { selectDarkMode } from '../app/appDataSlice';\nimport { useAppSelector } from '../app/hooks';\n\ntype ModalContainerProps = {\n  children: React.ReactNode;\n  backDropVisible: boolean;\n  setBackDropVisible: React.Dispatch<React.SetStateAction<boolean>>;\n  title: string;\n  clickBackdropToClose?: boolean;\n  modalStyle?: any;\n  modalProps?: any;\n};\n\nexport default function ModalContainer({\n  children,\n  backDropVisible,\n  setBackDropVisible,\n  title,\n  clickBackdropToClose = true,\n  modalStyle,\n  modalProps\n}: ModalContainerProps) {\n  const theme = useTheme();\n  const darkMode = useAppSelector(selectDarkMode);\n\n  return (\n    <Modal\n      backdropOpacity={0}\n      onBackdropPress={\n        clickBackdropToClose ? () => setBackDropVisible(false) : undefined\n      }\n      isVisible={backDropVisible}\n      style={[\n        {\n          backgroundColor: darkMode\n            ? theme['color-basic-900']\n            : theme['color-basic-50'],\n          borderRadius: 20,\n          flex: 1,\n          marginTop: 300,\n          marginBottom: 50,\n          width: '90%',\n          maxWidth: 500,\n          alignSelf: 'center',\n          shadowColor: '#000',\n          shadowOffset: {\n            width: 0,\n            height: 12\n          },\n          shadowOpacity: 0.58,\n          shadowRadius: 16.0,\n\n          elevation: 11\n        },\n        modalStyle\n      ]}\n      {...modalProps}\n    >\n      <Layout\n        style={{\n          flex: 1,\n          alignItems: 'center',\n          borderRadius: 20,\n          backgroundColor: darkMode\n            ? theme['color-basic-900']\n            : theme['color-basic-100']\n        }}\n      >\n        <Button\n          appearance=\"ghost\"\n          style={{\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            flex: 1,\n            borderRadius: 20\n          }}\n          accessoryRight={(props) => (\n            <Icon pack=\"fontAwesome\" name=\"angle-down\" {...props} />\n          )}\n          onPress={() => setBackDropVisible(false)}\n        />\n        <Text category=\"h5\" style={{ marginVertical: 15 }}>\n          {title}\n        </Text>\n        {children}\n      </Layout>\n    </Modal>\n  );\n}\n","import {\n  IndexPath,\n  Layout,\n  Select,\n  SelectItem,\n  Text\n} from '@ui-kitten/components';\nimport React, { useState } from 'react';\nimport { TouchableOpacity } from 'react-native';\n\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { useLazyGetAllClassesQuery } from '../api/classPagesApi';\nimport { usersApiSlice } from '../api/usersApi';\nimport { currentSectionUpdated } from './classPagesSlice';\n\nexport default function SelectTerm({ navigation }) {\n  const dispatch = useAppDispatch();\n\n  const availableSections = useAppSelector(\n    (state) => state.appData.classPages.availableSections\n  );\n  const userKey = useAppSelector((state) => state.appData.secure.userKey);\n  const currentSection = useAppSelector(\n    (state) => state.appData.classPages.currentSection\n  );\n\n  const { data: userDataCache } =\n    usersApiSlice.endpoints.getUserInfo.useQueryState(userKey, {\n      skip: !userKey\n    });\n  const [getAllClasses] = useLazyGetAllClassesQuery();\n\n  const startIndexValue =\n    availableSections.findIndex((term) => term == currentSection) || 0;\n\n  const [selectedSectionIndex, setSelectedSectionIndex] = useState<IndexPath>(\n    new IndexPath(startIndexValue)\n  );\n\n  const saveChanges = () => {\n    if (availableSections[selectedSectionIndex.row] !== currentSection) {\n      try {\n        getAllClasses({\n          userKey,\n          collegeName: userDataCache.collegeName,\n          courseTerm: availableSections[selectedSectionIndex.row]\n        }).unwrap();\n\n        dispatch(\n          currentSectionUpdated(availableSections[selectedSectionIndex.row])\n        );\n      } catch (e) {\n        console.warn('Changing section: could not fetch classes', e);\n      }\n    }\n\n    navigation.goBack();\n  };\n\n  return (\n    <Layout style={{ flex: 1 }}>\n      <Layout\n        style={{\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          margin: 20,\n          marginTop: 60\n        }}\n      >\n        <TouchableOpacity\n          onPress={() => {\n            navigation.goBack();\n          }}\n        >\n          <Text>Cancel</Text>\n        </TouchableOpacity>\n\n        <Text category=\"s1\">Select Term</Text>\n\n        <TouchableOpacity onPress={saveChanges}>\n          <Text>Save</Text>\n        </TouchableOpacity>\n      </Layout>\n\n      <Select\n        style={{ margin: 20 }}\n        label=\"Term\"\n        value={availableSections[selectedSectionIndex.row]}\n        selectedIndex={selectedSectionIndex}\n        onSelect={(index: IndexPath) => {\n          setSelectedSectionIndex(index);\n        }}\n      >\n        {availableSections.map((term, index) => (\n          <SelectItem key={index} title={term} />\n        ))}\n      </Select>\n    </Layout>\n  );\n}\n","import { apiSlice } from '../api/apiSlice';\n\nexport const base_URL = 'https://api.athenaserver.com:5678/api';\n","import { Layout, Text } from '@ui-kitten/components';\n\nexport default function Message({ title, item }) {\n  return (\n    <Layout\n      style={{\n        flex: 1,\n        marginTop: 10,\n        alignItems: 'center',\n        backgroundColor: 'transparent'\n      }}\n    >\n      <Text style={{ margin: 20, color: '#fff' }}>{title}</Text>\n      {item}\n    </Layout>\n  );\n}\n","import { Button, Icon, Input, Layout, useTheme } from '@ui-kitten/components';\nimport { useState } from 'react';\nimport { Keyboard, LayoutAnimation, TouchableOpacity } from 'react-native';\n\nimport { selectDarkMode } from '../app/appDataSlice';\nimport { useAppSelector } from '../app/hooks';\n\ntype SearchBarProps = {\n  onChangeText: (text: string) => void;\n  searchTerm: string;\n  placeholder?: string;\n  accessoryLeft?: any;\n  inputProps?: any;\n  inputStyle?: any;\n  inputRef?: any;\n  cancelButtonAction?: () => void;\n  onSubmitEditing?: () => void;\n  showCancelButton?: boolean;\n  alwaysShowCancelButton?: boolean;\n  cancelButtonStatus?:\n    | 'basic'\n    | 'primary'\n    | 'success'\n    | 'info'\n    | 'warning'\n    | 'danger';\n};\n\nexport default function SearchBar({\n  onChangeText,\n  searchTerm,\n  accessoryLeft,\n  placeholder,\n  inputRef,\n  inputStyle,\n  inputProps,\n  cancelButtonAction = () => {},\n  onSubmitEditing = () => {},\n  cancelButtonStatus = 'warning',\n  showCancelButton = true,\n  alwaysShowCancelButton = false\n}: SearchBarProps) {\n  const [selected, setSelected] = useState(false);\n  const [searchbarWidth, setSearchbarWidth] = useState(0);\n\n  const darkMode = useAppSelector(selectDarkMode);\n  const theme = useTheme();\n\n  const select = () => {\n    setSelected(true);\n    if (!alwaysShowCancelButton) {\n      LayoutAnimation.configureNext(\n        LayoutAnimation.create(100, 'linear', 'scaleX')\n      );\n    }\n  };\n\n  const deselect = () => {\n    setSelected(false);\n    if (!alwaysShowCancelButton) {\n      LayoutAnimation.configureNext(\n        LayoutAnimation.create(100, 'linear', 'opacity')\n      );\n    }\n  };\n\n  const getPlaceHolderText = () => {\n    if (searchbarWidth < 200) {\n      return '';\n    }\n    if (searchbarWidth < 300) {\n      return 'Search';\n    }\n    return placeholder;\n  };\n\n  return (\n    <Layout\n      style={{\n        backgroundColor: 'transparent',\n        flexDirection: 'row'\n      }}\n      onLayout={(event) => {\n        setSearchbarWidth(event.nativeEvent.layout.width);\n      }}\n    >\n      {accessoryLeft}\n\n      <Input\n        style={{\n          ...inputStyle,\n          borderRadius: 20,\n          flex: 1,\n          borderWidth: 1,\n          borderColor: darkMode\n            ? theme['color-basic-500']\n            : theme['color-basic-100']\n        }}\n        placeholderTextColor={theme['color-basic-500']}\n        // accessoryRight={\n        //   selected && searchTerm.length > 0\n        //     ? (props) => (\n        //         <TouchableOpacity onPress={() => onChangeText('')}>\n        //           <Icon {...props} name=\"times\" pack=\"fontAwesome\" />\n        //         </TouchableOpacity>\n        //       )\n        //     : null\n        // }\n        onFocus={select}\n        onBlur={deselect}\n        placeholder={getPlaceHolderText()}\n        value={searchTerm}\n        onChangeText={(text) => {\n          onChangeText(text);\n        }}\n        onSubmitEditing={onSubmitEditing}\n        ref={inputRef}\n        autoCorrect={false}\n        {...inputProps}\n      />\n\n      {showCancelButton && (alwaysShowCancelButton || selected) ? (\n        <Button\n          size=\"small\"\n          status={cancelButtonStatus}\n          appearance=\"ghost\"\n          onPress={() => {\n            console.log('cancel button pressed');\n            cancelButtonAction();\n            Keyboard.dismiss();\n          }}\n        >\n          {/* <Icon name=\"times\" pack=\"fontAwesome\" /> */}\n          Cancel\n        </Button>\n      ) : null}\n    </Layout>\n  );\n}\n","export const RENDERED_RESULTS_LIMIT = 10;\nexport const NEW_REVIEW_FIELDS = [\n  {\n    label: 'Professor',\n    id: 'professor',\n    mandatory: false,\n    type: 'DropDown',\n    options: []\n  },\n  {\n    label: 'Grade',\n    id: 'grade',\n    type: 'DropDown',\n    mandatory: false,\n    options: [\n      {\n        label: 'A+',\n        id: 'A'\n      },\n      {\n        label: 'A',\n        id: 'A'\n      },\n      {\n        label: 'A-',\n        id: 'A'\n      },\n      {\n        label: 'B+',\n        id: 'B'\n      },\n      {\n        label: 'B',\n        id: 'B'\n      },\n      {\n        label: 'B-',\n        id: 'B'\n      },\n      {\n        label: 'C+',\n        id: 'C'\n      },\n      {\n        label: 'C',\n        id: 'C'\n      },\n      {\n        label: 'C-',\n        id: 'C'\n      },\n      {\n        label: 'D+',\n        id: 'D'\n      },\n      {\n        label: 'D',\n        id: 'D'\n      },\n      {\n        label: 'D-',\n        id: 'D'\n      },\n      {\n        label: 'F+',\n        id: 'F'\n      },\n      {\n        label: 'F',\n        id: 'F'\n      },\n      {\n        label: 'F-',\n        id: 'F'\n      }\n    ]\n  },\n  {\n    label: 'Time Spent in Hours (ie: 7)',\n    id: 'timeSpent',\n    mandatory: false,\n    type: 'String'\n  }\n];\n","import { Entypo, Ionicons } from '@expo/vector-icons';\nimport { BottomSheetMethods } from '@gorhom/bottom-sheet/lib/typescript/types';\nimport { useNavigation } from '@react-navigation/native';\nimport { Divider, Layout, Text, useTheme } from '@ui-kitten/components';\nimport React from 'react';\nimport { Platform, TouchableOpacity, useWindowDimensions } from 'react-native';\nimport DraggableFlatList, {\n  RenderItemParams,\n  ScaleDecorator\n} from 'react-native-draggable-flatlist';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { classSelected } from './classPagesSlice';\n\ntype AddedClassesProps = {\n  setAddedClassesVisible: (visible: boolean) => void;\n  addedClasses: string[];\n  handleRemoveClass: (courseCode: string, masterCourseCode: string) => void;\n  darkMode: boolean;\n  handleSwapAddedClasses: (from: number, to: number) => void;\n  bottomSheetRef: React.MutableRefObject<BottomSheetMethods>;\n};\n\ntype AddedClassListing = [\n  masterCourseCode: string,\n  courseCode: string,\n  courseName: string\n];\n\nexport default function AddedClasses({\n  setAddedClassesVisible,\n  addedClasses,\n  handleRemoveClass,\n  darkMode,\n  handleSwapAddedClasses,\n  bottomSheetRef\n}: AddedClassesProps) {\n  const navigation = useNavigation();\n  const dispatch = useAppDispatch();\n  const theme = useTheme();\n  const windowHeight = useWindowDimensions().height;\n\n  const isHMC = useAppSelector((state) => state.appData.classPages.isHMC);\n  const totalCredits = useAppSelector(\n    (state) => state.appData.classPages.totalCredits\n  );\n  const allClassesList = useAppSelector(\n    (state) => state.appData.classPages.classes\n  );\n\n  const addedClassesList: AddedClassListing[] = addedClasses.map(\n    (courseCode) => {\n    try {\n\n      const courseCodeParts = courseCode.split('-');\n      const masterCourseCode = courseCodeParts\n        .slice(0, courseCodeParts.length - 1)\n        .join('-');\n      const { courseName } = allClassesList[masterCourseCode];\n      return [masterCourseCode, courseCode, courseName] as AddedClassListing;\n    }\n    catch (e) {\n      console.warn(\"Error finding added class\", courseCode, e)\n    }\n    }\n  );\n\n  function handleClassSelected(courseCode: string) {\n    dispatch(classSelected(courseCode));\n    setAddedClassesVisible(false);\n    if (Platform.OS === 'web') {\n      navigation.navigate('SingleClassPage');\n    } else {\n      bottomSheetRef.current?.snapToIndex(0);\n    }\n  }\n\n  const renderItem = ({\n    item: [masterCourseCode, courseCode, courseName],\n    drag,\n    isActive,\n    getIndex\n  }: RenderItemParams<AddedClassListing>) => {\n    return (\n      <ScaleDecorator>\n        <Layout\n          style={{\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            paddingVertical: 7,\n            paddingHorizontal: 10,\n            backgroundColor: isActive ? 'lightblue' : 'transparent'\n            // ? theme['color-basic-900']\n            // : theme['color-basic-100']\n          }}\n        >\n          <Layout\n            style={{ flexDirection: 'row', backgroundColor: 'transparent' }}\n          >\n            <TouchableOpacity disabled={isActive} onLongPress={drag}>\n              <Ionicons name=\"reorder-three\" size={28} />\n            </TouchableOpacity>\n            <Layout style={{ backgroundColor: 'transparent' }}>\n              <TouchableOpacity\n                onPress={() => {\n                  handleClassSelected(courseCode.slice(0, -3));\n                }}\n              >\n                <Text category=\"s1\">{courseName}</Text>\n                <Text category=\"p2\">{courseCode}</Text>\n              </TouchableOpacity>\n            </Layout>\n          </Layout>\n\n          <TouchableOpacity\n            onPress={() => handleRemoveClass(courseCode, masterCourseCode)}\n          >\n            <Entypo name=\"cross\" size={28} color=\"red\" />\n          </TouchableOpacity>\n        </Layout>\n      </ScaleDecorator>\n    );\n  };\n\n  const renderFlatList = () => (\n    \n    <DraggableFlatList\n      contentContainerStyle={{ maxWidth: 500 }}\n      automaticallyAdjustsScrollIndicatorInsets\n      indicatorStyle={darkMode ? 'white' : 'black'}\n      showsVerticalScrollIndicator\n      ListEmptyComponent={\n        <Text style={{ margin: 10 }}>\n          No classes yet... Click the{' '}\n          <Text style={{ fontWeight: 'bold' }}>+</Text> next to a class to see\n          it here\n        </Text>\n      }\n      ItemSeparatorComponent={() => <Divider />}\n      data={addedClassesList}\n      onDragEnd={({ from, to }) => {\n        handleSwapAddedClasses(from, to);\n      }}\n      keyExtractor={(item) => item[1]}\n      renderItem={renderItem}\n    />\n  );\n\n  return (\n    <Layout\n      style={{\n        flex: Platform.OS === 'web' ? undefined : 1,\n        backgroundColor: darkMode\n          ? theme['color-basic-900']\n          : theme['color-basic-100']\n      }}\n    >\n      {totalCredits.credits > 0 && (\n        <Text style={{ textAlign: 'center' }}>\n          {`${\n            isHMC ? totalCredits.hmcCredits : totalCredits.credits\n          } Credit(s)`}\n        </Text>\n      )}\n      {Platform.OS === 'web' ? (\n        <Layout>{renderFlatList()}</Layout>\n      ) : (\n        <>{renderFlatList()}</>\n      )}\n    </Layout>\n  );\n}\n","import { FontAwesome, FontAwesome5 } from '@expo/vector-icons';\nimport { Layout, Text } from '@ui-kitten/components';\nimport { useRef } from 'react';\nimport { StyleSheet, Animated, TouchableOpacity, Platform } from 'react-native';\n\nexport default function ClassListItemItem({\n  courseCode,\n  seatsAvailable,\n  seatsFilled,\n  handleAddClass,\n  handleRemoveClass,\n  darkMode,\n  added,\n  masterCourseCode,\n  handleClassSelected\n}) {\n  const selectedAnim = useRef(new Animated.Value(1)).current;\n\n  return (\n    <TouchableOpacity\n      style={{ flex: 1 }}\n      onPress={() => {\n        handleClassSelected(masterCourseCode);\n      }}\n    >\n      <Layout style={styles.dropDownItem}>\n        <Text>{`\\u2022 ${courseCode}`}</Text>\n        <Text\n          style={seatsAvailable > 0 ? styles.isAvailable : styles.notAvailable}\n        >\n          {seatsFilled} /{seatsFilled + seatsAvailable}\n        </Text>\n        {/* Add / Remove Class */}\n        <TouchableOpacity\n          activeOpacity={1}\n          onPress={() => {\n            if (added) {\n              handleRemoveClass(courseCode, masterCourseCode);\n            } else {\n              handleAddClass(courseCode, masterCourseCode);\n            }\n            if (Platform.OS !== 'web') {\n              Animated.sequence([\n                Animated.spring(selectedAnim, {\n                  toValue: 0.0,\n                  speed: 16,\n                  useNativeDriver: true\n                })\n              ]).start(() => {\n                Animated.spring(selectedAnim, {\n                  toValue: 1,\n                  speed: 16,\n                  useNativeDriver: true\n                }).start();\n              });\n            }\n          }}\n        >\n          <Animated.View\n            style={{\n              width: 50,\n              alignItems: 'center',\n              transform: [\n                {\n                  scale: selectedAnim\n                }\n              ]\n            }}\n          >\n            <FontAwesome5\n              style={{ padding: 5 }}\n              size={24}\n              name={added ? 'times' : 'plus'}\n              color={darkMode ? 'white' : 'black'}\n            />\n          </Animated.View>\n        </TouchableOpacity>\n        {/* <FontAwesome\n          style={{ padding: 5 }}\n          size={24}\n          name={added ? 'star' : 'star-o'}\n          color={darkMode ? 'white' : 'black'}\n        /> */}\n      </Layout>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  list__container: {\n    margin: 10,\n    marginLeft: 0,\n    height: '90%',\n    width: '100%'\n  },\n  addedClassesContainer: {\n    position: 'absolute',\n    zIndex: 1,\n    width: '60%',\n    borderTopRightRadius: 20,\n    borderBottomRightRadius: 20,\n    borderColor: '#c2c2c2',\n    backgroundColor: '#f7f7f7',\n    paddingTop: 5,\n    borderTopWidth: 1.5,\n    borderBottomWidth: 1.5,\n    borderRightWidth: 1.5\n  },\n  addedClasses: {\n    position: 'absolute',\n    right: 3,\n    top: 3,\n    padding: 7,\n    margin: 5,\n    backgroundColor: '#c9c9c9',\n    borderRadius: 100\n  },\n  item: {\n    marginBottom: 10,\n    marginTop: 10\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 5\n  },\n  buttonContainer: {\n    right: 0,\n    position: 'absolute',\n    width: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%'\n  },\n  button: {\n    padding: 5,\n    borderColor: 'grey'\n  },\n  dropDown: {\n    backgroundColor: '#f7f7f7',\n    paddingLeft: 30,\n    paddingBottom: 10,\n    paddingTop: 10\n  },\n  dropDownItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    height: 54\n  },\n  isAvailable: {\n    color: 'green'\n  },\n  notAvailable: {\n    color: 'red'\n  },\n  loadingMessage: {\n    fontSize: 20,\n    color: 'white',\n    alignSelf: 'center',\n    fontStyle: 'italic'\n  },\n  loadingMessageRefresh: {\n    fontSize: 15,\n    paddingTop: 20,\n    color: 'white',\n    alignSelf: 'center',\n    fontWeight: 'bold'\n  },\n  filters: {\n    backgroundColor: 'white',\n    alignItems: 'center',\n    padding: 10\n  }\n});\n","import { FontAwesome5 } from '@expo/vector-icons';\nimport { Layout, Text } from '@ui-kitten/components';\nimport { useMemo } from 'react';\nimport {\n  LayoutAnimation,\n  Platform,\n  StyleSheet,\n  TouchableOpacity,\n  UIManager\n} from 'react-native';\n\nimport ClassListItemItem from './ClassListItemItem';\n\nif (\n  Platform.OS === 'android' &&\n  UIManager.setLayoutAnimationEnabledExperimental\n) {\n  UIManager.setLayoutAnimationEnabledExperimental(true);\n}\n\nexport default function Item({\n  courseName,\n  masterCourseCode,\n  schedule,\n  menuOpen,\n  setIsMenuOpen,\n  darkMode,\n  handleClassSelected,\n  handleAddClass,\n  handleRemoveClass,\n  inItem\n}) {\n  const memoizedItem = useMemo(() => {\n    return (\n      <Layout\n        style={{\n          borderRadius: 20,\n          opacity: 1,\n          marginTop: 7,\n          marginRight: 9,\n          marginLeft: 9\n        }}\n      >\n        {/* Name and master coursecode */}\n        <Layout style={{ marginHorizontal: 20 }}>\n          <Layout>\n            <TouchableOpacity\n              onPress={() => {\n                handleClassSelected(masterCourseCode);\n              }}\n            >\n              <Layout style={styles.item}>\n                <Text style={styles.title}>{courseName}</Text>\n                <Text>{masterCourseCode}</Text>\n              </Layout>\n            </TouchableOpacity>\n\n            {/* Dropdown Menu Toggle */}\n            <TouchableOpacity\n              style={styles.buttonContainer}\n              onPress={() => {\n                if (menuOpen === masterCourseCode) {\n                  setIsMenuOpen('');\n                  LayoutAnimation.configureNext({\n                    duration: 730,\n                    create: { type: 'easeInEaseOut', property: 'opacity' },\n                    update: { type: 'spring', springDamping: 0.8 }\n                  });\n                } else {\n                  setIsMenuOpen(masterCourseCode);\n                  LayoutAnimation.configureNext({\n                    duration: Platform.OS === 'android' ? 500 : 730,\n                    create: { type: 'easeInEaseOut', property: 'opacity' },\n                    update: { type: 'spring', springDamping: 0.8 }\n                  });\n                }\n              }}\n            >\n              <Layout style={styles.button}>\n                <FontAwesome5\n                  name={\n                    menuOpen === masterCourseCode\n                      ? 'chevron-up'\n                      : 'chevron-down'\n                  }\n                  size={20}\n                  color={darkMode ? 'white' : 'black'}\n                />\n              </Layout>\n            </TouchableOpacity>\n          </Layout>\n\n          {/* Dropdown Menu */}\n          {menuOpen === masterCourseCode && (\n            <Layout>\n              {schedule.map(\n                ({ _id, courseCode, seatsAvailable, seatsFilled, added }) => (\n                  <ClassListItemItem\n                    key={_id}\n                    courseCode={courseCode}\n                    seatsAvailable={seatsAvailable}\n                    seatsFilled={seatsFilled}\n                    handleAddClass={handleAddClass}\n                    handleRemoveClass={handleRemoveClass}\n                    darkMode={darkMode}\n                    added={added}\n                    masterCourseCode={masterCourseCode}\n                    handleClassSelected={handleClassSelected}\n                  />\n                )\n              )}\n            </Layout>\n          )}\n        </Layout>\n      </Layout>\n    );\n  }, [menuOpen, inItem, darkMode]);\n\n  // useTraceUpdate(memoizedItem);\n  return memoizedItem;\n}\n\nconst styles = StyleSheet.create({\n  list__container: {\n    margin: 10,\n    marginLeft: 0,\n    height: '90%',\n    width: '100%'\n  },\n  addedClassesContainer: {\n    position: 'absolute',\n    zIndex: 1,\n    width: '60%',\n    borderTopRightRadius: 20,\n    borderBottomRightRadius: 20,\n    borderColor: '#c2c2c2',\n    backgroundColor: '#f7f7f7',\n    paddingTop: 5,\n    borderTopWidth: 1.5,\n    borderBottomWidth: 1.5,\n    borderRightWidth: 1.5\n  },\n  addedClasses: {\n    position: 'absolute',\n    right: 3,\n    top: 3,\n    padding: 7,\n    margin: 5,\n    backgroundColor: '#c9c9c9',\n    borderRadius: 100\n  },\n  item: {\n    marginBottom: 10,\n    marginTop: 10\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 5,\n    marginRight: 30\n  },\n  buttonContainer: {\n    right: 0,\n    position: 'absolute',\n    width: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%'\n  },\n  button: {\n    padding: 5,\n    borderColor: 'grey'\n  },\n  dropDown: {\n    backgroundColor: '#f7f7f7',\n    paddingLeft: 30,\n    paddingBottom: 10,\n    paddingTop: 10\n  },\n  dropDownItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    height: 54\n  },\n  isAvailable: {\n    color: 'green'\n  },\n  notAvailable: {\n    color: 'red'\n  },\n  loadingMessage: {\n    fontSize: 20,\n    color: 'white',\n    alignSelf: 'center',\n    fontStyle: 'italic'\n  },\n  loadingMessageRefresh: {\n    fontSize: 15,\n    paddingTop: 20,\n    color: 'white',\n    alignSelf: 'center',\n    fontWeight: 'bold'\n  },\n  addClassButton: {\n    padding: 15\n  },\n  filters: {\n    backgroundColor: 'white',\n    alignItems: 'center',\n    padding: 10\n  }\n});\n","import {\n  Button,\n  CheckBox,\n  Divider,\n  Layout,\n  Text,\n  Toggle,\n  useTheme\n} from '@ui-kitten/components';\nimport { useState } from 'react';\n\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport {\n  classPagesSlice,\n  filtersReset,\n  filtersSaved,\n  isHMCUpdated\n} from './classPagesSlice';\n\nexport default function FilterClasses({ darkMode, setFiltersMenuVisible }) {\n  const theme = useTheme();\n  const initialFilters = classPagesSlice.getInitialState().filters;\n  const filters = useAppSelector((state) => state.appData.classPages.filters);\n  const isHMC = useAppSelector((state) => state.appData.classPages.isHMC);\n\n  const [colleges, setColleges] = useState(filters.colleges);\n  const [filterConflicts, setFilterConflicts] = useState(\n    filters.filterConflicts\n  );\n\n  const dispatch = useAppDispatch();\n\n  const onChangeIsHMC = (change: boolean) => {\n    dispatch(isHMCUpdated(change));\n  };\n\n  const onChangeFilterCollege = (college: string, change: boolean) => {\n    setColleges({ ...colleges, [college]: change });\n  };\n\n  const resetFilters = () => {\n    setColleges(initialFilters.colleges);\n    setFilterConflicts(initialFilters.filterConflicts);\n    dispatch(filtersReset());\n  };\n\n  const saveFilters = () => {\n    dispatch(filtersSaved({ colleges, filterConflicts }));\n    setFiltersMenuVisible(false);\n  };\n\n  return (\n    <Layout\n      style={{\n        backgroundColor: darkMode\n          ? theme['color-basic-900']\n          : theme['color-basic-100'],\n        alignItems: 'center',\n        padding: 10\n      }}\n    >\n      <Layout\n        style={{\n          flexDirection: 'row',\n          justifyContent: 'center',\n          alignItems: 'center',\n          marginBottom: 10,\n          backgroundColor: darkMode\n            ? theme['color-basic-900']\n            : theme['color-basic-100']\n        }}\n      >\n        <Text>4C Credits </Text>\n        <Toggle\n          checked={isHMC}\n          onChange={(change) => {\n            onChangeIsHMC(change);\n          }}\n        />\n        <Text> HMC Credits</Text>\n      </Layout>\n      <Divider />\n\n      <CheckBox\n        style={{ marginTop: 20 }}\n        checked={filterConflicts}\n        onChange={(bool) => setFilterConflicts(bool)}\n      >\n        Filter Conflicting Classes\n      </CheckBox>\n\n      <Text style={{ marginTop: 20, marginBottom: 5 }}>Colleges</Text>\n\n      <Layout\n        style={{\n          flexDirection: 'row',\n          justifyContent: 'center',\n          alignItems: 'center'\n        }}\n      >\n        {Object.keys(colleges).map((college) => (\n          <CheckBox\n            style={{\n              backgroundColor: darkMode\n                ? theme['color-basic-900']\n                : theme['color-basic-100']\n            }}\n            key={college}\n            checked={colleges[college]}\n            onChange={(change) => {\n              onChangeFilterCollege(college, change);\n            }}\n          >\n            {college}\n          </CheckBox>\n        ))}\n      </Layout>\n      <Button style={{ marginTop: 20 }} onPress={saveFilters}>\n        Update Results\n      </Button>\n      <Button\n        size=\"small\"\n        style={{ marginTop: 20 }}\n        status=\"info\"\n        onPress={resetFilters}\n      >\n        Reset Filters\n      </Button>\n    </Layout>\n  );\n}\n","// This is going to take forever...\nimport { Region } from 'react-native-maps';\n\nexport const locations = {\n  ClaremontColleges: [34.10042611094802, -117.71002008183225],\n  'Steele Hall': [34.10484995720829, -117.71210324868221],\n  'Adams Hall': [32.76290904884907, -117.0662288298868],\n  'Andrew Building': [34.0998138672686, -117.7139029825534],\n  'Andrew Hall': [34.0998138672686, -117.7139029825534],\n  'Andrew Science Hall': [34.0998138672686, -117.7139029825534],\n  'Andrew Science Building': [34.0998138672686, -117.7139029825534],\n  'Hahn Social Science Bldg': [34.098126371324604, -117.71603190000098],\n  'Avery Hall': [34.10402559390241, -117.7059215470358],\n  'Bauer Center': [34.10625935916369, -117.70861091635064],\n  'Broad Center': [34.10494505589454, -117.70672332698616],\n  'Bernard Hall': [34.10435220581155, -117.70632440303753],\n  'Broad Hall': [34.10462192392436, -117.7058712693149],\n  'Beckman Hall': [34.106128887593115, -117.71251107536439],\n  'Balch Hall': [34.10345253373929, -117.71128438546123],\n  Brackett: [34.09834700926052, -117.71012299276501],\n  'Brackett Observatory': [34.09834700926052, -117.71012299276501],\n  'Baxter Hall': [34.10466728950935, -117.71187640303745],\n  'Biszantz Tennis Center': [34.10095490591795, -117.70630717402211],\n  'Carnegie Building': [34.09813556541387, -117.7153908567008],\n  Carnegie: [34.09813556541387, -117.7153908567008],\n  'Carnegie Bldg': [34.09813556541387, -117.7153908567008],\n  'Richardson Dance Studio': [34.10315111680064, -117.7099604470359],\n  Edmunds: [34.0998600356232, -117.71319481917635],\n  'Fletcher Hall': [34.104073077554126, -117.70639700470716],\n  'Galileo Hall': [34.10625489220558, -117.71180151450122],\n  'Honnold/Mudd Library': [34.10217613878248, -117.71228898240652],\n  Honnold: [34.10217613878248, -117.71228898240652],\n  'Claremont Colleges Library': [34.10217613878248, -117.71228898240652],\n  'Mudd Library': [34.10217613878248, -117.71228898240652],\n  'Humanities Building': [34.103735329211226, -117.71001297587144],\n  'Jacobs Science Center': [34.105831090704534, -117.7117513875151],\n  'Keck Laboratories': [34.09325008938014, -117.72347845495186],\n  'Keck Graduate Institute': [34.09325008938014, -117.72347845495186],\n  'Kravis Center': [34.10187820435941, -117.71108730125341],\n  'The Kravis Center': [34.10187820435941, -117.71108730125341],\n  'The Kravis Center LC': [34.10187820435941, -117.71108730125341],\n  'Kravis Center LC': [34.10187820435941, -117.71108730125341],\n  'Keck Science Center': [34.10308083314274, -117.70782900285776],\n  'Bridges Hall of Music': [34.09741077681766, -117.71380091635093],\n  'Lebus Court': [34.097133818486924, -117.7138019163509],\n  'LeBus Court': [34.097133818486924, -117.7138019163509],\n  Lincoln: [34.09436321343312, -117.71791431635106],\n  'McGregor CompSci Center': [34.105735661459065, -117.71277261820012],\n  'Mudd Science Library': [34.10235157034289, -117.71228630285779],\n  'Oldenborg Center': [34.0972862770658, -117.71197834518651],\n  Online: null,\n  'Parsons Engineering Building': [34.106763408455166, -117.71201133169328],\n  'Performing Arts Center': [34.103841861577266, -117.71263855867934],\n  PAC: [34.103841861577266, -117.71263855867934],\n  Pearsons: [34.09909136806275, -117.71531797402218],\n  'Pearsons Hall': [34.09909136806275, -117.71531797402218],\n  'Rains Center': [34.09962247726175, -117.7116976875152],\n  'Rembrandt Hall': [34.09714703734707, -117.71436354518652],\n  'Roberts North': [34.10243304031955, -117.71058173613733],\n  'Roberts South': [34.1018600288952, -117.7105736895106],\n  'Roberts Pavilion': [34.100334255091674, -117.70640981635093],\n  'Robert Redford Conservcy': [34.11077818412942, -117.71047418566549],\n  'Robert Redford Conservancy': [34.11077818412942, -117.71047418566549],\n  'Smith Campus Center': [34.09962026169959, -117.71350964518648],\n  'Seaver South Laboratory': [34.100042028976105, -117.71531142101722],\n  'Seaver North Laboratory': [34.100042028976105, -117.71531142101722],\n  'Seaman Hall': [34.10199315160771, -117.71010893169331],\n  'Shanahan Center': [34.10656042476094, -117.71087576052881],\n  'Drinkward Recital Hall': [34.10656042476094, -117.71087576052881],\n  Stauffer: [34.102953598099226, -117.71334231635072],\n  'Stauffer Hall': [34.102953598099226, -117.71334231635072],\n  'RC Seaver Biology Bldg': [34.10023161864675, -117.71627928465743],\n  'Seaver Biology Building': [34.10023161864675, -117.71627928465743],\n  'Seaver Theater': [34.096747978139696, -117.7104344010084],\n  'Seaver Theatre': [34.096747978139696, -117.7104344010084],\n  'Thatcher Music Bldg': [34.09754703461027, -117.71440025414981],\n  KSPC: [34.09754703461027, -117.71440025414981],\n  'Thatcher Music Building': [34.09754703461027, -117.71440025414981],\n  'Vita Nova Hall': [34.10300376863079, -117.70952371635069],\n  'Scott Hall': [34.104311246807875, -117.70661596406609],\n  TBD: null\n};\n\nexport const claremontRegion: Region = {\n  latitude: 34.1,\n  longitude: -117.71,\n  latitudeDelta: 0.015,\n  longitudeDelta: 0.015\n};\n\nexport const americaRegion: Region = {\n  latitude: 30.116386,\n  longitude: -97.299591,\n  latitudeDelta: 80,\n  longitudeDelta: 80\n};\n\nexport function removeNumbersAndSpaces(name: string): string {\n  let final = '';\n  for (const char of name) {\n    if (char.match(/[a-z]/i) || char === ' ') {\n      final += char;\n    }\n  }\n  return final.trim();\n}\n","import { Autocomplete, AutocompleteItem } from '@ui-kitten/components';\nimport { useEffect, useState } from 'react';\n\nimport { selectDarkMode, selectUserKey } from '../app/appDataSlice';\nimport { useAppSelector } from '../app/hooks';\nimport { base_URL } from '../features/notifications/constants';\n\n/**\n * Renders a dropdown with the names filtered as user types\n * @param setHasChosen set function of a useState which contains a boolean determining whether a user has been chosen\n * @param setRecipient set function of a useState which contains is either: 1. a string containing the userName of the user when one has been chosen, 2. null when a user has not been chosen\n * @constructor\n */\nexport default function UserNameSelectionDropDown({\n  setHasChosen,\n  setRecipient,\n  placeholder\n}) {\n  const userKey = useAppSelector(selectUserKey);\n  const darkMode = useAppSelector(selectDarkMode);\n  const [names, setNames] = useState([]); // filtered list of names\n  const [users, setUsers] = useState([]); // clean list of users\n  const [value, setValue] = useState(''); // typed name\n  const myStyles = {\n    modal: {\n      fontSize: 18,\n      paddingBottom: 20,\n      fontWeight: 'bold',\n      textAlign: 'center',\n      width: '100%',\n      color: darkMode ? 'rgb(255,255,255)' : 'rgb(0,0,0)'\n    },\n    backdrop: {\n      backgroundColor: darkMode ? 'rgba(141,141,141,0.5)' : 'rgba(0, 0, 0, 0.5)'\n    },\n    containerDrop: {\n      minWidth: 200,\n      paddingBottom: 15\n    }\n  };\n\n  useEffect(() => {\n    fetch(`${base_URL}/users/userNamesAndNames`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        userKey\n      }\n    }).then(async (data) => {\n      if (data.ok) {\n        const userList = await data.json();\n        setNames(\n          userList.map((user) => {\n            if (user) {\n              return `${user.realName} (${user.userName})`;\n            }\n          })\n        );\n        setUsers(userList);\n      }\n    });\n  }, []);\n\n  function renderEachDropItem() {\n    const final = [];\n    for (const option in names) {\n      final.push(<AutocompleteItem title={names[option]} key={option} />);\n    }\n    return final;\n  }\n\n  const onChangeText = (query) => {\n    setNames(\n      freshNames().filter(\n        (name) =>\n          name?.toLowerCase().includes(query.toLowerCase()) ||\n          userNameContainsString(name, query)\n      )\n    );\n    setValue(query);\n  };\n\n  function freshNames() {\n    return users.map((user) => {\n      if (user) {\n        return `${user.realName} (${user.userName})`;\n      }\n    });\n  }\n\n  const userNameContainsString = (name, query) => {\n    const user = users.find(\n      (auser) =>\n        auser?.userName.toLowerCase().includes(query.toLowerCase()) &&\n        auser?.realName === name\n    );\n    return user !== undefined;\n  };\n\n  function handleSelection(index) {\n    if (index === 0) {\n      setHasChosen(false);\n      setRecipient(null);\n      // @ts-ignore\n      setValue('');\n    } else {\n      setHasChosen(true);\n      setValue(names[index - 1]);\n      setRecipient(findUserNameFromName(names[index - 1]));\n    }\n  }\n\n  function findUserNameFromName(name) {\n    const firstPar = name.indexOf('(');\n    const secondPar = name.indexOf(')');\n    return name.slice(firstPar + 1, secondPar);\n  }\n\n  return (\n    <Autocomplete\n      style={myStyles.containerDrop}\n      value={value}\n      placeholder={placeholder ? 'Recipient' : null}\n      onChangeText={onChangeText}\n      onSelect={handleSelection}\n    >\n      <AutocompleteItem title={' '} />\n      {renderEachDropItem()}\n    </Autocomplete>\n  );\n}\n","import { FontAwesome5 } from '@expo/vector-icons';\nimport { Card, Modal, Text } from '@ui-kitten/components';\nimport React, { useState } from 'react';\nimport { Alert, Button, Platform, TouchableOpacity, View } from 'react-native';\n\nimport {\n  selectDarkMode,\n  selectIsGuest,\n  selectUserKey\n} from '../../../app/appDataSlice';\nimport { useAppSelector } from '../../../app/hooks';\nimport ModalContainer from '../../../components/ModalContainer';\nimport UserNameSelectionDropDown from '../../../components/UserNameSelectionDropDown';\nimport { useGetUserInfoQuery } from '../../api/usersApi';\nimport { base_URL } from '../../notifications/constants';\n\nexport default function ExportModalClass({ classData }) {\n  const isGuest = useAppSelector(selectIsGuest);\n  const [showGuestModal, setShowGuestModal] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [showWebModal, setShowWebModal] = useState(false);\n  const darkMode = useAppSelector(selectDarkMode);\n\n  return (\n    <View\n      style={{\n        marginRight: '7%',\n        flexDirection: 'column-reverse'\n      }}\n    >\n      <TouchableOpacity\n        onPress={() => {\n          if (isGuest) {\n            setShowGuestModal(true);\n          } else if (Platform.OS === 'web') {\n            setShowWebModal(true);\n          } else {\n            setShowModal(true);\n          }\n        }}\n        style={{\n          alignItems: 'center'\n        }}\n      >\n        <View\n          style={{\n            height: 45,\n            flexDirection: 'column',\n            justifyContent: 'center',\n            paddingLeft: 5\n          }}\n        >\n          <FontAwesome5\n            name=\"file-export\"\n            size={20}\n            color={darkMode ? 'white' : 'black'}\n          />\n        </View>\n        <Text style={{ marginTop: -10, fontSize: 10 }}>Share Class</Text>\n      </TouchableOpacity>\n      {showWebModal && (\n        <ModalContainer\n          title=\"Wait!\"\n          children={\n            <Text style={{ paddingHorizontal: 30 }}>\n              Sharing courses is not supported on the web. Download the app on\n              the App Store or Play Store to share courses.\n            </Text>\n          }\n          backDropVisible={showWebModal}\n          setBackDropVisible={setShowWebModal}\n        />\n      )}\n      {showGuestModal && (\n        <ModalContainer\n          title=\"Wait!\"\n          children={\n            <Text style={{ paddingHorizontal: 30 }}>\n              This feature is not available to Guest Users. Please create a free\n              account with us to take advantage this feature.\n            </Text>\n          }\n          backDropVisible={showGuestModal}\n          setBackDropVisible={setShowGuestModal}\n        />\n      )}\n      {renderModal(setShowModal, showModal, classData)}\n    </View>\n  );\n}\n\nfunction renderModal(setShowModal, showModal, classData: any) {\n  const { data: userData } = useGetUserInfoQuery(useAppSelector(selectUserKey));\n\n  const [value, setValue] = useState('');\n  const darkMode = useAppSelector(selectDarkMode);\n  const userKey = useAppSelector(selectUserKey);\n  const [recipient, setRecipient] = useState(null);\n  const [hasChosen, setHasChosen] = useState(false);\n\n  const myStyles = {\n    modal: {\n      fontSize: 18,\n      paddingBottom: 20,\n      fontWeight: 'bold',\n      textAlign: 'center',\n      width: '100%',\n      color: darkMode ? 'rgb(255,255,255)' : 'rgb(0,0,0)'\n    },\n    backdrop: {\n      backgroundColor: darkMode ? 'rgba(141,141,141,0.5)' : 'rgba(0, 0, 0, 0.5)'\n    },\n    containerDrop: {\n      minWidth: 200,\n      paddingBottom: 15\n    }\n  };\n\n  const exportClass = async (recipient) => {\n    try {\n      const status = await fetch(`${base_URL}/users/sendNotification`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          userKey\n        },\n        body: JSON.stringify({\n          recipients: [recipient],\n          text: JSON.stringify({\n            masterCourseCode: classData.masterCourseCode,\n            courseTerm: classData.courseTerm\n          }),\n          title: `${userData.realFirstName} shared a course`,\n          isCourseData: true\n        })\n      });\n      return status.ok;\n    } catch (e) {\n      console.warn(e);\n      return false;\n    }\n  };\n  return (\n    <Modal\n      visible={showModal}\n      backdropStyle={myStyles.backdrop}\n      style={{ width: '80%', height: '70%' }}\n      onBackdropPress={() => setShowModal(false)}\n    >\n      <Card disabled>\n        <Text style={myStyles.modal}>Share This Course</Text>\n        {UserNameSelectionDropDown({\n          setHasChosen,\n          setRecipient,\n          placeholder: true\n        })}\n        <View>\n          <Button\n            disabled={recipient === null}\n            title=\"Send\"\n            onPress={() => {\n              exportClass(recipient).then((returnValue) => {\n                setShowModal(false);\n                returnValue\n                  ? Alert.alert('Message Sent')\n                  : Alert.alert(\n                      'Error Sending Message',\n                      'Please Try Again Later'\n                    );\n              });\n            }}\n          />\n          <Button\n            title=\"Dismiss\"\n            onPress={() => {\n              setShowModal(false);\n              setHasChosen(false);\n              setValue('');\n              setRecipient(null);\n            }}\n          />\n        </View>\n      </Card>\n    </Modal>\n  );\n}\n","import {\n  Button,\n  Card,\n  Layout,\n  Modal,\n  Text,\n  useTheme,\n  withStyles\n} from '@ui-kitten/components';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport React, { useEffect, useRef, useState } from 'react';\nimport {\n  Platform,\n  ScrollView,\n  StyleSheet,\n  TouchableOpacity\n} from 'react-native';\nimport openMap from 'react-native-open-maps';\n\nimport { FontAwesome, FontAwesome5 } from '@expo/vector-icons';\nimport {\n  selectDarkMode,\n  selectIsGuest,\n  selectUserKey\n} from '../../../app/appDataSlice';\nimport { useAppSelector } from '../../../app/hooks';\nimport ModalContainer from '../../../components/ModalContainer';\nimport { base_URL } from '../../../constants/admin';\nimport { locations, removeNumbersAndSpaces } from '../../../constants/map';\nimport {\n  useAddClassMutation,\n  useAddStarredClassMutation,\n  useIsAllowedToReviewQuery,\n  useRemoveClassMutation,\n  useRemoveStarredClassMutation\n} from '../../api/classPagesApi';\nimport { useGetUserInfoQuery } from '../../api/usersApi';\nimport ExportModalClass from './exportModalClass';\n\nfunction SingleClassPage({ eva, navigation, selectedClass = null }) {\n  const [removeStarredClass] = useRemoveStarredClassMutation();\n  const [showModal, setShowModal] = useState(false);\n  const scrollViewRef = useRef(null);\n  const [showCourseModal, setShowCourseModal] = useState(false);\n  const theme = useTheme();\n  const isGuest = useAppSelector(selectIsGuest);\n  const [courseModalChildren, setCourseModalChildren] = useState([]);\n  const userKey = useAppSelector(selectUserKey);\n  const { data: userData } = useGetUserInfoQuery(userKey, {\n    skip: !userKey\n  });\n  const [showGuestModal, setShowGuestModal] = useState(false);\n  const darkMode = useAppSelector(selectDarkMode);\n  const [professorReviewsObject, setProfessorReviewsObject] = useState({});\n  const [addStarredClass] = useAddStarredClassMutation();\n  const isHMC = useAppSelector((state) => state.appData.classPages.isHMC);\n  if (!selectedClass) {\n    selectedClass = useAppSelector(\n      (state) => state.appData.classPages.selectedClass\n    );\n  }\n  const daysOfWeek = [\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n    'Sunday'\n  ];\n  const backgroundColor = darkMode ? eva.style.dark : eva.style.light;\n\n  const { data: isAllowedToReviewRes } = useIsAllowedToReviewQuery({\n    userKey,\n    masterCourseCode: selectedClass.masterCourseCode\n  });\n\n  function isStarred(courseCode: string) {\n    return userData.starredClasses.some(\n      (course) =>\n        course.courseCode === courseCode &&\n        course.courseTerm === selectedClass.courseTerm\n    );\n  }\n\n  function userHasCourse(courseCode: string): boolean {\n    return (\n      userData.addedClasses.classes[selectedClass.courseTerm] !== undefined &&\n      userData.addedClasses.classes[selectedClass.courseTerm][\n        courseCode.slice(0, -3)\n      ] !== undefined\n    );\n  }\n\n  const courseToggleChildren = (courseForToggle) => {\n    const final = [\n      <Layout>\n        <Button\n          style={{ marginVertical: 5 }}\n          children={\n            !userHasCourse(courseForToggle.courseCode)\n              ? 'Add Course to Schedule'\n              : 'Remove Course from Schedule'\n          }\n          onPress={() => {\n            toggleAddOrRemoveCourse(courseForToggle.courseCode);\n            setShowCourseModal(false);\n          }}\n        />\n        <Button\n          style={{ marginVertical: 5 }}\n          children={\n            !isStarred(courseForToggle.courseCode) ? 'Add Star' : 'Remove Star'\n          }\n          onPress={() => {\n            if (isGuest) {\n              setShowGuestModal(true);\n            } else {\n              toggleStarCourse(courseForToggle.courseCode);\n              setShowCourseModal(false);\n            }\n          }}\n        />\n      </Layout>\n    ];\n    setCourseModalChildren(final);\n    setShowCourseModal(true);\n  };\n\n  useEffect(() => {\n    setProfessorReviewsObject({});\n    if (scrollViewRef?.current) {\n      scrollViewRef.current.scrollTo({\n        y: 0,\n        animated: false\n      });\n    }\n    if (selectedClass) {\n      for (const time of selectedClass.times) {\n        getReviewsFromProfessor(time);\n      }\n    }\n  }, [selectedClass]);\n\n  async function getReviewsFromProfessor(time) {\n    const res = await fetch(\n      `${base_URL}/classes/reviews/getReviewsByProfessor` +\n        `?professorName=${time.professorName}&collegeName=${userData.collegeName}`,\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          userKey\n        }\n      }\n    );\n    if (res.ok) {\n      const reviews = await res.json();\n      if (reviews.length > 0) {\n        const newObject = {\n          ...professorReviewsObject\n        };\n        newObject[time.professorName] = reviews;\n        setProfessorReviewsObject(newObject);\n      }\n    }\n  }\n\n  function buildTimeString(time) {\n    // Compatibility with new course data layout for multiple times per day\n    if (time.courseSchedule && time.courseSchedule.length > 0) {\n      time = time.courseSchedule[0];\n    }\n\n    if (!time.startTime || time.startTime === '' || time.startTime === null) {\n      return 'closed';\n    }\n    return `${convertTo12HourTime(time.startTime)} - ${convertTo12HourTime(\n      time.endTime\n    )}\\n`;\n  }\n\n  function convertTo12HourTime(time) {\n    if (time.length !== 5) {\n      time = `0${time}`;\n    }\n    let hours = time.slice(0, 2);\n    const minutes = time.slice(3, 5);\n    let ampm = Number.parseInt(hours) > 12 ? 'pm' : 'am';\n    hours %= 12;\n    if (hours === 0) {\n      hours = 12;\n      ampm = 'pm';\n    }\n    return `${hours}:${minutes}${ampm}`;\n  }\n\n  function getProfessorReviewsList() {\n    const final = [];\n    for (const professor of Object.keys(professorReviewsObject)) {\n      const reviews = professorReviewsObject[professor];\n      final.push(\n        <>\n          <Text style={styles.subHeader}>\n            All Reviews:\n            {professor}\n          </Text>\n          {reviews.length === 0 ? (\n            <Text\n              style={{\n                alignSelf: 'center',\n                textAlign: 'center',\n                marginBottom: 10\n              }}\n            >\n              Something went wrong...\n            </Text>\n          ) : (\n            reviews.map((review, index) => (\n              <Card key={index} disabled>\n                <Text>{`${review.text}\\n\\nPosted: ${review.date}`}</Text>\n              </Card>\n            ))\n          )}\n        </>\n      );\n    }\n    return final;\n  }\n\n  const averageGradeMSGModal = (\n    <Modal\n      visible={showModal}\n      backdropStyle={styles.backdrop}\n      style={{ width: '75%' }}\n      onBackdropPress={() => setShowModal(false)}\n    >\n      <Card disabled>\n        <Text style={{ fontSize: 15, paddingTop: 5, paddingBottom: 10 }}>\n          The Athena Network collects and aggregates the data anonymously\n          submitted by the Course Review process and calculates what the average\n          student's experience in this course will look like. Given that it is\n          based on voluntarily submitted data, this information is to be used as\n          a reference only. Please consult your advisor before making any\n          impactful decisions.\n        </Text>\n        <Button onPress={() => setShowModal(false)}>Dismiss</Button>\n      </Card>\n    </Modal>\n  );\n\n  if (!selectedClass.times) {\n    return null;\n  }\n\n  function getProfessorsList() {\n    const list = [];\n    for (const time of selectedClass.times) {\n      if (!list.includes(time.professorName)) {\n        list.push(time.professorName);\n      }\n    }\n    return list;\n  }\n\n  const [schedulePopup, setSchedulePopup] = useState(false);\n  const [allTheChildren, setAllTheChildren] = useState([]);\n\n  function toggleSchedulePopUp(time: any) {\n    const finalDays = {};\n    for (const realTime of time.courseSchedule) {\n      for (const day of daysOfWeek) {\n        if (realTime.daysOfTheWeek.includes(day)) {\n          const addition = `${convertTo12HourTime(\n            realTime.startTime\n          )} - ${convertTo12HourTime(realTime.endTime)}`;\n          if (finalDays[day]?.length > 0) {\n            finalDays[day].push(addition);\n          } else {\n            finalDays[day] = [addition];\n          }\n        }\n      }\n    }\n\n    setAllTheChildren(generateTable(finalDays));\n    setSchedulePopup(true);\n  }\n  const [addClass] = useAddClassMutation();\n  const [removeClass] = useRemoveClassMutation();\n  function toggleStarCourse(courseCode: string) {\n    try {\n      if (isStarred(courseCode)) {\n        removeStarredClass({\n          userKey,\n          courseCode,\n          courseTerm: selectedClass.courseTerm,\n          userName: userData.userName\n        }).unwrap();\n      } else {\n        addStarredClass({\n          userKey,\n          courseCode,\n          courseTerm: selectedClass.courseTerm,\n          userName: userData.userName\n        }).unwrap();\n      }\n    } catch (e) {\n      console.warn('Error starring class', e);\n    }\n  }\n\n  function toggleAddOrRemoveCourse(courseCode: string) {\n    if (userHasCourse(courseCode)) {\n      removeClass({\n        userKey,\n        courseCode,\n        courseTerm: selectedClass.courseTerm,\n        userName: userData.userName,\n        masterCourseCode: courseCode.slice(0, -3)\n      }).unwrap();\n    } else {\n      addClass({\n        userKey,\n        courseCode,\n        courseTerm: selectedClass.courseTerm,\n        userName: userData.userName,\n        masterCourseCode: courseCode.slice(0, -3)\n      }).unwrap();\n    }\n  }\n  function generateTable(daysObject: any): any {\n    const daysActive = Object.keys(daysObject);\n    const stringArrays = Object.values(daysObject);\n    return (\n      <Layout style={{ flexDirection: 'row' }}>\n        <Layout>\n          {daysActive.map((value) => {\n            return (\n              <Layout>\n                <Text\n                  style={{\n                    height: 75,\n                    borderWidth: 1,\n                    borderColor: 'black',\n                    padding: 10\n                  }}\n                >\n                  {value}\n                </Text>\n              </Layout>\n            );\n          })}\n        </Layout>\n        <Layout>\n          {stringArrays.map((value: string[]) => {\n            return (\n              <Layout>\n                <Text\n                  style={{\n                    height: 75,\n                    borderWidth: 1,\n                    borderColor: 'black',\n                    padding: 10\n                  }}\n                >\n                  {value.join('\\n')}\n                </Text>\n              </Layout>\n            );\n          })}\n        </Layout>\n      </Layout>\n    );\n  }\n\n  return (\n    <LinearGradient\n      colors={\n        darkMode\n          ? [theme['color-basic-1100'], theme['color-basic-1100']]\n          : [theme['color-primary-500'], theme['color-success-500']]\n      }\n      style={{\n        width: '100%',\n        margin: 0,\n        alignItems: 'center',\n        flex: 1\n      }}\n      start={{ x: 0, y: 0 }}\n      end={{ x: 1, y: 0.4 }}\n    >\n      {showGuestModal && (\n        <ModalContainer\n          title=\"Wait!\"\n          children={\n            <Text style={{ paddingHorizontal: 30 }}>\n              This feature is locked to our Guest Users. Please create a free\n              account with us to take advantage this feature.\n            </Text>\n          }\n          backDropVisible={showGuestModal}\n          setBackDropVisible={setShowGuestModal}\n        />\n      )}\n      <ScrollView\n        contentContainerStyle={{ alignSelf: 'center', maxWidth: 700 }}\n        style={backgroundColor}\n        showsVerticalScrollIndicator={false}\n        ref={scrollViewRef}\n      >\n        {userData.starredClasses.some((course) =>\n          selectedClass.times.some(\n            (time: { courseCode: any; courseTerm: any }) =>\n              time.courseCode === course.courseCode &&\n              selectedClass.courseTerm === course.courseTerm\n          )\n        ) ? (\n          <Layout\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignContent: 'center',\n              backgroundColor\n            }}\n          >\n            <FontAwesome\n              style={{ marginLeft: 10, marginTop: 10 }}\n              name=\"star\"\n              color=\"gold\"\n              size={20}\n            />\n            <ExportModalClass classData={undefined} />\n          </Layout>\n        ) : (\n          <Layout\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignContent: 'center',\n              backgroundColor\n            }}\n          >\n            <FontAwesome5\n              style={{ marginLeft: 10, marginTop: 10 }}\n              name=\"star\"\n              color=\"gold\"\n              size={20}\n            />\n            <ExportModalClass classData={undefined} />\n          </Layout>\n        )}\n\n        <Layout style={[{ alignItems: 'center' }, backgroundColor]}>\n          <Text style={styles.title}>{selectedClass.courseName}</Text>\n          <Text style={{ paddingTop: 30 }}>\n            {selectedClass.masterCourseCode}\n          </Text>\n\n          <Text style={styles.subtitle}>\n            {`${selectedClass.courseTerm} \\u2022 credits: ${\n              isHMC ? selectedClass.creditWeightHM : selectedClass.creditWeight\n            }`}\n          </Text>\n          {selectedClass.timeSpentOutOfClass && (\n            <Layout\n              style={[\n                {\n                  flexDirection: 'row',\n                  alignItems: 'flex-start',\n                  paddingRight: 5\n                },\n                backgroundColor\n              ]}\n            >\n              <Text style={styles.subtitle}>Time Spent Per Week</Text>\n              <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\n              <Text style={styles.subtitle}>\n                : {selectedClass.timeSpentOutOfClass} hours\n              </Text>\n            </Layout>\n          )}\n          {selectedClass.averageGrade && (\n            <Layout\n              style={[\n                {\n                  flexDirection: 'row',\n                  alignItems: 'flex-start',\n                  paddingRight: 5\n                },\n                backgroundColor\n              ]}\n            >\n              <Text style={styles.subtitle}>Average Grade</Text>\n              <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\n              <Text style={styles.subtitle}>\n                : {selectedClass.averageGrade}\n              </Text>\n            </Layout>\n          )}\n          {selectedClass.difficulty && (\n            <Layout\n              style={[\n                {\n                  flexDirection: 'row',\n                  alignItems: 'flex-start',\n                  paddingRight: 5\n                },\n                backgroundColor\n              ]}\n            >\n              <Text style={styles.subtitle}>Estimated Difficulty</Text>\n              <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\n              <Text style={styles.subtitle}>\n                : {selectedClass.difficulty} / 5\n              </Text>\n            </Layout>\n          )}\n          {selectedClass.rating && (\n            <Layout\n              style={[\n                {\n                  flexDirection: 'row',\n                  alignItems: 'flex-start',\n                  paddingRight: 5\n                },\n                backgroundColor\n              ]}\n            >\n              <Text style={styles.subtitle}>Average Rating</Text>\n              <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\n              <Text style={styles.subtitle}>:{selectedClass.rating} / 5</Text>\n            </Layout>\n          )}\n        </Layout>\n        <Layout style={backgroundColor}>\n          <Text style={styles.courseDescription}>{selectedClass.summary}</Text>\n        </Layout>\n        <Layout style={{ ...backgroundColor, ...styles.boxed }}>\n          <Text style={{ fontSize: 15, fontWeight: 'bold' }}>\n            Other Stated Prerequisites:\n          </Text>\n          <Text style={{ fontSize: 15 }}>\n            {selectedClass.prerequisites !== ''\n              ? selectedClass.prerequisites\n              : 'none'}\n          </Text>\n\n          <Text style={{ fontSize: 15, fontWeight: 'bold' }}>\n            Other Stated Corequisites:\n          </Text>\n          <Text style={{ fontSize: 15 }}>\n            {selectedClass.corequisites !== ''\n              ? selectedClass.corequisites\n              : 'none'}\n          </Text>\n        </Layout>\n        <Layout style={[{ alignItems: 'flex-end' }, backgroundColor]}>\n          {(selectedClass.timeSpentOutOfClass ||\n            selectedClass.averageGrade ||\n            selectedClass.difficulty ||\n            selectedClass.rating) && (\n            <TouchableOpacity onPress={() => setShowModal(!showModal)}>\n              <Layout\n                style={[\n                  {\n                    flexDirection: 'row',\n                    alignItems: 'flex-start',\n                    paddingRight: 5\n                  },\n                  backgroundColor\n                ]}\n              >\n                <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\n                <Text style={styles.disclaimer}>How Do We Estimate This?</Text>\n              </Layout>\n            </TouchableOpacity>\n          )}\n        </Layout>\n        <Layout style={{ backgroundColor }}>\n          {selectedClass.times.length > 0 && (\n            <Layout style={{ backgroundColor }}>\n              <Text style={styles.subHeader}>Sections</Text>\n              <Layout style={[styles.section, backgroundColor]}>\n                <Text style={styles.headerText}>Course Code</Text>\n                <Layout\n                  style={{\n                    flex: 1,\n                    flexDirection: 'row',\n                    justifyContent: 'flex-start',\n                    backgroundColor\n                  }}\n                >\n                  <Text style={{ fontWeight: 'bold', fontSize: 13 }}>\n                    ST / SA\n                  </Text>\n                  <Text style={{ fontWeight: '725', fontSize: 13 }}>\n                    {' '}\n                    (PERM)\n                  </Text>\n                </Layout>\n                <Text style={styles.headerText}>Professor</Text>\n                <Text style={styles.headerText}>Time</Text>\n                <Text style={styles.headerText}>Location</Text>\n              </Layout>\n            </Layout>\n          )}\n          {selectedClass.times.map((time) => {\n            return (\n              <Layout\n                key={time.courseCode}\n                style={{ backgroundColor, ...styles.section }}\n              >\n                {userData.starredClasses.some(\n                  (course) =>\n                    course.courseTerm === selectedClass.courseTerm &&\n                    course.courseCode === time.courseCode\n                ) && (\n                  <FontAwesome\n                    style={{ marginRight: 5 }}\n                    name=\"star\"\n                    color=\"gold\"\n                    size={12}\n                  />\n                )}\n                <TouchableOpacity\n                  style={{ flex: 1 }}\n                  onPress={() => {\n                    courseToggleChildren(time);\n                  }}\n                >\n                  <Text\n                    style={{\n                      ...styles.sectionText,\n                      color: 'rgba(55,81,211,0.84)',\n                      textDecorationLine: 'underline'\n                    }}\n                  >\n                    {time.courseCode}\n                  </Text>\n                </TouchableOpacity>\n                <Layout\n                  style={{ flex: 1, flexDirection: 'row', backgroundColor }}\n                >\n                  <Text>\n                    {time.seatsFilled} /{time.seatsFilled + time.seatsAvailable}\n                    {'  '}\n                  </Text>\n                  <Text style={{ fontWeight: 'bold' }}>\n                    ({time.permCount ? time.permCount : 0})\n                  </Text>\n                </Layout>\n                <Text style={styles.sectionText}>{time.professorName}</Text>\n                <Layout style={{ backgroundColor, ...styles.sectionText }}>\n                  {time?.courseSchedule?.length > 1 ? (\n                    <TouchableOpacity\n                      onPress={() => toggleSchedulePopUp(time)}\n                      disabled={!(time?.courseSchedule?.length > 1)}\n                    >\n                      <Text\n                        style={{\n                          ...styles.sectionText,\n                          color: 'rgba(55,81,211,0.84)',\n                          textDecorationLine: 'underline'\n                        }}\n                      >\n                        {Platform.OS === 'web' ? 'Click' : 'Press'} for\n                        {'\\n'}\n                        schedule\n                      </Text>\n                    </TouchableOpacity>\n                  ) : (\n                    <Text style={styles.sectionText}>\n                      {buildTimeString(time)}\n                      {time?.courseSchedule?.length > 0\n                        ? time.courseSchedule[0].daysOfTheWeek.join(', ')\n                        : time.daysOfTheWeek.join(', ')}\n                    </Text>\n                  )}\n                </Layout>\n                <TouchableOpacity\n                  disabled={\n                    !locations[\n                      removeNumbersAndSpaces(\n                        time.courseSchedule[0].classLocation\n                      )\n                    ]\n                  }\n                  style={{ flex: 1 }}\n                  onPress={() => {\n                    openMap({\n                      waypoints: [],\n                      provider: 'google',\n                      query: locations[\n                        removeNumbersAndSpaces(\n                          time.courseSchedule[0].classLocation\n                        )\n                      ]\n                        .map((number) => number.toString())\n                        .join(', '),\n                      zoom: 18\n                    });\n                  }}\n                >\n                  <Text\n                    style={\n                      locations[\n                        removeNumbersAndSpaces(\n                          time.courseSchedule[0].classLocation\n                        )\n                      ]\n                        ? {\n                            ...styles.sectionText,\n                            color: 'rgba(55,81,211,0.84)',\n                            textDecorationLine: 'underline'\n                          }\n                        : { flex: 1 }\n                    }\n                  >\n                    {time.courseSchedule[0].classLocation\n                      ? time.courseSchedule[0].classLocation\n                      : 'TBD'}\n                  </Text>\n                </TouchableOpacity>\n              </Layout>\n            );\n          })}\n          <ModalContainer\n            backDropVisible={showCourseModal}\n            setBackDropVisible={setShowCourseModal}\n            title=\"Add/Remove Course\"\n            children={courseModalChildren}\n          />\n          {averageGradeMSGModal}\n          <ModalContainer\n            children={allTheChildren}\n            backDropVisible={schedulePopup}\n            setBackDropVisible={setSchedulePopup}\n            title=\"Course Time Schedule\"\n          />\n        </Layout>\n        {isAllowedToReviewRes?.isAllowed ? (\n          <Button\n            style={{ margin: 10 }}\n            onPress={() => {\n              navigation.navigate('PostReview', {\n                professorList: getProfessorsList()\n              });\n            }}\n          >\n            Post Review\n          </Button>\n        ) : null}\n        <Text style={styles.subHeader}>Class Reviews</Text>\n        {selectedClass.reviews.length === 0 ? (\n          <Text\n            style={{\n              alignSelf: 'center',\n              textAlign: 'center',\n              marginBottom: 10\n            }}\n          >\n            No Class Reviews yet\n          </Text>\n        ) : (\n          selectedClass.reviews.map((review, index) => (\n            <Card key={index} disabled>\n              <Text>{`${review.text}\\n\\nPosted: ${review.date}`}</Text>\n              {review.professor && (\n                <Text>{`Taught By: ${review.professor}`}</Text>\n              )}\n            </Card>\n          ))\n        )}\n        {Object.keys(professorReviewsObject).length !== 0\n          ? getProfessorReviewsList()\n          : null}\n      </ScrollView>\n    </LinearGradient>\n  );\n}\n\nexport default withStyles(SingleClassPage, (theme) => ({\n  dark: {\n    backgroundColor: theme['color-basic-900']\n  },\n  light: {\n    backgroundColor: theme['color-basic-200']\n  }\n}));\n\nconst styles = StyleSheet.create({\n  title: {\n    fontSize: 20,\n    marginTop: 20,\n    fontWeight: 'bold'\n  },\n  subtitle: {\n    fontSize: 16\n  },\n  courseOpen: {\n    backgroundColor: 'green',\n    color: '#fff',\n    padding: 5,\n    marginRight: 10\n  },\n  courseClosed: {\n    backgroundColor: 'red',\n    color: '#fff',\n    padding: 5,\n    borderRadius: 5\n  },\n  header: {\n    alignItems: 'center'\n  },\n  details: {\n    flexDirection: 'row',\n    padding: 10,\n    alignItems: 'center',\n    justifyContent: 'flex-start'\n  },\n  courseDescription: {\n    paddingRight: 20,\n    paddingLeft: 20,\n    paddingTop: 10,\n    paddingBottom: 5,\n    fontSize: 17\n  },\n  BodyContainer: {\n    borderTopWidth: 1,\n    borderTopColor: 'black',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-evenly',\n    padding: 10,\n    paddingTop: 20,\n    paddingBottom: 20\n  },\n  boxed: {\n    alignItems: 'center',\n    margin: 8,\n    borderColor: 'black',\n    borderWidth: 1,\n    padding: 7\n  },\n  documentStyle: {\n    width: 150,\n    height: 190,\n    paddingTop: 100\n  },\n  imageLabel: {\n    fontSize: 12,\n    color: 'black',\n    padding: 10,\n    textAlign: 'center'\n  },\n  schedule: {\n    paddingLeft: 20,\n    paddingTop: 10\n  },\n  graphImage: {\n    width: '100%',\n    aspectRatio: 1,\n    resizeMode: 'contain'\n  },\n  grade: {\n    fontSize: 50,\n    fontWeight: 'bold',\n    color: 'green'\n  },\n  reviewText: {\n    fontSize: 16,\n    fontStyle: 'italic'\n  },\n  reviewBox: {\n    width: '95%',\n    padding: 10,\n    borderWidth: 1,\n    borderColor: 'black',\n    borderRadius: 5,\n    marginBottom: 10\n  },\n  section: {\n    flexDirection: 'row',\n    paddingLeft: 5,\n    borderBottomWidth: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  headerText: {\n    fontWeight: 'bold',\n    fontSize: 13,\n    flex: 1\n  },\n  sectionText: {\n    flex: 1\n  },\n  disclaimer: {\n    fontSize: 14,\n    fontStyle: 'italic'\n  },\n  backdrop: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  },\n  input: {\n    height: 50,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  },\n  containerDrop: {\n    height: 42,\n    margin: 12,\n    borderWidth: 1\n  },\n  indentedInput: {\n    height: 50,\n    marginVertical: 12,\n    borderWidth: 1,\n    padding: 10,\n    marginRight: 12,\n    marginLeft: 30\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white'\n  },\n  subHeader: {\n    fontSize: 20,\n    paddingLeft: 20,\n    paddingBottom: 20,\n    paddingTop: 20,\n    fontWeight: 'bold'\n  }\n});\n","import {\n  IndexPath,\n  Layout,\n  Select,\n  SelectItem,\n  Text,\n  useTheme,\n  Button,\n  Spinner,\n  Input\n} from '@ui-kitten/components';\nimport { useState } from 'react';\nimport { Alert, StyleSheet, ScrollView } from 'react-native';\n\nimport { useNavigation } from '@react-navigation/native';\nimport { selectUserKey } from '../../../app/appDataSlice';\nimport { useAppSelector } from '../../../app/hooks';\nimport { NEW_REVIEW_FIELDS as fields } from '../../../constants/classPages';\nimport { useSendReviewMutation } from '../../api/classPagesApi';\nimport ModalContainer from '../../../components/ModalContainer';\n\nexport default function NewReview({\n  route: {\n    params: { professorList }\n  }\n}) {\n  const navigation = useNavigation();\n  const [body, setBody] = useState({});\n  const userKey = useAppSelector(selectUserKey);\n  const darkMode = useAppSelector((state) => state.appData.secure.darkMode);\n  const [showConfirmationModal, setShowConfirmationModal] = useState(false);\n  const [showErrorModal, setShowErrorModal] = useState(false);\n  const selectedClass = useAppSelector(\n    (state) => state.appData.classPages.selectedClass\n  );\n  const [sendReview, { isLoading }] = useSendReviewMutation();\n\n  const theme = useTheme();\n\n  const backgroundColor = darkMode\n    ? theme['color-basic-900']\n    : theme['color-basic-200'];\n\n  const color = darkMode ? theme['color-basic-200'] : theme['color-basic-900'];\n\n  const handleReviewSubmitted = async () => {\n    try {\n      await sendReview({\n        body: {\n          ...body,\n          masterCourseCode: selectedClass.masterCourseCode\n        },\n        userKey\n      }).unwrap();\n      setShowConfirmationModal(true);\n    } catch (error) {\n      setShowErrorModal(true);\n      console.warn('Error submitting review: ', error);\n    }\n  };\n\n  function renderTheFieldsNecessary(fields) {\n    const changeValue = (theValue, valueToChange) => {\n      const newBody = body;\n      for (const aspect in newBody) {\n        if (\n          newBody[aspect] === null ||\n          newBody[aspect] === undefined ||\n          newBody[aspect] === ''\n        ) {\n          delete newBody[aspect];\n        }\n      }\n      if (theValue !== undefined) {\n        newBody[valueToChange] = theValue;\n      } else if (newBody[valueToChange]) {\n        delete newBody[valueToChange];\n      }\n      setBody(newBody);\n    };\n    const renderFilterParameters = (fields) => {\n      if (fields.length === 0) {\n        return null;\n      }\n      return (\n        <Layout style={{ flexDirection: 'row', backgroundColor }}>\n          <Text\n            style={{\n              fontSize: 15,\n              paddingLeft: 12,\n              paddingBottom: 5,\n              paddingTop: 5,\n              alignContent: 'center',\n              fontWeight: 'bold'\n            }}\n          >\n            Review Details\n          </Text>\n        </Layout>\n      );\n    };\n    const final = [];\n\n    const renderDropDown = (field) => {\n      const [selectedIndex, setSelectedIndex] = useState(new IndexPath(0));\n      const [hasChosen, setHasChosen] = useState(false);\n\n      if (field.label === 'Professor') {\n        field.options = professorList.map((professorName: String) => {\n          return {\n            label: professorName,\n            id: professorName\n          };\n        });\n      }\n\n      function currentValue() {\n        return (\n          <Text key=\"gal;fkdjsl;f\">\n            {!hasChosen\n              ? `Choose ${field.label}${field.mandatory ? ' (mandatory)' : ''}`\n              : field.options[selectedIndex.row - 1].label}{' '}\n          </Text>\n        );\n      }\n\n      function handleSelection(index) {\n        setSelectedIndex(index);\n        changeValue(\n          index.row === 0 ? undefined : field.options[index.row - 1].id,\n          field.id\n        );\n        if (index.row === 0) {\n          setHasChosen(false);\n        } else {\n          setHasChosen(true);\n        }\n      }\n\n      return (\n        <Select\n          style={{ ...styles.containerDrop, backgroundColor }}\n          value={currentValue}\n          selectedIndex={selectedIndex}\n          onSelect={handleSelection}\n        >\n          <SelectItem title={' '} />\n          {field.options.map(({ label }, index) => (\n            <SelectItem title={label} key={index} />\n          ))}\n        </Select>\n      );\n    };\n    final.push(\n      <Input\n        key=\"lfjdsa;lfaj\"\n        autoCapitalize=\"sentences\"\n        onChangeText={(theValue) => changeValue(theValue, 'text')}\n        style={{ ...styles.inputBig, backgroundColor, color }}\n        multiline\n        placeholderTextColor={darkMode ? theme['color-basic-500'] : 'gray'}\n        placeholder=\"Review Text (mandatory)\"\n      />\n    );\n    for (let i = 0; i < fields.length; i++) {\n      const { type } = fields[i];\n      if (type === 'String') {\n        final.push(\n          <Input\n            key={i}\n            autoCapitalize=\"words\"\n            clearButtonMode=\"always\"\n            onChangeText={(theValue) => changeValue(theValue, fields[i].id)}\n            style={{ ...styles.input, backgroundColor, color }}\n            placeholderTextColor={darkMode ? theme['color-basic-500'] : 'gray'}\n            placeholder={\n              fields[i].mandatory\n                ? `${fields[i].label} (mandatory)`\n                : fields[i].label\n            }\n          />\n        );\n      } else if (type === 'DropDown') {\n        final.push(renderDropDown(fields[i]));\n      }\n    }\n\n    return (\n      <Layout style={{ backgroundColor }}>\n        {renderFilterParameters(fields)}\n        <Layout style={{ backgroundColor }}>{final}</Layout>\n      </Layout>\n    );\n  }\n\n  const successChildren = (\n    <Layout style={{ marginHorizontal: 15, justifyContent: 'center' }}>\n      <Text>\n        {`Your review of \"${selectedClass.courseName}\" has been submitted and is\n          now pending approval.\\n\\nThank You!`}\n      </Text>\n      <Button\n        onPress={() => {\n          navigation.goBack();\n        }}\n      >\n        Okay\n      </Button>\n    </Layout>\n  );\n\n  const errorChildren = (\n    <Layout style={{ marginHorizontal: 15, justifyContent: 'center' }}>\n      <Text>Your review encountered an error, please try again later</Text>\n      <Button\n        onPress={() => {\n          navigation.goBack();\n        }}\n      >\n        Okay\n      </Button>\n    </Layout>\n  );\n\n  return (\n    <ScrollView style={{ backgroundColor }}>\n      <ModalContainer\n        backDropVisible={showConfirmationModal}\n        setBackDropVisible={setShowConfirmationModal}\n        title=\"Review Submitted!\"\n        children={successChildren}\n      />\n      <ModalContainer\n        backDropVisible={showErrorModal}\n        setBackDropVisible={setShowErrorModal}\n        title=\"Error Submitting Review\"\n        children={errorChildren}\n      />\n      <Layout style={{ backgroundColor, ...styles.container }}>\n        <Layout style={{ backgroundColor }}>\n          {renderTheFieldsNecessary(fields)}\n        </Layout>\n        <Button style={{ margin: 12 }} onPress={handleReviewSubmitted}>\n          Post Review\n        </Button>\n      </Layout>\n      {isLoading ? (\n        <Layout\n          style={{\n            backgroundColor: 'transparent',\n            position: 'absolute',\n            right: '50%',\n            top: '50%'\n          }}\n        >\n          <Spinner />\n        </Layout>\n      ) : null}\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  input: {\n    height: 50,\n    margin: 12,\n    padding: 10,\n    borderColor: '#B3B3B3',\n    borderRadius: 5,\n    borderWidth: 1\n  },\n  inputBig: {\n    height: 200,\n    margin: 12,\n    padding: 10,\n    borderColor: '#B3B3B3',\n    borderRadius: 5,\n    borderWidth: 1\n  },\n  containerDrop: {\n    height: 42,\n    margin: 12\n  },\n  indentedInput: {\n    height: 50,\n    marginVertical: 12,\n    padding: 10,\n    marginRight: 12,\n    marginLeft: 30\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25\n  },\n  container: {\n    flex: 1\n    // alignItems: 'center',\n  },\n  header: {\n    marginTop: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%'\n  },\n  address: {\n    alignItems: 'center',\n    margin: 10,\n    padding: 10\n  },\n  video: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-start'\n  },\n  title: {\n    fontSize: 26,\n    marginLeft: 10\n  },\n  logo: {\n    width: '100%',\n    height: 100\n  },\n  couponContainer: {\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 20,\n    marginBottom: 20\n  },\n  coupon: {\n    width: 400,\n    height: 267\n  },\n  imageGallery: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    margin: 10,\n    marginBottom: 0\n  },\n  imageStyle: {\n    width: 150,\n    height: 150,\n    paddingTop: 100,\n    margin: 5\n  },\n  headerText: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  }\n});\n","import { createNativeStackNavigator } from '@react-navigation/native-stack';\n\nimport InfoPage from './InfoPage';\nimport PostReview from './PostReview';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function SingleClassPage({ bottomSheetRef }) {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen\n        name=\"InfoPage\"\n        component={InfoPage}\n        options={{ title: 'ClassPages' }}\n      />\n      <Stack.Screen\n        name=\"PostReview\"\n        component={PostReview}\n        options={{ title: 'Post Review' }}\n      />\n    </Stack.Navigator>\n  );\n}\n","import { Divider, Layout, Text, useTheme } from '@ui-kitten/components';\nimport React, { useEffect, useState } from 'react';\nimport { FlatList, Platform, TouchableOpacity } from 'react-native';\nimport { Entypo, FontAwesome, FontAwesome5 } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport { BottomSheetMethods } from '@gorhom/bottom-sheet/lib/typescript/types';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { useGetUserInfoQuery } from '../api/usersApi';\nimport { selectUserKey } from '../../app/appDataSlice';\nimport {\n  useRemoveClassMutation,\n  useRemoveStarredClassMutation\n} from '../api/classPagesApi';\nimport { classSelected } from './classPagesSlice';\n\ntype StarredClassesProps = {\n  setAddedClassesVisible: (visible: boolean) => void;\n  courseTerm: string;\n  darkMode: boolean;\n  bottomSheetRef: React.MutableRefObject<BottomSheetMethods>;\n};\nexport default function StarredClasses({\n  setAddedClassesVisible,\n  courseTerm,\n  darkMode,\n  bottomSheetRef\n}: StarredClassesProps) {\n  const isWeb = Platform.OS === 'web';\n  const navigation = useNavigation();\n  const dispatch = useAppDispatch();\n  const theme = useTheme();\n  const userKey = useAppSelector(selectUserKey);\n  const [starredCourses, setStarredCourses] = useState([]);\n  const { data: userData } = useGetUserInfoQuery(userKey, {\n    skip: !userKey\n  });\n  const allClassesList = useAppSelector(\n    (state) => state.appData.classPages.classes\n  );\n  const [removeStarredClass] = useRemoveStarredClassMutation();\n\n  useEffect(() => {\n    setStarredCourses(userData.starredClasses);\n  }, [userData]);\n\n  const handleRemoveStarredClass = (courseCode: string) => {\n    try {\n      removeStarredClass({\n        userKey,\n        courseCode,\n        courseTerm,\n        userName: userData.userName,\n        masterCourseCode: courseCode.slice(0, -3)\n      }).unwrap();\n    } catch (e) {\n      console.warn('Add class error: ', e);\n    }\n  };\n\n  function handleClassSelected(courseCode: string) {\n    dispatch(classSelected(courseCode));\n    setAddedClassesVisible(false);\n    if (Platform.OS === 'web') {\n      navigation.navigate('SingleClassPage');\n    } else {\n      bottomSheetRef.current?.snapToIndex(0);\n    }\n  }\n\n  function renderItem({ item: course }) {\n    const courseData = allClassesList[course.courseCode.slice(0, -3)];\n    return (\n      <Layout\n        style={{\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          paddingVertical: 7,\n          backgroundColor: darkMode\n            ? theme['color-basic-900']\n            : theme['color-basic-100']\n        }}\n      >\n        <Layout\n          style={{ backgroundColor: 'transparent', flexDirection: 'row' }}\n        >\n          <Layout\n            style={{\n              backgroundColor: 'transparent',\n              justifyContent: 'center',\n              marginRight: isWeb ? 10 : 5\n            }}\n          >\n            <FontAwesome name=\"star\" color=\"gold\" size={15} />\n          </Layout>\n          <Layout\n            style={{ flexDirection: 'column', backgroundColor: 'transparent' }}\n          >\n            <TouchableOpacity\n              onPress={() => {\n                handleClassSelected(course.courseCode.slice(0, -3));\n              }}\n            >\n              <Text category=\"s1\">{courseData.courseName}</Text>\n              <Text category=\"p2\">{course.courseCode}</Text>\n            </TouchableOpacity>\n          </Layout>\n        </Layout>\n\n        <TouchableOpacity\n          onPress={() => handleRemoveStarredClass(course.courseCode)}\n        >\n          <Entypo name=\"cross\" size={28} color=\"red\" />\n        </TouchableOpacity>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout\n      style={{\n        flex: Platform.OS === 'web' ? undefined : 1,\n        paddingBottom: 10,\n        backgroundColor: darkMode\n          ? theme['color-basic-900']\n          : theme['color-basic-100']\n      }}\n    >\n      <Text category=\"h5\" style={{ textAlign: 'center', marginBottom: 10 }}>\n        Starred Classes\n      </Text>\n      <FlatList\n        contentContainerStyle={{ width: 300 }}\n        automaticallyAdjustsScrollIndicatorInsets\n        indicatorStyle={darkMode ? 'white' : 'black'}\n        showsVerticalScrollIndicator\n        ItemSeparatorComponent={() => <Divider />}\n        data={\n          starredCourses.length > 0\n            ? starredCourses.filter(\n                (course) => course.courseTerm === courseTerm\n              )\n            : []\n        }\n        renderItem={renderItem}\n      />\n    </Layout>\n  );\n}\n","import { FontAwesome5 } from '@expo/vector-icons';\nimport BottomSheet from '@gorhom/bottom-sheet/lib/typescript/components/bottomSheet/BottomSheet';\nimport {\n  Button,\n  Layout,\n  List,\n  Spinner,\n  Text,\n  useTheme\n} from '@ui-kitten/components';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { useEffect, useRef, useState } from 'react';\nimport {\n  Keyboard,\n  LayoutAnimation,\n  Platform,\n  RefreshControl,\n  ScrollView,\n  TouchableOpacity\n} from 'react-native';\n\nimport { selectDarkMode, selectUserKey } from '../../app/appDataSlice';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport Message from '../../components/Message';\nimport ModalContainer from '../../components/ModalContainer';\nimport SearchBar from '../../components/SearchBar';\nimport { RENDERED_RESULTS_LIMIT } from '../../constants/classPages';\nimport { showToast } from '../../functions';\nimport {\n  useAddClassMutation,\n  useAddMultipleClassesMutation,\n  useLazyGetAllClassesQuery,\n  useRemoveClassMutation,\n  useSwapCoursePriorityMutation\n} from '../api/classPagesApi';\nimport { useGetUserInfoQuery, useLazyGetUserInfoQuery } from '../api/usersApi';\nimport AddedClasses from './AddedClasses';\nimport Item from './ClassListItem';\nimport FilterClasses from './FilterClasses';\nimport SingleClassPage from './SingleClassPage';\nimport StarredClasses from './StarredClasses';\nimport {\n  classSelected,\n  endOfListReached,\n  resetClasses,\n  searchTermUpdated,\n  selectClassesList,\n  suggestedClassesDimissed\n} from './classPagesSlice';\n\nexport function CurrentTermLabel({\n  navigation,\n  currentSection,\n  style = {},\n  textStyle = {},\n  disabled = false\n}) {\n  return (\n    <TouchableOpacity\n      disabled={disabled}\n      style={style}\n      onPress={() => navigation.navigate('SelectTerm')}\n    >\n      <Text category=\"label\" style={textStyle}>\n        {`Term: ${currentSection}`}\n      </Text>\n    </TouchableOpacity>\n  );\n}\n\nexport default function ClassesList({ navigation }) {\n  const [menuOpen, setMenuOpen] = useState(null);\n  const [addedClassesVisible, setAddedClassesVisible] = useState(false);\n  const [filtersMenuVisible, setFiltersMenuVisible] = useState(false);\n  const [listRef, setListRef] = useState(null);\n\n  const [addClass] = useAddClassMutation();\n  const [addMultipleClasses] = useAddMultipleClassesMutation();\n  const [removeClass] = useRemoveClassMutation();\n  const [swapAddedClasses] = useSwapCoursePriorityMutation();\n  const [fetchUserInfo] = useLazyGetUserInfoQuery();\n  const [getClasses, { isLoading: classListLoading, isError }] =\n    useLazyGetAllClassesQuery();\n  const currentSection = useAppSelector(\n    (state) => state.appData.classPages.currentSection\n  );\n\n  // Selectors\n  const filters = useAppSelector((state) => state.appData.classPages.filters);\n  const isMobile = useAppSelector((state) => state.appData.secure.isMobile);\n  const classes = useAppSelector(selectClassesList);\n  const userKey = useAppSelector(selectUserKey);\n  const page = useAppSelector((state) => state.appData.classPages.page);\n  const darkMode = useAppSelector(selectDarkMode);\n  const searchTerm = useAppSelector(\n    (state) => state.appData.classPages.searchTerm\n  );\n  const renderedClasses = useAppSelector(\n    (state) => state.appData.classPages.renderedClasses\n  );\n  const suggestedClasses = useAppSelector(\n    (state) => state.appData.classPages.suggestedClasses\n  );\n\n  const { data: userData, isSuccess: userInfoSuccess } = useGetUserInfoQuery(\n    userKey,\n    { skip: !userKey }\n  );\n  const collegeName = userData?.collegeName || 'claremontColleges';\n\n  const userName = userData?.userName;\n  const orderedAddedClasses = userData?.addedClasses?.orderedClasses;\n  const addedClasses = userData?.addedClasses?.classes;\n  const length = userData?.addedClasses?.classes?.[currentSection]\n    ? Object.keys(userData.addedClasses.classes?.[currentSection]).length\n    : 0;\n\n  // Other Hooks\n  const theme = useTheme();\n  const dispatch = useAppDispatch();\n  const bottomSheetRef = useRef<BottomSheet>(null);\n\n  useEffect(() => {\n    fetchClasses();\n  }, []);\n\n  const fetchClasses = async () => {\n    if (Object.keys(classes).length === 0) {\n      try {\n        await getClasses({\n          userKey,\n          collegeName,\n          courseTerm: currentSection\n        }).unwrap();\n      } catch (e) {\n        console.warn('Error getting classes: ', e);\n      }\n    } else {\n      dispatch(resetClasses());\n    }\n  };\n\n  const isClassAdded = (courseCode: string, masterCourseCode: string) => {\n    return (\n      currentSection in addedClasses &&\n      masterCourseCode in addedClasses[currentSection] &&\n      addedClasses[currentSection][masterCourseCode].includes(courseCode)\n    );\n  };\n\n  const handleRefresh = () => {\n    fetchUserInfo(userKey);\n    fetchClasses();\n  };\n\n  const handleSearch = (searchPhrase: string) => {\n    if (listRef) {\n      listRef.scrollToOffset({ animated: true, offset: 0 });\n    }\n    dispatch(searchTermUpdated(searchPhrase));\n  };\n\n  const handleClassSelected = (courseCode: string) => {\n    dispatch(classSelected(courseCode));\n    if (Platform.OS === 'web') {\n      navigation.navigate('SingleClassPage');\n    } else {\n      bottomSheetRef.current?.snapToIndex(0);\n    }\n  };\n\n  const handleAddClass = (courseCode: string, masterCourseCode: string) => {\n    try {\n      addClass({\n        userKey,\n        courseCode,\n        courseTerm: currentSection,\n        userName,\n        masterCourseCode\n      }).unwrap();\n    } catch (e) {\n      console.warn('Add class error: ', e);\n    }\n  };\n\n  const handleRemoveClass = (courseCode: string, masterCourseCode: string) => {\n    try {\n      removeClass({\n        userKey,\n        courseCode,\n        courseTerm: currentSection,\n        userName,\n        masterCourseCode\n      }).unwrap();\n    } catch (e) {\n      console.warn('Add class error: ', e);\n    }\n  };\n\n  const handleMassImport = async () => {\n    const courseCodes = [\n      ...searchTerm.matchAll(/\\b[A-Z]+\\d+[A-Z]*\\s?[A-Z]+-\\d+\\b/g)\n    ];\n    if (!courseCodes[0]) {\n      showToast('No course codes found in search bar', 'maroon');\n      return;\n    }\n    const courseCodePairs = courseCodes.reduce((accumulator, courseCode) => {\n      const matches = courseCode[0].match(/(\\D{3,4})(\\d+[A-Z]?[A-Z]?)(.+)/);\n\n      if (!matches || matches.length !== 4) {\n        // Skip this course code\n        return accumulator;\n      }\n\n      const collegeParts = matches[3].split('-'); // Ex: [\"PO\", \"01\"]\n      const masterCourseCode = `${matches[1].trim()} ${matches[2].trim()} ${collegeParts[0].trim()}`;\n      const newCourseCode = `${matches[1].trim()} ${matches[2].trim()} ${matches[3].trim()}`;\n      if (isClassAdded(newCourseCode, masterCourseCode)) {\n        return accumulator;\n      }\n      return [...accumulator, { masterCourseCode, courseCode: newCourseCode }];\n    }, []);\n\n    if (courseCodePairs.length === 0) {\n      showToast('No new course codes found in search bar', 'maroon');\n      return;\n    }\n\n    const message = `Added ${courseCodePairs.length} class(es) to ${currentSection}`;\n\n    try {\n      await addMultipleClasses({\n        userKey,\n        courseCodePairs,\n        courseTerm: currentSection,\n        userName\n      }).unwrap();\n      showToast(message, 'green');\n      handleRefresh();\n    } catch (e) {\n      console.warn('Mass import error: ', e);\n      showToast('Error adding classes', 'maroon');\n    }\n  };\n\n  const handleSwapAddedClasses = async (from: number, to: number) => {\n    if (from === to) {\n      return;\n    }\n    try {\n      await swapAddedClasses({\n        firstPosition: from,\n        secondPosition: to,\n        userKey,\n        termToUpdate: currentSection,\n        userName: userData.userName\n      }).unwrap();\n    } catch (e) {\n      console.warn('Error swapping classes: ', e);\n    }\n  };\n\n  const renderItem = ({ item: [masterCourseCode, courseInfo] }) => {\n    // check if course is in addedClasses set and set to true if it is\n    const inItem = new Array(courseInfo.times.length);\n    let inItemSize = 0;\n    const schedule = courseInfo.times.map((time) => {\n      if (isClassAdded(time.courseCode, masterCourseCode)) {\n        inItem[inItemSize++] = time.courseCode;\n        return { ...time, added: true };\n      }\n      return { ...time, added: false };\n    });\n\n    return (\n      <Item\n        courseName={courseInfo.courseName}\n        masterCourseCode={masterCourseCode}\n        schedule={schedule}\n        menuOpen={menuOpen}\n        setIsMenuOpen={setMenuOpen}\n        darkMode={darkMode}\n        handleClassSelected={handleClassSelected}\n        handleAddClass={handleAddClass}\n        handleRemoveClass={handleRemoveClass}\n        inItem={inItem}\n      />\n    );\n  };\n\n  const accessoryLeft = (\n    <Layout style={{ flexDirection: 'row', backgroundColor: 'transparent' }}>\n      <TouchableOpacity\n        onPress={() => setAddedClassesVisible(!addedClassesVisible)}\n        disabled={!classes || Object.keys(classes).length === 0}\n        style={{ justifyContent: 'center', marginRight: 10 }}\n      >\n        <FontAwesome5\n          name=\"list-ul\"\n          size={24}\n          color={darkMode ? theme['color-basic-500'] : theme['color-basic-200']}\n        />\n        {length > 0 ? (\n          <Layout\n            style={{\n              position: 'absolute',\n              backgroundColor: darkMode ? 'red' : '#fff',\n              borderRadius: 10,\n              paddingHorizontal: 3,\n              right: -7,\n              top: -3\n            }}\n          >\n            <Text>{length}</Text>\n          </Layout>\n        ) : null}\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={{ justifyContent: 'center', marginRight: 10 }}\n        onPress={() => setFiltersMenuVisible(!filtersMenuVisible)}\n      >\n        <FontAwesome5\n          name=\"filter\"\n          size={22}\n          color={darkMode ? theme['color-basic-500'] : theme['color-basic-200']}\n        />\n      </TouchableOpacity>\n    </Layout>\n  );\n\n  const renderFilteredCollegesList = () => {\n    const filteredColleges = Object.keys(filters.colleges).filter(\n      (c) => filters.colleges[c]\n    );\n\n    if (filteredColleges.length < 5) {\n      return (\n        <Text\n          category=\"label\"\n          style={{ fontStyle: 'italic', marginTop: 5, color: '#fff' }}\n        >\n          {`Colleges: ${filteredColleges.join(', ')}`}\n        </Text>\n      );\n    }\n    return <Layout style={{ backgroundColor: 'transparent', marginTop: 20 }} />;\n  };\n\n  const dismissSuggestions = () => {\n    LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);\n    dispatch(suggestedClassesDimissed());\n  };\n\n  // Decide what content to render\n  let content: keyof JSX.IntrinsicElements | JSX.Element;\n\n  if (classListLoading || !userInfoSuccess) {\n    content = <Message title=\"Loading Classes\" item={<Spinner />} />;\n  } else if (isError) {\n    content = (\n      <Message\n        title=\"Error Loading Classes\"\n        item={<Button onPress={fetchClasses}>Refresh</Button>}\n      />\n    );\n  } else {\n    content = (\n      <List\n        style={{ backgroundColor: 'transparent' }}\n        contentContainerStyle={{ paddingBottom: 20 }}\n        ListHeaderComponent={\n          Object.entries(suggestedClasses).length > 0 &&\n          searchTerm.length === 0 && (\n            <List\n              ListHeaderComponent={\n                <Layout\n                  style={{\n                    marginLeft: 20,\n                    marginRight: 25,\n                    backgroundColor: 'transparent',\n                    flexDirection: 'row',\n                    justifyContent: 'space-between',\n                    alignItems: 'center'\n                  }}\n                >\n                  <Text category=\"label\" style={{ color: '#fff' }}>\n                    Suggested Electives\n                  </Text>\n                  <TouchableOpacity onPress={dismissSuggestions}>\n                    <FontAwesome5 name=\"times\" size={24} color=\"#fff\" />\n                  </TouchableOpacity>\n                </Layout>\n              }\n              style={{\n                backgroundColor: 'rgba(0,0,0,.2)',\n                borderRadius: 20,\n                margin: 10,\n                paddingBottom: 10,\n                paddingTop: 3\n              }}\n              contentContainerStyle={{ paddingBottom: 100 }}\n              data={Object.entries(suggestedClasses)}\n              renderItem={renderItem}\n              keyExtractor={([courseCode, _]) => courseCode}\n              onScroll={Keyboard.dismiss}\n              scrollEventThrottle={16}\n            />\n          )\n        }\n        data={Object.entries(renderedClasses).slice(\n          0,\n          RENDERED_RESULTS_LIMIT * page\n        )}\n        renderItem={renderItem}\n        keyExtractor={([courseCode, _]) => courseCode}\n        maxToRenderPerBatch={10}\n        ListEmptyComponent={\n          <Message\n            title=\"No Classes Found\"\n            item={<Button onPress={fetchClasses}>Refresh</Button>}\n          />\n        }\n        initialNumToRender={10}\n        showsVerticalScrollIndicator={Platform.OS === 'web'}\n        // ListHeaderComponent={() => <Layout style={{minHeight: 67, opacity: 0}}/>}\n        onEndReachedThreshold={0.5}\n        onEndReached={() => dispatch(endOfListReached())}\n        refreshControl={\n          <RefreshControl\n            refreshing={classListLoading}\n            onRefresh={handleRefresh}\n            title=\"Pull to refresh\"\n            tintColor={theme['color-basic-100']}\n            titleColor={theme['color-basic-100']}\n          />\n        }\n        ref={(ref) => {\n          setListRef(ref);\n        }}\n        onScroll={Keyboard.dismiss}\n        scrollEventThrottle={16}\n      />\n    );\n  }\n\n  return (\n    <Layout style={{ flex: 1 }}>\n      <LinearGradient\n        colors={\n          darkMode\n            ? [theme['color-basic-1100'], theme['color-basic-1100']]\n            : [theme['color-primary-500'], theme['color-success-500']]\n        }\n        style={{ width: '100%', margin: 0, flex: 1 }}\n        start={{ x: 0, y: 0 }}\n        end={{ x: 1, y: 0.4 }}\n      >\n        <LinearGradient\n          colors={[\n            // 'rgba(219,76,113,1)',\n            // 'rgba(219,76,113,00)',\n\n            'rgba(225,78,106,0)',\n            'rgba(225,78,106,0)'\n            // 'rgba(225,78,106,.6)',\n            // 'rgba(225,78,106,0)',\n          ]}\n          locations={[0, 1]}\n          style={{\n            zIndex: 1,\n            width: '100%',\n            paddingHorizontal: 20,\n            paddingTop: 14\n          }}\n        >\n          {isMobile && (\n            <CurrentTermLabel\n              navigation={navigation}\n              currentSection={currentSection}\n              textStyle={{ color: '#fff', paddingBottom: 5, marginLeft: 80 }}\n            />\n          )}\n          <SearchBar\n            accessoryLeft={accessoryLeft}\n            searchTerm={searchTerm}\n            onChangeText={handleSearch}\n            inputProps={{ autoCorrect: false }}\n            placeholder=\"Search classes...\"\n            showCancelButton={isMobile}\n            cancelButtonAction={handleRefresh}\n          />\n          {searchTerm?.length > 30 ? (\n            <TouchableOpacity\n              style={{ marginLeft: 60, marginTop: 5 }}\n              onPress={handleMassImport}\n            >\n              <Text style={{ color: '#fff' }}>\n                <FontAwesome5 name=\"file-import\" color=\"#fff\" />\n                {` Import Full Schedule`}\n              </Text>\n            </TouchableOpacity>\n          ) : null}\n          {renderFilteredCollegesList()}\n        </LinearGradient>\n\n        {content}\n      </LinearGradient>\n\n      <ModalContainer\n        setBackDropVisible={setAddedClassesVisible}\n        backDropVisible={addedClassesVisible}\n        title=\"Added Classes\"\n        modalStyle={{ maxWidth: 400 }}\n      >\n        {orderedAddedClasses && currentSection ? (\n          <ScrollView\n            style={{\n              backgroundColor: 'transparent',\n              flex: Platform.OS === 'web' ? undefined : 1\n            }}\n          >\n            <AddedClasses\n              setAddedClassesVisible={setAddedClassesVisible}\n              addedClasses={orderedAddedClasses[currentSection] || []}\n              handleRemoveClass={handleRemoveClass}\n              darkMode={darkMode}\n              handleSwapAddedClasses={handleSwapAddedClasses}\n              bottomSheetRef={bottomSheetRef}\n            />\n            {userData.starredClasses.length > 0 && (\n              <StarredClasses\n                bottomSheetRef={bottomSheetRef}\n                setAddedClassesVisible={setAddedClassesVisible}\n                courseTerm={currentSection}\n                darkMode={darkMode}\n              />\n            )}\n          </ScrollView>\n        ) : (\n          <Layout\n            style={{\n              flex: 1,\n              alignItems: 'center',\n              borderRadius: 20,\n              paddingTop: 50\n            }}\n          >\n            <Text>Loading</Text>\n            <Spinner />\n          </Layout>\n        )}\n      </ModalContainer>\n\n      <ModalContainer\n        setBackDropVisible={setFiltersMenuVisible}\n        backDropVisible={filtersMenuVisible}\n        title=\"Filters\"\n      >\n        <FilterClasses\n          setFiltersMenuVisible={setFiltersMenuVisible}\n          darkMode={darkMode}\n        />\n      </ModalContainer>\n\n      {Platform.OS !== 'web' && (\n        <SingleClassPage bottomSheetRef={bottomSheetRef} />\n      )}\n    </Layout>\n  );\n}\n","import { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport React from 'react';\n\nimport ClassesList from '../../classPages/ClassesList';\nimport SingleClassPage from '../../classPages/SingleClassPage';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function ClassListPage() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen\n        name=\"ClassesList\"\n        component={ClassesList}\n        options={{\n          headerShown: false,\n          title: ''\n        }}\n      />\n      <Stack.Screen\n        name=\"SingleClassPage\"\n        component={SingleClassPage}\n        options={{\n          headerShown: false\n        }}\n      />\n    </Stack.Navigator>\n  );\n}\n","import { Class } from '../../app/types';\n\nexport default class CalendarFunctions {\n  convertTo12HourTime(time) {\n    if (time.length !== 5) {\n      time = `0${time}`;\n    }\n    let hours = time.slice(0, 2);\n    const minutes = time.slice(3, 5);\n    let ampm = Number.parseInt(hours) > 12 ? 'pm' : 'am';\n    hours %= 12;\n    if (hours === 0) {\n      hours = 12;\n      ampm = 'pm';\n    }\n    return `${hours}:${minutes}${ampm}`;\n  }\n\n  getColor(string: string) {\n    let final = 0;\n    for (let charIndex = 0; charIndex < string.length; charIndex++) {\n      final += string.charCodeAt(charIndex);\n    }\n    final -= Number(final.toString()[0]) * 10 ** (final.toString().length - 1);\n    final /= 10 ** final.toString().length;\n    return `hsl(${180 * final + 90},${30 + 65 * final}%,${50 + 15 * final}%)`;\n  }\n\n  stringToColour(str: string) {\n    return this.getColor(str);\n  }\n\n  getMinutesDiff(startTime, endTime, minuteHeight) {\n    if (endTime > startTime) {\n      return (endTime - startTime) * minuteHeight;\n    }\n    if (startTime === endTime) {\n      return 0;\n    }\n    return (startTime - endTime) * -minuteHeight;\n  }\n\n  getFullClassData(courseCode: string, allClassData: any): Class {\n    const APIdata = allClassData;\n    const generalCourseCode = courseCode.split('-').slice(0, -1).join('-');\n    return APIdata[generalCourseCode];\n  }\n}\n","import React from 'react';\nimport {\n  Dimensions,\n  Platform,\n  Text,\n  TouchableOpacity,\n  View\n} from 'react-native';\n\nimport CalendarFunctions from './CalendarFunctions';\n\nexport default function renderItem(\n  masterClassInfo,\n  meetingTime,\n  courseCode,\n  handleClassSelected = (string: string) => {},\n  setMenuCourseCode: any,\n  disableLongPress: boolean = false,\n  extraTransparency: boolean = false\n) {\n  const calendarFun = new CalendarFunctions();\n  const universalHeight = (Dimensions.get('window').height - 50) / 12;\n  const minuteHeight = universalHeight / 60;\n\n  const [startHour, startMinute] = meetingTime.startTime.split(':');\n  const [endHour, endMinute] = meetingTime.endTime.split(':');\n  const color = calendarFun.stringToColour(masterClassInfo.masterCourseCode);\n  const code = courseCode.split(' ');\n\n  return (\n    <TouchableOpacity\n      key={Math.random()}\n      style={{\n        // @ts-ignore\n        backgroundColor: extraTransparency ? 'rgba(0, 0, 0, 0.5)' : color,\n        top: universalHeight * startHour + startMinute * minuteHeight,\n        height:\n          universalHeight * (endHour - startHour) +\n          calendarFun.getMinutesDiff(startMinute, endMinute, minuteHeight),\n        width: '100%',\n        position: 'absolute',\n        margin: 0,\n        justifyContent: 'center'\n      }}\n      onPress={() => {\n        handleClassSelected(masterClassInfo.masterCourseCode);\n      }}\n      onLongPress={() => {\n        if (!disableLongPress) {\n          setMenuCourseCode({ key: courseCode });\n        }\n      }}\n    >\n      {Platform.OS !== 'web' && (\n        <Text\n          adjustsFontSizeToFit\n          numberOfLines={5}\n          style={{\n            color: parseInt(color.slice(1), 16) > 9079434 ? 'black' : 'white',\n            fontSize: 11,\n            marginHorizontal: 3,\n            textAlign: 'center'\n          }}\n        >\n          {code[0]} {code[1]}\n          {'\\n'}\n          {code[2]}\n          {meetingTime.classLocation\n            ? `\\n(${meetingTime.classLocation})`\n            : null}\n        </Text>\n      )}\n      {Platform.OS === 'web' && (\n        <View style={{ flexDirection: 'column' }}>\n          <Text\n            style={{\n              color: parseInt(color.slice(1), 16) > 9079434 ? 'black' : 'white',\n              fontSize: Dimensions.get('window').width / 115,\n              fontWeight: 'bold',\n              marginHorizontal: 3,\n              textAlign: 'center'\n            }}\n          >\n            {code[0]} {code[1]} {code[2]}\n          </Text>\n          <Text\n            style={{\n              color: parseInt(color.slice(1), 16) > 9079434 ? 'black' : 'white',\n              fontSize: Dimensions.get('window').width / 125,\n              marginHorizontal: 3,\n              textAlign: 'center',\n              marginTop: 5\n            }}\n          >\n            {meetingTime.classLocation\n              ? `(${meetingTime.classLocation})`\n              : null}\n          </Text>\n        </View>\n      )}\n    </TouchableOpacity>\n  );\n}\n","import React from 'react';\nimport { Dimensions, Text, TouchableOpacity } from 'react-native';\nimport Toast from 'react-native-root-toast';\n\nimport CalendarFunctions from './CalendarFunctions';\n\nexport default function renderCustomEvent(\n  event,\n  userData,\n  userKey,\n  editUser,\n  setMenuEvent,\n  disableLongPress: boolean = false,\n  extraTransparency = false\n) {\n  const universalHeight = (Dimensions.get('window').height - 50) / 12;\n  const minuteHeight = universalHeight / 60;\n  const calendarFun = new CalendarFunctions();\n  const [startHour, startMinute] = event.startTime.split(':');\n  const [endHour, endMinute] = event.endTime.split(':');\n  const color = calendarFun.stringToColour(event.name);\n\n  function removeEvent(event: any) {\n    editUser({\n      userKey,\n      userName: userData.userName,\n      fields: JSON.stringify({\n        removeCustomEvent: {\n          name: event.name,\n          startTime: event.startTime,\n          endTime: event.endTime,\n          days: event.days\n        }\n      })\n    })\n      .unwrap()\n      .catch(() => {\n        Toast.show('Failed to remove event.\\nPlease try again later', {\n          duration: Toast.durations.SHORT,\n          opacity: 1,\n          position: -100,\n          backgroundColor: 'grey',\n          shadow: false\n        });\n      });\n  }\n\n  return (\n    <TouchableOpacity\n      onLongPress={() => {\n        if (!disableLongPress) {\n          setMenuEvent({ key: event.name, event });\n        }\n        // Alert.alert(\n        //   event.name,\n        //   `${calendarFun.convertTo12HourTime(\n        //     event.startTime\n        //   )} - ${calendarFun.convertTo12HourTime(event.endTime)}`,\n        //   [\n        //     {\n        //       text: 'Remove',\n        //       onPress: () => {\n        //         removeEvent(event);\n        //       }\n        //     },\n        //     {\n        //       text: 'Back',\n        //       onPress: () => {},\n        //       style: 'cancel'\n        //     }\n        //   ],\n        //   { cancelable: true }\n        // );\n      }}\n      key={event.name + event.days}\n      style={{\n        backgroundColor: extraTransparency ? 'rgba(0, 0, 0, 0.5)' : color,\n        top: universalHeight * startHour + startMinute * minuteHeight,\n        height:\n          universalHeight * (endHour - startHour) +\n          calendarFun.getMinutesDiff(startMinute, endMinute, minuteHeight),\n        width: '100%',\n        position: 'absolute',\n        justifyContent: 'center'\n      }}\n    >\n      <Text\n        adjustsFontSizeToFit\n        numberOfLines={endHour - startHour + 2}\n        style={{ color: 'white', textAlign: 'center' }}\n      >\n        {event.name}\n      </Text>\n    </TouchableOpacity>\n  );\n}\n","import { Entypo, FontAwesome5 } from '@expo/vector-icons';\nimport BottomSheet from '@gorhom/bottom-sheet/lib/typescript/components/bottomSheet/BottomSheet';\nimport { useNavigation } from '@react-navigation/native';\nimport { Button, useTheme } from '@ui-kitten/components';\nimport React, { useEffect, useRef, useState } from 'react';\nimport {\n  Dimensions,\n  PanResponder,\n  Platform,\n  ScrollView,\n  Text,\n  View,\n  useWindowDimensions,\n  TouchableOpacity\n} from 'react-native';\nimport Animated from 'react-native-reanimated';\nimport { selectDarkMode, selectUserKey } from '../../app/appDataSlice';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { CustomEvent } from '../../app/types';\nimport ModalContainer from '../../components/ModalContainer';\nimport { getMasterCourseCodeFromCourseCode, showToast } from '../../functions';\nimport { useRemoveClassMutation } from '../api/classPagesApi';\nimport { useEditUserMutation, useGetUserInfoQuery } from '../api/usersApi';\nimport { CurrentTermLabel } from '../classPages/ClassesList';\nimport SingleClassPage from '../classPages/SingleClassPage';\nimport {\n  classSelected,\n  selectClassesList\n} from '../classPages/classPagesSlice';\nimport ClassListPage from '../combinedCalender/classList';\nimport { base_URL } from '../notifications/constants';\nimport CalendarFunctions from './CalendarFunctions';\nimport renderItem from './ScheduledItem';\nimport renderCustomEvent from './customEvent';\n\n// LogBox.ignoreAllLogs();\nconst DIVIDER_WIDTH = 15;\nconst WINDOW_MIN_WIDTH = 340;\n\nexport default function CalendarRender({\n  route: {\n    params: { overrideData }\n  }\n}) {\n  const [showOverlay, setShowOverlay] = useState(false);\n  const isWeb = Platform.OS === 'web';\n  const theme = useTheme();\n  const [editUser] = useEditUserMutation();\n  const [removeClass] = useRemoveClassMutation();\n  const userKey = useAppSelector(selectUserKey);\n  const isThreeDay = useAppSelector(\n    (state) => state.appData.calendar.isThreeDay\n  );\n  const isMobile = useAppSelector((state) => state.appData.secure.isMobile);\n  const navigation = useNavigation();\n\n  const topBar = useRef(null);\n  const verticalRef = useRef(null);\n  const [isRightWindowOpen, setIsRightWindowOpen] = useState(true);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [startingOffset, setStartingOffset] = useState({\n    x: 0,\n    y: isWeb ? 500 : 525\n  });\n  const dimensions = useWindowDimensions();\n  const [rightWidth, setRightWidth] = useState(\n    (2 * (dimensions.width - DIVIDER_WIDTH - 100)) / 7\n  );\n  const [menuCourseCode, setMenuCourseCode] = useState<\n    { key: string } | boolean\n  >(false);\n  const [menuCustomEvent, setMenuCustomEvent] = useState<\n    { key: string; event: CustomEvent } | boolean\n  >(false);\n  const leftWidth = dimensions.width - DIVIDER_WIDTH;\n\n  const _panResponder = useRef(getPanResponder());\n  const dispatch = useAppDispatch();\n  const bottomSheetRef = useRef<BottomSheet>(null);\n  const darkMode: boolean = useAppSelector(selectDarkMode);\n  const calendarFun = new CalendarFunctions();\n  const [isDividerClicked, setIsDividerClicked] = useState(false);\n  const universalHeight = (Dimensions.get('window').height - 50) / 12;\n  const threeDayWidth = (Dimensions.get('window').width - 75) / 3;\n  const fiveDayWidth = isMobile\n    ? (Dimensions.get('window').width - 75) / 5\n    : (Dimensions.get('window').width - 75) / 7;\n  const [classes, setClasses] = useState({\n    Monday: [],\n    Tuesday: [],\n    Wednesday: [],\n    Thursday: [],\n    Friday: [],\n    Saturday: [],\n    Sunday: []\n  });\n  const days = [\n    { day: 'Mon', id: 'Monday' },\n    { day: 'Tues', id: 'Tuesday' },\n    { day: 'Wed', id: 'Wednesday' },\n    { day: 'Thurs', id: 'Thursday' },\n    { day: 'Fri', id: 'Friday' },\n    { day: 'Sat', id: 'Saturday' },\n    { day: 'Sun', id: 'Sunday' }\n  ];\n  const times = [\n    '12:00 AM',\n    '1:00 AM',\n    '2:00 AM',\n    '3:00 AM',\n    '4:00 AM',\n    '5:00 AM',\n    '6:00 AM',\n    '7:00 AM',\n    '8:00 AM',\n    '9:00 AM',\n    '10:00 AM',\n    '11:00 AM',\n    '12:00 PM',\n    '1:00 PM',\n    '2:00 PM',\n    '3:00 PM',\n    '4:00 PM',\n    '5:00 PM',\n    '6:00 PM',\n    '7:00 PM',\n    '8:00 PM',\n    '9:00 PM',\n    '10:00 PM',\n    '11:00 PM'\n  ];\n\n  const { data: userData } = useGetUserInfoQuery(userKey);\n  const orderedAddedClasses = useAppSelector(\n    (state) => state.appData.classPages.orderedAddedClasses\n  );\n  const allClassData = useAppSelector(selectClassesList);\n  const [overrideClassesToRender, setOverrideClassesToRender] = useState([]);\n  const currentSection = useAppSelector(\n    (state) => state.appData.classPages.currentSection\n  );\n\n  const today = new Date().getDay() !== 0 ? new Date().getDay() - 1 : 6;\n\n  useEffect(() => {\n    try {\n      if (overrideData.length !== 0) {\n        getOverrideCourseData().then(() => {});\n      }\n    } catch (e) {\n      console.warn(e);\n    }\n    if (isWeb) {\n      verticalRef.current?.scrollTo({\n        y: Dimensions.get('screen').height / 1.9\n      });\n    }\n\n    // Recalculate time\n    setInterval(() => {\n      setCurrentTime(new Date());\n    }, 1000000);\n  }, []);\n\n  useEffect(() => {\n    _panResponder.current = getPanResponder();\n  }, [dimensions.width]);\n\n  async function getOverrideCourseData() {\n    const stringOverrideData = JSON.stringify(\n      overrideData.map((course) => {\n        return course.courseCode.slice(0, -3);\n      })\n    );\n    const response = await fetch(\n      `${base_URL}/classes/claremontColleges?listOfCourses=${stringOverrideData}&courseTerm=${overrideData[0].courseTerm}`,\n      {\n        headers: {\n          userKey,\n          'content-type': 'application/json'\n        },\n        method: 'GET'\n      }\n    );\n    setOverrideClassesToRender(await response.json());\n  }\n\n  const renderCustomEvents = (\n    elem,\n    extraTransparency = false,\n    disableInteractions = false\n  ) => {\n    const finalRender = [];\n    if (!userData.customEvents) {\n      return null;\n    }\n    for (const event of userData.customEvents) {\n      if (event.days.length > 0) {\n        if (event.days.includes(elem.id)) {\n          finalRender.push(\n            renderCustomEvent(\n              event,\n              userData,\n              userKey,\n              editUser,\n              setMenuCustomEvent,\n              disableInteractions,\n              extraTransparency\n            )\n          );\n        }\n      } else if (\n        event.date &&\n        eventIsThisDay(elem.id, new Date(event.date)) &&\n        showThisWeek(new Date(event.date))\n      ) {\n        finalRender.push(\n          renderCustomEvent(\n            event,\n            userData,\n            userKey,\n            editUser,\n            setMenuCustomEvent,\n            disableInteractions,\n            extraTransparency\n          )\n        );\n      }\n    }\n    return finalRender;\n  };\n\n  function getPanResponder() {\n    return PanResponder.create({\n      // @ts-ignore\n      onMoveShouldSetResponderCapture: () => true,\n      onMoveShouldSetPanResponderCapture: () => true,\n\n      onPanResponderGrant: (e, gestureState) => {\n        setIsDividerClicked(true);\n      },\n\n      onPanResponderMove: (e, gestureState) => {\n        const newRight =\n          gestureState.moveX > dimensions.width - 100\n            ? 100\n            : dimensions.width - gestureState.moveX;\n\n        if (newRight < WINDOW_MIN_WIDTH) {\n          setRightWidth(WINDOW_MIN_WIDTH);\n        } else if (newRight > dimensions.width - WINDOW_MIN_WIDTH) {\n          setRightWidth(dimensions.width - WINDOW_MIN_WIDTH);\n        } else {\n          setRightWidth(newRight);\n        }\n      },\n\n      onPanResponderRelease: (e, gestureState) => {\n        setIsDividerClicked(false);\n      }\n    });\n  }\n\n  function eventIsThisDay(dayString: string, date: Date) {\n    const dayOfWeek = adjustDays(date.getDay());\n    return dayString === days[dayOfWeek].id;\n  }\n\n  function adjustDays(dayOfWeek) {\n    if (dayOfWeek === 0) {\n      dayOfWeek = 6;\n    } else {\n      dayOfWeek -= 1;\n    }\n    return dayOfWeek;\n  }\n\n  function getMs(hours, minutes, seconds) {\n    let final = 0;\n    final += hours * 3600000;\n    final += minutes * 60000;\n    final += seconds * 1000;\n    return final;\n  }\n\n  function showThisWeek(dateOfEvent: Date) {\n    const currentDate = new Date();\n    const currentDayOfWeek = adjustDays(currentDate.getDay());\n    const startOfWeek = new Date(\n      currentDate.valueOf() -\n        currentDayOfWeek * 86400000 -\n        getMs(\n          currentDate.getHours(),\n          currentDate.getMinutes(),\n          currentDate.getSeconds()\n        )\n    );\n    const endOfWeek = new Date(\n      currentDate.valueOf() +\n        (6 - currentDayOfWeek) * 86400000 +\n        getMs(\n          23 - currentDate.getHours(),\n          59 - currentDate.getMinutes(),\n          59 - currentDate.getSeconds()\n        )\n    );\n    return !(\n      dateOfEvent.valueOf() > endOfWeek.valueOf() ||\n      dateOfEvent.valueOf() < startOfWeek.valueOf()\n    );\n  }\n\n  const handleClassSelected = (courseCode: string) => {\n    dispatch(classSelected(courseCode));\n    if (Platform.OS === 'web') {\n      // @ts-ignore\n      navigation.navigate('SingleClassPage');\n    } else {\n      bottomSheetRef.current?.snapToIndex(0);\n    }\n  };\n\n  const handleRemoveClass = () => {\n    if (typeof menuCourseCode !== 'object') {\n      return;\n    }\n    const masterCourseCode = getMasterCourseCodeFromCourseCode(\n      menuCourseCode.key\n    );\n    try {\n      removeClass({\n        userKey,\n        courseCode: menuCourseCode.key,\n        courseTerm: currentSection,\n        userName: userData.userName,\n        masterCourseCode\n      }).unwrap();\n      setMenuCourseCode(false);\n    } catch (e) {\n      console.warn('Add class error: ', e);\n      showToast('Failed to remove class', 'red');\n    }\n  };\n\n  function renderOverlayOption() {\n    return (\n      <TouchableOpacity\n        style={{\n          borderWidth: 1,\n          borderColor: 'rgba(0,0,0,0.2)',\n          alignItems: 'center',\n          justifyContent: 'center',\n          position: 'absolute',\n          bottom: 50,\n          right: isWeb ? undefined : 25,\n          left: isWeb ? 100 : undefined,\n          width: 100,\n          height: 100,\n          backgroundColor: 'rgba(149,56,182,0.59)',\n          borderRadius: 50\n        }}\n        onPress={() => {\n          setShowOverlay(!showOverlay);\n        }}\n      >\n        <Text>\n          {`${showOverlay ? 'Disable' : 'Enable'}\\n`}\n          Overlay\n        </Text>\n      </TouchableOpacity>\n    );\n  }\n\n  const handleRemoveCustomEvent = () => {\n    if (typeof menuCustomEvent !== 'object') {\n      return;\n    }\n    const { event } = menuCustomEvent;\n    editUser({\n      userKey,\n      userName: userData.userName,\n      fields: JSON.stringify({\n        removeCustomEvent: {\n          name: event.name,\n          startTime: event.startTime,\n          endTime: event.endTime,\n          days: event.days\n        }\n      })\n    })\n      .unwrap()\n      .then(() => {\n        setMenuCustomEvent(false);\n      })\n      .catch((e) => {\n        showToast('Failed to remove event', 'red');\n        console.warn(\"Couldn't remove custom event: \", e);\n      });\n  };\n\n  function renderDashes() {\n    const final = [];\n    for (let i = 0; i < 24; i++) {\n      final.push(\n        <View\n          key={i}\n          style={{\n            width: (isThreeDay ? threeDayWidth : fiveDayWidth) * 0.73016,\n            marginLeft: (isThreeDay ? threeDayWidth : fiveDayWidth) * 0.14286,\n            top: universalHeight * i,\n            position: 'absolute',\n            height: universalHeight,\n            borderBottomWidth: Platform.OS === 'web' ? 1.2 : 0.7,\n            borderBottomColor: darkMode ? 'rgb(68,68,68)' : 'rgb(204,204,204)'\n          }}\n        />\n      );\n    }\n    return final;\n  }\n  console.log(orderedAddedClasses)\n\n  const renderClasses = (\n    elem,\n    extraTransparency = false,\n    disableInteractions = false\n  ) => {\n    const classes = [];\n    Object.keys(orderedAddedClasses).map((term) => {\n      if (term === currentSection) {\n        // @ts-ignore\n        orderedAddedClasses[term].toReversed().map((courseCode) => {\n          try {\n            const data = calendarFun.getFullClassData(courseCode, allClassData);\n            if (!data) return <View />; // catch for somehow missing data; usually cached issue or missing term information; not sure\n            const data2 = data.times.find(\n              (time) => time.courseCode === courseCode\n            );\n            for (const meetingTime of data2.courseSchedule) {\n              for (const day in meetingTime.daysOfTheWeek) {\n                if (meetingTime.daysOfTheWeek[day] === elem.id) {\n                  classes.push(\n                    renderItem(\n                      data,\n                      meetingTime,\n                      courseCode,\n                      handleClassSelected,\n                      setMenuCourseCode,\n                      disableInteractions,\n                      extraTransparency\n                    )\n                  );\n                }\n              }\n            }\n          } catch (e) {\n            console.warn(e);\n          }\n        });\n      }\n    });\n    return classes;\n  };\n\n  function renderClassesForOverride(elem) {\n    const classes = [];\n    if (overrideClassesToRender.length > 0) {\n      for (const courseCode of overrideData.map((course) => {\n        return course.courseCode;\n      })) {\n        try {\n          const data = overrideClassesToRender.find((course) =>\n            course.times.some(\n              (courseTime) => courseTime.courseCode === courseCode\n            )\n          );\n          const data2 = data.times.find(\n            (time) => time.courseCode === courseCode\n          );\n          for (const meetingTime of data2.courseSchedule) {\n            for (const day in meetingTime.daysOfTheWeek) {\n              if (meetingTime.daysOfTheWeek[day] === elem.id) {\n                classes.push(\n                  renderItem(\n                    data,\n                    meetingTime,\n                    courseCode,\n                    handleClassSelected,\n                    setMenuCourseCode,\n                    true\n                  )\n                );\n              }\n            }\n          }\n        } catch (e) {\n          console.warn(e);\n        }\n      }\n    }\n    return classes;\n  }\n\n  function renderDeleteModal(\n    event: { key: string; [key: string]: any } | boolean,\n    onRemove: () => void,\n    onCancel: () => void\n  ) {\n    return (\n      <ModalContainer\n        backDropVisible={!!event}\n        title={typeof event === 'object' ? event.key : ''}\n        setBackDropVisible={onCancel}\n        modalStyle={{ maxHeight: 200 }}\n        modalProps={{ animationOut: 'fadeOut' }}\n      >\n        <View\n          style={{\n            flex: 1,\n            alignItems: 'center',\n            justifyContent: 'center',\n            borderRadius: 20,\n            backgroundColor: darkMode\n              ? theme['color-basic-900']\n              : theme['color-basic-100']\n          }}\n        >\n          <Button style={{ marginBottom: 10 }} onPress={onRemove}>\n            Remove\n          </Button>\n          <Button appearance=\"outline\" onPress={onCancel}>\n            Cancel\n          </Button>\n        </View>\n      </ModalContainer>\n    );\n  }\n\n  function masterRender(elem) {\n    if (overrideClassesToRender.length !== 0) {\n      if (showOverlay) {\n        return (\n          <View>\n            {renderClassesForOverride(elem)}\n            {userData?.addedClasses && renderClasses(elem, true, true)}\n            {userData?.addedClasses && renderCustomEvents(elem, true, true)}\n          </View>\n        );\n      }\n      return <View>{renderClassesForOverride(elem)}</View>;\n    }\n    return (\n      <View>\n        {userData?.addedClasses && renderClasses(elem)}\n        {userData?.addedClasses && renderCustomEvents(elem)}\n      </View>\n    );\n  }\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        backgroundColor: darkMode ? null : 'white',\n        flexDirection: 'row',\n        borderRadius: 10\n      }}\n    >\n      <Animated.View\n        style={[\n          { flex: 1 },\n          !isMobile && { minWidth: WINDOW_MIN_WIDTH, width: leftWidth }\n        ]}\n      >\n        <View style={{ flexDirection: 'row', justifyContent: 'space-between' }}>\n          {/* Times */}\n          {overrideData.length === 0 && (\n            <CurrentTermLabel\n              navigation={navigation}\n              currentSection={currentSection}\n              style={{ margin: 10 }}\n            />\n          )}\n\n          <Button\n            accessoryRight={() => (\n              <FontAwesome5\n                name={isRightWindowOpen ? 'chevron-right' : 'chevron-left'}\n                size={20}\n                color={darkMode ? 'white' : 'black'}\n              />\n            )}\n            onPress={() => setIsRightWindowOpen(!isRightWindowOpen)}\n            appearance=\"ghost\"\n            status=\"basic\"\n          >\n            <Text style={{ color: '#000' }}>\n              {isRightWindowOpen ? '' : 'Open List'}\n            </Text>\n          </Button>\n        </View>\n        <ScrollView\n          horizontal\n          snapToInterval={isThreeDay ? threeDayWidth : fiveDayWidth}\n          showsHorizontalScrollIndicator={false}\n          style={{ marginLeft: 75, height: isWeb ? 43 : undefined }}\n          ref={topBar}\n        >\n          <View style={{ flexDirection: 'row' }}>\n            {days.map((elem, index) => {\n              return (\n                <View key={index}>\n                  <View\n                    style={{\n                      borderColor: darkMode ? '#7a7a7a' : '#525252',\n                      borderBottomWidth: 1,\n                      width: '100%',\n                      borderRadius: index === today ? 5 : 0,\n                      backgroundColor:\n                        index === today ? theme['color-success-400'] : null\n                    }}\n                  >\n                    <Animated.Text\n                      style={{\n                        textAlign: 'center',\n                        width: isThreeDay ? threeDayWidth : fiveDayWidth,\n                        color:\n                          index === today\n                            ? 'white'\n                            : darkMode\n                            ? 'white'\n                            : 'black'\n                      }}\n                    >\n                      {elem.day}\n                    </Animated.Text>\n                  </View>\n                </View>\n              );\n            })}\n          </View>\n        </ScrollView>\n        <ScrollView\n          contentOffset={startingOffset}\n          showsVerticalScrollIndicator={isWeb}\n          bounces={false}\n          ref={verticalRef}\n        >\n          <View style={{ flexDirection: 'row' }}>\n            <View style={{ justifyContent: 'space-around' }}>\n              {times.map((time, index) => {\n                return (\n                  <Text\n                    key={index}\n                    style={{\n                      height: universalHeight,\n                      width: 75,\n                      borderWidth: 1,\n                      borderColor: darkMode ? '#7a7a7a' : '#525252',\n                      textAlign: 'center',\n                      color: darkMode ? '#7a7a7a' : '#525252'\n                    }}\n                  >\n                    {time}\n                  </Text>\n                );\n              })}\n            </View>\n            {/* Classes */}\n            <ScrollView\n              horizontal\n              snapToInterval={isThreeDay ? threeDayWidth : fiveDayWidth}\n              decelerationRate=\"normal\"\n              showsHorizontalScrollIndicator={isWeb}\n              bounces={false}\n              scrollEventThrottle={1}\n              onScroll={(e) =>\n                topBar.current.scrollTo({\n                  x: e.nativeEvent.contentOffset.x,\n                  animated: false,\n                  useNativeDriver: true\n                })\n              }\n              onMomentumScrollBegin={(e) =>\n                topBar.current.scrollTo({\n                  x: e.nativeEvent.contentOffset.x,\n                  animated: false,\n                  useNativeDriver: true\n                })\n              }\n            >\n              <View style={{ flexDirection: 'row' }}>\n                {days.map((elem, index) => {\n                  return (\n                    <View key={index}>\n                      {renderDashes()}\n                      {/* Current Time Indicator */}\n                      {index === today && (\n                        <View\n                          style={{\n                            top:\n                              universalHeight * new Date().getHours() +\n                              new Date().getMinutes() * (universalHeight / 60),\n                            position: 'absolute',\n                            height: 2,\n                            width: '100%',\n                            backgroundColor: 'red',\n                            justifyContent: 'center',\n                            zIndex: 10\n                          }}\n                        >\n                          <View\n                            style={{\n                              width: 10,\n                              height: 10,\n                              backgroundColor: 'red',\n                              borderRadius: 5,\n                              position: 'relative',\n                              right: 4\n                            }}\n                          />\n                        </View>\n                      )}\n\n                      <View\n                        key={elem.day}\n                        style={{\n                          width: isThreeDay ? threeDayWidth : fiveDayWidth\n                        }}\n                      >\n                        {masterRender(elem)}\n                      </View>\n                      <View\n                        style={{\n                          height: '100%',\n                          width: 1,\n                          backgroundColor: darkMode ? '#7a7a7a' : '#525252'\n                        }}\n                      />\n                    </View>\n                  );\n                })}\n              </View>\n            </ScrollView>\n          </View>\n        </ScrollView>\n        {Platform.OS !== 'web' && Object.entries(overrideData).length === 0 && (\n          <SingleClassPage bottomSheetRef={bottomSheetRef} />\n        )}\n      </Animated.View>\n      {!isMobile && isRightWindowOpen && (\n        <View\n          style={[\n            {\n              width: DIVIDER_WIDTH,\n              alignItems: 'center',\n              justifyContent: 'center'\n            },\n            isDividerClicked\n              ? { backgroundColor: '#666' }\n              : { backgroundColor: '#e2e2e2' }\n          ]}\n          {..._panResponder.current.panHandlers}\n        >\n          <Entypo name=\"dots-three-vertical\" size={20} />\n        </View>\n      )}\n      <Animated.View\n        style={!isMobile && { width: isRightWindowOpen ? rightWidth : 0 }}\n      >\n        {!isMobile && <ClassListPage />}\n      </Animated.View>\n      {renderDeleteModal(menuCourseCode, handleRemoveClass, () => {\n        setMenuCourseCode(false);\n      })}\n      {renderDeleteModal(menuCustomEvent, handleRemoveCustomEvent, () => {\n        setMenuCustomEvent(false);\n      })}\n      {overrideData.length > 0 && renderOverlayOption()}\n    </View>\n  );\n}\n","import React from 'react';\nimport { LogBox } from 'react-native';\n\nimport CalendarRender from './CalendarRender';\n\nLogBox.ignoreAllLogs();\n\nexport default function CalendarPage({ navigation }) {\n  return (\n    <CalendarRender\n      route={{\n        params: {\n          overrideData: []\n        }\n      }}\n    />\n  );\n}\n\nconst myStyles = {\n  input: {\n    height: 50,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  },\n  indentedInput: {\n    height: 50,\n    marginVertical: 12,\n    borderWidth: 1,\n    padding: 10,\n    marginRight: 12,\n    marginLeft: 30\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white'\n  },\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 12,\n    paddingHorizontal: 32,\n    borderRadius: 4,\n    elevation: 3,\n    backgroundColor: 'black'\n  },\n  timeButton: {\n    width: 100,\n    height: 50,\n    marginHorizontal: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 4,\n    backgroundColor: '#c45269'\n  },\n  timeText: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white'\n  },\n  actualTimeText: {\n    fontSize: 13,\n    lineHeight: 18,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white'\n  }\n};\n\nconst sponsorPageStyles = {\n  container: {\n    flex: 1,\n    backgroundColor: 'white'\n    // alignItems: 'center',\n  },\n  header: {\n    marginTop: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%'\n  },\n  address: {\n    alignItems: 'center',\n    margin: 10,\n    borderColor: 'black',\n    borderWidth: 1,\n    padding: 10\n  },\n  video: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-start'\n  },\n  title: {\n    fontSize: 26,\n    marginLeft: 10\n  },\n  logo: {\n    width: '100%',\n    height: 100\n  },\n  description: {\n    borderWidth: 1,\n    margin: 10,\n    borderColor: '#5d5c5c',\n    borderRadius: 5,\n    width: '95%',\n    padding: 10,\n    backgroundColor: 'rgba(178,166,166,0.22)'\n  },\n  couponContainer: {\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 20,\n    marginBottom: 20\n  },\n  coupon: {\n    width: 400,\n    height: 267\n  },\n  imageGallery: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    margin: 10,\n    marginBottom: 0\n  },\n  imageStyle: {\n    width: 150,\n    height: 150,\n    paddingTop: 100,\n    margin: 5\n  },\n  headerText: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  }\n};\n","import { Layout } from '@ui-kitten/components';\nimport React from 'react';\n\nexport default function WrapItems({ childStyle, children, ...LayoutProps }) {\n  return (\n    <Layout {...LayoutProps}>\n      {React.Children.map(children, (child) => (\n        <Layout style={childStyle}>{child}</Layout>\n      ))}\n    </Layout>\n  );\n}\n","import DateTimePicker from '@react-native-community/datetimepicker';\nimport { useNavigation } from '@react-navigation/native';\nimport {\n  Button,\n  Text,\n  CheckBox,\n  Input,\n  Layout,\n  Select,\n  SelectItem\n} from '@ui-kitten/components';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport {\n  Keyboard,\n  Platform,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  View\n} from 'react-native';\nimport Toast from 'react-native-root-toast';\nimport Loader from 'react-native-three-dots-loader';\n\nimport { selectUserKey } from '../../app/appDataSlice';\nimport { useAppSelector } from '../../app/hooks';\nimport WrapItems from '../../components/WrapItems';\nimport { useEditUserMutation, useGetUserInfoQuery } from '../api/usersApi';\n\nexport default function CreateCustomEvent() {\n  const [editUser] = useEditUserMutation();\n  const [showDots, setShowDots] = useState(false);\n  const navigation = useNavigation();\n  const dateToUse = new Date();\n  const [selectedDate, setSelectedDate] = useState(dateToUse);\n  const [isOneDay, setIsOneDay] = useState(false);\n  const [allValuesPopulated, setAllValuesPopulated] = useState(false);\n  const [selectedIndex, setSelectedIndex] = useState([]);\n  const [daysArray, setDaysArray] = useState([]);\n  const [startTime, setStartTime] = useState(new Date());\n  const [endTime, setEndTime] = useState(new Date());\n  const [eventTitle, setEventTitle] = useState('');\n  const userKey = useAppSelector(selectUserKey);\n  const { data: userData } = useGetUserInfoQuery(userKey, {\n    skip: !userKey\n  });\n\n  const daysOfWeek = [\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n    'Sunday'\n  ];\n\n  useEffect(() => {\n    setAllValuesPopulated(\n      (isOneDay\n        ? selectedDate.toISOString() !== dateToUse.toISOString()\n        : daysArray.length >= 1) &&\n        eventTitle !== '' &&\n        startTime < endTime\n    );\n  }, [daysArray, eventTitle, startTime, endTime, selectedDate, isOneDay]);\n\n  function addEvent() {\n    setShowDots(true);\n    editUser({\n      userKey,\n      userName: userData.userName,\n      fields: JSON.stringify({\n        addCustomEvent: {\n          name: eventTitle,\n          startTime: startTime.toTimeString().slice(0, 5),\n          endTime: endTime.toTimeString().slice(0, 5),\n          days: daysArray,\n          date:\n            selectedDate.toISOString() !== dateToUse.toISOString()\n              ? selectedDate.toISOString()\n              : null\n        }\n      })\n    })\n      .unwrap()\n      .then(async () => {\n        setTimeout(() => {\n          setShowDots(false);\n          setDaysArray([]);\n          navigation.goBack();\n        }, 2000);\n      })\n      .catch(() => {\n        setShowDots(false);\n        Toast.show('Failed to add event.\\nPlease try again later', {\n          duration: Toast.durations.LONG,\n          opacity: 1,\n          position: -100,\n          backgroundColor: 'grey',\n          shadow: false\n        });\n      });\n    /*\n        fetch(base_URL + '/users/' + userData.userName, {\n            method: 'PATCH',\n            body: JSON.stringify({\n                \"addCustomEvent\": {\n                    \"name\": eventTitle,\n                    \"startTime\": startTime.toTimeString().slice(0, 5),\n                    \"endTime\": endTime.toTimeString().slice(0, 5),\n                    \"days\": daysArray\n                },\n            }),\n            headers: {\n                'content-type': 'application/json',\n                userKey: userKey\n            }\n        }).then((res) => {\n            if (res.ok) {\n                navigation.goBack()\n            } else {\n                Toast.show(\n                    \"Failed to add event\\nStatus: \" + res.status,\n                    {\n                        duration: Toast.durations.LONG,\n                        opacity: 1,\n                        position: -100,\n                        backgroundColor: 'grey',\n                        shadow: false,\n                    }\n                );\n            }\n        }) */\n  }\n\n  // Needed because Android date picker uses a modal\n  const [showTimePickerAndroid, setShowTimePickerAndroid] = useState(false);\n\n  const timePickerOptions = useMemo(\n    () => ({\n      'Start Time': { time: startTime, setTime: setStartTime },\n      'End Time': { time: endTime, setTime: setEndTime }\n    }),\n    [startTime, setStartTime, endTime, setEndTime]\n  );\n\n  const formatAMPM = (date: Date) => {\n    let hours = date.getHours();\n    let minutes: string | number = date.getMinutes();\n    const ampm = hours >= 12 ? 'pm' : 'am';\n    hours %= 12;\n    hours = hours || 12;\n    minutes = minutes < 10 ? `0${minutes}` : minutes;\n    return `${hours}:${minutes} ${ampm}`;\n  };\n\n  const Title = (\n    <Layout\n      style={{\n        flexDirection: 'row',\n        justifyContent: 'space-evenly',\n        alignItems: 'center',\n        marginTop: 15\n      }}\n    >\n      <Input\n        label=\"Title\"\n        disabled={showDots}\n        placeholder=\"Title of Event\"\n        value={eventTitle}\n        style={{ flex: 5 }}\n        onChangeText={(title) => {\n          setEventTitle(title);\n        }}\n      />\n    </Layout>\n  );\n\n  function TimePicker() {\n    if (Platform.OS === 'android') {\n      return (\n        <Layout\n          style={{\n            flexDirection: 'row',\n            justifyContent: 'space-around'\n          }}\n        >\n          {Object.entries(timePickerOptions).map(\n            ([label, { time, setTime }], i) => (\n              <Layout key={i} style={{ alignItems: 'center' }}>\n                <Text category=\"label\" style={{ marginBottom: 5 }}>\n                  {label}\n                </Text>\n                <Button\n                  onPress={() => {\n                    setShowTimePickerAndroid(true);\n                  }}\n                >\n                  {formatAMPM(time)}\n                </Button>\n                {showTimePickerAndroid && (\n                  <DateTimePicker\n                    mode=\"time\"\n                    onChange={(change, date) => {\n                      setTime(date);\n                      setShowTimePickerAndroid(false);\n                    }}\n                    value={time}\n                  />\n                )}\n              </Layout>\n            )\n          )}\n        </Layout>\n      );\n    }\n    if (Platform.OS === 'ios') {\n      return (\n        <Layout\n          style={{\n            flexDirection: 'row',\n            justifyContent: 'space-around'\n          }}\n        >\n          {Object.entries(timePickerOptions).map(\n            ([label, { time, setTime }], i) => (\n              <Layout key={i} style={{ alignItems: 'center' }}>\n                <Text category=\"label\" style={{ marginBottom: 5 }}>\n                  {label}\n                </Text>\n\n                <DateTimePicker\n                  mode=\"time\"\n                  onChange={(change, date) => {\n                    setTime(date);\n                  }}\n                  value={time}\n                />\n              </Layout>\n            )\n          )}\n        </Layout>\n      );\n    }\n  }\n\n  if (Platform.OS === 'web') {\n    return (\n      <Text>\n        Creating Events is not supported on the web. Download the app on the App\n        Store or Play Store to make a new Event.\n      </Text>\n    );\n  }\n\n  const renderMultiSelectDropDown = () => {\n    function renderEachDropItem() {\n      const final = [];\n      for (const option of daysOfWeek) {\n        final.push(<SelectItem title={option} />);\n      }\n      return final;\n    }\n    function toggleValue(index) {\n      setSelectedIndex(index);\n      const newSelection = index.map((littleIndex) => {\n        return daysOfWeek[littleIndex - 1];\n      });\n      setDaysArray(newSelection);\n    }\n    function calculateSelectedValues() {\n      const finalArray = selectedIndex.map((littleIndex) => {\n        return `${daysOfWeek[littleIndex - 1]}, `;\n      });\n      if (finalArray.length > 0) {\n        let finalObject = finalArray.at(-1);\n        finalObject = finalObject.replace(', ', '');\n        finalArray.splice(-1, 1);\n        finalArray.push(finalObject);\n        return finalArray;\n      }\n    }\n    return (\n      <Layout\n        style={{\n          flexDirection: 'row',\n          justifyContent: 'space-evenly',\n          alignItems: 'center',\n          marginTop: 15\n        }}\n        level=\"1\"\n      >\n        <Select\n          style={{ flex: 5 }}\n          multiSelect\n          label=\"Days\"\n          disabled={showDots}\n          value={daysArray.length > 0 ? calculateSelectedValues() : null}\n          selectedIndex={selectedIndex}\n          onSelect={(index) => toggleValue(index)}\n        >\n          {renderEachDropItem()}\n        </Select>\n      </Layout>\n    );\n  };\n\n  return (\n    <Layout style={{ flex: 1 }}>\n      <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n        <WrapItems childStyle={{ marginVertical: 10, marginHorizontal: 15 }}>\n          {Title}\n          <TimePicker />\n          <CheckBox\n            style={{ alignSelf: 'center', marginTop: 20 }}\n            checked={isOneDay}\n            onChange={(nextChecked) => {\n              setDaysArray([]);\n              setSelectedIndex([]);\n              setSelectedDate(dateToUse);\n              setIsOneDay(nextChecked);\n            }}\n          >\n            One Time Event\n          </CheckBox>\n          {isOneDay ? (\n            <DateTimePicker\n              testID=\"datePicker\"\n              value={selectedDate}\n              mode=\"date\"\n              style={{ alignSelf: 'center', marginVertical: 15 }}\n              onChange={(event, date) => setSelectedDate(date)}\n            />\n          ) : (\n            renderMultiSelectDropDown()\n          )}\n          <TouchableOpacity\n            style={{\n              backgroundColor: allValuesPopulated\n                ? '#a245ee'\n                : 'rgba(162,69,238,0.34)',\n              width: '35%',\n              alignSelf: 'center',\n              height: 45,\n              borderRadius: 3,\n              alignItems: 'center',\n              justifyContent: 'center'\n            }}\n            onPress={addEvent}\n            disabled={!allValuesPopulated || showDots}\n          >\n            <View>\n              <Text style={{ color: '#f2f0f1', fontSize: 15 }}>\n                Create Event\n              </Text>\n            </View>\n          </TouchableOpacity>\n          {showDots && (\n            <Loader\n              style={{\n                position: 'absolute',\n                marginTop: '30%',\n                marginHorizontal: 'auto'\n              }}\n            />\n          )}\n        </WrapItems>\n      </TouchableWithoutFeedback>\n    </Layout>\n  );\n}\n","import {\n  Autocomplete,\n  AutocompleteItem,\n  Card,\n  Modal\n} from '@ui-kitten/components';\nimport {\n  JSXElementConstructor,\n  ReactElement,\n  useEffect,\n  useState\n} from 'react';\nimport { Alert, Button, View, Text } from 'react-native';\n\nimport renderItem from './ScheduledItem';\nimport { selectDarkMode, selectUserKey } from '../../app/appDataSlice';\nimport { useAppSelector } from '../../app/hooks';\nimport UserNameSelectionDropDown from '../../components/UserNameSelectionDropDown';\nimport { useGetCurrentSectionQuery } from '../api/classPagesApi';\nimport { useGetUserInfoQuery } from '../api/usersApi';\nimport { base_URL } from '../notifications/constants';\n\nexport default function renderModal(setShowModal, showModal) {\n  const { data: userData } = useGetUserInfoQuery(useAppSelector(selectUserKey));\n  const { data: currentSection } = useGetCurrentSectionQuery();\n  const darkMode = useAppSelector(selectDarkMode);\n  const userKey = useAppSelector(selectUserKey);\n  const [names, setNames] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [value, setValue] = useState('');\n  const [hasChosen, setHasChosen] = useState(false);\n  const [recipient, setRecipient] = useState(null);\n\n  const myStyles = {\n    modal: {\n      fontSize: 18,\n      paddingBottom: 20,\n      fontWeight: 'bold',\n      textAlign: 'center',\n      width: '100%',\n      color: darkMode ? 'rgb(255,255,255)' : 'rgb(0,0,0)'\n    },\n    backdrop: {\n      backgroundColor: darkMode ? 'rgba(141,141,141,0.5)' : 'rgba(0, 0, 0, 0.5)'\n    },\n    containerDrop: {\n      minWidth: 200,\n      paddingBottom: 15\n    }\n  };\n\n  useEffect(() => {\n    fetch(`${base_URL}/users/userNamesAndNames`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        userKey\n      }\n    }).then(async (data) => {\n      if (data.ok) {\n        const userList = await data.json();\n        setNames(\n          userList.map((user) => {\n            if (user) {\n              return `${user.realName} (${user.userName})`;\n            }\n          })\n        );\n        setUsers(userList);\n      }\n    });\n  }, []);\n\n  const exportSchedule = async (recipient) => {\n    function convert(addedClasses) {\n      const final = [];\n      Object.keys(addedClasses).map((term) => {\n        if (term === currentSection) {\n          Object.keys(addedClasses[term]).map((masterCourseCode) => {\n            for (const courseCode of addedClasses[term][masterCourseCode]) {\n              final.push({\n                courseCode,\n                courseTerm: currentSection\n              });\n            }\n          });\n        }\n      });\n      return final;\n    }\n    const status = await fetch(`${base_URL}/users/sendNotification`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        userKey\n      },\n      body: JSON.stringify({\n        recipients: [recipient],\n        text: JSON.stringify(convert(userData.addedClasses?.classes)),\n        title: `${userData.realFirstName}'s Schedule (${currentSection})`,\n        isSchedule: true\n      })\n    });\n    return status.ok;\n  };\n  return (\n    <Modal\n      visible={showModal}\n      backdropStyle={myStyles.backdrop}\n      style={{ width: '80%', height: '70%' }}\n      onBackdropPress={() => setShowModal(false)}\n    >\n      <Card disabled>\n        <Text style={myStyles.modal}>Share Your Schedule</Text>\n        {UserNameSelectionDropDown({\n          setHasChosen,\n          setRecipient,\n          placeholder: false\n        })}\n        <View>\n          <Button\n            disabled={recipient === null}\n            title=\"Send\"\n            onPress={() => {\n              exportSchedule(recipient).then((returnValue) => {\n                setShowModal(false);\n                returnValue\n                  ? Alert.alert('Message Sent')\n                  : Alert.alert(\n                      'Error Sending Message',\n                      'Please Try Again Later'\n                    );\n              });\n            }}\n          />\n          <Button\n            title=\"Dismiss\"\n            onPress={() => {\n              setShowModal(false);\n            }}\n          />\n        </View>\n      </Card>\n    </Modal>\n  );\n}\n","import { FontAwesome5 } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Layout, Text, useTheme } from '@ui-kitten/components';\nimport React, { useState } from 'react';\nimport {\n  Dimensions,\n  Image,\n  Platform,\n  TouchableOpacity,\n  View\n} from 'react-native';\nimport Toggle from 'react-native-toggle-element';\n\nimport {\n  selectDarkMode,\n  selectIsGuest,\n  selectUserKey\n} from '../../app/appDataSlice';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport Header from '../../components/Header';\nimport ModalContainer from '../../components/ModalContainer';\nimport { exportToICal } from '../../functions';\nimport { useGetUserInfoQuery } from '../api/usersApi';\nimport SelectTerm from '../classPages/SelectTerm';\nimport { base_URL } from '../notifications/constants';\nimport CalendarPage from './CalendarPage';\nimport CreateCustomEvent from './CreateCustomEvent';\nimport { isThreeDaySet } from './calendarSlice';\nimport renderModal from './exportModal';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function Calendar() {\n  const navigation = useNavigation();\n  const isThreeDay = useAppSelector(\n    (state) => state.appData.calendar.isThreeDay\n  );\n  const theme = useTheme();\n  const dispatch = useAppDispatch();\n  const isGuest = useAppSelector(selectIsGuest);\n  const darkMode = useAppSelector(selectDarkMode);\n  const userKey = useAppSelector(selectUserKey);\n  const currentSection = useAppSelector(\n    (state) => state.appData.classPages.currentSection\n  );\n  const classes = useAppSelector((state) => state.appData.classPages.classes);\n  const { data: userData } = useGetUserInfoQuery(userKey);\n  const [showModal, setShowModal] = useState(false);\n  const [showGuestModal, setShowGuestModal] = useState(false);\n  const [showWebModal, setShowWebModal] = useState(false);\n  async function sendNotification(bodyTosend) {\n    await fetch(`${base_URL}/users/sendNotification`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        userKey\n      },\n      body: JSON.stringify(bodyTosend)\n    });\n  }\n  const accessoryLeft = (\n    <Image\n      style={{\n        height: 28,\n        width: 28,\n        alignItems: 'center'\n      }}\n      source={require('../../../assets/logos/app-logo-transparent.png')}\n    />\n  );\n\n  const title = (\n    <View\n      style={{\n        alignItems: 'center',\n        paddingRight: 20\n      }}\n    >\n      {Dimensions.get('window').width < 525 && (\n        <Toggle\n          leftComponent={\n            <FontAwesome5 name=\"compress-arrows-alt\" size={14} color=\"#fff\" />\n          }\n          rightComponent={\n            <FontAwesome5 name=\"expand-arrows-alt\" size={15} color=\"#fff\" />\n          }\n          trackBar={{\n            activeBackgroundColor: theme['color-primary-500'],\n            inActiveBackgroundColor: theme['color-primary-500'],\n            width: 60,\n            height: 23\n          }}\n          thumbButton={{\n            width: 30,\n            height: 30,\n            activeBackgroundColor: theme['color-primary-800'],\n            inActiveBackgroundColor: theme['color-primary-300'],\n            activeColor: theme['color-primary-100'],\n            inActiveColor: '#fff',\n            borderWidth: 5\n          }}\n          value={isThreeDay}\n          onPress={(bool) => dispatch(isThreeDaySet(bool))}\n          animationDuration={10}\n        />\n      )}\n    </View>\n  );\n  const accessoryRight = (\n    <View\n      style={{\n        paddingHorizontal: 0,\n        alignItems: 'center',\n        flexDirection: 'row'\n      }}\n    >\n      <TouchableOpacity\n        onPress={() => {\n          if (isGuest) {\n            setShowGuestModal(true);\n          } else {\n            // @ts-ignore\n            navigation.navigate('CreateCustomEvent');\n          }\n        }}\n        style={{\n          marginRight: 10,\n          alignItems: 'center'\n        }}\n      >\n        <View\n          style={{\n            height: 45,\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'flex-end'\n          }}\n        >\n          <FontAwesome5\n            name=\"plus\"\n            size={20}\n            color={darkMode ? 'white' : 'black'}\n          />\n          <Text style={{ paddingTop: 5, fontSize: 10 }}>Add Event</Text>\n        </View>\n      </TouchableOpacity>\n      <TouchableOpacity\n        onPress={() => {\n          if (Platform.OS === 'web') {\n            const times = Object.entries(\n              userData.addedClasses.classes[currentSection]\n            ).flatMap(([masterCourseCode, courseCodes]) => {\n              return courseCodes.flatMap((courseCode) => {\n                return classes[masterCourseCode].times.filter(\n                  (time) => time.courseCode === courseCode\n                );\n              });\n            });\n            const calendar = exportToICal(times);\n          } else if (isGuest) {\n            setShowGuestModal(true);\n          } else {\n            setShowModal(true);\n            setShowWebModal(true);\n          }\n        }}\n        style={{\n          alignItems: 'center'\n        }}\n      >\n        <View\n          style={{\n            height: 45,\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'flex-end'\n          }}\n        >\n          <FontAwesome5\n            name=\"file-export\"\n            size={20}\n            color={darkMode ? 'white' : 'black'}\n          />\n          <Text style={{ paddingTop: 5, fontSize: 10 }}>Share Schedule</Text>\n        </View>\n      </TouchableOpacity>\n      {showGuestModal && (\n        <ModalContainer\n          title=\"Wait!\"\n          children={\n            <Text style={{ paddingHorizontal: 30 }}>\n              This feature is not available to Guest Users. Please create a free\n              account with us to take advantage this feature.\n            </Text>\n          }\n          backDropVisible={showGuestModal}\n          setBackDropVisible={setShowGuestModal}\n        />\n      )}\n      {Platform.OS === 'web' && showWebModal && (\n        <ModalContainer\n          title=\"Wait!\"\n          children={\n            <Text style={{ paddingHorizontal: 30 }}>\n              Sharing schedules is not supported on the web. Download the app on\n              the App Store or Play Store to share schedules.\n            </Text>\n          }\n          backDropVisible={showWebModal}\n          setBackDropVisible={setShowWebModal}\n        />\n      )}\n      {Platform.OS !== 'web' && renderModal(setShowModal, showModal)}\n    </View>\n  );\n  return (\n    <Stack.Navigator>\n      <Stack.Screen\n        name=\"CalendarPage\"\n        component={CalendarPage}\n        options={{\n          header: () => {\n            return (\n              <Layout style={{ paddingBottom: 10 }}>\n                <Header\n                  center={title}\n                  accessoryRight={accessoryRight}\n                  accessoryLeft={accessoryLeft}\n                  title=\"Calendar\"\n                />\n              </Layout>\n            );\n          }\n        }}\n      />\n      <Stack.Screen\n        name=\"CreateCustomEvent\"\n        component={CreateCustomEvent}\n        options={{ headerTitle: 'Add Event' }}\n      />\n      <Stack.Screen\n        name=\"SelectTerm\"\n        component={SelectTerm}\n        options={{\n          title: 'Select Term',\n          headerShown: false,\n          animation: 'slide_from_bottom',\n          gestureDirection: 'vertical'\n        }}\n      />\n    </Stack.Navigator>\n  );\n}\n","import Loader from 'react-native-three-dots-loader';\nimport { FontAwesome5, Ionicons } from '@expo/vector-icons';\nimport { useIsFocused, useNavigation } from '@react-navigation/native';\nimport { Layout, Text } from '@ui-kitten/components';\nimport * as ImagePicker from 'expo-image-picker';\nimport React, { useEffect, useState } from 'react';\nimport {\n  Alert,\n  Button,\n  Dimensions,\n  FlatList,\n  Image,\n  Keyboard,\n  KeyboardAvoidingView,\n  LogBox,\n  Platform,\n  SafeAreaView,\n  ScrollView,\n  TextInput,\n  TouchableOpacity,\n  View\n} from 'react-native';\nimport Toast from 'react-native-root-toast';\nimport { io } from 'socket.io-client';\nimport { selectUserKey } from '../../../app/appDataSlice';\n\nimport { useAppSelector } from '../../../app/hooks';\nimport SearchBar from '../../../components/SearchBar';\nimport { base_URL } from '../../../constants/admin';\nimport { useGetCurrentSectionQuery } from '../../api/classPagesApi';\nimport {\n  useAddOrRemoveUserFromChatRoomMutation,\n  useEditUserMutation,\n  useGetUserInfoQuery\n} from '../../api/usersApi';\nimport ModalContainer from '../../../components/ModalContainer';\n\nexport default function SingleChatRoom({\n  route: {\n    params: { data }\n  }\n}) {\n  const [imagePickerStatus, requestImagePickerPermission] =\n    ImagePicker.useMediaLibraryPermissions();\n  const [cameraStatus, requestCameraPermission] =\n    ImagePicker.useCameraPermissions();\n  const [filter, setFilter] = useState('');\n  const [showSearch, setShowSearch] = useState(false);\n  const [photoSelected, setPhotoSelected] = useState({\n    date: null,\n    id: null,\n    contentImage: null\n  });\n  const [addOrRemoveUser] = useAddOrRemoveUserFromChatRoomMutation();\n  const [editUser] = useEditUserMutation();\n  const isCustomRoom = data.userList !== undefined;\n  const [keyboardShown, setKeyboardShown] = useState(false);\n  const [retryNumber, setRetryNumber] = useState(0);\n  const [failedConnection, setFailedConnection] = useState(false);\n  const [hardDisableSend, setHardDisableSend] = useState(false);\n  const navigation = useNavigation();\n  const [showUserList, setShowUserList] = useState(false);\n  const [message, setMessage] = useState('');\n  const [filteredMessageList, setFilteredMessageList] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const userKey = useAppSelector(selectUserKey);\n  const { data: userData } = useGetUserInfoQuery(userKey, {\n    skip: !userKey\n  });\n  const { data: currentSection, isLoading: isCurrentSectionLoading } =\n    useGetCurrentSectionQuery();\n  const [messageList, setMessageList] = useState([]);\n  const socket = io(`${base_URL}/realTimeChat/${data.id}`, {\n    auth: {\n      userKey\n    }\n  });\n\n  useEffect(() => {\n    // Bug with some component i guess cause i didn't use animated anything, yet expo has a seizure and spams warnings\n    LogBox.ignoreLogs(['Animated: `useNativeDriver`']);\n\n    // Keyboard listeners\n    const showListener = Keyboard.addListener('keyboardWillShow', () => {\n      setKeyboardShown(true);\n    });\n    const hideListener = Keyboard.addListener('keyboardWillHide', () => {\n      setKeyboardShown(false);\n    });\n\n    return () => {\n      showListener.remove();\n      hideListener.remove();\n    };\n  }, []);\n\n  useEffect(() => {\n    navigation.setOptions({\n      headerTitle: data.title\n        ? data.title\n        : data.id === 'public'\n        ? 'Public'\n        : data.id === 'admin'\n        ? 'Admin'\n        : data.id,\n      headerRight: () => (\n        <Layout style={{ flexDirection: 'row', marginRight: 30 }}>\n          <TouchableOpacity\n            style={{ marginRight: isCustomRoom ? 25 : undefined }}\n            onPress={() => {\n              setFilter('');\n              setShowSearch(!showSearch);\n            }}\n          >\n            <FontAwesome5 name=\"search\" size={24} color=\"black\" />\n          </TouchableOpacity>\n          {isCustomRoom && (\n            <TouchableOpacity\n              onPress={() => {\n                setShowUserList(true);\n              }}\n            >\n              <Ionicons name=\"person\" size={24} color=\"black\" />\n            </TouchableOpacity>\n          )}\n        </Layout>\n      )\n    });\n  }, [showSearch]);\n\n  useEffect(() => {\n    // maintenance\n\n    // socket logic\n    socket.connect();\n    const timer = setTimeout(() => {\n      socket.off('connect');\n      socket.off('newMessage');\n      socket.disconnect();\n      socket.close();\n      setFailedConnection(true);\n    }, 10000);\n    socket.on('connect', () => {\n      clearTimeout(timer);\n      getMessages();\n    });\n    return () => {\n      setLoaded(false);\n      socket.disconnect();\n      socket.off('connect');\n      socket.off('newMessage');\n    };\n  }, [useIsFocused(), retryNumber]);\n\n  // Add all new message changes here\n  useEffect(() => {\n    socket.on('imageMessageServer', (msg) => {\n      addMessage(msg);\n    });\n    socket.on('newMessage', (msg) => {\n      addMessage(msg);\n    });\n    socket.on('deleteMessage', (msg) => {\n      const index = messageList.findIndex((mess) => isEqualTo(mess, msg));\n      if (index !== -1) {\n        // @ts-ignore\n        setMessageList([...messageList].toSpliced(index, 1));\n      }\n    });\n    return () => {\n      socket.off('imageMessageServer');\n      socket.off('newMessage');\n      socket.off('deleteMessage');\n    };\n  }, [messageList]);\n\n  function getMessages() {\n    fetch(`${base_URL}/chatRooms/getMessages?roomId=${data.id}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        userKey\n      }\n    }).then(async (data) => {\n      if (!data.ok) {\n        setFailedConnection(true);\n      } else {\n        data.json().then(async (array) => {\n          setMessageList(array);\n          setLoaded(true);\n        });\n      }\n    });\n  }\n\n  function isUserBlocked(userName: string, dataToUse = userData) {\n    return dataToUse.blockedUsers.includes(userName);\n  }\n\n  useEffect(() => {\n    setFilteredMessageList(\n      messageList.filter((mess) =>\n        (mess.user + mess.message).toLowerCase().includes(filter.toLowerCase())\n      )\n    );\n  }, [filter]);\n\n  function addMessage(messageToAdd) {\n    const myMessage = messageList.find((mess) => isEqualTo(mess, messageToAdd));\n    if (myMessage) {\n      delete myMessage.isUnsent;\n      setMessageList(\n        [...messageList]\n          .filter((mess) => !isEqualTo(mess, messageToAdd))\n          .concat(myMessage)\n      );\n    } else {\n      setMessageList([...messageList].concat(messageToAdd));\n    }\n  }\n\n  function isEqualTo(message1, message2) {\n    try {\n      return message1.user === message2.user && message1.date === message2.date;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  async function activateCamera() {\n    const date = new Date().toISOString();\n    const response = await requestCameraPermission();\n    if (response.granted || cameraStatus.granted) {\n      const result = await ImagePicker.launchCameraAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images\n      });\n      if (!result.canceled) {\n        setMessage('');\n        setPhotoSelected({\n          id: userData.userName + date + data.id + currentSection,\n          contentImage: result.assets[0],\n          date\n        });\n      }\n    } else {\n      Alert.alert(\n        \"Permission to access camera is required. Please enable it in your phone's settings.\"\n      );\n    }\n  }\n\n  async function selectPhoto() {\n    const date = new Date().toISOString();\n    const response = await requestImagePickerPermission();\n    if (response.granted || imagePickerStatus.granted) {\n      const result = await ImagePicker.launchImageLibraryAsync({\n        allowsEditing: false\n      });\n      if (!result.canceled) {\n        setMessage('');\n        setPhotoSelected({\n          id: userData.userName + date + data.id + currentSection,\n          contentImage: result.assets[0],\n          date\n        });\n      }\n    } else {\n      Alert.alert(\n        \"Permission to access camera roll is required. Please enable it in your phone's settings.\"\n      );\n    }\n  }\n\n  function deleteTheMessage(messageToDelete) {\n    if (messageToDelete.user === userData.userName) {\n      socket.emit('deleteMyMessage', messageToDelete);\n      setMessageList(\n        messageList.filter((mess) => !isEqualTo(mess, messageToDelete))\n      );\n      Toast.show('Message Deleted', {\n        duration: Toast.durations.SHORT,\n        opacity: 0.7,\n        position: Toast.positions.CENTER,\n        backgroundColor: 'grey',\n        shadow: false\n      });\n    }\n  }\n\n  async function sendNewMessage() {\n    setHardDisableSend(true); // basically a semaphore lol\n    if (message !== '') {\n      const newMessage = {\n        message,\n        date: new Date().toISOString(),\n        user: userData.userName,\n        isUnsent: true\n      };\n      setMessageList([...messageList].concat(newMessage));\n      delete newMessage.isUnsent;\n      socket.emit('newMessageClient', newMessage);\n      setMessage('');\n    }\n    if (photoSelected.id !== null) {\n      const { date } = photoSelected;\n      setMessageList(\n        [...messageList].concat({\n          isImage: true,\n          isUnsent: true,\n          message: photoSelected.contentImage.uri,\n          user: userData.userName,\n          date\n        })\n      );\n\n      const photo = photoSelected;\n      setPhotoSelected({ date: null, id: null, contentImage: null });\n\n      const formdata = new FormData();\n      formdata.append(\n        'picture',\n        JSON.stringify({\n          // @ts-ignore\n          uri: photo.contentImage.uri,\n          name: 'picture',\n          type: 'image/jpg'\n        }).substring(1, -1)\n      );\n      formdata.append('id', photo.id);\n      formdata.append('date', date);\n      const res = await fetch(`${base_URL}/chatRooms/uploadImage`, {\n        method: 'POST',\n        redirect: 'follow',\n        headers: {\n          'Content-Type': 'application/json',\n          userKey\n        },\n        body: formdata\n      });\n      if (res.ok) {\n        const newMessage = {\n          date,\n          user: userData.userName,\n          message: photo.id\n        };\n        socket.emit('imageMessageClient', newMessage);\n      }\n    }\n    setHardDisableSend(false);\n  }\n\n  function handleLeaveChat() {\n    addOrRemoveUser({\n      userKey,\n      chatRoomId: data.id,\n      userName: userData.userName\n    })\n      .then(() => navigation.goBack())\n      .catch(() => {\n        setShowUserList(false);\n        Toast.show('Error leaving chat, try again later');\n      });\n  }\n\n  function deletionAlert(messageToDelete) {\n    if (messageToDelete.user === userData.userName) {\n      Alert.alert(\n        'Delete Message',\n        'This action cannot be undone',\n        [\n          {\n            text: 'Confirm',\n            onPress: () => {\n              deleteTheMessage(messageToDelete);\n            }\n          },\n          {\n            text: 'Cancel',\n            style: 'cancel'\n          }\n        ],\n        { cancelable: true }\n      );\n    }\n  }\n\n  const renderItem = ({ item }) => (\n    <TouchableOpacity\n      disabled={item?.isUnsent}\n      onLongPress={() => deletionAlert(item)}\n      style={{\n        opacity: item?.isUnsent ? 0.4 : 1,\n        flexDirection: 'row',\n        marginVertical: 5,\n        minHeight: item.isImage ? windowHeight * 0.25 : undefined,\n        width: '100%'\n      }}\n    >\n      <Text style={{ paddingRight: 10, fontWeight: 'bold' }}>{item.user}:</Text>\n      {item.isImage ? (\n        <Image\n          source={{ uri: item.message }}\n          style={{ flex: 1, resizeMode: 'contain' }}\n        />\n      ) : (\n        <Text style={{ flex: 1, flexWrap: 'wrap' }}>{item.message}</Text>\n      )}\n    </TouchableOpacity>\n  );\n  const windowHeight = Dimensions.get('screen').height;\n\n  return (\n    <SafeAreaView style={{ flex: 1 }}>\n      <KeyboardAvoidingView style={{ flex: 1 }}>\n        <View\n          style={[\n            styles.messagingScreen,\n            { paddingVertical: 5, paddingHorizontal: 10 }\n          ]}\n        >\n          {isCustomRoom && (\n            <ModalContainer\n              backDropVisible={showUserList}\n              setBackDropVisible={setShowUserList}\n              title=\"Users\"\n              children={\n                <ScrollView style={{ flex: 1, width: '80%' }}>\n                  {data.userList.toSorted().map((userName) => (\n                    <Layout\n                      style={{\n                        flexDirection: 'row',\n                        marginBottom: 15,\n                        justifyContent: 'space-between'\n                      }}\n                    >\n                      <Text\n                        style={{\n                          fontSize: 17\n                        }}\n                      >\n                        {userName}\n                      </Text>\n                      <Layout style={{ flexDirection: 'row' }}>\n                        {userName !== userData.userName && (\n                          <TouchableOpacity\n                            onPress={() => {\n                              let body = {};\n                              if (isUserBlocked(userName)) {\n                                body = {\n                                  unblockUser: userName\n                                };\n                              } else {\n                                body = {\n                                  blockUser: userName\n                                };\n                              }\n                              editUser({\n                                userKey,\n                                userName: userData.userName,\n                                fields: JSON.stringify(body)\n                              })\n                                .unwrap()\n                                .then((response) => {\n                                  const newUserData = response.userData;\n                                  Toast.show(\n                                    isUserBlocked(userName, newUserData)\n                                      ? 'User Blocked'\n                                      : 'User un-Blocked',\n                                    {\n                                      duration: Toast.durations.LONG,\n                                      opacity: 0.7,\n                                      position: Toast.positions.CENTER,\n                                      backgroundColor: 'black',\n                                      shadow: false\n                                    }\n                                  );\n                                  setShowUserList(false);\n                                })\n                                .catch((error) => console.warn(error));\n                            }}\n                          >\n                            {isUserBlocked(userName) ? (\n                              <Ionicons\n                                name=\"add-circle\"\n                                size={25}\n                                color=\"black\"\n                              />\n                            ) : (\n                              <Ionicons\n                                name=\"remove-circle\"\n                                size={25}\n                                color=\"black\"\n                              />\n                            )}\n                          </TouchableOpacity>\n                        )}\n                      </Layout>\n                    </Layout>\n                  ))}\n                  <Layout\n                    style={{\n                      backgroundColor: 'transparent',\n                      alignContent: 'center'\n                    }}\n                  >\n                    <Button title=\"Leave Chat\" onPress={handleLeaveChat} />\n                  </Layout>\n                </ScrollView>\n              }\n            />\n          )}\n          {messageList.length > 0 ? (\n            <View style={{ flex: 1 }}>\n              {showSearch && (\n                <SearchBar\n                  searchTerm={filter}\n                  onChangeText={setFilter}\n                  inputProps={{ autoCorrect: false }}\n                  placeholder=\"Search\"\n                />\n              )}\n              <FlatList\n                style={{}}\n                data={\n                  filter === ''\n                    ? [...messageList].reverse()\n                    : [...filteredMessageList].reverse()\n                }\n                renderItem={renderItem}\n                keyExtractor={(item) => item?.date + item?.user}\n                inverted\n              />\n            </View>\n          ) : failedConnection ? (\n            <TouchableOpacity\n              onPress={() => {\n                setFailedConnection(false);\n                setRetryNumber(retryNumber + 1);\n              }}\n            >\n              <Text style={{ marginTop: '10%', textAlign: 'center' }}>\n                Connection Failed\n                {'\\n'}\n                Press to Reload\n              </Text>\n            </TouchableOpacity>\n          ) : loaded ? (\n            <Text style={{ textAlign: 'center' }}>No chats yet :/</Text>\n          ) : (\n            <View style={{ marginTop: '20%' }}>\n              <Loader />\n            </View>\n          )}\n        </View>\n\n        <View style={styles.messagingInputContainer}>\n          {!keyboardShown && (\n            <TouchableOpacity\n              onPress={activateCamera}\n              disabled={\n                hardDisableSend ||\n                !loaded ||\n                messageList.some((msg) => msg.isUnsent)\n              }\n              style={{\n                alignSelf: 'center',\n                paddingRight: 5\n              }}\n            >\n              <FontAwesome5\n                name=\"camera\"\n                size={20}\n                color={\n                  !hardDisableSend &&\n                  loaded &&\n                  !messageList.some((msg) => msg.isUnsent)\n                    ? 'black'\n                    : 'gray'\n                }\n              />\n            </TouchableOpacity>\n          )}\n          {!photoSelected.contentImage ? (\n            <View style={styles.messagingInput}>\n              <TextInput\n                placeholder=\"Message\"\n                placeholderTextColor=\"gray\"\n                editable={loaded}\n                value={message}\n                multiline\n                onChangeText={(value) => setMessage(value)}\n              />\n            </View>\n          ) : (\n            <View\n              style={{\n                ...styles.messagingInput,\n                paddingHorizontal: 10,\n                height: 150\n              }}\n            >\n              <Image\n                source={{ uri: photoSelected.contentImage?.uri }}\n                style={{ flex: 1, borderRadius: 10 }}\n              />\n              <TouchableOpacity\n                onPress={() => {\n                  setPhotoSelected({\n                    id: null,\n                    contentImage: null,\n                    date: null\n                  });\n                }}\n                style={{ position: 'absolute', marginLeft: 15, marginTop: 10 }}\n              >\n                <FontAwesome5\n                  name=\"times\"\n                  size={25}\n                  color=\"#ff2e2e\"\n                  style={{}}\n                />\n              </TouchableOpacity>\n            </View>\n          )}\n          {!keyboardShown && Platform.OS !== 'web' && (\n            <TouchableOpacity\n              onPress={selectPhoto}\n              disabled={\n                hardDisableSend ||\n                !loaded ||\n                messageList.some((msg) => msg.isUnsent)\n              }\n              style={{\n                width: '15%',\n                alignSelf: 'center',\n                paddingRight: 10,\n                alignItems: 'center',\n                justifyContent: 'center'\n              }}\n            >\n              <FontAwesome5\n                name=\"image\"\n                size={30}\n                color={\n                  !hardDisableSend &&\n                  loaded &&\n                  !messageList.some((msg) => msg.isUnsent)\n                    ? 'black'\n                    : 'gray'\n                }\n              />\n            </TouchableOpacity>\n          )}\n          <TouchableOpacity\n            style={{\n              ...styles.messagingButtonContainer,\n              backgroundColor:\n                !hardDisableSend &&\n                loaded &&\n                !messageList.some((msg) => msg.isUnsent)\n                  ? '#a245ee'\n                  : 'rgba(162,69,238,0.34)'\n            }}\n            onPress={sendNewMessage}\n            disabled={\n              hardDisableSend ||\n              !loaded ||\n              messageList.some((msg) => msg.isUnsent)\n            }\n          >\n            <View>\n              <Text style={{ color: '#f2f0f1', fontSize: 15 }}>Send</Text>\n            </View>\n          </TouchableOpacity>\n        </View>\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = {\n  messagingScreen: {\n    flex: 1\n  },\n  messagingInputContainer: {\n    width: '100%',\n    backgroundColor: 'white',\n    paddingVertical: 15,\n    paddingHorizontal: 15,\n    justifyContent: 'center',\n    flexDirection: 'row'\n  },\n  messagingInput: {\n    borderWidth: 1,\n    padding: 10,\n    paddingHorizontal: 15,\n    flex: 1,\n    marginHorizontal: 10,\n    borderRadius: 20\n  },\n  messagingButtonContainer: {\n    width: '20%',\n    alignSelf: 'center',\n    height: 40,\n    borderRadius: 3,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n};\n","import {\n  Autocomplete,\n  AutocompleteItem,\n  Input,\n  Layout\n} from '@ui-kitten/components';\nimport { Button, Platform, Text, TouchableOpacity } from 'react-native';\nimport { useEffect, useState } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { useAppSelector } from '../../app/hooks';\nimport { selectDarkMode, selectUserKey } from '../../app/appDataSlice';\nimport { base_URL } from '../notifications/constants';\nimport { useCreateChatRoomMutation } from '../api/usersApi';\nimport { showToast } from '../../functions';\n\nexport default function CreateChatRoom() {\n  const isWeb = Platform.OS === 'web';\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [nameOfChatRoom, setNameOfChatRoom] = useState('');\n  const navigation = useNavigation();\n  const [createChatRoom] = useCreateChatRoomMutation();\n  const userKey = useAppSelector(selectUserKey);\n  const darkMode = useAppSelector(selectDarkMode);\n  const [recipients, setRecipients] = useState([]);\n  const [names, setNames] = useState([]); // filtered list of names\n  const [users, setUsers] = useState([]); // clean list of users\n  const [value, setValue] = useState(''); // typed name\n  const myStyles = {\n    modal: {\n      fontSize: 18,\n      paddingBottom: 20,\n      fontWeight: 'bold',\n      textAlign: 'center',\n      width: '100%',\n      color: darkMode ? 'rgb(255,255,255)' : 'rgb(0,0,0)'\n    },\n    backdrop: {\n      backgroundColor: darkMode ? 'rgba(141,141,141,0.5)' : 'rgba(0, 0, 0, 0.5)'\n    },\n    containerDrop: {\n      minWidth: 200,\n      paddingBottom: 15\n    }\n  };\n\n  useEffect(() => {\n    setIsDisabled(nameOfChatRoom.length === 0 || recipients.length === 0);\n  }, [nameOfChatRoom, recipients]);\n\n  useEffect(() => {\n    fetch(`${base_URL}/users/userNamesAndNames`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        userKey\n      }\n    }).then(async (data) => {\n      if (data.ok) {\n        let userList = await data.json();\n        userList = userList.filter((user) => {\n          return user;\n        });\n        setNames(\n          userList.map((user) => {\n            if (user) {\n              return `${user.realName} (${user.userName})`;\n            }\n          })\n        );\n        setUsers(userList);\n      }\n    });\n  }, []);\n\n  const onChangeText = (query) => {\n    setNames(\n      freshNames().filter(\n        (name) =>\n          name?.toLowerCase().includes(query.toLowerCase()) ||\n          userNameContainsString(name, query)\n      )\n    );\n    setValue(query);\n  };\n\n  function freshNames() {\n    return users.map((user) => {\n      if (user) {\n        return `${user.realName} (${user.userName})`;\n      }\n    });\n  }\n\n  const userNameContainsString = (name, query) => {\n    const user = users.find(\n      (auser) =>\n        auser?.userName.toLowerCase().includes(query.toLowerCase()) &&\n        auser?.realName === name\n    );\n    return user !== undefined;\n  };\n\n  function findUserNameFromName(name) {\n    const firstPar = name.indexOf('(');\n    const secondPar = name.indexOf(')');\n    return name.slice(firstPar + 1, secondPar);\n  }\n\n  function handleAddValue() {\n    const nameToAdd = findUserNameFromName(value);\n    if (!recipients.includes(nameToAdd)) {\n      setRecipients(recipients.concat([nameToAdd]));\n    }\n    setValue('');\n  }\n\n  return (\n    <Layout\n      style={{\n        width: isWeb ? '30%' : '90%',\n        alignItems: isWeb ? undefined : 'center',\n        backgroundColor: 'transparent',\n        marginLeft: isWeb ? 15 : undefined\n      }}\n    >\n      <Layout\n        style={{\n          marginTop: 20,\n          marginLeft: isWeb ? undefined : 20,\n          flexDirection: 'row',\n          backgroundColor: 'transparent'\n        }}\n      >\n        <Input\n          style={{ minWidth: '100%' }}\n          label=\"Chatroom Name\"\n          onChangeText={setNameOfChatRoom}\n          value={nameOfChatRoom}\n        />\n      </Layout>\n      <Layout\n        style={{\n          marginVertical: 20,\n          marginLeft: isWeb ? undefined : 30,\n          flexDirection: 'row',\n          backgroundColor: 'transparent'\n        }}\n      >\n        <Input\n          style={{ minWidth: '85%' }}\n          placeholder=\"Added Users\"\n          disabled\n          value={recipients.join(', ')}\n        />\n        <Layout style={{ alignSelf: 'center', backgroundColor: 'transparent' }}>\n          <Button color=\"red\" onPress={() => setRecipients([])} title=\"Clear\" />\n        </Layout>\n      </Layout>\n      <Layout\n        style={{\n          flexDirection: 'row',\n          marginTop: 10,\n          marginLeft: isWeb ? undefined : 10,\n          backgroundColor: 'transparent'\n        }}\n      >\n        <Autocomplete\n          style={{ minWidth: '85%' }}\n          value={value}\n          placeholder=\"Add User\"\n          onChangeText={onChangeText}\n          onSelect={(index) => setValue(names[index])}\n        >\n          {names.map((user, index) => {\n            return <AutocompleteItem title={user} key={index} />;\n          })}\n        </Autocomplete>\n        <Layout style={{ alignSelf: 'center', backgroundColor: 'transparent' }}>\n          <Button color=\"blue\" onPress={() => handleAddValue()} title=\"Add\" />\n        </Layout>\n      </Layout>\n      <TouchableOpacity\n        disabled={isDisabled}\n        onPress={() => {\n          createChatRoom({ userKey, recipients, nameOfChatRoom })\n            .unwrap()\n            .then((payload) => {\n              showToast('Chatroom Created');\n              navigation.goBack();\n            })\n            .catch((e) => {\n              showToast('Error, please try again later');\n              console.log(e);\n            });\n        }}\n        style={{\n          marginTop: 30,\n          alignItems: 'center',\n          justifyContent: 'center',\n          paddingVertical: 12,\n          paddingHorizontal: 32,\n          borderRadius: 4,\n          elevation: 3,\n          backgroundColor: isDisabled ? 'rgba(227,39,39,0.49)' : '#e32727'\n        }}\n      >\n        <Text\n          style={{\n            fontSize: 16,\n            lineHeight: 21,\n            fontWeight: 'bold',\n            letterSpacing: 0.25,\n            color: 'white'\n          }}\n        >\n          Create Chat Room\n        </Text>\n      </TouchableOpacity>\n    </Layout>\n  );\n}\n","import { FontAwesome, FontAwesome5 } from '@expo/vector-icons';\nimport { useFocusEffect, useIsFocused } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Layout, List, Select, SelectItem, Text } from '@ui-kitten/components';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport {\n  Image,\n  RefreshControl,\n  ScrollView,\n  StyleSheet,\n  TouchableOpacity\n} from 'react-native';\nimport { render } from 'react-dom';\nimport {\n  useGetChatRoomsMutation,\n  useGetCollegeListQuery,\n  usersApiSlice\n} from '../api/usersApi';\n\nimport {\n  selectDarkMode,\n  selectIsGuest,\n  selectUserKey,\n  setIsGuest\n} from '../../app/appDataSlice';\nimport { useAppSelector } from '../../app/hooks';\nimport ModalContainer from '../../components/ModalContainer';\nimport { CurrentTermLabel } from '../classPages/ClassesList';\nimport SelectTerm from '../classPages/SelectTerm';\nimport SingleChatRoom from './singleChatPage/SingleChatRoom';\nimport UserNameMultiSelectionDropDown from '../../components/UserNameMultiSelectionDropDown';\nimport CreateChatRoom from './CreateChatRoom';\n\nconst ChatRoomsNavigator = createNativeStackNavigator();\n\nexport default function ChatsRoomNavigation({ navigation }) {\n  const isGuest = useAppSelector(selectIsGuest);\n  const [showCreateChatModal, setShowCreateChatModal] = useState(false);\n  const [recipients, setRecipients] = useState([]);\n  const darkMode = useAppSelector(selectDarkMode);\n  const navigationHeader = (navigation) => (\n    <Layout\n      style={{\n        width: '100%',\n        justifyContent: 'space-between',\n        flexDirection: 'row',\n        alignItems: 'center',\n        flex: 1,\n        backgroundColor: 'transparent'\n      }}\n    >\n      <Layout\n        style={{\n          paddingBottom: 5,\n          flexDirection: 'row',\n          alignContent: 'center',\n          flex: 1,\n          backgroundColor: 'transparent'\n        }}\n      >\n        <Image\n          style={{\n            height: 28,\n            width: 28\n          }}\n          source={require('../../../assets/logos/app-logo-transparent.png')}\n        />\n        <Text\n          style={{\n            paddingTop: 3,\n            paddingLeft: 10,\n            fontSize: 20,\n            fontWeight: '500',\n            color: darkMode ? '#fff' : '#000'\n          }}\n        >\n          Chats\n        </Text>\n      </Layout>\n      <Layout\n        style={{\n          alignSelf: 'flex-end',\n          paddingRight: 40,\n          paddingBottom: 10,\n          flexDirection: 'row',\n          backgroundColor: 'transparent'\n        }}\n      />\n    </Layout>\n  );\n\n  return (\n    <ChatRoomsNavigator.Navigator initialRouteName=\"Chats\">\n      <ChatRoomsNavigator.Screen\n        options={({ navigation }) => ({\n          title: 'Chats',\n          headerTitle: () => {\n            return navigationHeader(navigation);\n          },\n          headerRight: () => {\n            return (\n              <Layout style={{ marginRight: 20 }}>\n                {!isGuest && (\n                  <TouchableOpacity\n                    onPress={() => {\n                      navigation.navigate('CreateChatRoom');\n                    }}\n                  >\n                    <FontAwesome5\n                      size={24}\n                      name=\"plus\"\n                      color={darkMode ? 'white' : 'black'}\n                    />\n                  </TouchableOpacity>\n                )}\n              </Layout>\n            );\n          }\n        })}\n        name=\"Chats\"\n        component={Chats}\n      />\n      <ChatRoomsNavigator.Screen\n        name=\"SingleChatRoom\"\n        component={SingleChatRoom}\n        options={{ headerTitle: '' }}\n      />\n      <ChatRoomsNavigator.Screen\n        name=\"CreateChatRoom\"\n        component={CreateChatRoom}\n        options={{ headerTitle: 'Create Chat Room' }}\n      />\n      <ChatRoomsNavigator.Screen\n        name=\"SelectTerm\"\n        component={SelectTerm}\n        options={{\n          title: 'Select Term',\n          headerShown: false,\n          animation: 'slide_from_bottom',\n          gestureDirection: 'vertical'\n        }}\n      />\n    </ChatRoomsNavigator.Navigator>\n  );\n}\n\nfunction Chats({ navigation }) {\n  const [getChatRooms] = useGetChatRoomsMutation();\n  const [showGuestModal, setShowGuestModal] = useState(false);\n  const userKey = useAppSelector(selectUserKey);\n  const isGuest = useAppSelector(selectIsGuest);\n  const darkMode = useAppSelector(selectDarkMode);\n  const [refreshing, setRefreshing] = useState(false);\n  const [isMoving, setIsMoving] = useState(false);\n  const currentSection = useAppSelector(\n    (state) => state.appData.classPages.currentSection\n  );\n  const [availableChats, setAvailableChats] = useState([]);\n  const { data: userData } =\n    usersApiSlice.endpoints.getUserInfo.useQueryState(userKey);\n\n  function generateChatRooms() {\n    getChatRooms({ userKey })\n      .unwrap()\n      .then(async (payload) => {\n        const realPayload = JSON.parse(JSON.stringify(payload));\n        const chats = [];\n        if (userData.permissionLevel === 'admin') {\n          chats.push({\n            title: 'Admin Chatroom',\n            lastModifiedDate: '',\n            id: 'admin'\n          });\n        }\n        try {\n          for (const section of Object.entries(userData.addedClasses.classes)) {\n            if (section[0] === currentSection) {\n              for (const course of Object.values(section[1])) {\n                chats.push({\n                  title: course[0],\n                  lastModifiedDate: '',\n                  id: course[0].replace(' ', '')\n                });\n              }\n            }\n          }\n        } catch (e) {\n          console.warn(e.message);\n          setRefreshing(false);\n        }\n        setAvailableChats(chats.concat(realPayload.reverse()));\n        setTimeout(() => {\n          setRefreshing(false);\n        }, 300);\n      })\n      .catch((error) => {\n        console.warn(error);\n        setRefreshing(false);\n      });\n  }\n\n  useEffect(() => {\n    setRefreshing(true);\n    generateChatRooms();\n  }, [useIsFocused, currentSection]);\n\n  useFocusEffect(() => {\n    setRefreshing(true);\n    generateChatRooms();\n  });\n\n  const onRefresh = useCallback(() => {\n    setRefreshing(true);\n    generateChatRooms();\n  }, []);\n\n  const renderItem = (item) => {\n    return (\n      <Layout key={item?.id}>\n        <ScrollView>\n          <TouchableOpacity\n            style={{\n              alignItems: 'center',\n              alignSelf: 'center',\n              width: '95%',\n              borderRadius: 10,\n              marginLeft: 5,\n              marginRight: 5,\n              marginTop: 10\n            }}\n            onPress={() => {\n              if (isGuest) {\n                setShowGuestModal(true);\n              } else {\n                navigation.navigate('SingleChatRoom', {\n                  data: item\n                });\n              }\n            }}\n            key={item?.id}\n          >\n            <Layout\n              style={{\n                alignItems: 'center',\n                alignSelf: 'center',\n                width: '95%',\n                height: 75,\n                borderRadius: 10,\n                backgroundColor: darkMode ? '#333333' : '#ebebeb',\n                shadowColor: '#000',\n                shadowOffset: { width: 0, height: 1 },\n                shadowOpacity: 0.2,\n                shadowRadius: 2,\n                elevation: 1,\n                marginLeft: 5,\n                marginRight: 5,\n                marginTop: 10,\n                justifyContent: 'center'\n              }}\n            >\n              <Text\n                style={{\n                  fontWeight: 'bold',\n                  fontSize: 20\n                }}\n              >\n                {item?.title}\n              </Text>\n              {item?.lastModifiedDate ? (\n                <Text style={{ fontStyle: 'italic', fontSize: 12 }}>\n                  {item?.lastModifiedDate}\n                </Text>\n              ) : null}\n            </Layout>\n          </TouchableOpacity>\n        </ScrollView>\n        {showGuestModal && (\n          <ModalContainer\n            title=\"Wait!\"\n            children={\n              <Text style={{ paddingHorizontal: 30 }}>\n                This feature is locked to our Guest Users. Please create a free\n                account with us to take advantage this feature.\n              </Text>\n            }\n            backDropVisible={showGuestModal}\n            setBackDropVisible={setShowGuestModal}\n          />\n        )}\n      </Layout>\n    );\n  };\n\n  return (\n    <Layout style={{ flex: 1 }}>\n      <CurrentTermLabel\n        navigation={navigation}\n        currentSection={currentSection}\n        style={{ marginTop: 20, marginLeft: 20 }}\n      />\n      {availableChats.length === 0 ? (\n        <Layout style={{ alignItems: 'center' }}>\n          <Text\n            style={{\n              paddingTop: '25%',\n              paddingBottom: 10,\n              textAlign: 'center'\n            }}\n          >\n            No Available Chat Rooms\n          </Text>\n          <TouchableOpacity\n            onPress={() => {\n              onRefresh();\n            }}\n          >\n            <FontAwesome size={25} color=\"#1E90FF\" name=\"rotate-right\" />\n          </TouchableOpacity>\n        </Layout>\n      ) : null}\n      <ScrollView\n        refreshControl={\n          <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n        }\n      >\n        {availableChats.map((chat) => {\n          return renderItem(chat);\n        })}\n      </ScrollView>\n    </Layout>\n  );\n}\n\nconst sponsorPageStyles = StyleSheet.create({\n  container: {\n    flex: 1\n    // alignItems: 'center',\n  },\n  header: {\n    marginTop: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%'\n  },\n  address: {\n    alignItems: 'center',\n    margin: 10,\n    borderColor: 'black',\n    borderWidth: 1,\n    padding: 10\n  },\n  video: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-start'\n  },\n  title: {\n    fontSize: 26,\n    marginLeft: 10\n  },\n  logo: {\n    width: '100%',\n    height: 100\n  },\n  description: {\n    flex: 1,\n    margin: 10,\n    borderRadius: 5,\n    width: '95%',\n    padding: 10\n  },\n  couponContainer: {\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 20,\n    marginBottom: 20\n  },\n  coupon: {\n    width: 400,\n    height: 267\n  },\n  imageGallery: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    margin: 10,\n    marginBottom: 0\n  },\n  imageStyle: {\n    width: 150,\n    height: 150,\n    paddingTop: 100,\n    margin: 5\n  },\n  headerText: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  }\n});\n\nconst myStyles = StyleSheet.create({\n  inputBig: {\n    height: 200,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  },\n  input: {\n    height: 50,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  },\n  indentedInput: {\n    height: 50,\n    marginVertical: 12,\n    borderWidth: 1,\n    padding: 10,\n    marginRight: 12,\n    marginLeft: 30\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25\n  },\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 12,\n    paddingHorizontal: 32,\n    borderRadius: 4,\n    elevation: 3\n  },\n  timeButton: {\n    width: 100,\n    height: 50,\n    marginHorizontal: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 4\n  },\n  timeText: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white'\n  },\n  actualTimeText: {\n    fontSize: 13,\n    lineHeight: 18,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white'\n  },\n  timeStyle: {\n    flex: 0.3,\n    borderWidth: 2,\n    borderLeftColor: 'white'\n  }\n});\n\nconst listingStyles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  cardContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    alignSelf: 'center',\n    width: '95%',\n    height: 75,\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderBottomWidth: 0,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 2,\n    elevation: 1,\n    marginLeft: 5,\n    marginRight: 5,\n    marginTop: 10\n  },\n  containerForNotifications: {\n    alignItems: 'center',\n    alignSelf: 'center',\n    width: '95%',\n    height: 75,\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderBottomWidth: 0,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 2,\n    elevation: 1,\n    marginLeft: 5,\n    marginRight: 5,\n    marginTop: 10\n  },\n  text: {\n    flex: 1,\n    fontSize: 20,\n    textAlign: 'center',\n    marginTop: 5,\n    marginBottom: 5\n  },\n  image: {\n    width: '100%',\n    height: '100%',\n    borderRadius: 10\n  }\n});\n","import { TouchableOpacity } from '@gorhom/bottom-sheet';\nimport { Button, Card, Layout, Modal, Text } from '@ui-kitten/components';\nimport React, { useState } from 'react';\nimport { Platform, ScrollView, StyleSheet } from 'react-native';\n\nimport { selectDarkMode } from '../../app/appDataSlice';\nimport { useAppSelector } from '../../app/hooks';\nimport ExportModalClass from '../classPages/SingleClassPage/exportModalClass';\n\nexport default function SingleClassPage({ selectedClass }) {\n  const [showModal, setShowModal] = useState(false);\n  const darkMode = useAppSelector(selectDarkMode);\n  const filters = useAppSelector((state) => state.appData.classPages.filters);\n  const backgroundColor = darkMode\n    ? { backgroundColor: '#1F1F1F' }\n    : { backgroundColor: '#F5F5F5' };\n\n  function buildTimeString(time) {\n    if (!time.startTime || time.startTime === '' || time.startTime === null) {\n      return 'closed';\n    }\n    return `${convertTo12HourTime(time.startTime)} - ${convertTo12HourTime(\n      time.endTime\n    )}\\n`;\n  }\n\n  function convertTo12HourTime(time) {\n    if (time.length !== 5) {\n      time = `0${time}`;\n    }\n    let hours = time.slice(0, 2);\n    const minutes = time.slice(3, 5);\n    let ampm = Number.parseInt(hours) > 12 ? 'pm' : 'am';\n    hours %= 12;\n    if (hours === 0) {\n      hours = 12;\n      ampm = 'pm';\n    }\n    return `${hours}:${minutes}${ampm}`;\n  }\n\n  const averageGradeMSGModal = (\n    <Modal\n      visible={showModal}\n      backdropStyle={styles.backdrop}\n      style={{ width: '75%' }}\n      onBackdropPress={() => setShowModal(false)}\n    >\n      <Card disabled>\n        <Text style={{ fontSize: 15, paddingTop: 5, paddingBottom: 10 }}>\n          The Athena Network collects and aggregates the data anonymously\n          submitted by the Course Review process and calculates what the average\n          student's experience in this course will look like. Given that it is\n          based on voluntarily submitted data, this information is to be used as\n          a reference only. Please consult your advisor before making any\n          impactful decisions.\n        </Text>\n        <Button onPress={() => setShowModal(false)}>Dismiss</Button>\n      </Card>\n    </Modal>\n  );\n\n  if (!selectedClass?.times) {\n    return null;\n  }\n\n  return (\n    <ScrollView style={backgroundColor}>\n      <Layout style={[{ alignItems: 'center' }, backgroundColor]}>\n        {Platform.OS === 'web' && (\n          <ExportModalClass classData={selectedClass} />\n        )}\n        <Text style={styles.title}>{selectedClass.courseName}</Text>\n        <Text style={{ paddingTop: 30 }}>{selectedClass.masterCourseCode}</Text>\n\n        <Text style={styles.subtitle}>\n          {`${selectedClass.courseTerm} \\u2022 credits: ${\n            filters.isHMC\n              ? selectedClass.creditWeightHM\n              : selectedClass.creditWeight\n          }`}\n        </Text>\n        {selectedClass.timeSpentOutOfClass && (\n          <Layout\n            style={[\n              {\n                flexDirection: 'row',\n                alignItems: 'flex-start',\n                paddingRight: 5\n              },\n              backgroundColor\n            ]}\n          >\n            <Text style={styles.subtitle}>Time Spent Per Week</Text>\n            <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\n            <Text style={styles.subtitle}>\n              : {selectedClass.timeSpentOutOfClass} hours\n            </Text>\n          </Layout>\n        )}\n        {selectedClass.averageGrade && (\n          <Layout\n            style={[\n              {\n                flexDirection: 'row',\n                alignItems: 'flex-start',\n                paddingRight: 5\n              },\n              backgroundColor\n            ]}\n          >\n            <Text style={styles.subtitle}>Average Grade</Text>\n            <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\n            <Text style={styles.subtitle}>:{selectedClass.averageGrade}</Text>\n          </Layout>\n        )}\n        {selectedClass.difficulty && (\n          <Layout\n            style={[\n              {\n                flexDirection: 'row',\n                alignItems: 'flex-start',\n                paddingRight: 5\n              },\n              backgroundColor\n            ]}\n          >\n            <Text style={styles.subtitle}>Estimated Difficulty</Text>\n            <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\n            <Text style={styles.subtitle}>\n              : {selectedClass.difficulty} / 5\n            </Text>\n          </Layout>\n        )}\n        {selectedClass.rating && (\n          <Layout\n            style={[\n              {\n                flexDirection: 'row',\n                alignItems: 'flex-start',\n                paddingRight: 5\n              },\n              backgroundColor\n            ]}\n          >\n            <Text style={styles.subtitle}>Average Rating</Text>\n            <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\n            <Text style={styles.subtitle}>:{selectedClass.rating} / 5</Text>\n          </Layout>\n        )}\n      </Layout>\n      <Layout style={backgroundColor}>\n        <Text style={styles.courseDescription}>{selectedClass.summary}</Text>\n      </Layout>\n      <Layout style={{ ...backgroundColor, ...styles.boxed }}>\n        <Text style={{ fontSize: 15, fontWeight: 'bold' }}>\n          Other Stated Prerequisites:\n        </Text>\n        <Text style={{ fontSize: 15 }}>\n          {selectedClass.prerequisites !== ''\n            ? selectedClass.prerequisites\n            : 'none'}\n        </Text>\n\n        <Text style={{ fontSize: 15, fontWeight: 'bold' }}>\n          Other Stated Corequisites:\n        </Text>\n        <Text style={{ fontSize: 15 }}>\n          {selectedClass.corequisites !== ''\n            ? selectedClass.corequisites\n            : 'none'}\n        </Text>\n\n        <Text style={{ fontSize: 15, fontWeight: 'bold' }}>\n          Number of PERMs:\n        </Text>\n        <Text style={{ fontSize: 15 }}>\n          {selectedClass.permCount ? selectedClass.permCount.toString() : '0'}\n        </Text>\n      </Layout>\n      <Layout style={[{ alignItems: 'flex-end' }, backgroundColor]}>\n        {(selectedClass.timeSpentOutOfClass ||\n          selectedClass.averageGrade ||\n          selectedClass.difficulty ||\n          selectedClass.rating) && (\n          <TouchableOpacity onPress={() => setShowModal(!showModal)}>\n            <Layout\n              style={[\n                {\n                  flexDirection: 'row',\n                  alignItems: 'flex-start',\n                  paddingRight: 5\n                },\n                backgroundColor\n              ]}\n            >\n              <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\n              <Text style={styles.disclaimer}>How Do We Estimate This?</Text>\n            </Layout>\n          </TouchableOpacity>\n        )}\n      </Layout>\n      <Layout style={backgroundColor}>\n        {selectedClass.times.length > 0 && (\n          <Layout style={backgroundColor}>\n            <Text style={styles.subHeader}>Sections</Text>\n            <Layout style={[styles.section, backgroundColor]}>\n              <Text style={styles.headerText}>Course Code</Text>\n              <Text style={styles.headerText}>Seats</Text>\n              <Text style={styles.headerText}>Professor</Text>\n              <Text style={styles.headerText}>Time</Text>\n              <Text style={styles.headerText}>Location</Text>\n            </Layout>\n          </Layout>\n        )}\n        {selectedClass.times.flatMap((time) => {\n          return time.courseSchedule.map((schedule) => {\n            return (\n              <Layout\n                key={schedule.courseCode}\n                style={{ backgroundColor, ...styles.section }}\n              >\n                <Text style={styles.sectionText}>{time.courseCode}</Text>\n                <Text style={styles.sectionText}>\n                  {time.seatsFilled} /{time.seatsFilled + time.seatsAvailable}\n                </Text>\n                <Text style={styles.sectionText}>{time.professorName}</Text>\n                <Text style={styles.sectionText}>\n                  {buildTimeString(time)}\n                  {'\\n'}\n                  {schedule.daysOfTheWeek.join(', ')}\n                </Text>\n                <Text style={styles.sectionText}>\n                  {schedule.classLocation ? time.classLocation : 'TBD'}\n                </Text>\n              </Layout>\n            );\n          });\n        })}\n        {averageGradeMSGModal}\n      </Layout>\n      <Text style={styles.subHeader}>Reviews</Text>\n      {selectedClass.reviews.length === 0 ? (\n        <Text style={{ alignSelf: 'center', marginBottom: 10 }}>\n          No Reviews yet\n        </Text>\n      ) : (\n        selectedClass.reviews.map((review, index) => (\n          <Card key={index} disabled>\n            <Text>{`${review.text}\\n\\nPosted: ${review.date}`}</Text>\n            {review.professor && (\n              <Text>{`Taught By: ${review.professor}`}</Text>\n            )}\n          </Card>\n        ))\n      )}\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  subtitle: {\n    fontSize: 16\n  },\n  courseOpen: {\n    backgroundColor: 'green',\n    color: '#fff',\n    padding: 5,\n    marginRight: 10\n  },\n  courseClosed: {\n    backgroundColor: 'red',\n    color: '#fff',\n    padding: 5,\n    borderRadius: 5\n  },\n  header: {\n    alignItems: 'center'\n  },\n  details: {\n    flexDirection: 'row',\n    padding: 10,\n    alignItems: 'center',\n    justifyContent: 'flex-start'\n  },\n  courseDescription: {\n    paddingRight: 20,\n    paddingLeft: 20,\n    paddingTop: 10,\n    paddingBottom: 5,\n    fontSize: 17\n  },\n  BodyContainer: {\n    borderTopWidth: 1,\n    borderTopColor: 'black',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-evenly',\n    padding: 10,\n    paddingTop: 20,\n    paddingBottom: 20\n  },\n  boxed: {\n    alignItems: 'center',\n    margin: 8,\n    borderColor: 'black',\n    borderWidth: 1,\n    padding: 7\n  },\n  documentStyle: {\n    width: 150,\n    height: 190,\n    paddingTop: 100\n  },\n  imageLabel: {\n    fontSize: 12,\n    color: 'black',\n    padding: 10,\n    textAlign: 'center'\n  },\n  schedule: {\n    paddingLeft: 20,\n    paddingTop: 10\n  },\n  graphImage: {\n    width: '100%',\n    aspectRatio: 1,\n    resizeMode: 'contain'\n  },\n  grade: {\n    fontSize: 50,\n    fontWeight: 'bold',\n    color: 'green'\n  },\n  reviewText: {\n    fontSize: 16,\n    fontStyle: 'italic'\n  },\n  reviewBox: {\n    width: '95%',\n    padding: 10,\n    borderWidth: 1,\n    borderColor: 'black',\n    borderRadius: 5,\n    marginBottom: 10\n  },\n  section: {\n    flexDirection: 'row',\n    paddingLeft: 5,\n    borderBottomWidth: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  headerText: {\n    fontWeight: 'bold',\n    fontSize: 13,\n    flex: 1\n  },\n  sectionText: {\n    flex: 1\n  },\n  disclaimer: {\n    fontSize: 14,\n    fontStyle: 'italic'\n  },\n  backdrop: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  },\n  input: {\n    height: 50,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  },\n  containerDrop: {\n    height: 42,\n    margin: 12,\n    borderWidth: 1\n  },\n  indentedInput: {\n    height: 50,\n    marginVertical: 12,\n    borderWidth: 1,\n    padding: 10,\n    marginRight: 12,\n    marginLeft: 30\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white'\n  },\n  subHeader: {\n    fontSize: 20,\n    paddingLeft: 20,\n    paddingBottom: 20,\n    paddingTop: 20,\n    fontWeight: 'bold'\n  }\n});\n","import { FontAwesome, FontAwesome5 } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Button, Input, Layout, List, Text } from '@ui-kitten/components';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport {\n  Alert,\n  Dimensions,\n  KeyboardAvoidingView,\n  Platform,\n  SafeAreaView,\n  ScrollView,\n  StyleSheet,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  View\n} from 'react-native';\nimport { SwipeRow } from 'react-native-swipe-list-view';\n\nimport { HeaderBackButton } from '@react-navigation/elements';\nimport {\n  selectDarkMode,\n  selectIsGuest,\n  selectUserKey\n} from '../../app/appDataSlice';\nimport { useAppSelector } from '../../app/hooks';\nimport BackButton from '../../components/BackButton';\nimport { base_URL } from './constants';\n\nimport ModalContainer from '../../components/ModalContainer';\nimport UserNameSelectionDropDown from '../../components/UserNameSelectionDropDown';\nimport { useGetCurrentSectionQuery } from '../api/classPagesApi';\nimport { selectClassesList } from '../classPages/classPagesSlice';\nimport SingleClassPage from './notificationSinglePage';\nimport CalendarRender from '../calendar/CalendarRender';\nimport Header from '../../components/Header';\n\nconst NotificationHomePage = createNativeStackNavigator();\n\nexport default function NotificationsNavigation({ navigation }) {\n  const [notifications, setNotifications] = useState([]);\n  const [selectedIndex, setSelectedIndex] = React.useState([]);\n  const [hasChosen, setHasChosen] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [showGuestModal, setShowGuestModal] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const userKey = useAppSelector(selectUserKey);\n  const darkMode = useAppSelector(selectDarkMode);\n  const isGuest = useAppSelector(selectIsGuest);\n\n  useEffect(() => {\n    refreshNotifications();\n    fetch(`${base_URL}/users/getUserNameList`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        userKey\n      }\n    }).then(async (data) => {\n      if (data.ok) {\n        const newUsers = (await data.json()).map((userName) => {\n          return {\n            label: userName,\n            id: userName\n          };\n        });\n        setUsers(newUsers);\n      }\n    });\n  }, []);\n  async function refreshNotifications() {\n    fetch(`${base_URL}/users/getNotifications`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        userKey\n      }\n    }).then((res) => {\n      res.text().then((notifications) => {\n        notifications = JSON.parse(notifications);\n        // @ts-ignore\n        setNotifications(notifications);\n      });\n    });\n  }\n  async function sendNotification(bodyTosend) {\n    await fetch(`${base_URL}/users/sendNotification`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        userKey\n      },\n      body: JSON.stringify(bodyTosend)\n    });\n  }\n  function createNotificationButton() {\n    navigation.navigate('CreateNotification');\n  }\n  function clearNotifications() {\n    fetch(`${base_URL}/users/clearNotifications`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        userKey\n      }\n    }).then(() => {\n      refreshNotifications();\n    });\n  }\n  const navigationHeader = (navigation) => (\n    <Layout\n      style={{\n        width: '100%',\n        justifyContent: 'space-between',\n        flexDirection: 'row',\n        backgroundColor: 'transparent'\n      }}\n    >\n      {Platform.OS === 'ios' && <BackButton navigation={navigation} />}\n\n      <Layout\n        style={{\n          paddingBottom: 5,\n          flexDirection: 'row',\n          alignItems: 'center',\n          backgroundColor: 'transparent'\n        }}\n      >\n        {/* <Image\n          style={{\n            height: 28,\n            width: 28,\n          }}\n          source={require('../../../assets/logos/app-logo.png')}\n        /> */}\n        <Text\n          style={{\n            paddingTop: 3,\n            fontSize: 20,\n            fontWeight: '500',\n            color: darkMode ? '#fff' : '#000'\n          }}\n        >\n          Notifications\n        </Text>\n      </Layout>\n      <Layout\n        style={{\n          alignItems: 'flex-end',\n          paddingRight: 40,\n          paddingBottom: 10,\n          flexDirection: 'row',\n          backgroundColor: 'transparent'\n        }}\n      >\n        <TouchableOpacity\n          style={{\n            paddingLeft: 20,\n            marginRight: Platform.OS == 'android' ? 50 : 0\n          }}\n          onPress={() => {\n            if (isGuest) {\n              setShowGuestModal(true);\n            } else {\n              createNotificationButton();\n            }\n          }}\n        >\n          <FontAwesome5 size={25} color=\"#1E90FF\" name=\"plus\" />\n        </TouchableOpacity>\n        {showGuestModal && (\n          <ModalContainer\n            title=\"Wait!\"\n            children={\n              <Text style={{ paddingHorizontal: 30 }}>\n                This feature is locked to our Guest Users. Please create a free\n                account with us to take advantage this feature.\n              </Text>\n            }\n            backDropVisible={showGuestModal}\n            setBackDropVisible={setShowGuestModal}\n          />\n        )}\n        {/* <TouchableOpacity\n\n          onPress={() => {\n            Alert.alert(\n              'Caution',\n              'Are you sure you want to clear your notifications?\\nThis action cannot be undone.',\n              [\n                {\n                  text: 'No',\n                  style: 'cancel',\n                },\n                {\n                  text: 'Yes',\n                  onPress: async () => {\n                    clearNotifications();\n                  },\n                },\n              ]\n            );\n          }}>\n          <FontAwesome5 size={25} color={'#d71717'} name=\"times\" />\n        </TouchableOpacity>\n        /* <TouchableOpacity\n          style={{ paddingLeft: 20 }}\n          onPress={() => {\n            refreshNotifications();\n          }}>\n          <FontAwesome size={25} color={'#1E90FF'} name=\"rotate-right\" />\n        </TouchableOpacity> */}\n      </Layout>\n    </Layout>\n  );\n  function Notifications({ navigation }) {\n    const [refreshing, setRefreshing] = useState(false);\n    const [isMoving, setIsMoving] = useState(false);\n\n    const onRefresh = useCallback(() => {\n      setRefreshing(true);\n      refreshNotifications().then(() => {\n        setRefreshing(false);\n      });\n    }, []);\n    async function handleOnLeftSwipe(postId) {\n      const newNotifications = notifications.map((not) => {\n        if (not._id !== postId) {\n          return not;\n        }\n      });\n      setNotifications(newNotifications);\n      const res = await fetch(`${base_URL}/users/removeNotification`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          userKey\n        },\n        body: JSON.stringify({\n          id: postId\n        }),\n        redirect: 'follow'\n      });\n      if (res.ok) {\n        refreshNotifications();\n      } else {\n        console.warn(await res.json());\n      }\n      setIsOpen(false);\n      setIsMoving(false);\n    }\n\n    const renderItem = ({ item: notification }) => {\n      return (\n        <Layout>\n          {notification && (\n            // @ts-ignore\n            <SwipeRow\n              disableRightSwipe\n              onSwipeValueChange={(status) => {\n                if (status.value < -Dimensions.get('window').width * (1 / 3)) {\n                  if (!isOpen) {\n                    setIsOpen(true);\n                    handleOnLeftSwipe(notification._id);\n                  }\n                } else if (status.value < -5) {\n                  setIsMoving(true);\n                } else {\n                  setIsMoving(false);\n                }\n              }}\n              useNativeDriver\n            >\n              <Layout\n                style={{\n                  alignItems: 'flex-end',\n                  justifyContent: 'center',\n                  alignSelf: 'center',\n                  width: '95%',\n                  height: 75,\n                  borderRadius: 11,\n                  backgroundColor: '#ce0f0f',\n                  marginLeft: 5,\n                  paddingRight: 20,\n                  marginRight: 5,\n                  marginTop: 10\n                }}\n              >\n                <Text style={{ color: '#fff' }}>Delete</Text>\n              </Layout>\n              <TouchableWithoutFeedback\n                style={{\n                  alignItems: 'center',\n                  alignSelf: 'center',\n                  width: '95%',\n                  height: 75,\n                  borderRadius: 10,\n                  marginLeft: 5,\n                  marginRight: 5,\n                  marginTop: 10\n                }}\n                onPress={() => {\n                  navigation.navigate('SingleNotification', {\n                    data: notification\n                  });\n                }}\n                key={notification?._id}\n              >\n                <Layout\n                  style={{\n                    alignItems: 'center',\n                    alignSelf: 'center',\n                    width: '95%',\n                    height: 75,\n                    borderRadius: 10,\n                    backgroundColor: darkMode ? '#333333' : '#ebebeb',\n                    shadowColor: '#000',\n                    shadowOffset: { width: 0, height: 1 },\n                    shadowOpacity: 0.2,\n                    shadowRadius: 2,\n                    elevation: 1,\n                    marginLeft: 5,\n                    marginRight: 5,\n                    marginTop: 10\n                  }}\n                >\n                  <Text\n                    style={{\n                      paddingTop: 5,\n                      fontWeight: 'bold',\n                      fontSize: 20\n                    }}\n                  >\n                    {notification?.title}\n                  </Text>\n                  <Text style={{}}>\n                    From:\n                    {notification?.from}\n                  </Text>\n                  {notification?.creationDate ? (\n                    <Text style={{ fontStyle: 'italic', fontSize: 12 }}>\n                      {notification?.creationDate}\n                    </Text>\n                  ) : null}\n                </Layout>\n              </TouchableWithoutFeedback>\n            </SwipeRow>\n          )}\n        </Layout>\n      );\n    };\n\n    return (\n      <Layout style={{ flex: 1 }}>\n        {notifications.length === 0 ? (\n          <Layout style={{ alignItems: 'center' }}>\n            <Text\n              style={{\n                paddingTop: '25%',\n                paddingBottom: 10,\n                textAlign: 'center'\n              }}\n            >\n              No New Notifications\n            </Text>\n            <TouchableOpacity\n              onPress={() => {\n                refreshNotifications();\n              }}\n            >\n              <FontAwesome size={25} color=\"#1E90FF\" name=\"rotate-right\" />\n            </TouchableOpacity>\n          </Layout>\n        ) : null}\n        <List\n          style={{ backgroundColor: 'transparent' }}\n          contentContainerStyle={{ flex: 1 }}\n          data={notifications}\n          scrollEnabled={!isMoving}\n          renderItem={renderItem}\n          onRefresh={refreshNotifications}\n          refreshing={refreshing}\n        />\n      </Layout>\n    );\n  }\n\n  function getDateText(text) {\n    const spaceIndex = text.indexOf(' ');\n    const first = text.substring(0, spaceIndex);\n    const second = text.substring(spaceIndex + 1);\n    return `${second} |  ${first}`;\n  }\n\n  function SingleNotification({\n    route: {\n      params: { data }\n    }\n  }) {\n    navigation = useNavigation();\n    const { data: currentSection } = useGetCurrentSectionQuery();\n\n    if (data.isSchedule) {\n      return (\n        <CalendarRender\n          route={{\n            params: {\n              overrideData: JSON.parse(data.message)\n            }\n          }}\n        />\n      );\n    }\n    if (data.isCourseData) {\n      const allClassData = useAppSelector(selectClassesList);\n      const courseSimpleData = JSON.parse(data.message);\n      if (courseSimpleData.courseTerm === currentSection) {\n        return (\n          <SingleClassPage\n            selectedClass={allClassData[courseSimpleData.masterCourseCode]}\n          />\n        );\n      }\n      Alert.alert('This course contains outdated information');\n      navigation.goBack();\n      return null;\n    }\n    return (\n      <KeyboardAvoidingView\n        style={{ flex: 1 }}\n        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n      >\n        <ScrollView contentContainerStyle={{ flex: 1 }}>\n          <Layout style={sponsorPageStyles.container}>\n            <Layout\n              style={{ width: '100%', alignItems: 'center', marginTop: 20 }}\n            >\n              <Text style={sponsorPageStyles.title}>{data.title}</Text>\n            </Layout>\n\n            {data.from && (\n              <Layout style={sponsorPageStyles.address}>\n                <Layout style={{ flexDirection: 'row' }}>\n                  <Text style={{ fontSize: 15, fontWeight: 'bold' }}>\n                    From:\n                  </Text>\n                  <Text style={{ fontSize: 15 }}>{data.from}</Text>\n                </Layout>\n                <Layout style={{ flexDirection: 'row' }}>\n                  <Text style={{ fontSize: 15 }}>\n                    {getDateText(data.creationDate)}\n                  </Text>\n                </Layout>\n              </Layout>\n            )}\n            <Layout style={sponsorPageStyles.description}>\n              <Text>{data.message}</Text>\n            </Layout>\n            {data.repliable && (\n              <TouchableOpacity\n                onPress={() => {\n                  // TODO: reply\n                }}\n                style={myStyles.button}\n              >\n                <Text style={myStyles.text}>Reply</Text>\n              </TouchableOpacity>\n            )}\n          </Layout>\n        </ScrollView>\n      </KeyboardAvoidingView>\n    );\n  }\n  function CreateNotification({ navigation }) {\n    const [body, setBody] = useState({});\n    const [done, setDone] = useState(false);\n    const [recipient, setRecipient] = useState(null);\n    const [hasChosen, setHasChosen] = useState(false);\n\n    useEffect(() => {\n      changeValue(hasChosen ? [recipient] : null, 'recipients');\n    }, [recipient, hasChosen]);\n\n    function checkForDone(tempBody) {\n      if (tempBody.recipients && tempBody.title && tempBody.text) {\n        setDone(true);\n      } else {\n        setDone(false);\n      }\n    }\n\n    const changeValue = (theValue, valueToChange) => {\n      const newBody = body;\n      for (const aspect in newBody) {\n        if (\n          newBody[aspect] === null ||\n          newBody[aspect] === undefined ||\n          newBody[aspect] === ''\n        ) {\n          delete newBody[aspect];\n        }\n      }\n      if (theValue !== undefined) {\n        newBody[valueToChange] = theValue;\n      } else if (newBody[valueToChange]) {\n        delete newBody[valueToChange];\n      }\n      checkForDone(newBody);\n      setBody(newBody);\n    };\n\n    function renderInputFields() {\n      const renderHeader = () => {\n        return (\n          <Layout style={{ flexDirection: 'row' }}>\n            <Text\n              style={{\n                fontSize: 15,\n                paddingLeft: 12,\n                paddingBottom: 5,\n                paddingTop: 5,\n                alignContent: 'center',\n                fontWeight: 'bold'\n              }}\n            >\n              Send Message\n            </Text>\n          </Layout>\n        );\n      };\n      const final = [];\n      final.push(\n        <View\n          style={{\n            height: 50,\n            margin: 12,\n            padding: 10\n          }}\n        >\n          {UserNameSelectionDropDown({\n            setHasChosen,\n            setRecipient,\n            placeholder: true\n          })}\n        </View>\n      );\n      final.push(\n        <Input\n          autoCapitalize=\"words\"\n          onChangeText={(theValue) => changeValue(theValue, 'title')}\n          style={myStyles.input}\n          placeholderTextColor=\"gray\"\n          placeholder=\"Title\"\n        />\n      );\n      final.push(\n        <Input\n          autoCapitalize=\"sentences\"\n          onChangeText={(theValue) => changeValue(theValue, 'text')}\n          style={myStyles.inputBig}\n          multiline\n          textStyle={{ minHeight: 150 }}\n          placeholderTextColor=\"gray\"\n          placeholder=\"Body\"\n        />\n      );\n\n      return (\n        <Layout style={{ flex: 1 }}>\n          {renderHeader()}\n          {final}\n        </Layout>\n      );\n    }\n    return (\n      <SafeAreaView style={{ flex: 1 }}>\n        <KeyboardAvoidingView\n          style={{ flex: 1 }}\n          behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n        >\n          <ScrollView contentContainerStyle={{ flex: 1 }}>\n            <Layout style={sponsorPageStyles.container}>\n              <Layout style={sponsorPageStyles.description}>\n                {renderInputFields()}\n                <Button\n                  disabled={!done}\n                  onPress={async () => {\n                    await sendNotification(body);\n                    navigation.navigate('Notifications');\n                  }}\n                >\n                  <Text style={myStyles.text}>Send Message</Text>\n                </Button>\n              </Layout>\n            </Layout>\n          </ScrollView>\n        </KeyboardAvoidingView>\n      </SafeAreaView>\n    );\n  }\n  return (\n    <NotificationHomePage.Navigator initialRouteName=\"Notifications & Messages\">\n      <NotificationHomePage.Screen\n        options={({ navigation }) => ({\n          header: () => (\n            <Layout>\n              <Header\n                title=\"\"\n                accessoryLeft={\n                  <Layout\n                    style={{ flexDirection: 'row', alignItems: 'center' }}\n                  >\n                    <HeaderBackButton\n                      onPress={navigation.goBack}\n                      label=\"Back\"\n                      labelVisible={Platform.OS === 'ios'}\n                    />\n                    <Text\n                      style={{\n                        marginLeft: Platform.OS === 'web' ? undefined : 50,\n                        paddingTop: 3,\n                        fontSize: 20,\n                        fontWeight: '500',\n                        color: darkMode ? '#fff' : '#000'\n                      }}\n                    >\n                      Notifications\n                    </Text>\n                  </Layout>\n                }\n                accessoryRight={\n                  <Layout>\n                    <TouchableOpacity\n                      style={{\n                        paddingLeft: 20,\n                        marginRight: Platform.OS == 'android' ? 50 : 0\n                      }}\n                      onPress={() => {\n                        if (isGuest) {\n                          setShowGuestModal(true);\n                        } else {\n                          createNotificationButton();\n                        }\n                      }}\n                    >\n                      <FontAwesome5 size={25} color=\"#1E90FF\" name=\"plus\" />\n                    </TouchableOpacity>\n                    {showGuestModal && (\n                      <ModalContainer\n                        title=\"Wait!\"\n                        children={\n                          <Text style={{ paddingHorizontal: 30 }}>\n                            This feature is locked to our Guest Users. Please\n                            create a free account with us to take advantage this\n                            feature.\n                          </Text>\n                        }\n                        backDropVisible={showGuestModal}\n                        setBackDropVisible={setShowGuestModal}\n                      />\n                    )}\n                  </Layout>\n                }\n              />\n            </Layout>\n          )\n        })}\n        name=\"Notifications\"\n        component={Notifications}\n      />\n      <NotificationHomePage.Screen\n        name=\"SingleNotification\"\n        component={SingleNotification}\n        options={{ headerTitle: '' }}\n      />\n      <NotificationHomePage.Screen\n        name=\"CreateNotification\"\n        component={CreateNotification}\n        options={{ headerTitle: '' }}\n      />\n    </NotificationHomePage.Navigator>\n  );\n}\n\nfunction convertTo12HourTime(time) {\n  if (time.length !== 5) {\n    time = `0${time}`;\n  }\n  let hours = time.slice(0, 2);\n  const minutes = time.slice(3, 5);\n  let ampm = Number.parseInt(hours) > 12 ? 'pm' : 'am';\n  hours %= 12;\n  if (hours === 0) {\n    hours = 12;\n    ampm = 'pm';\n  }\n  return `${hours}:${minutes}${ampm}`;\n}\n\nfunction getMinutesDiff(startTime, endTime) {\n  if (endTime > startTime) {\n    return (endTime - startTime) * 0.7;\n  }\n  if (startTime === endTime) {\n    return 0;\n  }\n  return (startTime - endTime) * -0.7;\n}\n\nconst sponsorPageStyles = StyleSheet.create({\n  container: {\n    flex: 1\n    // alignItems: 'center',\n  },\n  header: {\n    marginTop: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%'\n  },\n  address: {\n    alignItems: 'center',\n    margin: 10,\n    borderColor: 'black',\n    borderWidth: 1,\n    padding: 10\n  },\n  video: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-start'\n  },\n  title: {\n    fontSize: 26,\n    marginLeft: 10\n  },\n  logo: {\n    width: '100%',\n    height: 100\n  },\n  description: {\n    flex: 1,\n    margin: 10,\n    borderRadius: 5,\n    width: '95%',\n    padding: 10\n  },\n  couponContainer: {\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 20,\n    marginBottom: 20\n  },\n  coupon: {\n    width: 400,\n    height: 267\n  },\n  imageGallery: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    margin: 10,\n    marginBottom: 0\n  },\n  imageStyle: {\n    width: 150,\n    height: 150,\n    paddingTop: 100,\n    margin: 5\n  },\n  headerText: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  }\n});\n\nconst myStyles = StyleSheet.create({\n  inputBig: {\n    height: 200,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  },\n  input: {\n    height: 50,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  },\n  indentedInput: {\n    height: 50,\n    marginVertical: 12,\n    borderWidth: 1,\n    padding: 10,\n    marginRight: 12,\n    marginLeft: 30\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25\n  },\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 12,\n    paddingHorizontal: 32,\n    borderRadius: 4,\n    elevation: 3\n  },\n  timeButton: {\n    width: 100,\n    height: 50,\n    marginHorizontal: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 4\n  },\n  timeText: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white'\n  },\n  actualTimeText: {\n    fontSize: 13,\n    lineHeight: 18,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white'\n  },\n  timeStyle: {\n    flex: 0.3,\n    borderWidth: 2,\n    borderLeftColor: 'white'\n  }\n});\n\nconst listingStyles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  cardContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    alignSelf: 'center',\n    width: '95%',\n    height: 75,\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderBottomWidth: 0,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 2,\n    elevation: 1,\n    marginLeft: 5,\n    marginRight: 5,\n    marginTop: 10\n  },\n  containerForNotifications: {\n    alignItems: 'center',\n    alignSelf: 'center',\n    width: '95%',\n    height: 75,\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderBottomWidth: 0,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 2,\n    elevation: 1,\n    marginLeft: 5,\n    marginRight: 5,\n    marginTop: 10\n  },\n  text: {\n    flex: 1,\n    fontSize: 20,\n    textAlign: 'center',\n    marginTop: 5,\n    marginBottom: 5\n  },\n  image: {\n    width: '100%',\n    height: '100%',\n    borderRadius: 10\n  }\n});\n","import { Input, Layout, Spinner, Text } from '@ui-kitten/components';\nimport { TouchableWithoutFeedback } from '@ui-kitten/components/devsupport';\nimport { useState } from 'react';\nimport {\n  Keyboard,\n  KeyboardAvoidingView,\n  Platform,\n  TouchableOpacity\n} from 'react-native';\n\nimport { selectUserKey } from '../../app/appDataSlice';\nimport { useAppSelector } from '../../app/hooks';\nimport WrapItems from '../../components/WrapItems';\nimport { useEditUserMutation, useGetUserInfoQuery } from '../api/usersApi';\n\nfunction EditProfileHeader({ navigation, saveChanges }) {\n  return (\n    <Layout\n      style={{\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        margin: 20,\n        marginTop: Platform.OS !== 'ios' ? 40 : 20\n      }}\n    >\n      <TouchableOpacity\n        onPress={() => {\n          navigation.goBack();\n        }}\n      >\n        <Text>Cancel</Text>\n      </TouchableOpacity>\n      <Text category=\"s1\">Edit Profile</Text>\n      <TouchableOpacity onPress={saveChanges}>\n        <Text>Save</Text>\n      </TouchableOpacity>\n    </Layout>\n  );\n}\n\nexport default function EditUser({ navigation }) {\n  const userKey = useAppSelector(selectUserKey);\n  const { data: userData } = useGetUserInfoQuery(userKey, {\n    skip: !userKey\n  });\n\n  const inputs = [\n    {\n      placeholder: '*******',\n      label: 'password',\n      name: 'password'\n    },\n    {\n      placeholder: userData.realFirstName,\n      label: 'First Name',\n      name: 'realFirstName'\n    },\n    {\n      placeholder: userData.realLastName,\n      label: 'Last Name',\n      name: 'realLastName'\n    },\n    {\n      placeholder: userData.profileDescription,\n      label: 'Profile Description',\n      name: 'profileDescription',\n      propOptions: { multiline: true, textStyle: { minHeight: 64 } }\n    },\n    {\n      placeholder: userData.linkedin,\n      label: 'LinkedIn',\n      name: 'linkedin'\n    },\n    {\n      placeholder: userData.major,\n      label: 'Major',\n      name: 'major'\n    }\n  ];\n\n  const [fields, setFields] = useState(\n    Object.fromEntries(inputs.map((input) => [input.name, '']))\n  );\n  const [editUser, { isLoading }] = useEditUserMutation();\n\n  const saveChanges = async () => {\n    const changedFields = Object.entries(fields).filter(\n      ([_, value]) => value !== ''\n    );\n\n    try {\n      if (changedFields.length > 0) {\n        await editUser({\n          userKey,\n          userName: userData.userName,\n          fields: Object.fromEntries(changedFields)\n        }).unwrap();\n      }\n\n      navigation.goBack();\n    } catch (err) {\n      console.warn('Error editing user', err);\n    }\n  };\n\n  return (\n    <Layout style={{ flex: 1 }}>\n      {isLoading ? (\n        <Layout\n          style={{\n            flex: 1,\n            backgroundColor: 'transparent',\n            position: 'absolute',\n            top: '30%',\n            right: '50%',\n            zIndex: 1\n          }}\n        >\n          <Spinner size=\"medium\" />\n        </Layout>\n      ) : null}\n\n      <EditProfileHeader navigation={navigation} saveChanges={saveChanges} />\n      <KeyboardAvoidingView\n        style={{ flex: 1 }}\n        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n      >\n        <TouchableWithoutFeedback\n          style={{ flex: 1 }}\n          onPress={Keyboard.dismiss}\n        >\n          <WrapItems\n            style={{ marginVertical: 20 }}\n            childStyle={{ marginHorizontal: 40, marginVertical: 10 }}\n          >\n            {inputs.map(({ placeholder, label, name, propOptions }) => (\n              <Input\n                key={name}\n                placeholder={placeholder}\n                label={label}\n                onChangeText={(text) => setFields({ ...fields, [name]: text })}\n                {...propOptions}\n              />\n            ))}\n          </WrapItems>\n        </TouchableWithoutFeedback>\n      </KeyboardAvoidingView>\n    </Layout>\n  );\n}\n","import { Button, Divider, Layout, Text, Toggle } from '@ui-kitten/components';\nimport Constants from 'expo-constants';\nimport React, { useEffect, useState } from 'react';\nimport {ScrollView, useColorScheme} from 'react-native';\n\nimport {\n  deviceDarkModeSet,\n  reset as resetAppData,\n  selectDarkMode,\n  selectIsGuest,\n  selectUserKey,\n  useDeviceColorSchemeSet\n} from '../../app/appDataSlice';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport ModalContainer from '../../components/ModalContainer';\nimport WrapItems from '../../components/WrapItems';\nimport { apiSlice } from '../api/apiSlice';\nimport {\n  useDeleteAccountMutation,\n  useEditUserMutation,\n  useGetUserInfoQuery\n} from '../api/usersApi';\nimport { reset as resetClassPages } from '../classPages/classPagesSlice';\nimport { reset as resetDiscover } from '../discover/discoverSlice';\nimport { base_URL } from '../../constants/admin';\nimport { UserData } from '../../app/types';\n\nexport default function SettingsPage({ navigation }) {\n  const [settingsDisabled, setSettingsDisabled] = useState(false);\n  const [editUser] = useEditUserMutation();\n  const darkMode = useAppSelector(selectDarkMode);\n  const useDeviceColorScheme = useAppSelector(\n    (state) => state.appData.secure.useDeviceColorScheme\n  );\n  const userKey = useAppSelector(selectUserKey);\n  const isGuest = useAppSelector(selectIsGuest);\n  const colorScheme = useColorScheme();\n  const { data: userData } = useGetUserInfoQuery(userKey, {\n    skip: !userKey\n  });\n  const dispatch = useAppDispatch();\n  const [showGuestModal, setShowGuestModal] = useState(false);\n  const [deleteAccount, { isLoading }] = useDeleteAccountMutation();\n\n  const currentVersion =\n    Constants?.manifest2?.extra?.expoClient?.version ??\n    Constants?.manifest?.version;\n\n  const logOut = () => {\n    dispatch(resetClassPages());\n    dispatch(resetDiscover());\n    dispatch(resetAppData());\n    dispatch(apiSlice.util.resetApiState());\n  };\n\n  const handleDeleteAccount = async () => {\n    try {\n      await deleteAccount({ userKey, userName: userData.userName }).unwrap();\n      logOut();\n    } catch (e) {\n      console.warn('Error deleting account: ', e);\n    }\n  };\n\n  const handleUseDeviceSettingToggled = (checked: boolean) => {\n    dispatch(useDeviceColorSchemeSet(checked));\n    if (checked) {\n      dispatch(deviceDarkModeSet(colorScheme === 'dark'));\n    }\n  };\n\n  const handleDarkModeToggled = (checked: boolean) => {\n    dispatch(useDeviceColorSchemeSet(false));\n    dispatch(deviceDarkModeSet(checked));\n  };\n\n  function handleSettingsChange(settingName, value) {\n    setSettingsDisabled(true);\n    const body = {\n      settings: {}\n    };\n    body.settings[settingName] = value;\n    editUser({\n      userKey,\n      userName: userData.userName,\n      fields: JSON.stringify(body)\n    })\n      .unwrap()\n      .then(() => setSettingsDisabled(false))\n      .catch((e) => {\n        setSettingsDisabled(false);\n        console.warn(e.message);\n      });\n  }\n\n  return (\n    <Layout style={{ flex: 1 }}>\n      <Layout\n        style={{\n          flexDirection: 'row',\n          marginHorizontal: 20,\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          flex: 1\n        }}\n      >\n        <Layout>\n          <Text category=\"h2\">\n            {userData?.realFirstName} {userData?.realLastName}\n          </Text>\n          <Text category=\"h6\" status=\"success\">\n            @{userData?.userName}\n          </Text>\n        </Layout>\n        <Layout>\n          <Button\n            onPress={() => {\n              if (isGuest) {\n                setShowGuestModal(true);\n              } else {\n                navigation.navigate('EditUser');\n              }\n            }}\n          >\n            Edit\n          </Button>\n        </Layout>\n      </Layout>\n      {showGuestModal && (\n        <ModalContainer\n          title=\"Wait!\"\n          children={\n            <Text style={{ paddingHorizontal: 30 }}>\n              This feature is not available to Guest Users. Please create a free\n              account with us to take advantage this feature.\n            </Text>\n          }\n          backDropVisible={showGuestModal}\n          setBackDropVisible={setShowGuestModal}\n        />\n      )}\n\n      <Divider />\n\n      <Layout\n        style={{\n          flex: 5,\n          justifyContent: 'space-between',\n          marginHorizontal: 20\n        }}\n      >\n          <ScrollView>\n        <Layout>\n          <Text category=\"h6\" style={{ textAlign: 'center', marginTop: 20 }}>\n            Dark Mode\n          </Text>\n          <Layout\n            style={{\n              marginTop: 20,\n              flexDirection: 'row',\n              justifyContent: 'space-between'\n            }}\n          >\n            <Text>Use Device Setting</Text>\n            <Toggle\n              onChange={(checked) => handleUseDeviceSettingToggled(checked)}\n              checked={useDeviceColorScheme}\n            />\n          </Layout>\n          <Layout\n            style={{\n              marginTop: 20,\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              opacity: useDeviceColorScheme ? 0.4 : 1\n            }}\n          >\n            <Text>Dark Mode</Text>\n            <Toggle\n              onChange={(checked) => handleDarkModeToggled(checked)}\n              checked={darkMode}\n            />\n          </Layout>\n\n          <Text category=\"h6\" style={{ textAlign: 'center', marginTop: 20 }}>\n            Push Notifications\n          </Text>\n          {userData.permissionLevel === 'admin' && (\n            <Layout\n              style={{\n                marginTop: 20,\n                flexDirection: 'row',\n                justifyContent: 'space-between'\n              }}\n            >\n              <Text>New Review Notification</Text>\n              <Toggle\n                disabled={settingsDisabled}\n                onChange={(checked) =>\n                  handleSettingsChange('newReview', checked)\n                }\n                checked={userData.settings.newReview}\n              />\n            </Layout>\n          )}\n          <Layout\n            style={{\n              marginTop: 20,\n              flexDirection: 'row',\n              justifyContent: 'space-between'\n            }}\n          >\n            <Text>Alert Notifications</Text>\n            <Toggle\n              disabled={settingsDisabled}\n              onChange={(checked) =>\n                handleSettingsChange('alertNotifications', checked)\n              }\n              checked={userData.settings.alertNotifications}\n            />\n          </Layout>\n\n          <Layout\n            style={{\n              marginTop: 20,\n              flexDirection: 'row',\n              justifyContent: 'space-between'\n            }}\n          >\n            <Text>Chat Notifications</Text>\n            <Toggle\n              disabled={settingsDisabled}\n              onChange={(checked) =>\n                handleSettingsChange('chatNotifications', checked)\n              }\n              checked={userData.settings.chatNotifications}\n            />\n          </Layout>\n\n            <Text category=\"h6\" style={{ textAlign: 'center', marginTop: 20 }}>\n                Other Settings\n            </Text>\n\n            <Layout\n                style={{\n                    marginTop: 20,\n                    flexDirection: 'row',\n                    justifyContent: 'space-between'\n                }}\n            >\n                <Text>Show Names in place of Usernames</Text>\n                <Toggle\n                    disabled={settingsDisabled}\n                    onChange={(checked) =>\n                        handleSettingsChange('displayNames', checked)\n                    }\n                    checked={userData.settings.displayNames}\n                />\n            </Layout>\n        </Layout>\n          </ScrollView>\n\n        <WrapItems\n          childStyle={{ marginVertical: 3 }}\n          style={{ alignItems: 'center', marginBottom: 10 }}\n        >\n          <Button onPress={logOut} status=\"warning\" appearance=\"outline\">\n            Log Out\n          </Button>\n          <Button\n            onPress={handleDeleteAccount}\n            status=\"danger\"\n            appearance=\"ghost\"\n          >\n            Delete Account\n          </Button>\n          <Text>{currentVersion ? `Version ${currentVersion}` : ''}</Text>\n        </WrapItems>\n      </Layout>\n    </Layout>\n  );\n}\n","import { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { useTheme } from '@ui-kitten/components';\n\nimport { selectDarkMode } from '../../app/appDataSlice';\nimport { useAppSelector } from '../../app/hooks';\nimport BackButton from '../../components/BackButton';\nimport EditUser from './EditUser';\nimport SettingsPage from './SettingsPage';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function Settings() {\n  const theme = useTheme();\n  const darkMode = useAppSelector(selectDarkMode);\n\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerStyle: {\n          backgroundColor: darkMode ? theme['color-basic-800'] : '#fff'\n        }\n      }}\n    >\n      <Stack.Screen\n        name=\"SettingsPage\"\n        component={SettingsPage}\n        options={({ navigation }) => ({\n          title: 'Settings',\n          headerLeft: (props) => (\n            <BackButton navigation={navigation} {...props} />\n          )\n        })}\n      />\n      <Stack.Group screenOptions={{ presentation: 'modal' }}>\n        <Stack.Screen\n          name=\"EditUser\"\n          component={EditUser}\n          options={{ headerShown: false }}\n        />\n      </Stack.Group>\n    </Stack.Navigator>\n  );\n}\n","import { Feather, FontAwesome5 } from '@expo/vector-icons';\nimport { Button, useTheme } from '@ui-kitten/components';\nimport React from 'react';\nimport { ScrollView, View, Text } from 'react-native';\n\nexport default function Menu({ menuItems, setMenuItems }) {\n  const theme = useTheme();\n\n  return (\n    <View style={{ marginVertical: 10 }}>\n      <ScrollView\n        showsHorizontalScrollIndicator={false}\n        horizontal\n        style={{ flexDirection: 'row' }}\n      >\n        {Object.entries(menuItems).map(([name, value]: any[], index) => {\n          if (!value.selected) {\n            return (\n              <Button\n                onPress={() => {\n                  setMenuItems({\n                    ...menuItems,\n                    [name]: { selected: !value.selected }\n                  });\n                }}\n                status={value.selected ? 'info' : 'primary'}\n                style={{\n                  height: 45,\n                  marginHorizontal: 10,\n                  borderRadius: 20,\n                  backgroundColor: `rgba(${theme['color-success-500']}, ${\n                    1 - 0.03 * index\n                  })`,\n                  borderColor: `rgba(${theme['color-success-500']}, ${\n                    1 - 0.03 * index\n                  })`\n                }}\n                key={index}\n              >\n                <View\n                  style={{ alignItems: 'center', justifyContent: 'center' }}\n                >\n                  <Text style={{ color: 'white' }}>\n                    {name}\n                    {value.selected && (\n                      <Text>\n                        {`    `}\n                        <Feather name=\"x\" size={15} />\n                      </Text>\n                    )}\n                  </Text>\n                </View>\n              </Button>\n            );\n          }\n        })}\n      </ScrollView>\n      <ScrollView\n        showsHorizontalScrollIndicator={false}\n        horizontal\n        style={{ flexDirection: 'row', marginTop: 3, marginLeft: 8 }}\n      >\n        {Object.entries(menuItems).map(([name, value]: any[], index) => {\n          if (value.selected) {\n            return (\n              <Button\n                accessoryRight={\n                  <FontAwesome5 name=\"times\" size={14} color=\"white\" />\n                }\n                onPress={() => {\n                  setMenuItems({\n                    ...menuItems,\n                    [name]: { selected: !value.selected }\n                  });\n                }}\n                style={{\n                  height: 45,\n                  marginHorizontal: 2,\n                  borderRadius: 20,\n                  backgroundColor: theme['color-success-500'],\n                  borderColor: theme['color-success-500']\n                }}\n                key={index}\n              >\n                <View\n                  style={{ alignItems: 'center', justifyContent: 'center' }}\n                >\n                  <Text style={{ color: 'white' }}>{name}</Text>\n                </View>\n              </Button>\n            );\n          }\n        })}\n      </ScrollView>\n    </View>\n  );\n}\n","import { apiSlice } from './apiSlice';\n\nexport const sponsorsApiSlice = apiSlice.injectEndpoints({\n  overrideExisting: true,\n  endpoints: (builder) => ({\n    refreshSponsors: builder.query({\n      query: (userKey) => ({\n        url: '/sponsors',\n        headers: {\n          userKey\n        }\n      }),\n      transformResponse: (sponsors: any[]) => {\n        sponsors = sponsors.sort((a, b) => {\n          const textA = a.sponsorName.toUpperCase();\n          const textB = b.sponsorName.toUpperCase();\n          return textA < textB ? 1 : textA > textB ? -1 : 0;\n        });\n\n        return [\n          sponsors.find((sponsor) => sponsor.sponsorName === 'Big Mo\\'s'),\n          ...sponsors.filter((sponsor) => sponsor.sponsorName !== 'Big Mo\\'s')\n        ];\n      }\n    }),\n    postSponsorVisit: builder.mutation({\n      query: ({ userKey, sponsorId }) => ({\n        url: '/analytics/sponsor/ping',\n        method: 'POST',\n        headers: {\n          userKey\n        },\n        body: {\n          sponsorId\n        },\n        responseHandler: (response) => response.text()\n      })\n    })\n  })\n});\n\nexport const { useLazyRefreshSponsorsQuery, usePostSponsorVisitMutation } = sponsorsApiSlice;\n","import { FontAwesome5 } from '@expo/vector-icons';\nimport { Layout, useTheme } from '@ui-kitten/components';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport React, { useEffect, useState } from 'react';\nimport {\n  Dimensions,\n  Image,\n  Linking,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View\n} from 'react-native';\n\nimport { selectDarkMode, selectUserKey } from '../../app/appDataSlice';\nimport { useAppSelector } from '../../app/hooks';\nimport Menu from '../../components/Menu';\nimport {\n  useLazyRefreshSponsorsQuery,\n  usePostSponsorVisitMutation\n} from '../api/sponsorsApi';\n\nconst windowWidth = Dimensions.get('window').width;\n\nexport function SponsorPage({\n  route: {\n    params: { data }\n  }\n}) {\n  const isDarkMode = useAppSelector(selectDarkMode);\n  const sponsorPageStyles = StyleSheet.create({\n    container: {\n      flex: 1\n    },\n    header: {\n      marginTop: 20,\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '100%'\n    },\n    address: {\n      color: isDarkMode ? 'white' : 'black',\n      alignItems: 'center',\n      margin: 10,\n      borderColor: 'black',\n      borderWidth: 1,\n      padding: 10\n    },\n    video: {\n      marginTop: 20,\n      display: 'flex',\n      justifyContent: 'flex-start'\n    },\n    title: {\n      color: isDarkMode ? 'white' : 'black',\n      fontSize: 26,\n      marginLeft: 10\n    },\n    subtitle: {\n      color: isDarkMode ? 'white' : 'black',\n      fontSize: 14,\n      justifyContent: 'center'\n    },\n    logo: {\n      width: '100%',\n      height: 100\n    },\n    description: {\n      borderWidth: 1,\n      margin: 10,\n      borderColor: '#F1E4B5',\n      borderRadius: 5,\n      width: '95%',\n      padding: 10\n      // backgroundColor: '#F9F9F9',\n    },\n    couponContainer: {\n      width: '100%',\n      justifyContent: 'center',\n      alignItems: 'center',\n      marginTop: 20,\n      marginBottom: 20\n    },\n    coupon: {\n      width: 400,\n      height: 267\n    },\n    imageGallery: {\n      justifyContent: 'center',\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      margin: 10,\n      marginBottom: 0\n    },\n    imageStyle: {\n      width: 150,\n      height: 150,\n      paddingTop: 100,\n      margin: 5\n    },\n    headerText: {\n      color: isDarkMode ? 'white' : 'black',\n      fontSize: 20,\n      fontWeight: 'bold'\n    }\n  });\n  const [imageIndex, setImageIndex] = useState(0);\n  const [visible, setIsVisible] = useState(false);\n  const [canOpenLink, setCanOpenLink] = useState(false);\n\n  const [postSponsorVisitQuery] = usePostSponsorVisitMutation();\n\n  const userKey = useAppSelector(selectUserKey);\n\n  const videoLinkArray = data.videoLink && data.videoLink.split('/');\n  const videoLink = data.videoLink && videoLinkArray[videoLinkArray.length - 1];\n\n  function getSubtitle() {\n    if (data.phoneNumber && data.email) {\n      return `${data.phoneNumber} \\u2022 ${data.email}`;\n    }\n    if (data.phoneNumber) {\n      return data.phoneNumber;\n    }\n    if (data.email) {\n      return data.email;\n    }\n    return null;\n  }\n\n  const postSponsorVisit = async () => {\n    try {\n      await postSponsorVisitQuery({ userKey, sponsorId: data._id }).unwrap();\n    } catch (e) {\n      console.warn('Error posting sponsor visit: ', e);\n    }\n  };\n\n  useEffect(() => {\n    const funct = async () => {\n      setCanOpenLink(await Linking.canOpenURL(data.website));\n      postSponsorVisit();\n    };\n    funct();\n  }, []);\n\n  function renderWebsiteLink() {\n    if (canOpenLink) {\n      return (\n        <View>\n          <TouchableOpacity\n            onPress={() => {\n              Linking.openURL(data.website);\n            }}\n            style={{\n              display: 'flex',\n              flexDirection: 'row',\n              alignItems: 'center'\n            }}\n          >\n            <Text\n              style={{\n                fontSize: 15,\n                color: isDarkMode ? '#6b7ee5' : '#4b5dc7',\n                paddingRight: 5\n              }}\n            >\n              Check Out Our Website!\n            </Text>\n            <FontAwesome5 name=\"link\" size={15} color=\"#4b5dc7\" />\n          </TouchableOpacity>\n        </View>\n      );\n    }\n    return null;\n  }\n\n  return (\n    <Layout style={{ flex: 1 }}>\n      <ScrollView>\n        <Layout style={sponsorPageStyles.container}>\n          <View style={sponsorPageStyles.header}>\n            <Image\n              resizeMode=\"contain\"\n              style={sponsorPageStyles.logo}\n              source={{ uri: data.logo }}\n            />\n          </View>\n          <View\n            style={{ width: '100%', display: 'flex', alignItems: 'center' }}\n          >\n            <Text style={sponsorPageStyles.title}>{data.sponsorName}</Text>\n            <Text style={sponsorPageStyles.subtitle}>{getSubtitle()}</Text>\n          </View>\n\n          {data.location && (\n            <View style={sponsorPageStyles.address}>\n              <Text\n                style={{ fontSize: 18, color: isDarkMode ? 'white' : 'black' }}\n              >\n                {data.location}\n              </Text>\n            </View>\n          )}\n\n          <View\n            style={{ width: '100%', display: 'flex', alignItems: 'center' }}\n          >\n            {renderWebsiteLink()}\n          </View>\n\n          <Layout style={sponsorPageStyles.description}>\n            <Text\n              style={{ fontSize: 17, color: isDarkMode ? 'white' : 'black' }}\n            >\n              {data.description}\n            </Text>\n          </Layout>\n          <View\n            style={{\n              width: '100%',\n              alignSelf: 'flex-start',\n              marginLeft: 20,\n              borderBottomColor: '#F1E4B5',\n              borderBottomWidth: 2,\n              paddingBottom: 5\n            }}\n          >\n            <Text style={sponsorPageStyles.headerText}>Image Gallery</Text>\n          </View>\n\n          <View style={sponsorPageStyles.imageGallery}>\n            {data.images.map((img, index) => {\n              return (\n                <TouchableOpacity\n                  onPress={() => {\n                    setImageIndex(index);\n                    setIsVisible(true);\n                  }}\n                >\n                  <Image\n                    style={sponsorPageStyles.imageStyle}\n                    source={{ uri: img }}\n                  />\n                </TouchableOpacity>\n              );\n            })}\n          </View>\n\n          {data.coupons[0] && (\n            <Layout style={sponsorPageStyles.couponContainer}>\n              <Image\n                resizeMode=\"contain\"\n                source={require('../../../assets/sponsorPage/coupon.png')}\n                style={sponsorPageStyles.coupon}\n              />\n              <Text\n                style={{\n                  position: 'absolute',\n                  fontSize: 30,\n                  textAlign: 'center',\n                  justifyContent: 'center',\n                  width: '75%',\n                  paddingBottom: 20,\n                  paddingRight: 7\n                }}\n              >\n                {data.coupons[0].couponDescription}\n              </Text>\n              <Text\n                style={{ fontSize: 15, color: isDarkMode ? 'white' : 'black' }}\n              >\n                Show this coupon at the store to redeem.\n              </Text>\n            </Layout>\n          )}\n\n          <View\n            style={{\n              width: '100%',\n              alignSelf: 'flex-start',\n              marginLeft: 20,\n              borderBottomColor: '#F1E4B5',\n              borderBottomWidth: 2,\n              paddingBottom: 5\n            }}\n          >\n            <Text style={sponsorPageStyles.headerText}>Hours</Text>\n          </View>\n          <View\n            style={{\n              justifyContent: 'center',\n              alignSelf: 'center',\n              marginLeft: 25,\n              marginBottom: 50\n            }}\n          >\n            {data.hours.map((day, i) => {\n              return (\n                <Layout\n                  key={i}\n                  style={{\n                    justifyContent: 'space-between',\n                    flexDirection: 'row',\n                    width: '100%'\n                  }}\n                >\n                  <Text\n                    style={{\n                      marginTop: 10,\n                      color: isDarkMode ? 'white' : 'black'\n                    }}\n                  >\n                    {day.dayOfTheWeek}:\n                  </Text>\n                  <Text\n                    style={{\n                      alignSelf: 'flex-end',\n                      paddingRight: 30,\n                      marginTop: 10,\n                      color: isDarkMode ? 'white' : 'black'\n                    }}\n                  >\n                    {buildTimeString(day)}\n                  </Text>\n                </Layout>\n              );\n            })}\n          </View>\n        </Layout>\n      </ScrollView>\n    </Layout>\n  );\n}\n\nfunction buildTimeString(time) {\n  if (!time.openTime || time.openTime === '' || time.openTime === null) {\n    return 'closed';\n  }\n  return `${convertTo12HourTime(time.openTime)} - ${convertTo12HourTime(\n    time.closeTime\n  )}`;\n}\n\nfunction convertTo12HourTime(time) {\n  if (time.length !== 5) {\n    time = `0${time}`;\n  }\n  let hours = time.slice(0, 2);\n  const minutes = time.slice(3, 5);\n  let ampm = Number.parseInt(hours) > 12 ? 'pm' : 'am';\n  hours %= 12;\n  if (hours === 0) {\n    hours = 12;\n    ampm = 'pm';\n  }\n  return `${hours}:${minutes}${ampm}`;\n}\n\nexport function SponsorsList({ navigation }) {\n  const theme = useTheme();\n  const isDarkMode = useAppSelector(selectDarkMode);\n  const [sponsorFilters, setSponsorFilters] = useState({});\n  const [gotSponsors, setGotSponsors] = useState(false);\n  const userKey = useAppSelector(selectUserKey);\n  const [refreshSponsorsQuery, { data: sponsors }] =\n    useLazyRefreshSponsorsQuery();\n\n  if (!gotSponsors) {\n    setGotSponsors(true);\n    refreshSponsors();\n  }\n\n  useEffect(() => {\n    if (sponsors?.length > 0) {\n      getFilters();\n    }\n  }, [sponsors]);\n\n  async function refreshSponsors() {\n    try {\n      await refreshSponsorsQuery(userKey).unwrap();\n    } catch (e) {\n      console.warn('Error refreshing sponsors: ', e);\n    }\n  }\n\n  function getFilters() {\n    let tabNames = [];\n    const final = [];\n    for (const sponsor of sponsors) {\n      if (sponsor.tags !== undefined) {\n        for (const name of sponsor.tags) {\n          if (!tabNames.includes(name)) {\n            tabNames.push(name);\n          }\n        }\n      }\n    }\n    tabNames = tabNames.sort();\n\n    // Puts 'Other' at the end\n    const temp = tabNames.includes('Other')\n      ? tabNames.findIndex((item) => item === 'Other')\n      : -1;\n    if (temp !== -1) {\n      tabNames.splice(temp, 1);\n    }\n    tabNames.push('Other');\n\n    const tempFilters = {};\n    for (const name of tabNames) {\n      tempFilters[name] = {\n        selected: false\n      };\n    }\n    setSponsorFilters(tempFilters);\n  }\n\n  function renderSponsorsBasedOnFilters() {\n    let shouldLimitPrint = false;\n    for (const filterName in sponsorFilters) {\n      if (sponsorFilters[filterName].selected) {\n        shouldLimitPrint = true;\n        break;\n      }\n    }\n    if (!shouldLimitPrint) {\n      return getTheSponsors(sponsors || [], navigation);\n    }\n    const sponsorsToSend = [];\n    for (const filterName in sponsorFilters) {\n      if (sponsorFilters[filterName].selected) {\n        for (const sponsor of sponsors) {\n          if (sponsor.tags.includes(filterName)) {\n            sponsorsToSend.push(sponsor);\n          }\n        }\n      }\n    }\n    return getTheSponsors(sponsorsToSend || [], navigation);\n  }\n\n  return (\n    <LinearGradient\n      colors={\n        isDarkMode\n          ? [theme['color-basic-1100'], theme['color-basic-1100']]\n          : [theme['color-primary-500'], theme['color-success-500']]\n      }\n      style={{\n        width: '100%',\n        margin: 0,\n        alignItems: 'center',\n        flex: 1\n      }}\n      start={{ x: 0, y: 0 }}\n      end={{ x: 1, y: 0.4 }}\n    >\n      <Layout style={{ flex: 1 }}>\n        <Menu\n          setMenuItems={setSponsorFilters}\n          menuItems={Object.keys(sponsorFilters).length > 0}\n        />\n        <ScrollView\n          showsVerticalScrollIndicator={false}\n          contentContainerStyle={{ alignItems: 'center' }}\n        >\n          {sponsors?.length === 0 ? (\n            <Text>Nothing to see here</Text>\n          ) : (\n            renderSponsorsBasedOnFilters()\n          )}\n        </ScrollView>\n      </Layout>\n    </LinearGradient>\n  );\n}\n\nfunction getTheSponsors(sponsors, navigation) {\n  const isDarkMode = useAppSelector(selectDarkMode);\n  const listingStyles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#fff',\n      alignItems: 'center'\n    },\n    cardContainer: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      width: '100%',\n      maxWidth: windowWidth / 2,\n      height: 130,\n      backgroundColor: isDarkMode ? '#464646' : '#fff',\n      borderRadius: 10,\n      borderWidth: 1,\n      borderColor: isDarkMode ? '#818181' : '#ddd',\n      borderBottomWidth: isDarkMode ? 1 : 0,\n      shadowColor: '#000',\n      shadowOffset: { width: 0, height: 2 },\n      shadowOpacity: 0.2,\n      shadowRadius: 2,\n      elevation: 1,\n      marginLeft: 5,\n      marginRight: 5,\n      marginTop: 10\n    },\n    text: {\n      flex: 1,\n      color: isDarkMode ? 'white' : 'black',\n      fontSize: 20,\n      textAlign: 'center',\n      marginTop: 5,\n      marginBottom: 5\n    },\n    image: {\n      width: 120,\n      height: 120,\n      marginLeft: 10,\n      borderRadius: 10\n    }\n  });\n  if (sponsors.length === 0) {\n    return;\n  }\n  const final = [];\n  const starredFinal = [];\n  for (const sponsor of sponsors) {\n    if (sponsor.coupons && sponsor.coupons.length > 0) {\n      starredFinal.push(\n        <TouchableOpacity\n          onPress={() => {\n            navigation.navigate('SponsorPage', { data: sponsor });\n          }}\n          style={listingStyles.cardContainer}\n          key={sponsor._id}\n        >\n          {sponsor.coupons?.length ? (\n            <FontAwesome5\n              name=\"star\"\n              color=\"gold\"\n              style={{\n                alignSelf: 'flex-start',\n                top: 5,\n                left: 5\n              }}\n            />\n          ) : null}\n\n          <View style={{ flex: 1 }}>\n            <Image\n              resizeMode=\"contain\"\n              style={listingStyles.image}\n              source={{ uri: sponsor.logo }}\n            />\n          </View>\n\n          <Text style={listingStyles.text}>{sponsor.sponsorName}</Text>\n        </TouchableOpacity>\n      );\n    } else {\n      final.push(\n        <TouchableOpacity\n          onPress={() => {\n            navigation.navigate('SponsorPage', { data: sponsor });\n          }}\n          style={listingStyles.cardContainer}\n          key={sponsor._id}\n        >\n          {sponsor.coupons?.length ? (\n            <FontAwesome5\n              name=\"star\"\n              color=\"gold\"\n              style={{\n                position: 'absolute',\n                alignSelf: 'flex-start',\n                top: 5,\n                left: 5\n              }}\n            />\n          ) : null}\n\n          <View style={{ flex: 1 }}>\n            <Image\n              resizeMode=\"contain\"\n              style={listingStyles.image}\n              source={{ uri: sponsor.logo }}\n            />\n          </View>\n\n          <Text style={listingStyles.text}>{sponsor.sponsorName}</Text>\n        </TouchableOpacity>\n      );\n    }\n  }\n  for (const object of final) {\n    starredFinal.push(object);\n  }\n  return starredFinal;\n}\n","export const departments = [\n  'AFRI',\n  'AMST',\n  'ANTH',\n  'ARBC',\n  'ARBT',\n  'ARCN',\n  'ARHI',\n  'ART',\n  'ASAM',\n  'ASIA',\n  'ASTR',\n  'BIOL',\n  'CASA',\n  'CGH',\n  'CGS',\n  'CHEM',\n  'CHIN',\n  'CHLT',\n  'CHNT',\n  'CHST',\n  'CLAS',\n  'CLES',\n  'COGS',\n  'CORE',\n  'CREA',\n  'CSCI',\n  'CSMT',\n  'DANC',\n  'DS',\n  'EA',\n  'ECON',\n  'EDUC',\n  'ENGL',\n  'ENGR',\n  'ENTR',\n  'EURO',\n  'FGSS',\n  'FHS',\n  'FREN',\n  'FS',\n  'FWS',\n  'GEOG',\n  'GEOL',\n  'GERM',\n  'GLAS',\n  'GOVT',\n  'GREK',\n  'GRMT',\n  'GWS',\n  'HIST',\n  'HMSC',\n  'HSA',\n  'HUM',\n  'ID',\n  'IR',\n  'ITAL',\n  'JAPN',\n  'JPNT',\n  'KORE',\n  'KRNT',\n  'LAMS',\n  'LAS',\n  'LAST',\n  'LATN',\n  'LEAD',\n  'LGCS',\n  'LGST',\n  'LIT',\n  'MATH',\n  'MCBI',\n  'MCSI',\n  'MES',\n  'MLLC',\n  'MOBI',\n  'MS',\n  'MSL',\n  'MUS',\n  'NEUR',\n  'ORST',\n  'PE',\n  'PHIL',\n  'PHYS',\n  'POLI',\n  'PONT',\n  'PORT',\n  'POST',\n  'PPA',\n  'PPE',\n  'PSYC',\n  'RLIT',\n  'RLST',\n  'RUSS',\n  'RUST',\n  'SCI',\n  'SOC',\n  'SPAN',\n  'SPCH',\n  'STS',\n  'TEST',\n  'THEA',\n  'THES',\n  'WRIT'\n];\n","import {\n  Autocomplete,\n  AutocompleteItem,\n  Button,\n  Card,\n  Input,\n  Layout,\n  Text\n} from '@ui-kitten/components';\nimport { useCallback, useEffect, useState } from 'react';\nimport { Keyboard, TouchableWithoutFeedback } from 'react-native';\n\nimport synonyms from './synonyms.json';\nimport { useAppDispatch, useAppSelector } from '../../../app/hooks';\nimport WrapItems from '../../../components/WrapItems';\nimport { departments } from '../../../constants/electiveGenerator';\nimport { showToast } from '../../../functions';\nimport {\n  electiveGeneratorSelected,\n  selectClassesList,\n  suggestedClassesUpdated\n} from '../classPagesSlice';\nimport { MAX_WIDTH_WEB } from '../../../constants/discover';\n\nexport default function ElectiveGenerator({ navigation }: any) {\n  const dispatch = useAppDispatch();\n  const [departmentQuery, setDepartmentQuery] = useState('');\n  const [departmentOptions, setDepartmentOptions] = useState(departments);\n  const [description, setDescription] = useState('');\n\n  const classes = useAppSelector(selectClassesList);\n\n  const getClassesByDepartment = useCallback((department: string) => {\n    if (department === 'All Departments') return Object.entries(classes);\n    return Object.entries(classes).filter(([key, _]) => {\n      const classDepartment = key.split(' ')[0];\n      return classDepartment === department;\n    });\n  }, []);\n\n  useEffect(() => {\n    dispatch(electiveGeneratorSelected());\n  }, []);\n\n  const onChangeDepartmentText = useCallback((query: string): void => {\n    setDepartmentQuery(query);\n    setDepartmentOptions(\n      departments.filter((department) =>\n        department.includes(query.toUpperCase())\n      )\n    );\n  }, []);\n\n  const onSubmit = () => {\n    Keyboard.dismiss();\n    if (!departmentQuery || !description) {\n      showToast('Please fill out all fields', 'red');\n      return;\n    }\n    const cleanedDescription = description\n      .toLowerCase()\n      .replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, '')\n      .replace(/\\s{2,}/g, ' ');\n    const classesByDepartment = getClassesByDepartment(departmentQuery);\n    // Compare text in user input to class descriptions and return top 5 matches\n    classesByDepartment.sort((a, b) => {\n      const aWords = getWords(`${a[1].summary} ${a[1].courseName}`);\n      const bWords = getWords(`${b[1].summary} ${b[1].courseName}`);\n\n      const aMatches = aWords.filter((word) =>\n        cleanedDescription.includes(word)\n      );\n      const bMatches = bWords.filter((word) =>\n        cleanedDescription.includes(word)\n      );\n      return bMatches.length - aMatches.length;\n    });\n\n    const matches = Object.fromEntries(classesByDepartment.slice(0, 5));\n    dispatch(suggestedClassesUpdated(matches));\n    navigation.goBack();\n    showToast('Suggested classes updated!', 'green');\n  };\n\n  // Helper functions\n  const getWords = (text: string) => {\n    const wordList = text\n      .toLowerCase()\n      .replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, '')\n      .replace(/\\s{2,}/g, ' ')\n      .split(' ');\n\n    let wordListWithSynonyms = [];\n\n    for (const word of wordList) {\n      if (synonyms[word]) {\n        wordListWithSynonyms.push(word);\n        wordListWithSynonyms = wordListWithSynonyms.concat(synonyms[word]);\n      }\n    }\n\n    return wordListWithSynonyms;\n  };\n\n  return (\n    <TouchableWithoutFeedback\n      onPress={Keyboard.dismiss}\n      style={{ flex: 1, alignItems: 'center' }}\n    >\n      <Layout style={{ maxWidth: MAX_WIDTH_WEB, alignSelf: 'center', flex: 1 }}>\n        <WrapItems childStyle={{ margin: 20 }}>\n          <Card activeOpacity={1} disabled>\n            <Text category=\"s1\" style={{ textAlign: 'center' }}>\n              Choose a department and write a description about what inspires\n              you.\n              {`\\n\\n`}\n              Then let our powerful AI choose the best electives for you!\n            </Text>\n          </Card>\n          <Autocomplete\n            label=\"Department\"\n            onSelect={(index) => setDepartmentQuery(departmentOptions[index])}\n            onChangeText={onChangeDepartmentText}\n            value={departmentQuery}\n          >\n            {departmentOptions.map((option) => (\n              <AutocompleteItem title={option} key={option} />\n            ))}\n          </Autocomplete>\n          <Input\n            label=\"Description\"\n            multiline\n            textStyle={{ minHeight: 100 }}\n            value={description}\n            onChangeText={(text) => setDescription(text)}\n          />\n          <Button onPress={onSubmit}>Submit</Button>\n        </WrapItems>\n      </Layout>\n    </TouchableWithoutFeedback>\n  );\n}\n","export const DISCOVER_LIST_PAGE_SIZE = 5;\n\nexport const tagIndices = [\n  'Clubs',\n  'Events',\n  'College News',\n  'Courses',\n  'HMC',\n  'Pomona',\n  'CMC',\n  'Pitzer',\n  'Scripps'\n];\n\nexport const adminTagIndices = [\n  'Athena Network',\n  'Clubs',\n  'Events',\n  'College News',\n  'Courses',\n  'HMC',\n  'Pomona',\n  'CMC',\n  'Pitzer',\n  'Scripps'\n];\n\nexport const MAX_WIDTH_WEB = 700;\n\nexport const postOptions = ['Image Post', 'Text Post', 'Link', 'Event'];\n\nexport const IMAGE_BUCKET_URL = 'https://athena-image-storage.s3.us-west-2.amazonaws.com/imagePostImages';\n\nexport const EMOJI_LIST = [\n  '😀',\n  '😁',\n  '😂',\n  '🤣',\n  '😃',\n  '😄',\n  '😅',\n  '😆',\n  '😉',\n  '😊',\n  '😋',\n  '😎',\n  '😍',\n  '😘',\n  '😗',\n  '😙',\n  '😚',\n  '☺',\n  '🙂',\n  '🤗',\n  '🤔',\n  '😐',\n  '😑',\n  '😶',\n  '🙄',\n  '😏',\n  '😣',\n  '😥',\n  '😮',\n  '🤐',\n  '😯',\n  '😪',\n  '😫',\n  '😴',\n  '😌',\n  '🤓',\n  '😛',\n  '😜',\n  '😝',\n  '🤤',\n  '😒',\n  '😓',\n  '😔',\n  '😕',\n  '🙃',\n  '🤑',\n  '😲',\n  '☹',\n  '🙁',\n  '😖',\n  '😞',\n  '😟',\n  '😤',\n  '😢',\n  '😭',\n  '😦',\n  '😧',\n  '😨',\n  '😩',\n  '😬',\n  '😰',\n  '😱',\n  '😳',\n  '😵',\n  '😡',\n  '😠',\n  '😇',\n  '🤠',\n  '🤡',\n  '🤥',\n  '😷',\n  '🤒',\n  '🤕',\n  '🤢',\n  '🤧',\n  '😈',\n  '👿',\n  '👹',\n  '👺',\n  '💀',\n  '☠',\n  '👻',\n  '👽',\n  '👾',\n  '🤖',\n  '💩',\n  '😺',\n  '😸',\n  '😹',\n  '😻',\n  '😼',\n  '😽',\n  '🙀',\n  '😿',\n  '😾',\n  '🙈',\n  '🙉',\n  '🙊',\n  '👦',\n  '👦🏻',\n  '👦🏼',\n  '👦🏽',\n  '👦🏾',\n  '👦🏿',\n  '👧',\n  '👧🏻',\n  '👧🏼',\n  '👧🏽',\n  '👧🏾',\n  '👧🏿',\n  '👨',\n  '👨🏻',\n  '👨🏼',\n  '👨🏽',\n  '👨🏾',\n  '👨🏿',\n  '👩',\n  '👩🏻',\n  '👩🏼',\n  '👩🏽',\n  '👩🏾',\n  '👩🏿',\n  '👴',\n  '👴🏻',\n  '👴🏼',\n  '👴🏽',\n  '👴🏾',\n  '👴🏿',\n  '👵',\n  '👵🏻',\n  '👵🏼',\n  '👵🏽',\n  '👵🏾',\n  '👵🏿',\n  '👶',\n  '👶🏻',\n  '👶🏼',\n  '👶🏽',\n  '👶🏾',\n  '👶🏿',\n  '👼',\n  '👼🏻',\n  '👼🏼',\n  '👼🏽',\n  '👼🏾',\n  '👼🏿',\n  '👮',\n  '👮🏻',\n  '👮🏼',\n  '👮🏽',\n  '👮🏾',\n  '👮🏿',\n  '🕵',\n  '🕵🏻',\n  '🕵🏼',\n  '🕵🏽',\n  '🕵🏾',\n  '🕵🏿',\n  '💂',\n  '💂🏻',\n  '💂🏼',\n  '💂🏽',\n  '💂🏾',\n  '💂🏿',\n  '👷',\n  '👷🏻',\n  '👷🏼',\n  '👷🏽',\n  '👷🏾',\n  '👷🏿',\n  '👳',\n  '👳🏻',\n  '👳🏼',\n  '👳🏽',\n  '👳🏾',\n  '👳🏿',\n  '👱',\n  '👱🏻',\n  '👱🏼',\n  '👱🏽',\n  '👱🏾',\n  '👱🏿',\n  '🎅',\n  '🎅🏻',\n  '🎅🏼',\n  '🎅🏽',\n  '🎅🏾',\n  '🎅🏿',\n  '🤶',\n  '🤶🏻',\n  '🤶🏼',\n  '🤶🏽',\n  '🤶🏾',\n  '🤶🏿',\n  '👸',\n  '👸🏻',\n  '👸🏼',\n  '👸🏽',\n  '👸🏾',\n  '👸🏿',\n  '🤴',\n  '🤴🏻',\n  '🤴🏼',\n  '🤴🏽',\n  '🤴🏾',\n  '🤴🏿',\n  '👰',\n  '👰🏻',\n  '👰🏼',\n  '👰🏽',\n  '👰🏾',\n  '👰🏿',\n  '🤵',\n  '🤵🏻',\n  '🤵🏼',\n  '🤵🏽',\n  '🤵🏾',\n  '🤵🏿',\n  '🤰',\n  '🤰🏻',\n  '🤰🏼',\n  '🤰🏽',\n  '🤰🏾',\n  '🤰🏿',\n  '👲',\n  '👲🏻',\n  '👲🏼',\n  '👲🏽',\n  '👲🏾',\n  '👲🏿',\n  '🙍',\n  '🙍🏻',\n  '🙍🏼',\n  '🙍🏽',\n  '🙍🏾',\n  '🙍🏿',\n  '🙎',\n  '🙎🏻',\n  '🙎🏼',\n  '🙎🏽',\n  '🙎🏾',\n  '🙎🏿',\n  '🙅',\n  '🙅🏻',\n  '🙅🏼',\n  '🙅🏽',\n  '🙅🏾',\n  '🙅🏿',\n  '🙆',\n  '🙆🏻',\n  '🙆🏼',\n  '🙆🏽',\n  '🙆🏾',\n  '🙆🏿',\n  '💁',\n  '💁🏻',\n  '💁🏼',\n  '💁🏽',\n  '💁🏾',\n  '💁🏿',\n  '🙋',\n  '🙋🏻',\n  '🙋🏼',\n  '🙋🏽',\n  '🙋🏾',\n  '🙋🏿',\n  '🙇',\n  '🙇🏻',\n  '🙇🏼',\n  '🙇🏽',\n  '🙇🏾',\n  '🙇🏿',\n  '🤦',\n  '🤦🏻',\n  '🤦🏼',\n  '🤦🏽',\n  '🤦🏾',\n  '🤦🏿',\n  '🤷',\n  '🤷🏻',\n  '🤷🏼',\n  '🤷🏽',\n  '🤷🏾',\n  '🤷🏿',\n  '💆',\n  '💆🏻',\n  '💆🏼',\n  '💆🏽',\n  '💆🏾',\n  '💆🏿',\n  '💇',\n  '💇🏻',\n  '💇🏼',\n  '💇🏽',\n  '💇🏾',\n  '💇🏿',\n  '🚶',\n  '🚶🏻',\n  '🚶🏼',\n  '🚶🏽',\n  '🚶🏾',\n  '🚶🏿',\n  '🏃',\n  '🏃🏻',\n  '🏃🏼',\n  '🏃🏽',\n  '🏃🏾',\n  '🏃🏿',\n  '💃',\n  '💃🏻',\n  '💃🏼',\n  '💃🏽',\n  '💃🏾',\n  '💃🏿',\n  '🕺',\n  '🕺🏻',\n  '🕺🏼',\n  '🕺🏽',\n  '🕺🏾',\n  '🕺🏿',\n  '👯',\n  '🕴',\n  '🗣',\n  '👤',\n  '👥',\n  '🤺',\n  '🏇',\n  '⛷',\n  '🏂',\n  '🏌',\n  '🏄',\n  '🏄🏻',\n  '🏄🏼',\n  '🏄🏽',\n  '🏄🏾',\n  '🏄🏿',\n  '🚣',\n  '🚣🏻',\n  '🚣🏼',\n  '🚣🏽',\n  '🚣🏾',\n  '🚣🏿',\n  '🏊',\n  '🏊🏻',\n  '🏊🏼',\n  '🏊🏽',\n  '🏊🏾',\n  '🏊🏿',\n  '⛹',\n  '⛹🏻',\n  '⛹🏼',\n  '⛹🏽',\n  '⛹🏾',\n  '⛹🏿',\n  '🏋',\n  '🏋🏻',\n  '🏋🏼',\n  '🏋🏽',\n  '🏋🏾',\n  '🏋🏿',\n  '🚴',\n  '🚴🏻',\n  '🚴🏼',\n  '🚴🏽',\n  '🚴🏾',\n  '🚴🏿',\n  '🚵',\n  '🚵🏻',\n  '🚵🏼',\n  '🚵🏽',\n  '🚵🏾',\n  '🚵🏿',\n  '🏎',\n  '🏍',\n  '🤸',\n  '🤸🏻',\n  '🤸🏼',\n  '🤸🏽',\n  '🤸🏾',\n  '🤸🏿',\n  '🤼',\n  '🤼🏻',\n  '🤼🏼',\n  '🤼🏽',\n  '🤼🏾',\n  '🤼🏿',\n  '🤽',\n  '🤽🏻',\n  '🤽🏼',\n  '🤽🏽',\n  '🤽🏾',\n  '🤽🏿',\n  '🤾',\n  '🤾🏻',\n  '🤾🏼',\n  '🤾🏽',\n  '🤾🏾',\n  '🤾🏿',\n  '🤹',\n  '🤹🏻',\n  '🤹🏼',\n  '🤹🏽',\n  '🤹🏾',\n  '🤹🏿',\n  '👫',\n  '👬',\n  '👭',\n  '💏',\n  '👩‍❤️‍💋‍👨',\n  '👨‍❤️‍💋‍👨',\n  '👩‍❤️‍💋‍👩',\n  '💑',\n  '👩‍❤️‍👨',\n  '👨‍❤️‍👨',\n  '👩‍❤️‍👩',\n  '👪',\n  '👨‍👩‍👦',\n  '👨‍👩‍👧',\n  '👨‍👩‍👧‍👦',\n  '👨‍👩‍👦‍👦',\n  '👨‍👩‍👧‍👧',\n  '👨‍👨‍👦',\n  '👨‍👨‍👧',\n  '👨‍👨‍👧‍👦',\n  '👨‍👨‍👦‍👦',\n  '👨‍👨‍👧‍👧',\n  '👩‍👩‍👦',\n  '👩‍👩‍👧',\n  '👩‍👩‍👧‍👦',\n  '👩‍👩‍👦‍👦',\n  '👩‍👩‍👧‍👧',\n  '🏻',\n  '🏼',\n  '🏽',\n  '🏾',\n  '🏿',\n  '💪',\n  '💪🏻',\n  '💪🏼',\n  '💪🏽',\n  '💪🏾',\n  '💪🏿',\n  '🤳',\n  '🤳🏻',\n  '🤳🏼',\n  '🤳🏽',\n  '🤳🏾',\n  '🤳🏿',\n  '👈',\n  '👈🏻',\n  '👈🏼',\n  '👈🏽',\n  '👈🏾',\n  '👈🏿',\n  '👉',\n  '👉🏻',\n  '👉🏼',\n  '👉🏽',\n  '👉🏾',\n  '👉🏿',\n  '☝',\n  '☝🏻',\n  '☝🏼',\n  '☝🏽',\n  '☝🏾',\n  '☝🏿',\n  '👆',\n  '👆🏻',\n  '👆🏼',\n  '👆🏽',\n  '👆🏾',\n  '👆🏿',\n  '🖕',\n  '🖕🏻',\n  '🖕🏼',\n  '🖕🏽',\n  '🖕🏾',\n  '🖕🏿',\n  '👇',\n  '👇🏻',\n  '👇🏼',\n  '👇🏽',\n  '👇🏾',\n  '👇🏿',\n  '✌',\n  '✌🏻',\n  '✌🏼',\n  '✌🏽',\n  '✌🏾',\n  '✌🏿',\n  '🤞',\n  '🤞🏻',\n  '🤞🏼',\n  '🤞🏽',\n  '🤞🏾',\n  '🤞🏿',\n  '🖖',\n  '🖖🏻',\n  '🖖🏼',\n  '🖖🏽',\n  '🖖🏾',\n  '🖖🏿',\n  '🤘',\n  '🤘🏻',\n  '🤘🏼',\n  '🤘🏽',\n  '🤘🏾',\n  '🤘🏿',\n  '🤙',\n  '🤙🏻',\n  '🤙🏼',\n  '🤙🏽',\n  '🤙🏾',\n  '🤙🏿',\n  '🖐',\n  '🖐🏻',\n  '🖐🏼',\n  '🖐🏽',\n  '🖐🏾',\n  '🖐🏿',\n  '✋',\n  '✋🏻',\n  '✋🏼',\n  '✋🏽',\n  '✋🏾',\n  '✋🏿',\n  '👌',\n  '👌🏻',\n  '👌🏼',\n  '👌🏽',\n  '👌🏾',\n  '👌🏿',\n  '👍',\n  '👍🏻',\n  '👍🏼',\n  '👍🏽',\n  '👍🏾',\n  '👍🏿',\n  '👎',\n  '👎🏻',\n  '👎🏼',\n  '👎🏽',\n  '👎🏾',\n  '👎🏿',\n  '✊',\n  '✊🏻',\n  '✊🏼',\n  '✊🏽',\n  '✊🏾',\n  '✊🏿',\n  '👊',\n  '👊🏻',\n  '👊🏼',\n  '👊🏽',\n  '👊🏾',\n  '👊🏿',\n  '🤛',\n  '🤛🏻',\n  '🤛🏼',\n  '🤛🏽',\n  '🤛🏾',\n  '🤛🏿',\n  '🤜',\n  '🤜🏻',\n  '🤜🏼',\n  '🤜🏽',\n  '🤜🏾',\n  '🤜🏿',\n  '🤚',\n  '🤚🏻',\n  '🤚🏼',\n  '🤚🏽',\n  '🤚🏾',\n  '🤚🏿',\n  '👋',\n  '👋🏻',\n  '👋🏼',\n  '👋🏽',\n  '👋🏾',\n  '👋🏿',\n  '👏',\n  '👏🏻',\n  '👏🏼',\n  '👏🏽',\n  '👏🏾',\n  '👏🏿',\n  '✍',\n  '✍🏻',\n  '✍🏼',\n  '✍🏽',\n  '✍🏾',\n  '✍🏿',\n  '👐',\n  '👐🏻',\n  '👐🏼',\n  '👐🏽',\n  '👐🏾',\n  '👐🏿',\n  '🙌',\n  '🙌🏻',\n  '🙌🏼',\n  '🙌🏽',\n  '🙌🏾',\n  '🙌🏿',\n  '🙏',\n  '🙏🏻',\n  '🙏🏼',\n  '🙏🏽',\n  '🙏🏾',\n  '🙏🏿',\n  '🤝',\n  '🤝🏻',\n  '🤝🏼',\n  '🤝🏽',\n  '🤝🏾',\n  '🤝🏿',\n  '💅',\n  '💅🏻',\n  '💅🏼',\n  '💅🏽',\n  '💅🏾',\n  '💅🏿',\n  '👂',\n  '👂🏻',\n  '👂🏼',\n  '👂🏽',\n  '👂🏾',\n  '👂🏿',\n  '👃',\n  '👃🏻',\n  '👃🏼',\n  '👃🏽',\n  '👃🏾',\n  '👃🏿',\n  '👣',\n  '👀',\n  '👁',\n  '👁‍🗨',\n  '👅',\n  '👄',\n  '💋',\n  '💘',\n  '❤',\n  '💓',\n  '💔',\n  '💕',\n  '💖',\n  '💗',\n  '💙',\n  '💚',\n  '💛',\n  '💜',\n  '🖤',\n  '💝',\n  '💞',\n  '💟',\n  '❣',\n  '💌',\n  '💤',\n  '💢',\n  '💣',\n  '💥',\n  '💦',\n  '💨',\n  '💫',\n  '💬',\n  '🗨',\n  '🗯',\n  '💭',\n  '🕳',\n  '👓',\n  '🕶',\n  '👔',\n  '👕',\n  '👖',\n  '👗',\n  '👘',\n  '👙',\n  '👚',\n  '👛',\n  '👜',\n  '👝',\n  '🛍',\n  '🎒',\n  '👞',\n  '👟',\n  '👠',\n  '👡',\n  '👢',\n  '👑',\n  '👒',\n  '🎩',\n  '🎓',\n  '⛑',\n  '📿',\n  '💄',\n  '💍',\n  '💎',\n  '🐵',\n  '🐒',\n  '🦍',\n  '🐶',\n  '🐕',\n  '🐩',\n  '🐺',\n  '🦊',\n  '🐱',\n  '🐈',\n  '🦁',\n  '🐯',\n  '🐅',\n  '🐆',\n  '🐴',\n  '🐎',\n  '🦌',\n  '🦄',\n  '🐮',\n  '🐂',\n  '🐃',\n  '🐄',\n  '🐷',\n  '🐖',\n  '🐗',\n  '🐽',\n  '🐏',\n  '🐑',\n  '🐐',\n  '🐪',\n  '🐫',\n  '🐘',\n  '🦏',\n  '🐭',\n  '🐁',\n  '🐀',\n  '🐹',\n  '🐰',\n  '🐇',\n  '🐿',\n  '🦇',\n  '🐻',\n  '🐨',\n  '🐼',\n  '🐾',\n  '🦃',\n  '🐔',\n  '🐓',\n  '🐣',\n  '🐤',\n  '🐥',\n  '🐦',\n  '🐧',\n  '🕊',\n  '🦅',\n  '🦆',\n  '🦉',\n  '🐸',\n  '🐊',\n  '🐢',\n  '🦎',\n  '🐍',\n  '🐲',\n  '🐉',\n  '🐳',\n  '🐋',\n  '🐬',\n  '🐟',\n  '🐠',\n  '🐡',\n  '🦈',\n  '🐙',\n  '🐚',\n  '🦀',\n  '🦐',\n  '🦑',\n  '🦋',\n  '🐌',\n  '🐛',\n  '🐜',\n  '🐝',\n  '🐞',\n  '🕷',\n  '🕸',\n  '🦂',\n  '💐',\n  '🌸',\n  '💮',\n  '🏵',\n  '🌹',\n  '🥀',\n  '🌺',\n  '🌻',\n  '🌼',\n  '🌷',\n  '🌱',\n  '🌲',\n  '🌳',\n  '🌴',\n  '🌵',\n  '🌾',\n  '🌿',\n  '☘',\n  '🍀',\n  '🍁',\n  '🍂',\n  '🍃',\n  '🍇',\n  '🍈',\n  '🍉',\n  '🍊',\n  '🍋',\n  '🍌',\n  '🍍',\n  '🍎',\n  '🍏',\n  '🍐',\n  '🍑',\n  '🍒',\n  '🍓',\n  '🥝',\n  '🍅',\n  '🥑',\n  '🍆',\n  '🥔',\n  '🥕',\n  '🌽',\n  '🌶',\n  '🥒',\n  '🍄',\n  '🥜',\n  '🌰',\n  '🍞',\n  '🥐',\n  '🥖',\n  '🥞',\n  '🧀',\n  '🍖',\n  '🍗',\n  '🥓',\n  '🍔',\n  '🍟',\n  '🍕',\n  '🌭',\n  '🌮',\n  '🌯',\n  '🥙',\n  '🥚',\n  '🍳',\n  '🥘',\n  '🍲',\n  '🥗',\n  '🍿',\n  '🍱',\n  '🍘',\n  '🍙',\n  '🍚',\n  '🍛',\n  '🍜',\n  '🍝',\n  '🍠',\n  '🍢',\n  '🍣',\n  '🍤',\n  '🍥',\n  '🍡',\n  '🍦',\n  '🍧',\n  '🍨',\n  '🍩',\n  '🍪',\n  '🎂',\n  '🍰',\n  '🍫',\n  '🍬',\n  '🍭',\n  '🍮',\n  '🍯',\n  '🍼',\n  '🥛',\n  '☕',\n  '🍵',\n  '🍶',\n  '🍾',\n  '🍷',\n  '🍸',\n  '🍹',\n  '🍺',\n  '🍻',\n  '🥂',\n  '🥃',\n  '🍽',\n  '🍴',\n  '🥄',\n  '🔪',\n  '🏺',\n  '🌍',\n  '🌎',\n  '🌏',\n  '🌐',\n  '🗺',\n  '🗾',\n  '🏔',\n  '⛰',\n  '🌋',\n  '🗻',\n  '🏕',\n  '🏖',\n  '🏜',\n  '🏝',\n  '🏞',\n  '🏟',\n  '🏛',\n  '🏗',\n  '🏘',\n  '🏙',\n  '🏚',\n  '🏠',\n  '🏡',\n  '🏢',\n  '🏣',\n  '🏤',\n  '🏥',\n  '🏦',\n  '🏨',\n  '🏩',\n  '🏪',\n  '🏫',\n  '🏬',\n  '🏭',\n  '🏯',\n  '🏰',\n  '💒',\n  '🗼',\n  '🗽',\n  '⛪',\n  '🕌',\n  '🕍',\n  '⛩',\n  '🕋',\n  '⛲',\n  '⛺',\n  '🌁',\n  '🌃',\n  '🌄',\n  '🌅',\n  '🌆',\n  '🌇',\n  '🌉',\n  '♨',\n  '🌌',\n  '🎠',\n  '🎡',\n  '🎢',\n  '💈',\n  '🎪',\n  '🎭',\n  '🖼',\n  '🎨',\n  '🎰',\n  '🚂',\n  '🚃',\n  '🚄',\n  '🚅',\n  '🚆',\n  '🚇',\n  '🚈',\n  '🚉',\n  '🚊',\n  '🚝',\n  '🚞',\n  '🚋',\n  '🚌',\n  '🚍',\n  '🚎',\n  '🚐',\n  '🚑',\n  '🚒',\n  '🚓',\n  '🚔',\n  '🚕',\n  '🚖',\n  '🚗',\n  '🚘',\n  '🚙',\n  '🚚',\n  '🚛',\n  '🚜',\n  '🚲',\n  '🛴',\n  '🛵',\n  '🚏',\n  '🛣',\n  '🛤',\n  '⛽',\n  '🚨',\n  '🚥',\n  '🚦',\n  '🚧',\n  '🛑',\n  '⚓',\n  '⛵',\n  '🛶',\n  '🚤',\n  '🛳',\n  '⛴',\n  '🛥',\n  '🚢',\n  '✈',\n  '🛩',\n  '🛫',\n  '🛬',\n  '💺',\n  '🚁',\n  '🚟',\n  '🚠',\n  '🚡',\n  '🚀',\n  '🛰',\n  '🛎',\n  '🚪',\n  '🛌',\n  '🛏',\n  '🛋',\n  '🚽',\n  '🚿',\n  '🛀',\n  '🛀🏻',\n  '🛀🏼',\n  '🛀🏽',\n  '🛀🏾',\n  '🛀🏿',\n  '🛁',\n  '⌛',\n  '⏳',\n  '⌚',\n  '⏰',\n  '⏱',\n  '⏲',\n  '🕰',\n  '🕛',\n  '🕧',\n  '🕐',\n  '🕜',\n  '🕑',\n  '🕝',\n  '🕒',\n  '🕞',\n  '🕓',\n  '🕟',\n  '🕔',\n  '🕠',\n  '🕕',\n  '🕡',\n  '🕖',\n  '🕢',\n  '🕗',\n  '🕣',\n  '🕘',\n  '🕤',\n  '🕙',\n  '🕥',\n  '🕚',\n  '🕦',\n  '🌑',\n  '🌒',\n  '🌓',\n  '🌔',\n  '🌕',\n  '🌖',\n  '🌗',\n  '🌘',\n  '🌙',\n  '🌚',\n  '🌛',\n  '🌜',\n  '🌡',\n  '☀',\n  '🌝',\n  '🌞',\n  '⭐',\n  '🌟',\n  '🌠',\n  '☁',\n  '⛅',\n  '⛈',\n  '🌤',\n  '🌥',\n  '🌦',\n  '🌧',\n  '🌨',\n  '🌩',\n  '🌪',\n  '🌫',\n  '🌬',\n  '🌀',\n  '🌈',\n  '🌂',\n  '☂',\n  '☔',\n  '⛱',\n  '⚡',\n  '❄',\n  '☃',\n  '⛄',\n  '☄',\n  '🔥',\n  '💧',\n  '🌊',\n  '🎃',\n  '🎄',\n  '🎆',\n  '🎇',\n  '✨',\n  '🎈',\n  '🎉',\n  '🎊',\n  '🎋',\n  '🎍',\n  '🎎',\n  '🎏',\n  '🎐',\n  '🎑',\n  '🎀',\n  '🎁',\n  '🎗',\n  '🎟',\n  '🎫',\n  '🎖',\n  '🏆',\n  '🏅',\n  '🥇',\n  '🥈',\n  '🥉',\n  '⚽',\n  '⚾',\n  '🏀',\n  '🏐',\n  '🏈',\n  '🏉',\n  '🎾',\n  '🎱',\n  '🎳',\n  '🏏',\n  '🏑',\n  '🏒',\n  '🏓',\n  '🏸',\n  '🥊',\n  '🥋',\n  '🥅',\n  '🎯',\n  '⛳',\n  '⛸',\n  '🎣',\n  '🎽',\n  '🎿',\n  '🎮',\n  '🕹',\n  '🎲',\n  '♠',\n  '♥',\n  '♦',\n  '♣',\n  '🃏',\n  '🀄',\n  '🎴',\n  '🔇',\n  '🔈',\n  '🔉',\n  '🔊',\n  '📢',\n  '📣',\n  '📯',\n  '🔔',\n  '🔕',\n  '🎼',\n  '🎵',\n  '🎶',\n  '🎙',\n  '🎚',\n  '🎛',\n  '🎤',\n  '🎧',\n  '📻',\n  '🎷',\n  '🎸',\n  '🎹',\n  '🎺',\n  '🎻',\n  '🥁',\n  '📱',\n  '📲',\n  '☎',\n  '📞',\n  '📟',\n  '📠',\n  '🔋',\n  '🔌',\n  '💻',\n  '🖥',\n  '🖨',\n  '⌨',\n  '🖱',\n  '🖲',\n  '💽',\n  '💾',\n  '💿',\n  '📀',\n  '🎥',\n  '🎞',\n  '📽',\n  '🎬',\n  '📺',\n  '📷',\n  '📸',\n  '📹',\n  '📼',\n  '🔍',\n  '🔎',\n  '🔬',\n  '🔭',\n  '📡',\n  '🕯',\n  '💡',\n  '🔦',\n  '🏮',\n  '📔',\n  '📕',\n  '📖',\n  '📗',\n  '📘',\n  '📙',\n  '📚',\n  '📓',\n  '📒',\n  '📃',\n  '📜',\n  '📄',\n  '📰',\n  '🗞',\n  '📑',\n  '🔖',\n  '🏷',\n  '💰',\n  '💴',\n  '💵',\n  '💶',\n  '💷',\n  '💸',\n  '💳',\n  '💹',\n  '💱',\n  '💲',\n  '✉',\n  '📧',\n  '📨',\n  '📩',\n  '📤',\n  '📥',\n  '📦',\n  '📫',\n  '📪',\n  '📬',\n  '📭',\n  '📮',\n  '🗳',\n  '✏',\n  '✒',\n  '🖋',\n  '🖊',\n  '🖌',\n  '🖍',\n  '📝',\n  '💼',\n  '📁',\n  '📂',\n  '🗂',\n  '📅',\n  '📆',\n  '🗒',\n  '🗓',\n  '📇',\n  '📈',\n  '📉',\n  '📊',\n  '📋',\n  '📌',\n  '📍',\n  '📎',\n  '🖇',\n  '📏',\n  '📐',\n  '✂',\n  '🗃',\n  '🗄',\n  '🗑',\n  '🔒',\n  '🔓',\n  '🔏',\n  '🔐',\n  '🔑',\n  '🗝',\n  '🔨',\n  '⛏',\n  '⚒',\n  '🛠',\n  '🗡',\n  '⚔',\n  '🔫',\n  '🏹',\n  '🛡',\n  '🔧',\n  '🔩',\n  '⚙',\n  '🗜',\n  '⚗',\n  '⚖',\n  '🔗',\n  '⛓',\n  '💉',\n  '💊',\n  '🚬',\n  '⚰',\n  '⚱',\n  '🗿',\n  '🛢',\n  '🔮',\n  '🛒',\n  '🏧',\n  '🚮',\n  '🚰',\n  '♿',\n  '🚹',\n  '🚺',\n  '🚻',\n  '🚼',\n  '🚾',\n  '🛂',\n  '🛃',\n  '🛄',\n  '🛅',\n  '⚠',\n  '🚸',\n  '⛔',\n  '🚫',\n  '🚳',\n  '🚭',\n  '🚯',\n  '🚱',\n  '🚷',\n  '📵',\n  '🔞',\n  '☢',\n  '☣',\n  '⬆',\n  '↗',\n  '➡',\n  '↘',\n  '⬇',\n  '↙',\n  '⬅',\n  '↖',\n  '↕',\n  '↔',\n  '↩',\n  '↪',\n  '⤴',\n  '⤵',\n  '🔃',\n  '🔄',\n  '🔙',\n  '🔚',\n  '🔛',\n  '🔜',\n  '🔝',\n  '🛐',\n  '⚛',\n  '🕉',\n  '✡',\n  '☸',\n  '☯',\n  '✝',\n  '☦',\n  '☪',\n  '☮',\n  '🕎',\n  '🔯',\n  '♈',\n  '♉',\n  '♊',\n  '♋',\n  '♌',\n  '♍',\n  '♎',\n  '♏',\n  '♐',\n  '♑',\n  '♒',\n  '♓',\n  '⛎',\n  '🔀',\n  '🔁',\n  '🔂',\n  '▶',\n  '⏩',\n  '⏭',\n  '⏯',\n  '◀',\n  '⏪',\n  '⏮',\n  '🔼',\n  '⏫',\n  '🔽',\n  '⏬',\n  '⏸',\n  '⏹',\n  '⏺',\n  '⏏',\n  '🎦',\n  '🔅',\n  '🔆',\n  '📶',\n  '📳',\n  '📴',\n  '♻',\n  '📛',\n  '⚜',\n  '🔰',\n  '🔱',\n  '⭕',\n  '✅',\n  '☑',\n  '✔',\n  '✖',\n  '❌',\n  '❎',\n  '➕',\n  '➖',\n  '➗',\n  '➰',\n  '➿',\n  '〽',\n  '✳',\n  '✴',\n  '❇',\n  '‼',\n  '⁉',\n  '❓',\n  '❔',\n  '❕',\n  '❗',\n  '〰',\n  '©',\n  '®',\n  '™',\n  '#️⃣',\n  '*️⃣',\n  '0️⃣',\n  '1️⃣',\n  '2️⃣',\n  '3️⃣',\n  '4️⃣',\n  '5️⃣',\n  '6️⃣',\n  '7️⃣',\n  '8️⃣',\n  '9️⃣',\n  '🔟',\n  '💯',\n  '🔠',\n  '🔡',\n  '🔢',\n  '🔣',\n  '🔤',\n  '🅰',\n  '🆎',\n  '🅱',\n  '🆑',\n  '🆒',\n  '🆓',\n  'ℹ',\n  '🆔',\n  'Ⓜ',\n  '🆕',\n  '🆖',\n  '🅾',\n  '🆗',\n  '🅿',\n  '🆘',\n  '🆙',\n  '🆚',\n  '🈁',\n  '🈂',\n  '🈷',\n  '🈶',\n  '🈯',\n  '🉐',\n  '🈹',\n  '🈚',\n  '🈲',\n  '🉑',\n  '🈸',\n  '🈴',\n  '🈳',\n  '㊗',\n  '㊙',\n  '🈺',\n  '🈵',\n  '▪',\n  '▫',\n  '◻',\n  '◼',\n  '◽',\n  '◾',\n  '⬛',\n  '⬜',\n  '🔶',\n  '🔷',\n  '🔸',\n  '🔹',\n  '🔺',\n  '🔻',\n  '💠',\n  '🔘',\n  '🔲',\n  '🔳',\n  '⚪',\n  '⚫',\n  '🔴',\n  '🔵',\n  '🏁',\n  '🚩',\n  '🎌',\n  '🏴',\n  '🏳',\n  '🇦🇨',\n  '🇦🇩',\n  '🇦🇪',\n  '🇦🇫',\n  '🇦🇬',\n  '🇦🇮',\n  '🇦🇱',\n  '🇦🇲',\n  '🇦🇴',\n  '🇦🇶',\n  '🇦🇷',\n  '🇦🇸',\n  '🇦🇹',\n  '🇦🇺',\n  '🇦🇼',\n  '🇦🇽',\n  '🇦🇿',\n  '🇧🇦',\n  '🇧🇧',\n  '🇧🇩',\n  '🇧🇪',\n  '🇧🇫',\n  '🇧🇬',\n  '🇧🇭',\n  '🇧🇮',\n  '🇧🇯',\n  '🇧🇱',\n  '🇧🇲',\n  '🇧🇳',\n  '🇧🇴',\n  '🇧🇶',\n  '🇧🇷',\n  '🇧🇸',\n  '🇧🇹',\n  '🇧🇻',\n  '🇧🇼',\n  '🇧🇾',\n  '🇧🇿',\n  '🇨🇦',\n  '🇨🇨',\n  '🇨🇩',\n  '🇨🇫',\n  '🇨🇬',\n  '🇨🇭',\n  '🇨🇮',\n  '🇨🇰',\n  '🇨🇱',\n  '🇨🇲',\n  '🇨🇳',\n  '🇨🇴',\n  '🇨🇵',\n  '🇨🇷',\n  '🇨🇺',\n  '🇨🇻',\n  '🇨🇼',\n  '🇨🇽',\n  '🇨🇾',\n  '🇨🇿',\n  '🇩🇪',\n  '🇩🇬',\n  '🇩🇯',\n  '🇩🇰',\n  '🇩🇲',\n  '🇩🇴',\n  '🇩🇿',\n  '🇪🇦',\n  '🇪🇨',\n  '🇪🇪',\n  '🇪🇬',\n  '🇪🇭',\n  '🇪🇷',\n  '🇪🇸',\n  '🇪🇹',\n  '🇪🇺',\n  '🇫🇮',\n  '🇫🇯',\n  '🇫🇰',\n  '🇫🇲',\n  '🇫🇴',\n  '🇫🇷',\n  '🇬🇦',\n  '🇬🇧',\n  '🇬🇩',\n  '🇬🇪',\n  '🇬🇫',\n  '🇬🇬',\n  '🇬🇭',\n  '🇬🇮',\n  '🇬🇱',\n  '🇬🇲',\n  '🇬🇳',\n  '🇬🇵',\n  '🇬🇶',\n  '🇬🇷',\n  '🇬🇸',\n  '🇬🇹',\n  '🇬🇺',\n  '🇬🇼',\n  '🇬🇾',\n  '🇭🇰',\n  '🇭🇲',\n  '🇭🇳',\n  '🇭🇷',\n  '🇭🇹',\n  '🇭🇺',\n  '🇮🇨',\n  '🇮🇩',\n  '🇮🇪',\n  '🇮🇱',\n  '🇮🇲',\n  '🇮🇳',\n  '🇮🇴',\n  '🇮🇶',\n  '🇮🇷',\n  '🇮🇸',\n  '🇮🇹',\n  '🇯🇪',\n  '🇯🇲',\n  '🇯🇴',\n  '🇯🇵',\n  '🇰🇪',\n  '🇰🇬',\n  '🇰🇭',\n  '🇰🇮',\n  '🇰🇲',\n  '🇰🇳',\n  '🇰🇵',\n  '🇰🇷',\n  '🇰🇼',\n  '🇰🇾',\n  '🇰🇿',\n  '🇱🇦',\n  '🇱🇧',\n  '🇱🇨',\n  '🇱🇮',\n  '🇱🇰',\n  '🇱🇷',\n  '🇱🇸',\n  '🇱🇹',\n  '🇱🇺',\n  '🇱🇻',\n  '🇱🇾',\n  '🇲🇦',\n  '🇲🇨',\n  '🇲🇩',\n  '🇲🇪',\n  '🇲🇫',\n  '🇲🇬',\n  '🇲🇭',\n  '🇲🇰',\n  '🇲🇱',\n  '🇲🇲',\n  '🇲🇳',\n  '🇲🇴',\n  '🇲🇵',\n  '🇲🇶',\n  '🇲🇷',\n  '🇲🇸',\n  '🇲🇹',\n  '🇲🇺',\n  '🇲🇻',\n  '🇲🇼',\n  '🇲🇽',\n  '🇲🇾',\n  '🇲🇿',\n  '🇳🇦',\n  '🇳🇨',\n  '🇳🇪',\n  '🇳🇫',\n  '🇳🇬',\n  '🇳🇮',\n  '🇳🇱',\n  '🇳🇴',\n  '🇳🇵',\n  '🇳🇷',\n  '🇳🇺',\n  '🇳🇿',\n  '🇴🇲',\n  '🇵🇦',\n  '🇵🇪',\n  '🇵🇫',\n  '🇵🇬',\n  '🇵🇭',\n  '🇵🇰',\n  '🇵🇱',\n  '🇵🇲',\n  '🇵🇳',\n  '🇵🇷',\n  '🇵🇸',\n  '🇵🇹',\n  '🇵🇼',\n  '🇵🇾',\n  '🇶🇦',\n  '🇷🇪',\n  '🇷🇴',\n  '🇷🇸',\n  '🇷🇺',\n  '🇷🇼',\n  '🇸🇦',\n  '🇸🇧',\n  '🇸🇨',\n  '🇸🇩',\n  '🇸🇪',\n  '🇸🇬',\n  '🇸🇭',\n  '🇸🇮',\n  '🇸🇯',\n  '🇸🇰',\n  '🇸🇱',\n  '🇸🇲',\n  '🇸🇳',\n  '🇸🇴',\n  '🇸🇷',\n  '🇸🇸',\n  '🇸🇹',\n  '🇸🇻',\n  '🇸🇽',\n  '🇸🇾',\n  '🇸🇿',\n  '🇹🇦',\n  '🇹🇨',\n  '🇹🇩',\n  '🇹🇫',\n  '🇹🇬',\n  '🇹🇭',\n  '🇹🇯',\n  '🇹🇰',\n  '🇹🇱',\n  '🇹🇲',\n  '🇹🇳',\n  '🇹🇴',\n  '🇹🇷',\n  '🇹🇹',\n  '🇹🇻',\n  '🇹🇼',\n  '🇹🇿',\n  '🇺🇦',\n  '🇺🇬',\n  '🇺🇲',\n  '🇺🇸',\n  '🇺🇾',\n  '🇺🇿',\n  '🇻🇦',\n  '🇻🇨',\n  '🇻🇪',\n  '🇻🇬',\n  '🇻🇮',\n  '🇻🇳',\n  '🇻🇺',\n  '🇼🇫',\n  '🇼🇸',\n  '🇽🇰',\n  '🇾🇪',\n  '🇾🇹',\n  '🇿🇦',\n  '🇿🇲',\n  '🇿🇼'\n];\n","import { FontAwesome5, Foundation, Ionicons } from '@expo/vector-icons';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Layout, Text, useTheme } from '@ui-kitten/components';\nimport React, { useEffect, useState } from 'react';\nimport { Image, Platform, TouchableOpacity } from 'react-native';\n\nimport { selectDarkMode, selectUserKey } from '../../app/appDataSlice';\nimport { useAppSelector } from '../../app/hooks';\nimport Header from '../../components/Header';\nimport NotificationsNavigation from '../notifications/Notifications';\nimport { base_URL } from '../notifications/constants';\nimport Settings from '../settings/index';\nimport { SponsorPage, SponsorsList } from '../sponsors/SponsorsList';\nimport ClassesList from './ClassesList';\nimport ElectiveGenerator from './ElectiveGenerator';\nimport SelectTerm from './SelectTerm';\nimport SingleClassPage from './SingleClassPage/index';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function SearchClasses({ navigation }) {\n  const theme = useTheme();\n  const hasSelectedElectiveGenerator = useAppSelector(\n    (state) => state.appData.classPages.hasSelectedElectiveGen\n  );\n  const userKey = useAppSelector(selectUserKey);\n  const darkMode = useAppSelector(selectDarkMode);\n  const [numberOfNotifications, setNumberOfNotifications] = useState(0);\n\n  function refreshNotifications() {\n    fetch(`${base_URL}/users/getNotifications`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        userKey\n      }\n    }).then((res) => {\n      res.text().then((notifications) => {\n        notifications = JSON.parse(notifications);\n        setNumberOfNotifications(notifications.length);\n      });\n    });\n  }\n\n  useEffect(() => {\n    refreshNotifications();\n    setInterval(() => {\n      refreshNotifications();\n    }, 60000); // refresh every minute\n  }, []);\n\n  const accessoryLeft = (\n    <Image\n      style={{\n        height: 28,\n        width: 28\n      }}\n      source={require('../../../assets/logos/app-logo-transparent.png')}\n    />\n  );\n\n  const accessoryRight = (\n    <Layout\n      style={{\n        flexDirection: 'row',\n        width: 120,\n        justifyContent: 'space-between'\n      }}\n    >\n      <TouchableOpacity\n        onPress={() => {\n          navigation.navigate('ElectiveGenerator');\n        }}\n        style={{ flexDirection: 'row', alignItems: 'center' }}\n      >\n        {hasSelectedElectiveGenerator ? (\n          <FontAwesome5\n            name=\"brain\"\n            size={23}\n            color={\n              darkMode ? theme['color-basic-200'] : theme['color-basic-800']\n            }\n          />\n        ) : (\n          <Foundation\n            name=\"burst-new\"\n            size={30}\n            color={theme['color-warning-500']}\n          />\n        )}\n      </TouchableOpacity>\n\n      { false &&\n        <TouchableOpacity\n          onPress={() => {\n            navigation.navigate('SponsorsList');\n          }}\n          style={{ flexDirection: 'row', alignItems: 'center' }}\n        >\n          <FontAwesome5\n            name=\"shopping-bag\"\n            size={23}\n            color={\n              darkMode ? theme['color-basic-200'] : theme['color-basic-800']\n            }\n          />\n        </TouchableOpacity>\n      }\n\n      <TouchableOpacity\n        onPress={() => {\n          navigation.navigate('Settings');\n        }}\n        style={{ flexDirection: 'row', alignItems: 'center' }}\n      >\n        <Ionicons\n          name=\"settings\"\n          size={23}\n          color={darkMode ? theme['color-basic-200'] : theme['color-basic-800']}\n        />\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        onPress={() => {\n          navigation.navigate('NotificationsPage');\n        }}\n        style={{ flexDirection: 'row', alignItems: 'center' }}\n      >\n        <FontAwesome5\n          name=\"bell\"\n          size={23}\n          color={darkMode ? theme['color-basic-200'] : theme['color-basic-800']}\n        />\n        {numberOfNotifications > 0 ? (\n          <Layout\n            style={{\n              position: 'absolute',\n              backgroundColor: darkMode ? 'red' : '#fff',\n              borderRadius: 10,\n              paddingHorizontal: 3,\n              right: -7,\n              top: -3\n            }}\n          >\n            <Text>{numberOfNotifications}</Text>\n          </Layout>\n        ) : null}\n      </TouchableOpacity>\n    </Layout>\n  );\n\n  return (\n    <Stack.Navigator>\n      <Stack.Screen\n        name=\"ClassesList\"\n        component={ClassesList}\n        options={{\n          header: () => (\n            <Layout style={{ paddingBottom: 10 }}>\n              <Header\n                accessoryLeft={accessoryLeft}\n                accessoryRight={accessoryRight}\n                title=\"Athena\"\n              />\n            </Layout>\n          ),\n          title: 'Class Pages'\n        }}\n      />\n      <Stack.Screen\n        name=\"Settings\"\n        component={Settings}\n        options={{\n          headerShown: false\n        }}\n      />\n      <Stack.Group screenOptions={{ headerTitle: 'Sponsors' }}>\n        <Stack.Screen\n          name=\"SponsorsList\"\n          component={SponsorsList}\n          options={{ title: 'Sponsors' }}\n        />\n        <Stack.Screen\n          name=\"SponsorPage\"\n          component={SponsorPage}\n          options={{ title: 'Sponsors' }}\n        />\n      </Stack.Group>\n      <Stack.Screen\n        name=\"NotificationsPage\"\n        component={NotificationsNavigation}\n        options={{ headerShown: false, title: 'Notifications' }}\n      />\n      <Stack.Screen\n        name=\"SelectTerm\"\n        component={SelectTerm}\n        options={{\n          title: 'Select Term',\n          headerShown: false,\n          animation: 'slide_from_bottom',\n          gestureDirection: 'vertical'\n        }}\n      />\n      <Stack.Screen\n        name=\"ElectiveGenerator\"\n        component={ElectiveGenerator}\n        options={{\n          title: 'Elective Generator',\n          animation: 'slide_from_bottom',\n          gestureDirection: 'vertical'\n        }}\n      />\n      {/* Show a full page screen for web (modal for mobile) */}\n      {Platform.OS === 'web' && (\n        <Stack.Screen\n          name=\"SingleClassPage\"\n          component={SingleClassPage}\n          options={{\n            headerShown: false,\n            title: 'ClassPages'\n          }}\n        />\n      )}\n    </Stack.Navigator>\n  );\n}\n","import {\n  Feather,\n  FontAwesome5,\n  Foundation,\n  Ionicons\n} from '@expo/vector-icons';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Layout, Text, useTheme } from '@ui-kitten/components';\nimport React, { useEffect, useState } from 'react';\nimport { Image, Platform, TouchableOpacity } from 'react-native';\n\nimport {\n  selectDarkMode,\n  selectIsGuest,\n  selectUserKey\n} from '../../app/appDataSlice';\nimport { useAppSelector } from '../../app/hooks';\nimport Header from '../../components/Header';\nimport ModalContainer from '../../components/ModalContainer';\nimport WrapItems from '../../components/WrapItems';\nimport { exportToICal } from '../../functions';\nimport { useGetUserInfoQuery } from '../api/usersApi';\nimport CalendarPage from '../calendar/CalendarPage';\nimport CreateCustomEvent from '../calendar/CreateCustomEvent';\nimport renderModal from '../calendar/exportModal';\nimport ElectiveGenerator from '../classPages/ElectiveGenerator';\nimport SelectTerm from '../classPages/SelectTerm';\nimport NotificationsNavigation from '../notifications/Notifications';\nimport { base_URL } from '../notifications/constants';\nimport Settings from '../settings/index';\nimport { SponsorPage, SponsorsList } from '../sponsors/SponsorsList';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function CombinedClassPages({ navigation }) {\n  const userKey = useAppSelector(selectUserKey);\n  const [numberOfNotifications, setNumberOfNotifications] = useState(0);\n  const theme = useTheme();\n  const hasSelectedElectiveGenerator = useAppSelector(\n    (state) => state.appData.classPages.hasSelectedElectiveGen\n  );\n  const isMobile = useAppSelector((state) => state.appData.secure.isMobile);\n  const currentSection = useAppSelector(\n    (state) => state.appData.classPages.currentSection\n  );\n  const classes = useAppSelector((state) => state.appData.classPages.classes);\n  const isGuest = useAppSelector(selectIsGuest);\n  const darkMode = useAppSelector(selectDarkMode);\n  const [showModal, setShowModal] = useState(false);\n  const { data: userData } = useGetUserInfoQuery(userKey);\n  const [showGuestModal, setShowGuestModal] = useState(false);\n  const [showWebModal, setShowWebModal] = useState(false);\n  async function sendNotification(bodyTosend) {\n    await fetch(`${base_URL}/users/sendNotification`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        userKey\n      },\n      body: JSON.stringify(bodyTosend)\n    });\n  }\n\n  const accessoryRight = (\n    <WrapItems\n      childStyle={\n        !isMobile && {\n          paddingHorizontal: 5\n        }\n      }\n      style={{\n        paddingHorizontal: 0,\n        alignItems: 'center',\n        flexDirection: 'row'\n      }}\n    >\n      {showGuestModal && (\n        <ModalContainer\n          title=\"Wait!\"\n          children={\n            <Text style={{ paddingHorizontal: 30 }}>\n              This feature is not available to Guest Users. Please create a free\n              account with us to take advantage this feature.\n            </Text>\n          }\n          backDropVisible={showGuestModal}\n          setBackDropVisible={setShowGuestModal}\n        />\n      )}\n      {Platform.OS === 'web' && showWebModal && (\n        <ModalContainer\n          title=\"Wait!\"\n          children={\n            <Text style={{ paddingHorizontal: 30 }}>\n              Sharing schedules is not supported on the web. Download the app on\n              the App Store or Play Store to share schedules.\n            </Text>\n          }\n          backDropVisible={showWebModal}\n          setBackDropVisible={setShowWebModal}\n        />\n      )}\n      {Platform.OS !== 'web' && renderModal(setShowModal, showModal)}\n      <TouchableOpacity\n        onPress={() => {\n          if (Platform.OS === 'web') {\n            const times = Object.entries(\n              userData.addedClasses.classes[currentSection]\n            ).flatMap(([masterCourseCode, courseCodes]) => {\n              return courseCodes.flatMap((courseCode) => {\n                return classes[masterCourseCode].times.filter(\n                  (time) => time.courseCode === courseCode\n                );\n              });\n            });\n            const calendar = exportToICal(times);\n          } else if (isGuest) {\n            setShowGuestModal(true);\n          } else {\n            setShowModal(true);\n            setShowWebModal(true);\n          }\n        }}\n        style={{\n          alignItems: 'center'\n        }}\n      >\n        <Feather name=\"share\" size={24} color={darkMode ? 'white' : 'black'} />\n      </TouchableOpacity>\n      <TouchableOpacity\n        onPress={() => {\n          navigation.navigate('ElectiveGenerator');\n        }}\n        style={{ flexDirection: 'row', alignItems: 'center' }}\n      >\n        {hasSelectedElectiveGenerator ? (\n          <FontAwesome5\n            name=\"brain\"\n            size={23}\n            color={\n              darkMode ? theme['color-basic-200'] : theme['color-basic-800']\n            }\n          />\n        ) : (\n          <Foundation\n            name=\"burst-new\"\n            size={30}\n            color={theme['color-warning-500']}\n          />\n        )}\n      </TouchableOpacity>\n\n      { false &&\n        <TouchableOpacity\n          onPress={() => {\n            navigation.navigate('SponsorsList');\n          }}\n          style={{ flexDirection: 'row', alignItems: 'center' }}\n        >\n          <FontAwesome5\n            name=\"shopping-bag\"\n            size={23}\n            color={\n              darkMode ? theme['color-basic-200'] : theme['color-basic-800']\n            }\n          />\n        </TouchableOpacity>\n      }\n\n      <TouchableOpacity\n        onPress={() => {\n          navigation.navigate('Settings');\n        }}\n        style={{ flexDirection: 'row', alignItems: 'center' }}\n      >\n        <FontAwesome5\n          name=\"user-alt\"\n          size={23}\n          color={darkMode ? theme['color-basic-200'] : theme['color-basic-800']}\n        />\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        onPress={() => {\n          navigation.navigate('NotificationsPage');\n        }}\n        style={{ flexDirection: 'row', alignItems: 'center' }}\n      >\n        <FontAwesome5\n          name=\"bell\"\n          size={23}\n          color={darkMode ? theme['color-basic-200'] : theme['color-basic-800']}\n        />\n        {numberOfNotifications > 0 ? (\n          <Layout\n            style={{\n              position: 'absolute',\n              backgroundColor: darkMode ? 'red' : '#fff',\n              borderRadius: 10,\n              paddingHorizontal: 3,\n              right: -7,\n              top: -3\n            }}\n          >\n            <Text>{numberOfNotifications}</Text>\n          </Layout>\n        ) : null}\n      </TouchableOpacity>\n    </WrapItems>\n  );\n\n  function refreshNotifications() {\n    fetch(`${base_URL}/users/getNotifications`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        userKey\n      }\n    }).then((res) => {\n      res.text().then((notifications) => {\n        notifications = JSON.parse(notifications);\n        setNumberOfNotifications(notifications.length);\n      });\n    });\n  }\n\n  useEffect(() => {\n    refreshNotifications();\n    setInterval(() => {\n      refreshNotifications();\n    }, 60000); // refresh every minute\n  }, []);\n\n  const accessoryLeft = (\n    <Image\n      style={{\n        height: 28,\n        width: 28\n      }}\n      source={require('../../../assets/logos/app-logo-transparent.png')}\n    />\n  );\n  return (\n    <Stack.Navigator>\n      <Stack.Screen\n        name=\"Calendar\"\n        component={CalendarPage}\n        options={{\n          header: () => (\n            <Layout style={{ paddingBottom: 10 }}>\n              <Header\n                accessoryLeft={accessoryLeft}\n                accessoryRight={accessoryRight}\n                title=\"Athena\"\n              />\n            </Layout>\n          )\n        }}\n      />\n      <Stack.Screen\n        name=\"Settings\"\n        component={Settings}\n        options={{\n          headerShown: false\n        }}\n      />\n      <Stack.Group screenOptions={{ headerTitle: 'Sponsors' }}>\n        <Stack.Screen\n          name=\"SponsorsList\"\n          component={SponsorsList}\n          options={{ title: 'Sponsors' }}\n        />\n        <Stack.Screen\n          name=\"SponsorPage\"\n          component={SponsorPage}\n          options={{ title: 'Sponsors' }}\n        />\n      </Stack.Group>\n      <Stack.Screen\n        name=\"NotificationsPage\"\n        component={NotificationsNavigation}\n        options={{ headerShown: false, title: 'Notifications' }}\n      />\n      <Stack.Screen\n        name=\"SelectTerm\"\n        component={SelectTerm}\n        options={{\n          title: 'Select Term',\n          headerShown: false,\n          animation: 'slide_from_bottom',\n          gestureDirection: 'vertical'\n        }}\n      />\n      <Stack.Screen\n        name=\"ElectiveGenerator\"\n        component={ElectiveGenerator}\n        options={{\n          title: 'Elective Generator',\n          animation: 'slide_from_bottom',\n          gestureDirection: 'vertical'\n        }}\n      />\n      <Stack.Screen\n        name=\"CreateCustomEvent\"\n        component={CreateCustomEvent}\n        options={{ headerTitle: 'Add Event' }}\n      />\n    </Stack.Navigator>\n  );\n}\n","import { Feather, FontAwesome } from '@expo/vector-icons';\nimport { Input, Layout, Text } from '@ui-kitten/components';\nimport * as ImagePicker from 'expo-image-picker';\nimport React from 'react';\nimport {\n  Alert,\n  Dimensions,\n  Image,\n  Platform,\n  TouchableOpacity\n} from 'react-native';\nimport Toast from 'react-native-root-toast';\n\nconst windowWidth = Dimensions.get('window').width;\n\nexport default function CreateImage({\n  discoverPostInputs,\n  setDiscoverPostInputs,\n  TagInput,\n  showTitle = true\n}) {\n  const [imagePickerStatus, requestImagePickerPermission] =\n    ImagePicker.useMediaLibraryPermissions();\n  const [cameraStatus, requestCameraPermission] =\n    ImagePicker.useCameraPermissions();\n\n  const onPressCamera = async () => {\n    const response = await requestCameraPermission();\n    if (response.granted || cameraStatus.granted) {\n      const result = await ImagePicker.launchCameraAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images\n      });\n      if (!result.canceled) {\n        setDiscoverPostInputs({\n          ...discoverPostInputs,\n          contentImage: result.assets[0]\n        });\n      }\n    } else {\n      Alert.alert(\n        \"Permission to access camera is required. Please enable it in your phone's settings.\"\n      );\n    }\n  };\n\n  const pickImage = async () => {\n    const response = await requestImagePickerPermission();\n    if (response.granted || imagePickerStatus.granted) {\n      const result = await ImagePicker.launchImageLibraryAsync({\n        allowsEditing: false\n      });\n      if (!result.canceled) {\n        setDiscoverPostInputs({\n          ...discoverPostInputs,\n          contentImage: result.assets[0]\n        });\n\n        if (Platform.OS === 'android') {\n          Toast.show(\"Don't worry if the image seems blurry on the sides.\", {\n            duration: Toast.durations.LONG,\n            opacity: 1,\n            position: -100,\n            backgroundColor: 'grey',\n            shadow: false\n          });\n        }\n      }\n    } else {\n      Alert.alert(\n        \"Permission to access camera roll is required. Please enable it in your phone's settings.\"\n      );\n    }\n  };\n\n  const Title = (\n    <Layout\n      style={{\n        flexDirection: 'row',\n        justifyContent: 'space-evenly',\n        alignItems: 'center',\n        marginTop: 15\n      }}\n    >\n      <Input\n        label=\"Title\"\n        placeholder=\"Post Title\"\n        value={discoverPostInputs?.title ? discoverPostInputs.title : ''}\n        style={{ flex: 5 }}\n        onChangeText={(newText) => {\n          setDiscoverPostInputs({\n            ...discoverPostInputs,\n            title: newText\n          });\n        }}\n      />\n    </Layout>\n  );\n\n  let imagePicker = <></>;\n\n  if (discoverPostInputs?.contentImage) {\n    // Image Preview\n    imagePicker = (\n      <Layout\n        level=\"2\"\n        style={{\n          height: 300,\n          marginVertical: 10,\n          borderRadius: 10,\n          shadowColor: '#000',\n          shadowOffset: {\n            width: 0,\n            height: 5\n          },\n          shadowOpacity: 0.34,\n          shadowRadius: 6.27,\n\n          elevation: 10\n        }}\n      >\n        <TouchableOpacity\n          onPress={() => {\n            setDiscoverPostInputs(null);\n          }}\n          style={{\n            position: 'absolute',\n            right: 10,\n            top: 5,\n            zIndex: 1\n          }}\n        >\n          <Feather name=\"x-circle\" size={30} color=\"grey\" />\n        </TouchableOpacity>\n\n        <Image\n          source={{\n            uri: discoverPostInputs.contentImage.uri\n          }}\n          style={{\n            borderRadius: 5,\n            width: '100%',\n            height: '100%',\n            resizeMode: 'contain'\n          }}\n        />\n      </Layout>\n    );\n  } else {\n    // Image Picker\n    imagePicker = (\n      <Layout style={{ flexDirection: 'row' }}>\n        <TouchableOpacity\n          onPress={() => {\n            pickImage();\n          }}\n          style={{\n            height: 80,\n            justifyContent: 'center',\n            alignItems: 'center',\n            flex: 1,\n            paddingVertical: 8,\n            flexDirection: 'row'\n          }}\n        >\n          <Layout\n            level=\"2\"\n            style={{\n              flex: 1,\n              flexDirection: 'row',\n              height: '100%',\n              marginHorizontal: 10,\n              paddingVertical: 15,\n              paddingHorizontal: 5,\n              borderRadius: 8,\n              alignItems: 'center',\n              justifyContent: 'space-around'\n            }}\n          >\n            <FontAwesome name=\"image\" size={25} color=\"grey\" />\n            <Text>Select Image</Text>\n          </Layout>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={onPressCamera}\n          style={{\n            height: 80,\n            justifyContent: 'center',\n            alignItems: 'center',\n            flex: 1,\n            paddingVertical: 8,\n            flexDirection: 'row'\n          }}\n        >\n          <Layout\n            level=\"2\"\n            style={{\n              flex: 1,\n              flexDirection: 'row',\n              height: '100%',\n              marginHorizontal: 10,\n              paddingVertical: 15,\n              paddingHorizontal: 5,\n              borderRadius: 8,\n              alignItems: 'center',\n              justifyContent: 'space-around'\n            }}\n          >\n            <FontAwesome name=\"camera\" size={25} color=\"grey\" />\n            <Text>Use Camera</Text>\n          </Layout>\n        </TouchableOpacity>\n      </Layout>\n    );\n  }\n\n  return (\n    <>\n      {showTitle && Title}\n      {TagInput()}\n      {imagePicker}\n    </>\n  );\n}\n","import { createEntityAdapter } from '@reduxjs/toolkit';\n\nimport { apiSlice } from './apiSlice';\nimport { DiscoverPost } from '../../app/types';\nimport { DISCOVER_LIST_PAGE_SIZE } from '../../constants/discover';\n\ntype getPostsArgs = {\n  userKey: string;\n  userName: string;\n  pageNumber?: number;\n  tag?: string;\n  searchTerm?: string;\n  sponsor?: boolean;\n};\n\nconst postsAdapter = createEntityAdapter<DiscoverPost>({\n  selectId: (post: DiscoverPost) => post._id\n});\n\n// Helper Functions\n\nconst tranformComments = (comments, userName) => comments.map((comment) => ({\n  ...comment,\n  numLikes: comment.likes.length,\n  hasLiked: comment.likes.includes(userName)\n}));\n\nexport const discoverApiSlice = apiSlice.injectEndpoints({\n  overrideExisting: true,\n  endpoints: (builder) => ({\n    getDiscoverPosts: builder.query<any, getPostsArgs>({\n      keepUnusedDataFor: 6000,\n      query: ({\n        userKey, pageNumber, tag, searchTerm, sponsor = true\n      }) => ({\n        url: `/discover/getPosts`,\n        headers: {\n          userKey\n        },\n        params: {\n          tag,\n          searchTerm,\n          pageNumber,\n          sponsor,\n          pageLength: DISCOVER_LIST_PAGE_SIZE\n        }\n      }),\n      transformResponse: (response: DiscoverPost[], _, { userName }) => {\n        // Return Post To State Using Adapters\n        return postsAdapter.addMany(\n          postsAdapter.getInitialState({\n            hasMorePages: response.length > 0\n          }),\n          // TODO: Refactoring likes and comments. Should maybe be done in backend\n          response.map((post) => ({\n            ...post,\n            numLikes: post.likes.length,\n            hasLiked: post.likes.includes(userName),\n            comments: tranformComments(post.comments, userName)\n          }))\n        );\n      },\n      async onQueryStarted(\n        {\n          userKey, pageNumber, userName, searchTerm, tag, sponsor\n        },\n        { queryFulfilled, dispatch }\n      ) {\n        if (!pageNumber) {\n          return;\n        }\n        const { data } = await queryFulfilled;\n\n        if (data?.ids?.length > 0) {\n          // Add Posts On Current Request To Page 1\n          dispatch(\n            discoverApiSlice.util.updateQueryData(\n              'getDiscoverPosts',\n              {\n                userKey,\n                pageNumber: 1,\n                userName,\n                searchTerm,\n                tag,\n                sponsor\n              },\n              (draft) => {\n                postsAdapter.addMany(draft, postsSelectors.selectAll(data));\n              }\n            )\n          );\n\n          if (pageNumber > 1) {\n            // Remove Cached Data From State Since We Already Added It To Page 1\n            dispatch(\n              discoverApiSlice.util.updateQueryData(\n                'getDiscoverPosts',\n                {\n                  userKey,\n                  pageNumber,\n                  userName,\n                  searchTerm,\n                  tag,\n                  sponsor\n                },\n                (draft) => {\n                  draft = postsAdapter.getInitialState();\n                }\n              )\n            );\n          }\n        } else {\n          // No More Pages To Load\n          dispatch(\n            discoverApiSlice.util.updateQueryData(\n              'getDiscoverPosts',\n              {\n                userKey,\n                pageNumber: 1,\n                userName,\n                searchTerm,\n                tag,\n                sponsor\n              },\n              (draft) => {\n                draft.hasMorePages = false;\n              }\n            )\n          );\n        }\n      }\n    }),\n\n    createDiscoverPost: builder.mutation({\n      query: ({\n        userKey,\n        title,\n        type,\n        content,\n        tags,\n        status,\n        emoji,\n        postBody,\n        pinned\n      }) => {\n        if (type === 'contentImage' || type === 'contentEvent') {\n          return {\n            url: '/discover/addPost',\n            method: 'POST',\n            headers: { userKey },\n            body: postBody\n          };\n        }\n        return {\n          url: '/discover/addPost',\n          method: 'POST',\n          headers: { userKey },\n          body: {\n            title,\n            type,\n            [type]: content,\n            tags,\n            status,\n            emoji,\n            pinned\n          }\n        };\n      },\n      async onQueryStarted(\n        { userKey, userName },\n        { dispatch, queryFulfilled }\n      ) {\n        try {\n          const { data: newPost } = await queryFulfilled;\n\n          // Add New Post To State\n          dispatch(\n            discoverApiSlice.util.updateQueryData(\n              'getDiscoverPosts',\n              { userKey, userName, pageNumber: 1 },\n              (draft) => {\n                postsAdapter.addOne(draft, {\n                  ...newPost,\n                  numLikes: 0,\n                  hasLiked: false\n                });\n              }\n            )\n          );\n        } catch (e) {\n          console.warn('Error Adding Post To State', e);\n        }\n      }\n    }),\n    deleteDiscoverPost: builder.mutation({\n      query: ({\n        userKey, _id, userName, title\n      }) => ({\n        url: '/discover/deletePost',\n        method: 'DELETE',\n        headers: { userKey },\n        body: {\n          _id,\n          userName,\n          title\n        },\n        responseHandler: (response) => response.text()\n      }),\n      async onQueryStarted(\n        {\n          userKey, _id, userName, searchTerm, tag\n        },\n        { dispatch, queryFulfilled }\n      ) {\n        if (searchTerm || tag) {\n          var searchPatchResult = dispatch(\n            discoverApiSlice.util.updateQueryData(\n              'getDiscoverPosts',\n              {\n                userKey,\n                userName,\n                pageNumber: 1,\n                searchTerm,\n                tag\n              },\n              (draft) => {\n                postsAdapter.removeOne(draft, _id);\n              }\n            )\n          );\n        }\n\n        const patchResult = dispatch(\n          discoverApiSlice.util.updateQueryData(\n            'getDiscoverPosts',\n            { userKey, userName, pageNumber: 1 },\n            (draft) => {\n              postsAdapter.removeOne(draft, _id);\n            }\n          )\n        );\n\n        try {\n          await queryFulfilled;\n        } catch {\n          patchResult.undo();\n          if (searchPatchResult) {\n            searchPatchResult.undo();\n          }\n        }\n      }\n    }),\n\n    getPostById: builder.query({\n      query: ({ userKey, postId }) => ({\n        url: `/discover/getPostById`,\n        headers: {\n          userKey\n        },\n        params: {\n          id: postId\n        }\n      }),\n      async onQueryStarted(\n        {\n          userKey, postId, userName, searchTerm, tag\n        },\n        { dispatch, queryFulfilled }\n      ) {\n        // Replace Post In State With Updated Post\n\n        try {\n          const { data: updatedPost } = await queryFulfilled;\n          const updateFunction = (draft) => {\n            postsAdapter.updateOne(draft, {\n              id: postId,\n              changes: {\n                ...updatedPost,\n                numLikes: updatedPost.likes.length,\n                hasLiked: updatedPost.likes.includes(userName),\n                comments: tranformComments(updatedPost.comments, userName)\n              }\n            });\n          };\n          dispatch(\n            discoverApiSlice.util.updateQueryData(\n              'getDiscoverPosts',\n              {\n                userKey,\n                userName,\n                pageNumber: 1\n              },\n              updateFunction\n            )\n          );\n          if (searchTerm || tag) {\n            dispatch(\n              discoverApiSlice.util.updateQueryData(\n                'getDiscoverPosts',\n                {\n                  userKey,\n                  userName,\n                  pageNumber: 1,\n                  searchTerm,\n                  tag\n                },\n                updateFunction\n              )\n            );\n          }\n        } catch (e) {\n          console.warn('Error Updating Post In State', e);\n        }\n      }\n    }),\n\n    likePost: builder.mutation({\n      query: ({\n        userKey, _id, title, postAuthor\n      }) => ({\n        url: '/discover/like',\n        method: 'PATCH',\n        headers: { userKey },\n        body: {\n          _id,\n          title,\n          userName: postAuthor\n        },\n        responseHandler: (response) => response.text()\n      }),\n      async onQueryStarted(\n        {\n          userKey, _id, userName, searchTerm, tag\n        },\n        { dispatch, queryFulfilled }\n      ) {\n        const updateFunction = (draft) => {\n          const post = postsSelectors.selectById(draft, _id);\n          // Use updateOne to update the post with the given ID\n          postsAdapter.updateOne(draft, {\n            id: _id,\n            changes: {\n              numLikes: post.hasLiked ? post.numLikes - 1 : post.numLikes + 1,\n              hasLiked: !post.hasLiked\n            }\n          });\n        };\n\n        if (searchTerm || tag) {\n          var searchPatchResult = dispatch(\n            discoverApiSlice.util.updateQueryData(\n              'getDiscoverPosts',\n              {\n                userKey,\n                pageNumber: 1,\n                userName,\n                searchTerm,\n                tag\n              },\n              updateFunction\n            )\n          );\n        }\n        const patchResult = dispatch(\n          discoverApiSlice.util.updateQueryData(\n            'getDiscoverPosts',\n            { userKey, pageNumber: 1, userName },\n            updateFunction\n          )\n        );\n\n        try {\n          await queryFulfilled;\n        } catch {\n          if (searchPatchResult) {\n            searchPatchResult.undo();\n          }\n          patchResult.undo();\n        }\n      }\n    }),\n\n    addComment: builder.mutation({\n      query: ({ userKey, _id, text }) => ({\n        url: '/discover/addComment',\n        method: 'POST',\n        headers: { userKey },\n        body: {\n          _id,\n          text\n        },\n        responseHandler: (response) => response.text()\n      }),\n\n      async onQueryStarted(\n        {\n          userKey, _id, userName, searchTerm, tag\n        },\n        { dispatch, queryFulfilled }\n      ) {\n        try {\n          await queryFulfilled;\n\n          // Call getPostById to update the post in state\n          dispatch(\n            discoverApiSlice.endpoints.getPostById.initiate({\n              userKey,\n              postId: _id,\n              userName,\n              searchTerm,\n              tag\n            })\n          );\n        } catch (e) {\n          console.warn('Error Adding Comment To State', e);\n        }\n      }\n    }),\n\n    likeComment: builder.mutation({\n      query: ({ userKey, postId, commentId }) => ({\n        url: '/discover/likeComment',\n        method: 'PATCH',\n        headers: { userKey },\n        body: {\n          postId,\n          commentId\n        },\n        responseHandler: (response) => response.text()\n      }),\n      async onQueryStarted(\n        {\n          userKey, postId, commentId, userName, searchTerm, tag\n        },\n        { dispatch, queryFulfilled }\n      ) {\n        const updateFunction = (draft) => {\n          const post = postsSelectors.selectById(draft, postId);\n          // Use updateOne to update the post with the given ID\n          postsAdapter.updateOne(draft, {\n            id: postId,\n            changes: {\n              comments: post.comments.map((comment) => {\n                if (comment._id === commentId) {\n                  return {\n                    ...comment,\n                    numLikes: comment.hasLiked\n                      ? comment.numLikes - 1\n                      : comment.numLikes + 1,\n                    hasLiked: !comment.hasLiked\n                  };\n                }\n                return comment;\n              })\n            }\n          });\n        };\n        if (searchTerm || tag) {\n          var searchPatchResult = dispatch(\n            discoverApiSlice.util.updateQueryData(\n              'getDiscoverPosts',\n              {\n                userKey,\n                pageNumber: 1,\n                userName,\n                searchTerm,\n                tag\n              },\n              updateFunction\n            )\n          );\n        }\n\n        const patchResult = dispatch(\n          discoverApiSlice.util.updateQueryData(\n            'getDiscoverPosts',\n            { userKey, userName, pageNumber: 1 },\n            updateFunction\n          )\n        );\n\n        try {\n          await queryFulfilled;\n        } catch {\n          patchResult.undo();\n          if (searchPatchResult) {\n            searchPatchResult.undo();\n          }\n        }\n      }\n    }),\n\n    deleteComment: builder.mutation({\n      query: ({ userKey, postId, commentId }) => ({\n        url: '/discover/deleteComment',\n        method: 'DELETE',\n        headers: { userKey },\n        body: {\n          postId,\n          commentId\n        },\n        responseHandler: (response) => response.text()\n      }),\n      async onQueryStarted(\n        {\n          userKey, postId, commentId, userName, searchTerm, tag\n        },\n        { dispatch, queryFulfilled }\n      ) {\n        const updateFunction = (draft) => {\n          const post = postsSelectors.selectById(draft, postId);\n          // Use updateOne to update the post with the given ID\n          postsAdapter.updateOne(draft, {\n            id: postId,\n            changes: {\n              comments: post.comments.filter(\n                (comment) => comment._id !== commentId\n              )\n            }\n          });\n        };\n        const patchResult = dispatch(\n          discoverApiSlice.util.updateQueryData(\n            'getDiscoverPosts',\n            {\n              userKey,\n              userName,\n              pageNumber: 1\n            },\n            updateFunction\n          )\n        );\n\n        if (searchTerm || tag) {\n          var searchPatchResult = dispatch(\n            discoverApiSlice.util.updateQueryData(\n              'getDiscoverPosts',\n              {\n                userKey,\n                userName,\n                pageNumber: 1\n              },\n              updateFunction\n            )\n          );\n        }\n\n        try {\n          await queryFulfilled;\n        } catch {\n          patchResult.undo();\n          if (searchPatchResult) {\n            searchPatchResult.undo();\n          }\n        }\n      }\n    })\n  })\n});\n\nconst postsSelectors = postsAdapter.getSelectors();\n\nexport { postsAdapter, postsSelectors };\n\nexport const {\n  useLazyGetDiscoverPostsQuery,\n  useCreateDiscoverPostMutation,\n  useDeleteDiscoverPostMutation,\n  useLikePostMutation,\n  useAddCommentMutation,\n  useLazyGetPostByIdQuery,\n  useLikeCommentMutation,\n  useDeleteCommentMutation\n} = discoverApiSlice;\n","import { FontAwesome5 } from '@expo/vector-icons';\nimport {\n  Text,\n  Input,\n  Select,\n  SelectItem,\n  IndexPath,\n  Layout,\n  Button,\n  Spinner,\n  useTheme,\n  CheckBox,\n  Divider\n} from '@ui-kitten/components';\nimport React, { useState } from 'react';\nimport {\n  StyleSheet,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  Keyboard,\n  ScrollView,\n  KeyboardAvoidingView,\n  Platform\n} from 'react-native';\nimport Toast from 'react-native-root-toast';\n\nimport CreateEventPost from './CreateEventPost';\nimport CreateImage from './CreateImagePost';\nimport { selectDarkMode } from '../../../app/appDataSlice';\nimport { useAppSelector } from '../../../app/hooks';\nimport {\n  tagIndices,\n  adminTagIndices,\n  postOptions\n} from '../../../constants/discover';\nimport { showToast } from '../../../functions';\nimport { useCreateDiscoverPostMutation } from '../../api/discoverApi';\nimport { usersApiSlice } from '../../api/usersApi';\n\nexport function OptionalText() {\n  return (\n    <Text\n      style={{\n        alignSelf: 'flex-end',\n        marginRight: 5,\n        color: 'grey',\n        fontSize: 11\n      }}\n    >\n      Optional\n    </Text>\n  );\n}\n\nexport default function CreatePost() {\n  const theme = useTheme();\n  const darkMode = useAppSelector(selectDarkMode);\n  const userKey = useAppSelector((state) => state.appData.secure.userKey);\n  const {\n    data: { userName, permissionLevel }\n  } = usersApiSlice.endpoints.getUserInfo.useQueryState(userKey);\n  const [discoverPostInputs, setDiscoverPostInputs] = useState(null);\n  const [startTime, setStartTime] = useState(new Date());\n  const [endTime, setEndTime] = useState(new Date());\n  const [date, setDate] = useState(new Date());\n  const [selectedTagIndex, setSelectedTagIndex] = useState<IndexPath[]>([]);\n  const [selectedPostTypeIndex, setSelectedPostTypeIndex] = useState(\n    new IndexPath(0)\n  );\n  const [error, setError] = useState(null);\n  const [isEmojiShown, setIsEmojiShown] = useState(false);\n\n  const [createDiscoverPost, { isLoading }] = useCreateDiscoverPostMutation();\n\n  const tagArray = permissionLevel === 'admin' ? adminTagIndices : tagIndices;\n\n  const submitEvent = async (tags: string[]) => {\n    // Validate date and time\n    if (date < new Date()) {\n      setError('Date must be in the future');\n      return;\n    }\n\n    if (startTime > endTime) {\n      setError('Start time must be before end time');\n      return;\n    }\n\n    const formdata = new FormData();\n    formdata.append('type', 'contentEvent');\n    formdata.append('title', discoverPostInputs.title);\n    formdata.append('location', discoverPostInputs.location);\n    formdata.append('date', date.toISOString());\n    formdata.append('startTime', startTime.toISOString());\n    formdata.append('endTime', endTime.toISOString());\n\n    // Optional fields\n    if (discoverPostInputs.contentUrl)\n      formdata.append('contentUrl', discoverPostInputs.contentUrl);\n    if (discoverPostInputs.host)\n      formdata.append('host', discoverPostInputs.host);\n    if (discoverPostInputs.description)\n      formdata.append('contentText', discoverPostInputs.description);\n    if (discoverPostInputs.contentImage) {\n      formdata.append('picture', {\n        uri: discoverPostInputs.contentImage.uri,\n        name: 'discoverImage',\n        type: 'image/jpg'\n      } as any);\n    }\n\n    tags.forEach((tag) => {\n      formdata.append('tags', tag);\n    });\n\n    try {\n      await createDiscoverPost({\n        type: 'contentEvent',\n        userKey,\n        userName,\n        postBody: formdata\n      }).unwrap();\n\n      showToast('Posted Successfully!', theme['color-success-500']);\n\n      setDiscoverPostInputs(null);\n      setSelectedTagIndex([]);\n      setError(null);\n    } catch (e) {\n      console.warn(\"Couldn't post image\", e);\n      showToast('Post failed to send.', theme['color-warning-500']);\n    }\n  };\n\n  const submitImage = async (tags: string[]) => {\n    const formdata = new FormData();\n    formdata.append('title', discoverPostInputs.title);\n    formdata.append('type', 'contentImage');\n    formdata.append('picture', {\n      uri: discoverPostInputs.contentImage.uri,\n      name: 'discoverImage',\n      type: 'image/jpg'\n    } as any);\n    tags.forEach((tag) => {\n      formdata.append('tags', tag);\n    });\n\n    try {\n      await createDiscoverPost({\n        type: 'contentImage',\n        userKey,\n        userName,\n        postBody: formdata\n      }).unwrap();\n\n      showToast('Posted Successfully!', theme['color-success-500']);\n\n      setDiscoverPostInputs(null);\n      setSelectedTagIndex([]);\n      setError(null);\n    } catch (e) {\n      console.warn(\"Couldn't post image\", e);\n      showToast('Post failed to send.', theme['color-warning-500']);\n    }\n  };\n\n  const onSubmit = async () => {\n    //\n    // Validate Input\n    //\n    if (\n      (selectedPostTypeIndex.row === 1 &&\n        (!discoverPostInputs ||\n          !discoverPostInputs.title ||\n          !discoverPostInputs.contentText)) ||\n      (selectedPostTypeIndex.row === 2 &&\n        (!discoverPostInputs ||\n          !discoverPostInputs.title ||\n          !discoverPostInputs.contentUrl)) ||\n      (selectedPostTypeIndex.row === 0 &&\n        (!discoverPostInputs ||\n          !discoverPostInputs.title ||\n          !discoverPostInputs.contentImage)) ||\n      (selectedPostTypeIndex.row === 3 &&\n        (!discoverPostInputs ||\n          !discoverPostInputs.title ||\n          !discoverPostInputs.location ||\n          !date ||\n          !startTime ||\n          !endTime))\n    ) {\n      console.warn('onsubmit error', discoverPostInputs);\n      setError('Please Fill in All Fields');\n      return;\n    }\n\n    //\n    // Submit Post\n    //\n\n    const tags = selectedTagIndex.map((index) => tagArray[index.row]);\n\n    // Special Case for Image Post\n    if (selectedPostTypeIndex.row === 0) {\n      submitImage(tags);\n      return;\n    }\n\n    // Special Case for Event Post\n    if (selectedPostTypeIndex.row === 3) {\n      submitEvent(tags);\n      return;\n    }\n\n    let type = '';\n    if (selectedPostTypeIndex.row === 1) {\n      type = 'contentText';\n    } else if (selectedPostTypeIndex.row === 2) {\n      type = 'contentUrl';\n    }\n    try {\n      await createDiscoverPost({\n        type,\n        userKey,\n        userName,\n        tags,\n        content: discoverPostInputs[type],\n        title: discoverPostInputs.title,\n        emoji: discoverPostInputs.emoji\n      }).unwrap();\n\n      const toast = Toast.show('Posted Successfully!', {\n        duration: Toast.durations.LONG,\n        opacity: 1,\n        position: -100,\n        backgroundColor: theme['color-success-500'],\n        shadow: false\n      });\n\n      setTimeout(() => {\n        Toast.hide(toast);\n      }, 7000);\n\n      setDiscoverPostInputs(null);\n      setSelectedTagIndex([]);\n      setError(null);\n    } catch (e) {\n      const toast = Toast.show('Post failed to send.', {\n        duration: Toast.durations.LONG,\n        opacity: 1,\n        position: -100,\n        backgroundColor: theme['color-warning-500'],\n        shadow: false\n      });\n\n      setTimeout(() => {\n        Toast.hide(toast);\n      }, 4000);\n    }\n  };\n\n  function TagInput() {\n    const groupedData = selectedTagIndex.map((index) => {\n      return tagArray[index.row];\n    });\n    return (\n      <Layout>\n        <Select\n          label=\"Tags\"\n          multiSelect\n          value={groupedData.join(', ')}\n          placeholder=\"Select Tags\"\n          selectedIndex={selectedTagIndex}\n          onSelect={(index: IndexPath[]) => {\n            setSelectedTagIndex(index);\n          }}\n          style={styles.input}\n        >\n          {tagArray.map((title, i) => (\n            <SelectItem title={title} key={i} />\n          ))}\n        </Select>\n        <OptionalText />\n      </Layout>\n    );\n  }\n\n  const renderPostOptions = () => {\n    // Text\n    if (selectedPostTypeIndex.row === 1) {\n      return (\n        <>\n          <Layout\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'space-evenly',\n              alignItems: 'center',\n              marginTop: 15\n            }}\n          >\n            {/* <EmojiToggle /> */}\n\n            <Input\n              placeholder=\"Post Title\"\n              onFocus={() => {\n                setIsEmojiShown(false);\n              }}\n              value={discoverPostInputs?.title ? discoverPostInputs.title : ''}\n              style={{ ...styles.input, flex: 5 }}\n              onChangeText={(newText) => {\n                setDiscoverPostInputs({\n                  ...discoverPostInputs,\n                  title: newText\n                });\n              }}\n            />\n          </Layout>\n          {TagInput()}\n          <Input\n            multiline\n            placeholder=\"Post Body\"\n            onFocus={() => {\n              setIsEmojiShown(false);\n            }}\n            textStyle={{ minHeight: 100 }}\n            style={{ ...styles.input, alignSelf: 'center', width: '100%' }}\n            value={\n              discoverPostInputs?.contentText\n                ? discoverPostInputs.contentText\n                : ''\n            }\n            onChangeText={(newText) => {\n              setDiscoverPostInputs({\n                ...discoverPostInputs,\n                contentText: newText\n              });\n            }}\n          />\n        </>\n      );\n    }\n    if (selectedPostTypeIndex.row === 2) {\n      // LINK\n      return (\n        <>\n          <Layout\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'space-evenly',\n              alignItems: 'center',\n              marginTop: 15\n            }}\n          >\n            {/* <EmojiToggle /> */}\n            <Input\n              placeholder=\"Post Title\"\n              onFocus={() => {\n                setIsEmojiShown(false);\n              }}\n              value={discoverPostInputs?.title ? discoverPostInputs.title : ''}\n              style={{ ...styles.input, flex: 5 }}\n              onChangeText={(newText) => {\n                setDiscoverPostInputs({\n                  ...discoverPostInputs,\n                  title: newText\n                });\n              }}\n            />\n          </Layout>\n\n          <Input\n            placeholder=\"Post Link\"\n            style={styles.input}\n            onFocus={() => {\n              setIsEmojiShown(false);\n            }}\n            value={\n              discoverPostInputs?.contentUrl\n                ? discoverPostInputs.contentUrl\n                : ''\n            }\n            onChangeText={(newText) => {\n              setDiscoverPostInputs({\n                ...discoverPostInputs,\n                contentUrl: newText\n              });\n            }}\n          />\n          {/* {PostTypeInput} */}\n          {TagInput()}\n        </>\n      );\n    }\n    if (selectedPostTypeIndex.row === 0) {\n      // IMAGE\n      return (\n        <CreateImage\n          discoverPostInputs={discoverPostInputs}\n          setDiscoverPostInputs={setDiscoverPostInputs}\n          TagInput={TagInput}\n        />\n      );\n    }\n    if (selectedPostTypeIndex.row === 3) {\n      // EVENT\n      return (\n        <CreateEventPost\n          discoverPostInputs={discoverPostInputs}\n          setDiscoverPostInputs={setDiscoverPostInputs}\n          TagInput={TagInput}\n          startTime={startTime}\n          setStartTime={setStartTime}\n          endTime={endTime}\n          setEndTime={setEndTime}\n          date={date}\n          setDate={setDate}\n        />\n      );\n    }\n  };\n\n  return (\n    <Layout style={{ flex: 1 }}>\n      <KeyboardAvoidingView\n        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n        style={{ flex: 1 }}\n      >\n        <ScrollView style={{ flex: 1 }}>\n          <TouchableWithoutFeedback\n            style={{ flex: 1 }}\n            onPress={() => {\n              Keyboard.dismiss();\n            }}\n          >\n            <Layout\n              style={{ flex: 1, marginBottom: 100, marginHorizontal: 16 }}\n            >\n              <Select\n                status=\"success\"\n                label=\"Select Post Type\"\n                value={postOptions[selectedPostTypeIndex.row]}\n                selectedIndex={selectedPostTypeIndex}\n                onSelect={(index: IndexPath) => {\n                  setSelectedPostTypeIndex(index);\n                  setSelectedTagIndex([]);\n                  setDiscoverPostInputs(null);\n                  setError(null);\n                  setIsEmojiShown(false);\n                }}\n                style={styles.input}\n              >\n                <SelectItem\n                  title=\"Image Post\"\n                  accessoryLeft={\n                    <FontAwesome5\n                      name=\"image\"\n                      size={17}\n                      color={darkMode ? '#fff' : '#000'}\n                    />\n                  }\n                />\n                <SelectItem\n                  title=\"Text Post\"\n                  accessoryLeft={\n                    <FontAwesome5\n                      name=\"file-alt\"\n                      size={17}\n                      color={darkMode ? '#fff' : '#000'}\n                    />\n                  }\n                />\n                <SelectItem\n                  title=\"Link\"\n                  accessoryLeft={\n                    <FontAwesome5\n                      name=\"link\"\n                      size={17}\n                      color={darkMode ? '#fff' : '#000'}\n                    />\n                  }\n                />\n                <SelectItem\n                  title=\"Event\"\n                  accessoryLeft={\n                    <FontAwesome5\n                      name=\"calendar-alt\"\n                      size={17}\n                      color={darkMode ? '#fff' : '#000'}\n                    />\n                  }\n                />\n              </Select>\n\n              <Divider />\n              {renderPostOptions()}\n              {error && (\n                <Layout>\n                  <Text\n                    style={{\n                      textAlign: 'center',\n                      color: 'red',\n                      fontStyle: 'italic'\n                    }}\n                  >\n                    {error}\n                  </Text>\n                </Layout>\n              )}\n              {!isEmojiShown && (\n                <Button\n                  style={styles.input}\n                  onPress={onSubmit}\n                  disabled={isLoading}\n                >\n                  Submit\n                </Button>\n              )}\n            </Layout>\n          </TouchableWithoutFeedback>\n        </ScrollView>\n      </KeyboardAvoidingView>\n      {isLoading && (\n        <Layout\n          style={{\n            justifyContent: 'center',\n            alignItems: 'center',\n            width: '100%',\n            height: '100%',\n            position: 'absolute',\n            backgroundColor: 'black',\n            flex: 1,\n            opacity: 0.3\n          }}\n        >\n          <Spinner size=\"medium\" />\n        </Layout>\n      )}\n    </Layout>\n  );\n}\n\nconst styles = StyleSheet.create({\n  input: {\n    marginVertical: 5\n  }\n});\n","import { debounce } from 'lodash';\nimport React from 'react';\n\nexport default function withPreventDoubleClick(WrappedComponent, time = 300) {\n  class PreventDoubleClick extends React.PureComponent {\n    debouncedOnPress = () => {\n      this.props.onPress && this.props.onPress();\n    };\n\n    onPress = debounce(this.debouncedOnPress, time, {\n      leading: true,\n      trailing: false\n    });\n\n    render() {\n      return <WrappedComponent {...this.props} onPress={this.onPress} />;\n    }\n  }\n\n  PreventDoubleClick.displayName = `withPreventDoubleClick(${\n    WrappedComponent.displayName || WrappedComponent.name\n  })`;\n  return PreventDoubleClick;\n}\n","import { FontAwesome } from '@expo/vector-icons';\nimport { Layout, Text, useTheme } from '@ui-kitten/components';\nimport React from 'react';\nimport { TouchableOpacity, Platform, UIManager } from 'react-native';\n\nimport { selectDarkMode, selectUserKey } from '../../app/appDataSlice';\nimport { useAppSelector } from '../../app/hooks';\nimport withPreventDoubleClick from '../../components/withPreventDoubleClick';\nimport {\n  discoverApiSlice,\n  postsAdapter,\n  postsSelectors,\n  useLikePostMutation\n} from '../api/discoverApi';\nimport { usersApiSlice } from '../api/usersApi';\n\nconst DebounceTouchable = withPreventDoubleClick(TouchableOpacity, 600);\n\nexport default function BottomBar({\n  tags,\n  _id,\n  commentIconShown = true,\n  searchTerm = undefined,\n  searchedTag = undefined\n}) {\n  const userKey = useAppSelector(selectUserKey);\n  const darkMode = useAppSelector(selectDarkMode);\n  const theme = useTheme();\n\n  const { data: userData } =\n    usersApiSlice.endpoints.getUserInfo.useQueryState(userKey);\n  const [likePost] = useLikePostMutation();\n\n  const post = discoverApiSlice.endpoints.getDiscoverPosts.useQueryState(\n    {\n      pageNumber: 1,\n      userKey,\n      userName: userData.userName,\n      searchTerm,\n      tag: searchedTag\n    },\n    {\n      selectFromResult: (result) =>\n        postsSelectors.selectById(\n          result.data ?? postsAdapter.getInitialState(),\n          _id\n        )\n    }\n  );\n\n  const onPressLike = async () => {\n    if (!post) return;\n    try {\n      await likePost({\n        userKey,\n        _id,\n        title: post.title,\n        postAuthor: post.userName,\n        userName: userData.userName,\n        searchTerm,\n        tag: searchedTag\n      }).unwrap();\n    } catch (error) {\n      console.warn('Error liking post:', error);\n    }\n  };\n\n  return (\n    <Layout\n      style={{\n        width: '100%',\n        flexDirection: 'row',\n        paddingVertical: 5,\n        paddingHorizontal: 15\n      }}\n    >\n      <Layout\n        style={{\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          flex: 6\n        }}\n      >\n        {/* tags */}\n        {tags.map((tag: string, index: number) => (\n          <Layout\n            key={index}\n            level=\"3\"\n            style={{\n              padding: 5,\n              borderRadius: 5,\n              marginRight: 5,\n              marginTop: 2\n            }}\n          >\n            <Text style={{ fontSize: 12 }}>{tag}</Text>\n          </Layout>\n        ))}\n      </Layout>\n\n      {/* Icons */}\n      <Layout\n        style={{\n          flexDirection: 'row',\n          flex: 2,\n          justifyContent: 'space-evenly',\n          alignItems: 'center'\n        }}\n      >\n        <FontAwesome\n          style={{ flex: 2, opacity: commentIconShown ? 1 : 0 }}\n          name=\"comments-o\"\n          size={20}\n          color={darkMode ? '#fff' : '#000'}\n        />\n        {/* Likes */}\n        {/* @ts-ignore */}\n        <DebounceTouchable\n          style={{\n            flexDirection: 'row',\n            flex: 3,\n            justifyContent: 'space-evenly',\n            alignItems: 'center'\n          }}\n          onPress={onPressLike}\n        >\n          <Text\n            style={{\n              fontSize: 15,\n              paddingTop: 1\n            }}\n          >\n            {post?.numLikes}\n          </Text>\n          <FontAwesome\n            style={{ alignSelf: 'center' }}\n            size={17}\n            color={\n              post?.hasLiked\n                ? theme['color-primary-500']\n                : darkMode\n                ? '#fff'\n                : '#000'\n            }\n            name={post?.hasLiked ? 'heart' : 'heart-o'}\n          />\n        </DebounceTouchable>\n      </Layout>\n      {/* @ts-ignore */}\n    </Layout>\n  );\n}\n","import React from 'react';\nimport { TouchableWithoutFeedback } from 'react-native';\n\nexport default class DoubleTap extends React.Component {\n  static defaultProps = {\n    delay: 300,\n    onDoubleTap: () => {},\n    children: null\n  };\n\n  lastTap = null;\n\n  // https://gist.github.com/brunotavares/3c9a373ba5cd1b4ff28b\n  handleDoubleTap = () => {\n    const now = Date.now();\n    if (this.lastTap && now - this.lastTap < this.props.delay) {\n      this.props.onDoubleTap();\n    } else {\n      this.lastTap = now;\n    }\n  };\n\n  render() {\n    return (\n      <TouchableWithoutFeedback onPress={this.handleDoubleTap}>\n        {this.props.children}\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n","import { FontAwesome } from '@expo/vector-icons';\nimport { useTheme } from '@ui-kitten/components';\nimport { forwardRef, useImperativeHandle, useRef, useState } from 'react';\nimport { Animated, Easing } from 'react-native';\n\nexport default forwardRef(\n  ({ style, iconStyle }: { style: object; iconStyle?: object }, ref) => {\n    useImperativeHandle(ref, () => ({\n      animate\n    }));\n\n    const opacityAnim = useRef(new Animated.Value(0)).current;\n    const scaleAnim = useRef(new Animated.Value(1)).current;\n    const [heartRotation, setHeartRotation] = useState('0deg');\n\n    const pickRandomDegree = () => {\n      const options = ['0deg', '15deg', '-15deg'];\n      return options[Math.floor(Math.random() * options.length)];\n    };\n\n    const animate = () => {\n      // animation: shrink quickly with bounce, opacity 0 - 1. Stop for a moment. Increase in size. Opacity 1-0\n      setHeartRotation(pickRandomDegree());\n\n      scaleAnim.setValue(1);\n      opacityAnim.setValue(0);\n\n      Animated.parallel([\n        Animated.sequence([\n          Animated.timing(opacityAnim, {\n            toValue: 1,\n            duration: 200,\n            useNativeDriver: true\n          }),\n          Animated.timing(opacityAnim, {\n            toValue: 1,\n            duration: 300,\n            useNativeDriver: true\n          }),\n          Animated.timing(opacityAnim, {\n            toValue: 0,\n            duration: 100,\n            useNativeDriver: true\n          })\n        ]),\n        ,\n        Animated.sequence([\n          Animated.timing(scaleAnim, {\n            toValue: 0.8,\n            easing: Easing.bounce,\n            duration: 200,\n            useNativeDriver: true\n          }),\n          Animated.timing(scaleAnim, {\n            toValue: 0.8,\n            duration: 300,\n            useNativeDriver: true\n          }),\n          Animated.timing(scaleAnim, {\n            toValue: 1.2,\n            duration: 100,\n            useNativeDriver: true\n          })\n        ])\n      ]).start();\n    };\n\n    return (\n      <Animated.View\n        style={{\n          ...style,\n          opacity: opacityAnim,\n          transform: [{ scale: scaleAnim }]\n        }}\n      >\n        <FontAwesome\n          name=\"heart\"\n          size={110}\n          style={{ transform: [{ rotate: heartRotation }], ...iconStyle }}\n        />\n      </Animated.View>\n    );\n  }\n);\n","import { A } from '@expo/html-elements';\nimport { Divider, Layout, Text } from '@ui-kitten/components';\nimport { useMemo } from 'react';\nimport { Dimensions } from 'react-native';\n\nimport { MAX_WIDTH_WEB } from '../../constants/discover';\nimport { FormatDate, FormatTimeRange } from '../../functions';\nimport ImageComponent from './ImageComponent';\n\nconst windowWidth = Dimensions.get('window').width;\n\ninterface EventCardProps {\n  title: string;\n  location: string;\n  date: string;\n  startTime: string;\n  endTime: string;\n  _id: string;\n  postAuthor: string;\n  userName: string;\n  hasLiked: boolean;\n  searchTerm?: string;\n  searchedTag?: string;\n  tags?: string[];\n  contentURL?: string;\n  contentText?: string;\n  contentImage?: string;\n  host?: string;\n  truncated?: boolean;\n}\n\nexport default function EventBody({\n  title,\n  location,\n  date,\n  startTime,\n  endTime,\n  contentURL,\n  contentText,\n  contentImage,\n  host,\n  hasLiked,\n  _id,\n  searchTerm,\n  searchedTag,\n  postAuthor,\n  userName,\n  truncated = true\n}: EventCardProps) {\n  const eventInfo = useMemo(\n    () => [\n      {\n        title: 'Location',\n        value: location\n      },\n      {\n        title: 'Date',\n        value: FormatDate(date)\n      },\n      {\n        title: 'Time',\n        value: FormatTimeRange(startTime, endTime)\n      },\n      {\n        title: 'Host',\n        value: host\n      },\n      {\n        title: 'Description',\n        value: contentText\n      }\n    ],\n    [location, date, startTime, endTime, host, contentURL, contentText]\n  );\n\n  const renderUrl = (link: string) => {\n    return (\n      <Layout\n        style={{\n          flexDirection: 'row',\n          width: windowWidth * 0.9,\n          maxWidth: MAX_WIDTH_WEB,\n          paddingVertical: 5\n        }}\n      >\n        <Text category=\"s1\">Link: </Text>\n        {truncated ? (\n          <Text category=\"p1\">\n            {link.length > 30 ? `${link.slice(0, 30)}...` : link}\n          </Text>\n        ) : (\n          <A>\n            <Text>{link}</Text>\n          </A>\n        )}\n      </Layout>\n    );\n  };\n\n  return (\n    <Layout style={{ flex: 1, alignItems: 'center' }}>\n      {contentImage ? (\n        <ImageComponent\n          apiInfo={{\n            _id,\n            title,\n            postAuthor,\n            userName,\n            searchTerm,\n            searchedTag\n          }}\n          imageId={contentImage}\n          hasLiked={hasLiked}\n        />\n      ) : (\n        <Divider />\n      )}\n\n      {/* Event Info  */}\n      {eventInfo.map((info, index) => {\n        if (info.value) {\n          return (\n            <Layout\n              key={index}\n              style={{\n                flexDirection: 'row',\n                width: windowWidth * 0.9,\n                maxWidth: MAX_WIDTH_WEB,\n                paddingVertical: 5\n              }}\n            >\n              <Text category=\"s1\">\n                {info.title}\n                {`: `}\n                <Text category=\"p1\">\n                  {truncated\n                    ? info.value.length > 30\n                      ? `${info.value.slice(0, 30)}...`\n                      : info.value\n                    : info.value}\n                </Text>\n              </Text>\n            </Layout>\n          );\n        }\n      })}\n\n      {contentURL ? renderUrl(contentURL) : null}\n    </Layout>\n  );\n}\n","import { FontAwesome5 } from '@expo/vector-icons';\nimport { useIsFocused } from '@react-navigation/native';\nimport { Layout, Text } from '@ui-kitten/components';\nimport React, { useEffect, useState } from 'react';\nimport { Dimensions, TouchableOpacity } from 'react-native';\nimport Toast from 'react-native-root-toast';\n\nimport { selectDarkMode, selectUserKey } from '../../../app/appDataSlice';\nimport { useAppSelector } from '../../../app/hooks';\nimport { MAX_WIDTH_WEB } from '../../../constants/discover';\nimport { useEditUserMutation, useGetUserInfoQuery } from '../../api/usersApi';\nimport BottomBar from '../BottomBar';\nimport EventBody from '../EventBody';\n\nconst windowWidth = Dimensions.get('window').width;\n\ninterface EventCardProps {\n  title: string;\n  location: string;\n  date: string;\n  startTime: string;\n  endTime: string;\n  pinnedIcon: JSX.Element;\n  _id: string;\n  postAuthor: string;\n  userName: string;\n  hasLiked: boolean;\n  navigation: any;\n  searchTerm?: string;\n  searchedTag?: string;\n  tags?: string[];\n  contentURL?: string;\n  contentText?: string;\n  contentImage?: string;\n  host?: string;\n}\n\nexport default function EventCard({\n  title,\n  location,\n  date,\n  startTime,\n  endTime,\n  pinnedIcon,\n  tags,\n  contentURL,\n  contentText,\n  contentImage,\n  host,\n  hasLiked,\n  _id,\n  searchTerm,\n  searchedTag,\n  postAuthor,\n  userName,\n  navigation\n}: EventCardProps) {\n  const darkMode = useAppSelector(selectDarkMode);\n  const userKey = useAppSelector(selectUserKey);\n  const { data: userData } = useGetUserInfoQuery(useAppSelector(selectUserKey));\n  const [eventPopUp, setEventPopUp] = useState(false);\n  const [isAdded, setIsAdded] = useState(false);\n  const [editUser] = useEditUserMutation();\n\n  useEffect(() => {\n    setIsAdded(\n      userData.customEvents.some((customEvent) => {\n        return (\n          customEvent.name === title &&\n          customEvent.startTime == startTime &&\n          customEvent.endTime == endTime &&\n          customEvent.date == date\n        );\n      })\n    );\n  }, [useIsFocused()]); // this forces just the button component to re-render when the focus changes\n\n  function handleEventSyncWithServer(isAdd: boolean) {\n    editUser({\n      userKey,\n      userName: userData.userName,\n      fields: JSON.stringify(\n        isAdd\n          ? {\n              addCustomEvent: {\n                name: title,\n                startTime: new Date(startTime).toTimeString().slice(0, 5),\n                endTime: new Date(endTime).toTimeString().slice(0, 5),\n                days: [],\n                date\n              }\n            }\n          : {\n              removeCustomEvent: {\n                name: title,\n                startTime: new Date(startTime).toTimeString().slice(0, 5),\n                endTime: new Date(endTime).toTimeString().slice(0, 5),\n                days: [],\n                date\n              }\n            }\n      )\n    })\n      .unwrap()\n      .then(async () => {\n        setIsAdded(isAdd);\n      })\n      .catch(() => {\n        Toast.show('Failed to add event.\\nPlease try again later', {\n          duration: Toast.durations.LONG,\n          opacity: 1,\n          position: -100,\n          backgroundColor: 'grey',\n          shadow: false\n        });\n      });\n  }\n\n  function toggleAdditionOfEvent() {\n    handleEventSyncWithServer(!isAdded);\n  }\n\n  return (\n    <Layout>\n      {pinnedIcon}\n      <Layout style={{ flex: 1, alignItems: 'center' }}>\n        <TouchableOpacity\n          onPress={() => {\n            navigation.navigate('SinglePost', { _id, searchTerm, searchedTag });\n          }}\n          activeOpacity={0.9}\n          style={{\n            flex: 1,\n            alignItems: 'center',\n            paddingVertical: 10\n          }}\n        >\n          <Layout\n            style={{\n              width: windowWidth * 0.9,\n              maxWidth: MAX_WIDTH_WEB,\n              paddingVertical: 10,\n              flexDirection: 'row'\n            }}\n          >\n            <Text style={{ fontSize: 20 }}>{title}</Text>\n            <TouchableOpacity\n              style={{ alignSelf: 'flex-end', marginLeft: 'auto' }}\n              onPress={() => {\n                toggleAdditionOfEvent();\n              }}\n            >\n              <FontAwesome5\n                name={isAdded ? 'times' : 'plus'}\n                size={23}\n                color={darkMode ? 'white' : 'black'}\n              />\n            </TouchableOpacity>\n          </Layout>\n\n          <EventBody\n            contentURL={contentURL}\n            contentText={contentText}\n            contentImage={contentImage}\n            host={host}\n            title={title}\n            location={location}\n            date={date}\n            startTime={startTime}\n            endTime={endTime}\n            _id={_id}\n            postAuthor={postAuthor}\n            userName={userName}\n            hasLiked={hasLiked}\n          />\n\n          <BottomBar\n            tags={tags}\n            _id={_id}\n            searchTerm={searchTerm}\n            searchedTag={searchedTag}\n          />\n        </TouchableOpacity>\n      </Layout>\n    </Layout>\n  );\n}\n","import { Layout, Text } from '@ui-kitten/components';\nimport { Dimensions, TouchableOpacity } from 'react-native';\n\nimport { MAX_WIDTH_WEB } from '../../../constants/discover';\nimport BottomBar from '../BottomBar';\nimport ImageComponent from '../ImageComponent';\n\nconst windowWidth = Dimensions.get('window').width;\n\nexport default function ImageCard({\n  title,\n  _id,\n  navigation,\n  imageId,\n  tags,\n  postAuthor,\n  userName,\n  searchTerm,\n  searchedTag,\n  pinnedIcon,\n  hasLiked\n}) {\n  return (\n    <Layout>\n      {pinnedIcon}\n      <Layout style={{ flex: 1, alignItems: 'center' }}>\n        <TouchableOpacity\n          onPress={() => {\n            navigation.navigate('SinglePost', { _id, searchTerm, searchedTag });\n          }}\n          activeOpacity={0.9}\n          style={{\n            flex: 1,\n            alignItems: 'center',\n            paddingVertical: 10\n          }}\n        >\n          <Layout\n            style={{\n              width: windowWidth * 0.9,\n              maxWidth: MAX_WIDTH_WEB,\n              paddingVertical: 10\n            }}\n          >\n            <Text style={{ fontSize: 20, marginLeft: 15 }}>{title}</Text>\n          </Layout>\n          <ImageComponent\n            apiInfo={{\n              _id,\n              title,\n              postAuthor,\n              userName,\n              searchTerm,\n              searchedTag\n            }}\n            imageId={imageId}\n            hasLiked={hasLiked}\n          />\n\n          <BottomBar\n            tags={tags}\n            _id={_id}\n            searchTerm={searchTerm}\n            searchedTag={searchedTag}\n          />\n        </TouchableOpacity>\n      </Layout>\n    </Layout>\n  );\n}\n","import { Layout, Text } from '@ui-kitten/components';\nimport { useState } from 'react';\nimport {\n  Dimensions,\n  Image,\n  ImageBackground,\n  Platform,\n  TouchableHighlight\n} from 'react-native';\n\nimport becomeSponsor from '../../../../assets/sponsorPage/become-sponsor.png';\n\nconst windowWidth = Dimensions.get('window').width;\n\nexport default function SponsorCard({ data, navigation }) {\n  const [imageLink, setImageLink] = useState({ uri: data.logo });\n  const webWidth = Dimensions.get('window').width * 0.3;\n  const hasCoupon = !!data.coupons[0];\n\n  return (\n    <TouchableHighlight\n      style={{ flex: 1 }}\n      onPress={() => {\n        if (hasCoupon) {\n          navigation.navigate('SponsorPageDiscover', { data });\n        }\n      }}\n    >\n      <Layout style={{ flex: 1 }}>\n        <Text category=\"label\" style={{ marginLeft: 20 }}>\n          Ad\n        </Text>\n\n        <Layout\n          style={{\n            flexDirection: 'row',\n            justifyContent: 'space-between'\n          }}\n        >\n          <Layout\n            style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}\n          >\n            <Image\n              source={imageLink}\n              onError={() => {\n                setImageLink(becomeSponsor);\n              }}\n              style={{\n                height: hasCoupon\n                  ? Platform.OS === 'web'\n                    ? 200\n                    : windowWidth / 2 - 20\n                  : Platform.OS === 'web'\n                  ? 200\n                  : windowWidth * 0.8,\n                width: hasCoupon\n                  ? Platform.OS === 'web'\n                    ? '20%'\n                    : windowWidth / 2 - 20\n                  : Platform.OS === 'web'\n                  ? '20%'\n                  : windowWidth * 0.8,\n                resizeMode: 'contain'\n              }}\n            />\n            {imageLink?.uri && <Text>{data.sponsorName}</Text>}\n          </Layout>\n\n          {data.coupons[0] && imageLink?.uri && (\n            <Layout style={{ flex: 1, alignItems: 'center' }}>\n              <ImageBackground\n                resizeMode=\"contain\"\n                source={require('../../../../assets/sponsorPage/coupon.png')}\n                style={{\n                  width: windowWidth / 2 - 20,\n                  height: 200,\n                  alignItems: 'center',\n                  justifyContent: 'center'\n                }}\n              >\n                <Text\n                  style={{\n                    fontSize: 13,\n                    paddingBottom: 7,\n                    paddingRight: 7,\n                    marginHorizontal: 25\n                  }}\n                >\n                  {data.coupons[0].couponDescription}\n                </Text>\n              </ImageBackground>\n            </Layout>\n          )}\n        </Layout>\n      </Layout>\n    </TouchableHighlight>\n  );\n}\n","import { Card, Modal, Text, Button } from '@ui-kitten/components';\nimport { StyleSheet } from 'react-native';\n\nexport default function DisabledFieldModal({ setShowModal }) {\n  return (\n    <Modal\n      visible\n      backdropStyle={myStyles.backdrop}\n      style={{ width: '75%' }}\n      onBackdropPress={() => setShowModal(false)}\n    >\n      <Card disabled>\n        <Text style={{ fontSize: 15, paddingTop: 5, paddingBottom: 10 }}>\n          Sorry, we are experiencing technical difficulties and this\n          functionality is currently undergoing maintenance. Please try again\n          later.\n        </Text>\n        <Button\n          onPress={() => {\n            setShowModal(false);\n          }}\n        >\n          Dismiss\n        </Button>\n      </Card>\n    </Modal>\n  );\n}\n\nconst myStyles = StyleSheet.create({\n  backdrop: {\n    backgroundColor: 'rgba(0, 0, 0, 0.65)'\n  }\n});\n","import { A } from '@expo/html-elements';\nimport { Input, Text } from '@ui-kitten/components';\nimport { Dimensions } from 'react-native';\n\nimport { selectDarkMode } from '../../../app/appDataSlice';\nimport { useAppSelector } from '../../../app/hooks';\nimport { validURL } from '../../../functions';\n\nconst windowWidth = Dimensions.get('window').width;\n\nexport default function SinglePostBody({ type, body, handleLikePost }) {\n  const darkMode = useAppSelector(selectDarkMode);\n\n  if (type === 'contentText') {\n    return (\n      <Input\n        scrollEnabled={false}\n        multiline\n        disabled\n        value={body}\n        style={{\n          backgroundColor: 'transparent',\n          borderWidth: 0\n        }}\n        textStyle={{ color: darkMode ? 'white' : 'black' }}\n      />\n    );\n  }\n  if (type === 'contentUrl') {\n    if (validURL(body)) {\n      return (\n        <A style={{ color: 'blue' }} href={body}>\n          {body}\n        </A>\n      );\n    }\n    return <Text>{body}</Text>;\n  }\n  return <></>;\n}\n","import { FontAwesome5 } from '@expo/vector-icons';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Layout, Text, useTheme } from '@ui-kitten/components';\nimport React, { useState } from 'react';\nimport {\n  Image,\n  Platform,\n  TouchableOpacity,\n  TouchableWithoutFeedback\n} from 'react-native';\n\nimport { selectDarkMode } from '../../app/appDataSlice';\nimport { useAppSelector } from '../../app/hooks';\nimport Header from '../../components/Header';\nimport SearchBar from '../../components/SearchBar';\nimport { SponsorPage } from '../sponsors/SponsorsList';\nimport CreatePost from './CreatePost/CreatePost';\nimport PostsList from './PostsList';\nimport SearchPage from './SearchPage';\nimport SinglePost from './SinglePost/SinglePostPage';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function Discover({ navigation }) {\n  const theme = useTheme();\n  const darkMode = useAppSelector(selectDarkMode);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const accessoryRight = (\n    <TouchableOpacity onPress={() => navigation.navigate('CreatePost')}>\n      <FontAwesome5 name=\"plus\" size={23} color={theme['color-primary-500']} />\n    </TouchableOpacity>\n  );\n\n  const accessoryLeft = (\n    <Image\n      style={{\n        height: 28,\n        width: 28\n      }}\n      source={require('../../../assets/logos/app-logo-transparent.png')}\n    />\n  );\n\n  let searchBarBackgroundColor = '';\n  if (darkMode) {\n    searchBarBackgroundColor = theme['color-basic-800'];\n  } else {\n    searchBarBackgroundColor = theme['color-basic-100'];\n  }\n\n  return (\n    <Stack.Navigator>\n      <Stack.Screen\n        name=\"PostsList\"\n        initialParams={{ sponsor: true }}\n        component={PostsList}\n        options={{\n          title: 'Discover',\n          header: () => (\n            <Layout level=\"2\" style={{ paddingBottom: 15 }}>\n              <Header\n                level=\"2\"\n                title=\"Discover\"\n                accessoryLeft={accessoryLeft}\n                accessoryRight={accessoryRight}\n                center={\n                  <Layout level=\"2\" style={{ flex: 1, marginHorizontal: 10 }}>\n                    {Platform.OS === 'ios' ? (\n                      <SearchBar\n                        inputStyle={{\n                          opacity: 0.8,\n                          backgroundColor: searchBarBackgroundColor\n                        }}\n                        searchTerm={searchTerm}\n                        onChangeText={setSearchTerm}\n                        placeholder=\"Search Posts...\"\n                        inputProps={{\n                          disabled: true,\n                          onPressIn: () => {\n                            navigation.navigate('SearchPage');\n                          },\n\n                          onBlur: () => {\n                            navigation.goBack();\n                          }\n                        }}\n                      />\n                    ) : (\n                      <Layout\n                        style={{\n                          minHeight: 35,\n                          paddingLeft: 15,\n                          borderRadius: 20,\n                          flex: 1,\n                          borderWidth: 1,\n                          borderColor: darkMode\n                            ? theme['color-basic-500']\n                            : theme['color-basic-100'],\n                          justifyContent: 'center'\n                        }}\n                      >\n                        <TouchableWithoutFeedback\n                          onPress={() => {\n                            navigation.navigate('SearchPage');\n                          }}\n                        >\n                          <Text\n                            style={{\n                              color: theme['color-basic-400'],\n                              fontSize: 14\n                            }}\n                          >\n                            Search Posts...\n                          </Text>\n                        </TouchableWithoutFeedback>\n                      </Layout>\n                    )}\n                  </Layout>\n                }\n              />\n            </Layout>\n          )\n        }}\n      />\n      <Stack.Screen\n        name=\"CreatePost\"\n        component={CreatePost}\n        options={{ headerTitle: 'Create a Post' }}\n      />\n      <Stack.Screen\n        name=\"SinglePost\"\n        component={SinglePost}\n        options={{\n          headerTitle: '',\n          title: 'Discover'\n        }}\n      />\n      <Stack.Screen\n        name=\"SearchPage\"\n        component={SearchPage}\n        options={{ headerShown: false, animation: 'fade', title: 'Discover' }}\n      />\n      <Stack.Screen\n        name=\"SponsorPageDiscover\"\n        component={SponsorPage}\n        options={{ headerTitle: '', title: 'Discover' }}\n      />\n    </Stack.Navigator>\n  );\n}\n","export default {\n  'color-basic-100': '#FFFFFF',\n  'color-basic-200': '#F5F5F5',\n  'color-basic-300': '#D4D4D4',\n  'color-basic-400': '#B3B3B3',\n  'color-basic-500': '#808080',\n  'color-basic-600': '#4A4A4A',\n  'color-basic-700': '#383838',\n  'color-basic-800': '#292929',\n  'color-basic-900': '#1F1F1F',\n  'color-basic-1000': '#141414',\n  'color-basic-1100': '#000000',\n  'color-primary-100': '#FFE0D8',\n  'color-primary-200': '#FFBBB2',\n  'color-primary-300': '#FF8E8B',\n  'color-primary-400': '#FF6F78',\n  'color-primary-500': '#FF3F5E',\n  'color-primary-600': '#DB2E5A',\n  'color-primary-700': '#B71F54',\n  'color-primary-800': '#93144C',\n  'color-primary-900': '#7A0C47',\n  'color-success-100': '#FBD4F0',\n  'color-success-200': '#F8ABE8',\n  'color-success-300': '#EA7EDC',\n  'color-success-400': '#D55AD0',\n  'color-success-500': '#b42bba',\n  'color-success-600': '#8F1F9F',\n  'color-success-700': '#6E1585',\n  'color-success-800': '#500D6B',\n  'color-success-900': '#3A0859',\n  'color-info-100': '#CDFDFE',\n  'color-info-200': '#9CF4FE',\n  'color-info-300': '#6AE4FC',\n  'color-info-400': '#45D0FA',\n  'color-info-500': '#09B0F7',\n  'color-info-600': '#0689D4',\n  'color-info-700': '#0466B1',\n  'color-info-800': '#02498F',\n  'color-info-900': '#013476',\n  'color-warning-100': '#FFF6CC',\n  'color-warning-200': '#FFEA99',\n  'color-warning-300': '#FFDC66',\n  'color-warning-400': '#FFCD3F',\n  'color-warning-500': '#FFB600',\n  'color-warning-600': '#DB9600',\n  'color-warning-700': '#B77800',\n  'color-warning-800': '#935C00',\n  'color-warning-900': '#7A4800',\n  'color-danger-100': '#FEE5DE',\n  'color-danger-200': '#FEC6BE',\n  'color-danger-300': '#FEA09D',\n  'color-danger-400': '#FD858D',\n  'color-danger-500': '#FC5D77',\n  'color-danger-600': '#D8436A',\n  'color-danger-700': '#B52E5E',\n  'color-danger-800': '#921D51',\n  'color-danger-900': '#781149',\n  'color-grey-800': '#1F1F1F',\n  'color-grey-700': '#2F2F2F',\n  'color-grey-600': '#3F3F3F',\n  'color-grey-500': '#4F4F4F',\n  'color-grey-400': '#5F5F5F',\n  'color-grey-300': '#6F6F6F',\n  'color-grey-200': '#7F7F7F',\n  'color-grey-100': '#8F8F8F',\n  'color-grey-50': '#9F9F9F'\n};\n","import { Feather } from '@expo/vector-icons';\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\n\nexport default {\n  name: 'feather',\n  icons: createIconsMap()\n};\n\nfunction createIconsMap() {\n  return new Proxy(\n    {},\n    {\n      get(target, name) {\n        return IconProvider(name);\n      }\n    }\n  );\n}\n\nconst IconProvider = (name) => ({\n  toReactElement: (props) => FeatherIcon({ name, ...props })\n});\n\nfunction FeatherIcon({ name, style }) {\n  const { height, tintColor, ...iconStyle } = StyleSheet.flatten(style);\n  return (\n    <Feather name={name} size={height} color={tintColor} style={iconStyle} />\n  );\n}\n","import { FontAwesome5 } from '@expo/vector-icons';\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\n\nexport default {\n  name: 'fontAwesome',\n  icons: createIconsMap()\n};\n\nfunction createIconsMap() {\n  return new Proxy(\n    {},\n    {\n      get(target, name) {\n        return IconProvider(name);\n      }\n    }\n  );\n}\n\nconst IconProvider = (name) => ({\n  toReactElement: (props) => FontAwesomeIcon({ name, ...props })\n});\n\nfunction FontAwesomeIcon({ name, style }) {\n  const { height, tintColor, ...iconStyle } = StyleSheet.flatten(style);\n  return (\n    <FontAwesome5\n      name={name}\n      size={height}\n      color={tintColor}\n      style={iconStyle}\n    />\n  );\n}\n","import * as eva from '@eva-design/eva';\nimport { Ionicons } from '@expo/vector-icons';\nimport { BottomSheetModalProvider } from '@gorhom/bottom-sheet';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n\nimport {\n  DarkTheme,\n  DefaultTheme,\n  NavigationContainer\n} from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport {\n  ApplicationProvider,\n  IconRegistry,\n  Layout,\n  Text,\n  useTheme\n} from '@ui-kitten/components';\nimport Constants from 'expo-constants';\nimport { isDevice } from 'expo-device';\nimport * as Linking from 'expo-linking';\nimport { Subscription } from 'expo-modules-core';\nimport * as Notifications from 'expo-notifications';\nimport * as ExpoSplashScreen from 'expo-splash-screen';\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useRef, useState } from 'react';\nimport {\n  Alert,\n  Platform,\n  useColorScheme,\n  useWindowDimensions\n} from 'react-native';\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { RootSiblingParent } from 'react-native-root-siblings';\nimport { Provider } from 'react-redux';\nimport { persistStore } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport {\n  cacheReset,\n  deviceDarkModeSet,\n  mobileSiteSet,\n  reset as resetAppData,\n  selectDarkMode,\n  selectUserKey,\n  userKeyUpdated\n} from './src/app/appDataSlice';\nimport { store } from './src/app/store';\nimport {\n  apiSlice,\n  useLazyGetCurrentVersionQuery\n} from './src/features/api/apiSlice';\nimport {\n  availableSectionsListUpdated,\n  currentSectionUpdated,\n  isHMCUpdated,\n  reset as resetClassPages\n} from './src/features/classPages/classPagesSlice';\nimport { reset as resetDiscover } from './src/features/discover/discoverSlice';\n\nimport { useAppDispatch, useAppSelector } from './src/app/hooks';\nimport WebSplashScreen from './src/components/WebSplashScreen';\nimport AdminPanel from './src/features/adminPanel';\nimport {\n  useLazyGetAllClassesQuery,\n  useLazyGetAllSectionsQuery\n} from './src/features/api/classPagesApi';\nimport {\n  useAddExpoPushTokenMutation,\n  useGetUserInfoQuery,\n  useLazyGetUserInfoQuery,\n  useTrackLoginMutation\n} from './src/features/api/usersApi';\nimport Auth from './src/features/authentication';\nimport Calendar from './src/features/calendar';\nimport ChatsRoomNavigation from './src/features/chats/ChatRooms';\nimport ClassPages from './src/features/classPages';\nimport CombinedClassPages from './src/features/combinedCalender';\nimport Discover from './src/features/discover';\nimport { versionCompare } from './src/functions';\nimport Theme from './src/theme/custom-theme';\nimport FeatherIconsPack from './src/theme/feather-icons';\nimport FontAwesomeIconsPack from './src/theme/font-awesome-icons';\n\nconst persistor = persistStore(store);\nconst Stack = createNativeStackNavigator();\nconst Tab = createBottomTabNavigator();\nExpoSplashScreen.preventAutoHideAsync();\n\nNotifications.setNotificationHandler({\n  handleNotification: async () => ({\n    shouldShowAlert: false,\n    shouldPlaySound: false,\n    shouldSetBadge: false\n  })\n});\n\nconst registerForPushNotificationsAsync = async () => {\n  let token: string;\n  if (isDevice && Platform.OS !== 'web') {\n    const { status: existingStatus } =\n      await Notifications.getPermissionsAsync();\n    let finalStatus = existingStatus;\n    if (existingStatus !== 'granted') {\n      const { status } = await Notifications.requestPermissionsAsync();\n      finalStatus = status;\n    }\n    if (finalStatus !== 'granted') {\n      alert('Failed to get push token for push notification!');\n      return;\n    }\n    token = (await Notifications.getExpoPushTokenAsync()).data;\n  }\n\n  if (Platform.OS === 'android') {\n    Notifications.setNotificationChannelAsync('default', {\n      name: 'default',\n      importance: Notifications.AndroidImportance.MAX,\n      vibrationPattern: [0, 250, 250, 250],\n      lightColor: '#FF231F7C'\n    });\n  }\n\n  return token;\n};\n\nexport default function Entry() {\n  return (\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <RootSiblingParent>\n          <GestureHandlerRootView style={{ flex: 1 }}>\n            <BottomSheetModalProvider>\n              <App />\n            </BottomSheetModalProvider>\n          </GestureHandlerRootView>\n        </RootSiblingParent>\n      </PersistGate>\n    </Provider>\n  );\n}\n\nfunction App() {\n  const colorScheme = useColorScheme();\n  const dispatch = useAppDispatch();\n  const userKey = useAppSelector(selectUserKey);\n  const darkMode = useAppSelector(selectDarkMode);\n  const useDeviceColorScheme = useAppSelector(\n    (state) => state.appData.secure.useDeviceColorScheme\n  );\n  const localCurrentSection = useAppSelector(\n    (state) => state.appData.classPages.currentSection\n  );\n  const isCacheReset = useAppSelector(\n    (state) => state.appData.secure.isCacheReset\n  );\n  const [isReady, setIsReady] = useState(false);\n  const [trackLogin] = useTrackLoginMutation();\n  const [getAllSections] = useLazyGetAllSectionsQuery();\n  const [getAllClasses] = useLazyGetAllClassesQuery();\n  const [getCurrentVersion] = useLazyGetCurrentVersionQuery();\n  const [getUserInfo, { data: userData, isError }] = useLazyGetUserInfoQuery();\n  const [addExpoPushToken] = useAddExpoPushTokenMutation();\n  const windowWidth = useWindowDimensions().width;\n\n  const [notification, setNotification] =\n    useState<Notifications.Notification>(null);\n  const notificationListener = useRef<Subscription>();\n  const responseListener = useRef();\n\n  const linking = {\n    prefixes: [Linking.createURL('/'), 'https://joinathena.net']\n  };\n\n  useEffect(() => {\n    const prepare = async () => {\n      try {\n        const fetchedCurrentSection = await getAllSections().unwrap();\n\n        if (!isCacheReset) {\n          dispatch(resetClassPages());\n          dispatch(resetDiscover());\n          dispatch(resetAppData());\n          dispatch(apiSlice.util.resetApiState());\n          dispatch(cacheReset());\n        }\n\n        // Check for user key\n        if (userKey) {\n          const fetchedUserData = await getUserInfo(userKey).unwrap();\n          await trackLogin(userKey);\n\n          // Notfication token setup\n          try {\n            const expoPushToken = await registerForPushNotificationsAsync();\n            if (expoPushToken) {\n              await addExpoPushToken({\n                userKey,\n                expoPushToken,\n                userName: fetchedUserData.userName\n              }).unwrap();\n            }\n          } catch (e) {\n            console.warn('Failed to set up expo push token', e);\n          }\n\n          dispatch(\n            availableSectionsListUpdated(fetchedCurrentSection.availableTerms)\n          );\n          dispatch(isHMCUpdated(fetchedUserData.email.includes('hmc.edu')));\n\n          // Check for current section and update class list if outdated\n          if (\n            Platform.OS === 'web' ||\n            fetchedCurrentSection.currentTerm !== localCurrentSection\n          ) {\n            dispatch(currentSectionUpdated(fetchedCurrentSection.currentTerm));\n            try {\n              getAllClasses({\n                userKey,\n                collegeName: fetchedUserData.collegeName,\n                courseTerm: fetchedCurrentSection.currentTerm\n              }).unwrap();\n            } catch (e) {\n              console.warn('Section is outdated: could not fetch classes', e);\n            }\n          }\n        }\n\n        notificationListener.current =\n          Notifications.addNotificationReceivedListener((notification) => {\n            setNotification(notification);\n          });\n\n        checkForUpdates();\n      } catch (e) {\n        dispatch(userKeyUpdated('')); // Clear userKey if login fails\n        console.warn('Login Fail', e);\n      } finally {\n        setIsReady(true);\n        await ExpoSplashScreen.hideAsync();\n      }\n    };\n    prepare();\n\n    return () => {\n      if (notificationListener.current) {\n        Notifications.removeNotificationSubscription(\n          notificationListener.current\n        );\n      }\n\n      if (responseListener.current) {\n        Notifications.removeNotificationSubscription(responseListener.current);\n      }\n    };\n  }, [userKey]);\n\n  useEffect(() => {\n    if (useDeviceColorScheme) {\n      dispatch(deviceDarkModeSet(colorScheme === 'dark'));\n    }\n  }, [colorScheme]);\n\n  useEffect(() => {\n    dispatch(mobileSiteSet(windowWidth < 768));\n  }, [windowWidth]);\n\n  const checkForUpdates = async () => {\n    try {\n      // Check for current version\n      const currentVersion =\n        Constants?.manifest2?.extra?.expoClient?.version ??\n        Constants?.manifest?.version;\n\n      const res = await getCurrentVersion().unwrap();\n      const currentFrontEndVersion =\n        res?.currentFrontEndVersion.currentFrontEndVersion;\n\n      if (\n        Platform.OS !== 'web' &&\n        currentVersion &&\n        versionCompare(currentFrontEndVersion, currentVersion) > 0\n      ) {\n        Alert.alert('There is a new version available!', '', [\n          {\n            text:\n              Platform.OS === 'android'\n                ? 'Update on the Play Store'\n                : 'Update on the App Store',\n            onPress: () =>\n              Linking.openURL(\n                Platform.OS === 'android'\n                  ? 'market://details?id=com.theathenanetwork.app'\n                  : 'https://apps.apple.com/us/app/athena-network/id1628317342'\n              )\n          },\n          {\n            text: 'Cancel',\n            style: 'cancel'\n          }\n        ]);\n      }\n    } catch (e) {\n      console.warn('Update check failed', e);\n    }\n  };\n\n  if (!isReady) {\n    if (Platform.OS === 'web') {\n      return <WebSplashScreen />;\n    }\n    return null;\n  }\n\n  return (\n    <NavigationContainer\n      documentTitle={{\n        formatter: (options, route) =>\n          `${options?.title ? options?.title + ' -' : ''} Athena Network`\n      }}\n      theme={darkMode ? DarkTheme : DefaultTheme}\n      // linking={linking}\n      fallback={<WebSplashScreen />}\n    >\n      <ApplicationProvider\n        {...eva}\n        theme={{ ...(darkMode ? eva.dark : eva.light), ...Theme }}\n      >\n        <StatusBar style={darkMode ? 'light' : 'dark'} />\n        <IconRegistry icons={[FontAwesomeIconsPack, FeatherIconsPack]} />\n\n        <Layout style={{ flex: 1, overflow: 'hidden' }}>\n          <Stack.Navigator screenOptions={{ headerShown: false }}>\n            {userData && !isError ? (\n              <Stack.Screen name=\"Tabs\" component={TabsPage} />\n            ) : (\n              <Stack.Screen name=\"Auth\" component={Auth} />\n            )}\n          </Stack.Navigator>\n        </Layout>\n      </ApplicationProvider>\n    </NavigationContainer>\n  );\n}\n\nfunction TabsPage() {\n  const theme = useTheme();\n  const isMobile = useAppSelector((state) => state.appData.secure.isMobile);\n  const userKey = useAppSelector(selectUserKey);\n  const { data: userData } = useGetUserInfoQuery(userKey, {\n    skip: !userKey\n  });\n  const [isDev] = useState(!!__DEV__);\n\n  return (\n    <Tab.Navigator\n      initialRouteName={'ClassPages'}\n      screenOptions={({ route }) => ({\n        tabBarHideOnKeyboard: Platform.OS === 'android',\n        tabBarIcon: ({ focused }) => {\n          // Create type for icon name\n          type IoniconsIconName = React.ComponentProps<typeof Ionicons>['name'];\n          let iconName: IoniconsIconName = 'ios-home';\n\n          if (route.name === 'ClassPages') {\n            iconName = focused ? 'book' : 'book-outline';\n          } else if (route.name === 'Discover') {\n            iconName = focused ? 'compass' : 'compass-outline';\n          } else if (route.name === 'Calendar') {\n            iconName = focused ? 'calendar' : 'calendar-outline';\n          } else if (route.name === 'ChatsRoomNavigation') {\n            iconName = focused ? 'chatbubbles' : 'chatbubbles-outline';\n          }\n\n          return (\n            <Ionicons\n              name={iconName}\n              size={25}\n              color={\n                focused ? theme['color-primary-500'] : theme['color-basic-500']\n              }\n            />\n          );\n        },\n        tabBarStyle: { paddingTop: 5 },\n        headerShown: false\n      })}\n    >\n      {isMobile ? (\n        <Stack.Group>\n          <Tab.Screen\n            name=\"ClassPages\"\n            component={ClassPages}\n            options={{\n              tabBarLabel: () => (\n                <Text\n                  style={{\n                    margin: isMobile ? 0 : 15,\n                    fontSize: 12\n                  }}\n                >\n                  Class Pages\n                </Text>\n              )\n            }}\n          />\n          <Tab.Screen\n            name=\"Calendar\"\n            component={Calendar}\n            options={{\n              tabBarLabel: () => (\n                <Text\n                  style={{\n                    margin: isMobile ? undefined : 15,\n                    fontSize: 12\n                  }}\n                >\n                  Calendar\n                </Text>\n              )\n            }}\n          />\n        </Stack.Group>\n      ) : (\n        <Tab.Screen\n          name=\"ClassPages2\"\n          component={CombinedClassPages}\n          options={{\n            tabBarLabel: () => (\n              <Text\n                style={{\n                  margin: isMobile ? undefined : 15,\n                  fontSize: 12\n                }}\n              >\n                Class Pages\n              </Text>\n            ),\n            title: 'Class Pages'\n          }}\n        />\n      )}\n      <Tab.Screen\n        name=\"ChatsRoomNavigation\"\n        component={ChatsRoomNavigation}\n        options={{\n          tabBarLabel: () => (\n            <Text\n              style={{\n                margin: isMobile ? undefined : 15,\n                fontSize: 12\n              }}\n            >\n              Chats\n            </Text>\n          )\n        }}\n      />\n      { false &&\n        <Tab.Screen\n          name=\"Discover\"\n          component={Discover}\n          options={{\n            tabBarLabel: () => (\n              <Text\n                style={{\n                  margin: isMobile ? undefined : 15,\n                  fontSize: 12\n                }}\n              >\n                Discover\n              </Text>\n            )\n          }}\n        />\n      }\n      {userData?.permissionLevel === 'admin' && (\n        <Tab.Screen\n          name=\"Admin\"\n          component={AdminPanel}\n          options={{\n            unmountOnBlur: false,\n            tabBarLabel: () => (\n              <Text\n                style={{\n                  margin: isMobile ? undefined : 15,\n                  fontSize: 12\n                }}\n              >\n                Admin\n              </Text>\n            )\n          }}\n        />\n      )}\n    </Tab.Navigator>\n  );\n}\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}